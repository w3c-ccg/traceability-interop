{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7b3fd612-3bb4-49b1-96be-0eaa55b45bbe",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e970cac5-f76a-41e0-aa91-0807ac643223",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7ee4624a-4729-4101-87f0-bf999aee2645",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a544dae5-dd7c-4ddd-94ec-5a5d76e4ae76"
                }
              }
            ]
          },
          {
            "id": "ddced2ee-d518-43f2-a1be-a18d770945e4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d676614-8be3-4621-bce7-5f6848a03472",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d7e41c86-26bd-447e-90af-13d307f3a278"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a2c33d41-9d3f-4eba-804c-70861cd48b5e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "dde5c971-ed38-4a5e-9ec3-f42263eba859",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a63d0b03-6354-4273-bca5-bdc46500143d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c8d568a-72db-4958-b9ed-5f01b9fe7546",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "510522f9-d248-4f3c-82a8-4b5ee3468416"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9ac72109-06e6-4736-9a08-24a12b4be381",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e7e0368-4775-4508-89cb-7ab8af8f7c75"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3b0104e4-38e5-43f9-8618-09920262c5e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bbd8f913-b922-4936-96dd-b2c10419af0b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c672a759-1cc9-4fe3-b761-726cffb60e67",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4b5b497e-c3ec-4fcc-ac4b-88484a094b8b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "513581be-9907-4484-8fbd-710fe3d2f3d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49c219c1-1320-4ec4-997b-90e6aabb529c"
            }
          }
        ]
      },
      {
        "id": "3d29294a-61e1-452a-b5be-6423d4717224",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b71b81ec-8f32-4671-a1fa-edfaf9677feb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7874cafc-291b-46a0-b8ba-c302b9f5a863",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c29990a9-e77a-4f94-b37b-48f1cd730666",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3313d9-0af9-4ad9-b253-c601d016fd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24687802-c622-4c76-af00-af482e83529d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b50fc8-f1f2-4fdf-b638-18d136901f3e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf4bf5b-8a7e-4bc8-a8df-9ca8f24080c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08a51411-6069-40cf-a486-17442a7656cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac36493f-99ac-4f77-a307-696cbdde9b4e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7f99c3-ec08-4364-85c8-27225f6104b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2caf3aa-28b6-41e4-bb6a-e01d4a9b02c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cc9922e8-cdf2-47ff-b95d-d8897499ebf9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9def992d-16d7-4b85-b0d6-ef164e7156a1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788749ba-b55f-4124-96ae-1d96964086eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5ef89f8-9d46-4300-9d3c-1ce01352af9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c9bb25-655c-495a-be4e-13b3e77defb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9291d8b1-e17e-4a7c-87d3-0298c650a788"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6677d37d-6b65-439d-a650-82cc7e901ef5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0acf9a3a-b28e-46a5-9a7d-98d45e93a323",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2dca8a3d-5e54-44f6-b36c-d06e59f86400",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "23e2a122-8a29-4b6b-a2af-db1b7b65325f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13c213da-36b7-4118-8fe9-b95111bb2b64",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d7e632f3-7b6f-4c57-8dfa-5022278bc562"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9a64f7f-e498-425b-bf18-9b8e1ab15a6a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39e9634a-18ee-4b31-bde7-a427b3021f76"
            }
          }
        ]
      },
      {
        "id": "a49f299d-7d2b-4cfc-b120-fff359611d1e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "36061126-944b-41f1-8304-d63feb5d46f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4565d5eb-0ea4-4b62-a57b-b16badb82ad9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "79551e2a-1f57-478f-a4a9-ca3c815e36ac",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6bd83b-b762-41f2-a3ef-13d28def1496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e4c6d7-30ed-49c8-a80f-52c54fc04698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09359fa5-0ad2-4a46-b88b-b6184f754770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35f6bced-47bf-4be3-8e2f-e5a0a9248944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de494a4-1092-4e9c-8713-6ee4aaaaaabb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c587e4c-4733-4801-9b0a-d3ae15117ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc161b0-f9f2-4eb5-95f4-32a22b9aaa27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b0fa25-00a7-4ffd-a5e5-1a737bf410bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8b31529-4972-41e0-808b-6030ef522966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01938ae2-1edc-40eb-8ca9-8b66881c62d8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9168857-ec5f-4d61-bff2-eaded97bad8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128a99ec-48f3-44df-8956-6882ee46bdcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa796f92-99c6-4597-beb2-f170f537cad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3a0cd8b-e0b2-4640-8013-2e199f4f8f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790f320c-b1c4-4b18-b4e5-e0a65d5d0a42",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242dd1ea-311a-472b-a888-2baecf0c063c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e828038c-30cd-4109-a760-3681122d8949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9786fa72-890e-4c85-b32b-de4f3f04214c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a7f0b29-5348-4457-af49-917415227661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc91a31-ca2a-40ed-821b-bb114db1cdcb",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13bff6f3-4274-435a-86fb-7b5058ce0048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd981c1-656c-4699-be5b-a1069a03d902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2ca9cb-3eb6-4c2b-804c-bdf11792880d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9029aa4-63fc-422f-a2a7-b43db7d320ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af9ab95-30fd-40f9-a64e-b7311d1e33a4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57545bd5-bde3-40e1-ba26-63a34252a98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f91217-d9e2-4e78-ae89-61cb3ab86b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46005864-4363-442c-a297-9e0d199454e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcbea507-573f-4e6c-b97b-23282f60607c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6a9946-8d9d-4358-904f-aaf34ca36a62",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0521ec-ca24-4083-8d76-4b0a33c199d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa9c1ab-f7bd-4534-8411-570da67040d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83cbc8f-440a-44c6-89fe-2f37e992f7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5433c48-f77b-4340-a858-d87f595757b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5fff7e-462f-489c-a3ad-436ed9aa229c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1982049d-50ea-4b48-87b1-4eb267567092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1189bc43-2a2a-43f8-8318-fa51956b258e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f746b62-6f7b-4249-85f7-4cc24caf7123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b87c4dbf-cbb3-4f92-af33-a0b09cafd84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701c844f-c326-4dd3-b279-70fb787de625",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f3fa5f-80d0-4c26-ba51-b0d16b57cafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21644ca4-2a4d-4304-80b5-0931e11e5187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1497335b-9291-4eee-906e-ef07717f2cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee6c73ae-6f7c-42e2-9c05-99d9513ead91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3104c854-4c4f-48f6-8cc0-e5e21d042a35",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6c2f99-beae-41f9-a129-77c66de31b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d9c7cf-e76c-4ba3-a543-2e77127fccdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4afb39-9738-4546-9326-b6e1b8b2b534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e708facd-ed21-4d53-902b-059c439f6854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780ea63e-db17-4849-a855-e857eaeab01e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa76bd6-1ab2-460b-9d4b-70227f4b7c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a6854c-4e59-449d-81af-3ad05a923039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b0b35a-4dc2-4640-85ed-b1c4086e5caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a978617-997c-4e04-8781-d04e6c924910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79dc0d7-9ee4-45b8-9458-c8efd077e82c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b53f78-ba59-43f1-838f-1348749ce5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8919143d-bfe0-4006-ad34-adeb2712d80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a083e231-060c-48ae-b7bb-fb113f99b491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bdc8420-c050-4700-9d88-558189b16937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c55b1a-3012-428c-a28b-fccaafa9afaa",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc77f66-88c1-45f8-917c-724ba3160e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33b00d6-5f3b-4586-8856-5aa26a1a5559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fbdd3d-7845-4105-8e93-3f49620af0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1297eaf-78fb-4f52-955d-18be90aa1c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceeaa863-c721-406b-963d-1f9998f847e8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8476eb75-4bd5-40c4-a4c0-c62893b06da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1119ba72-99ed-4552-acac-16c4319b2069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccf95c3-d61d-4917-bb57-df27ff0c4306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1118381d-5a84-46d5-8e8d-2af3011ce486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53920b94-ac0e-4911-9da6-c05cbb902b06",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c85e9bb-b4a5-40fa-8068-05f40776ca36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83bbaa59-87aa-4970-8a7f-2e88c4d923bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed12c3a-19c8-40bc-a266-9fa912e52637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b53a980-f944-4ed4-b68d-67d7b6c47883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3528c2a6-09c2-427f-a708-618a47a24a79",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d463237-25c0-48ef-9f39-3471eca19365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37d8270-6c40-47a3-923a-4993b5897d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9520ca31-dfd7-463c-abfb-fdab8c849af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb8b5c17-a38d-44dd-970e-a9f9cf64cd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd51ebb1-1899-41e7-9375-e153d1335216",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a56a0e1-6a9e-4b0c-b051-2eceae403425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1bc4a5c-b0ad-4485-ac4e-5081fd4cc968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52711e9f-378a-4fb5-9487-6a786037c9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8c0952f-2e0f-4b72-9755-e8116fc702f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbb0672-aa59-4e98-a6ca-dd7a32f5a4d3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d00d328-39d9-4807-9ee5-4cb8bdf6a056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366b9e63-d552-4836-8e83-107bd88d161e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f52a420-f7f2-4e07-9379-968df3f2bd13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9f4e48-44b2-45ed-ab4b-770cd8e2b364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906df18b-f450-4870-af73-64e40d3d930f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a2d674-3534-4604-a9e5-faa928ad4487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d53bcc-9df4-4cae-9e87-6fb7853786a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2948ddc-eb60-45ee-ae22-ba37f0f9c1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea57f3a7-26f8-4c43-b58b-d76da7f7d87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bd210c-9c4c-4a5d-bdfb-312bf62f5522",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00528d1b-9a22-4709-933e-3cf02381ff87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ff8ad4-abc3-482b-a174-7cd00ca1cdb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f76147-fc6d-41ce-8902-3e6927e12e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "362c7797-735c-4ce1-ae19-171b3e3a52ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24947494-49b8-4bb5-8ab2-824b3c43fe9e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2058fc7d-92d3-4308-bc6f-2811398d1330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8092436-eec1-4307-8d8c-a733e58b604f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21cfddc1-f07d-4e9b-a663-2a4dbca4ffc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a78547-f0ef-4991-809f-252e879d9dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf81615-02bf-490a-bdd3-dac92a1d87c0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2776b5b5-682c-45e9-82e4-be442a3583a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "368d8af2-e825-416b-a6d0-549fce2ddc86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b711b871-64f4-4cbd-b4de-80734d779f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9afeb2ba-b88b-4714-a914-32750ad4f6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41226ee8-c347-4f10-925d-9acaf26cf6fe",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4115b91b-7a42-41b3-b579-9bb374994774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9495c976-791a-42ff-a4fe-d6cd1d74f53c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971929c4-250f-4f0a-96ee-3cb6596e3b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3ed4b8-5737-4c99-9c0b-909fb9f0898e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da604a0d-0efb-4745-b69b-b2e0a54f4950",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4930fe-a031-4045-8e9b-76c13487a690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc69e1fd-1afc-466b-806c-79dd7bcce490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715dbb02-e8ed-49ec-ba18-b8bd30c1bfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "699e89a3-780d-4621-9724-c82ce1035ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295baef1-1ff9-42ea-89ce-c29f01abc5d4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fd3333-8d3b-4f58-886b-50c091cf7e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c933661d-ecf3-4dbc-a739-a45b16c0a33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2393e07f-0780-4daf-8a92-0296a4affe60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "01206858-bd9d-4d44-9adf-9863e84b007e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f584eef7-3bcd-478b-a2a9-c5471fd3ef46",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d556c4bd-f198-494f-aa7e-a4d0d400b894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7047b4f2-a292-49af-9a1d-9fe30ba74f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33be564-e9fe-436e-860d-a212d64109cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff60a62-7ead-497a-bb28-8398607c89fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2423c025-932d-4f41-b46a-b56a381ec5af",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbf18df-e646-4833-83bf-5b4d470e97dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef507d2-c7ae-4512-80f5-7fee1c2a58ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5c4721-2f06-4769-a53b-6a89577fe65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b4700f9-7f5d-4706-998d-bcf2d8017084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa48f45-f3c7-4a89-9690-af61f9fcf25d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bae26db-d8f1-4097-a5c8-1b8aa294cf47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd3bb23-80d1-4de5-857e-7135982e5377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06846442-256f-45bc-8ed9-28d62237ccf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7aa568-de8c-4f06-b489-6b2aea15bc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb97611-1844-4b1f-b99a-d7ea5ee03923",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31108a0f-0df3-41a8-a359-f4f5031f21b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6db2a84-eb26-47e6-8d42-146e9eaee85c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219b0613-dbb4-42ef-a678-1e1c6bb69508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "10bea152-acd4-46a2-ac5b-de2988464838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3876b48a-1f55-403c-8e95-5356d3244174",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079777c4-a57a-499e-975a-df16b79ecc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2427470-ae4e-411a-a193-c619a54d464c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cb96cb-8125-426e-8aa8-f2172547cb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbbe02af-67e8-48f8-86ca-24414fcf746e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5c84d7-8ab7-49dc-9246-b55f1186df46",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8ca453-5cad-47d2-84e1-a50fb31634ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae88b27-31cd-4d6f-8c3a-9b6676fd9821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60fd5276-5b83-4b75-879a-010c76b31056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e0ccdd-6617-4781-9b77-24c6bbc3eaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc2160a-0c49-406d-b0d7-c761d8e0957d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517d664d-bc1c-4837-a22b-3803f8718a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371556a8-b4ce-4a2c-b26a-af721b733617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e00795-e383-4027-abff-23fa5890ff87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67bc22eb-23e7-45a8-913c-866827c39eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ff8006-b090-4c49-81f9-0038b2d2955e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d684d4-a628-423c-b803-04b462988493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7549c92e-862e-4606-b91b-737ad390e568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39103278-8bed-4f8f-9fe3-bea5e236bb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "158579fc-e5ee-456c-867e-f5253e8711ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e808ece5-b01d-4fb7-a80d-e8f0f3e2aeb5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db26ce3-b3ac-43af-b389-6ee617c85167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1998b37-58d1-44d9-b9d0-ac2c0cf7aba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3b99af-2d66-4eb4-92aa-9c316b41750a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54fd9c65-0bba-451a-9b64-bab884a9ec26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ef0e13-ab28-4d7b-9970-ecff2db52a97",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08550dfe-b53e-4d6c-a93d-7cf861d82486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8362cc3f-ada5-4679-aba8-465c8c256ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ef5255-575c-4604-b321-7f84bc26eed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "80417818-457c-45d9-9ea5-eb176efc42fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c505e4-5f7e-4b84-8ca1-9837c525efbf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebd7b1d-1264-4dcf-91df-a4527046d239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d8a3bcb-1cb8-46d0-857f-0e5c8ca5db8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679e3522-15fd-4cb6-a969-a25e28d3c5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "255a4edc-2c5a-4325-83c4-959ce89918f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1065825a-60f2-442a-a955-878ccdd186e1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bfa188-f9f5-4a32-982b-d8a9ab40c6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7bdc7d-ed3f-41df-bd82-89100d89ce89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8258635-8bde-4912-825c-89916d35f6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2aa9a3d-0ede-4c24-96a2-543f01e14ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169f0e0b-2369-4199-bd7d-9779d91dafe9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b89a17e-bde7-4d0f-ba3d-92b667f122ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac6ef9c-a3ab-463f-82c2-ddba32945576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90de026a-b624-4f80-b347-80ca6c31417f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "33d408e0-f523-4d2d-9bdf-410fbef2e604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ab8da3-82ce-41d5-b0cc-5cda4fb6c0f5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02dffd30-08fe-4d26-aa56-179406171e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779673da-b7b2-4b3f-9cfe-0ae53cc2fb9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0948484-874d-4735-b7ec-1e83b92ca7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "524c8697-eb8b-4494-a309-df1d5377aac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc43d470-275f-4a96-8f64-62aa28a56ae7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d8f818-7391-4162-9c79-78292cce4964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd7b7a5-ec80-4843-9ed0-08fc2939ea54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032fd779-b07e-42c9-8c1e-034c10692de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ced4f9e0-e210-4adb-a634-23b09be495d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf78ad4-16a7-40ae-848f-7c5518de2dc8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6014f4e0-406b-45b5-be41-dcda0143e48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9963c49-def0-49a3-9cf5-37dc794e1064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff504cb-fa81-4022-bb54-b951e347c4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d19f541-9838-485d-a96c-a937e66aaeab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8c1d4f-910d-4aef-b740-bb23668c31c3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a456bd5-f70a-49b8-974f-f89d4de5690a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c1a568-9c49-43fb-82d3-b7dd55a10874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd73acd-b72b-4240-a4f0-fa2cc54e7bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "723d2fc6-e221-41f1-ac5e-473cd8636c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ab542d-c7d1-4814-85f4-d7daae3c7333",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f99b850-4a9f-432e-8e36-e00b1e49b04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523c9ef6-5e1e-4fc4-9c26-1a78dceaecd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daca3143-67e5-4236-83d3-fad1162d67a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d651fe6-473e-4163-9dd5-85a92cea2614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7745b0-fddf-4c63-8c1c-e4c80084e84a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b26569d-2057-43f2-86a4-4d082f88aca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c40260-268c-4302-925f-8275bca0bb42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096b382a-a658-43df-b9b7-06be5a8c5746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d68ea52-8d6b-4c8a-b884-730692dbdb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86101b5d-3134-40d8-93cd-ee9fb6e2faf7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ecba1ec-d842-45b3-b8f3-1c5b1b5bad0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a2918e-392e-4e0e-8eb3-373be860694d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b160b72-6e7b-47af-924f-7ba4879abb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be28ef33-dbe7-4433-be79-ea085c09affc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2648fa6c-6be6-4ecc-99bc-7467da1226ab",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e9067a-dace-4ef8-be93-39a9534cda81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11fa4ed-820e-43e6-b55c-e8c165529d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79472bd4-568d-4462-b747-0b1b2671a0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ecf006e-a097-445f-be67-5d11a76a4d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e3e5c3-cb6c-4fa7-bcbc-c95d370717ee",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8635528-6e87-4b98-9339-9171813b1322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079d7a13-c9e9-48bb-bb46-05d7c4e90840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520db9fe-c88c-4811-ab17-23fef7824b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29c044f4-7c05-4052-b4c2-6831cbaf3255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f203ba-9b5f-41b8-b941-28ac096f66a3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a7ed55-b554-4e9d-968a-50674f11ca6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b28fd22-81a4-4644-9354-ac9f62dc0bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1c97f3-ecb2-41a9-b3d0-20579a881a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eaabb0e-95f8-493a-8ed3-b059d0d69d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0827966-fee8-4819-82ed-92fd541dd05f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f02958-055a-49b3-bbc0-92ff85b671f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4888b45-8fec-4545-831b-2f000816fe39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5859a0c8-0be9-444d-8b6e-2a214dcca008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c30ecf9e-22cd-4352-9449-ab26d3e092c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e38aff-23e6-4889-90c3-8870b1fa0a79",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6f9c9a-13fa-454f-91e2-0bc931d09a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4035c8-65ef-49a3-8764-7d711fecd8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fae638-d937-4deb-b243-0ae2148d4876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cf98b3-bb30-448c-bd7e-604a971693e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72509aa3-bbf3-42db-8f9f-523e2a06e359",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f73c6d1-255d-4b90-a630-7e85a393a6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce902d1-5d56-45a9-83fb-f1c5f7b4af86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d74fd8-e847-4bb7-99ce-4c1dff8c481f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0d2b8d-bcae-45ad-b11d-ea674e8987f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5038e06-3221-420c-b7c5-0f2f048bf24c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d44655-b22d-4d88-b9af-6c46328888bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500b617c-352a-4adc-a2e3-751568f83101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968bcfed-5c34-46c6-9794-98c2374f3264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "485d4c02-ea2b-4a2b-8389-9cf900125389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b313aefe-1e4c-4022-9c0a-cdfa6ba8d9f3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebd2b0d-9abd-4ab2-9543-b60975da0ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22766582-be3d-40cb-9c77-491bd2f2e81b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d34025-68bd-46d1-8737-dbbee3bd7ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25b2a8a3-6192-40eb-b0e3-7f04e1e5f12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3781cfb2-db8f-4eb0-bc2e-6e82a1901b1c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2372694d-b5f5-4170-8aaa-b65743ed4ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e38f782-f669-42c6-bebd-1d48dfa50f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce269024-5a8e-4436-bf25-8ca7ec8b49d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "acac8637-288d-46f7-97f1-3e392efa9dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7cf88c-98bd-4606-8521-30d4a3ba89e4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cae7ffe-e7ca-4c18-8e63-5ac2cf7a9537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e907fb-2823-4326-a5d6-1517e9ac24ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de43c6e-c4fe-4585-bda0-b524797fac77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03131ad3-5d46-47c9-8242-bbf9d164cd0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09d9975-dcff-4c51-ac88-7fc1e4f741c3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61e8fb3-8182-4595-8edb-4af259868b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ba9f3d-962e-4e22-b6b9-6936a8a61f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26298e0-b02f-4700-ba7d-48d4dd566b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ef7c1a24-b599-4e7d-aae4-ef2911498c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c32a07-8a44-47e5-8f94-9f2e9b1662be",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f624fd3f-1332-4889-a81f-eb0b409e51e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8929a1-dddf-4ea6-a865-a43589b1ea1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16bcbbc-d51e-4811-b142-4d89e1add8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bee46045-a6dc-4022-863c-d648041324ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687f4125-74a7-4d61-8cde-9376ecba71ab",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21169bd-5261-4e1e-b0c1-c69a58924262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314cde9b-319c-4d4a-94ab-d80e75089766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82b87e7-3702-42a7-9b74-207b4d642503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1d74a1-4a6b-4f48-aaba-650ca630822f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e3078b-27ac-4524-886d-9c7475f99448",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823edee3-275c-4ae5-bad4-c464dbdf3206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e03cfe-8087-4c8e-83ff-46f94f58b419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a806ac80-0982-45ec-b5c6-76bc5eef4e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "22d5485e-3b00-41bb-95c8-27aa2ae0185e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3219892f-8035-4520-86c5-41bf5a4abbee",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b10d7d-9d3c-4eaa-bd46-e156af107485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e7b0fe-eb30-4b8b-9c74-1a25f3e17ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2560666-dd57-4f6e-98f7-72e0f03e8336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "01fefed0-5a7f-4510-9199-f578b1028915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840c1740-ffbd-4cbb-8a79-e1b9a03b2001",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482a1db2-a416-4a79-9b2c-53e3cb487ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6621578e-d02e-4a67-a0a9-c31ffbf434d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f6a5bb-a517-48cd-b037-596b2d17232b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe3fd81-169b-496e-9eb2-bec21fce758a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b0c12c-1a79-44e7-8a22-31865933b042",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267a087f-f882-404e-b593-51fb425470a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab706f8-d9e4-49f2-a918-519fa3beebea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5dafe1-d5a2-4523-bc1f-bfe443a5cfec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbda170-b3e1-4fc4-9a10-c0f41a7f7d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7beebbe2-7855-4679-b41f-12dd55c5b5ad",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8237e3d2-7439-4c5d-aecd-e6156710e9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d265aee6-4be2-485b-a365-61c852757603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f863ef13-72b7-4490-87f9-ddaf1d615a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd70baf9-7300-486f-ae5f-db1a5c071c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1376a407-b875-48ce-905b-d337fd32082f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e84f33c-a67d-4003-af89-c54fb137bdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61882b6-9978-444e-aae1-11123cd445da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac47335-e872-4ac7-97de-46682fec3275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27983e4f-6ebf-40d0-a33a-ea833757ca3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826c98bd-b171-4fe4-9815-575876dc2b60",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625bd870-49ed-4c40-bea5-a1b13cddb68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9909fba0-61d5-438d-9bc5-8b76ef7fecb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1003079-ba11-4b52-824b-92322dbee5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa3ee19d-3b5a-4f35-9cfb-20feda6f8813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23a037c-dbb0-452e-b46c-782c4a8390b9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0724fb7f-7807-4fe9-9815-7f56272aacbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5daba1a6-6c3b-4536-a606-a76a7d6a8260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a686f7cd-dc47-449c-8b96-de891f83bb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "55a37d51-fb41-4c6b-a633-9e10c37b072e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825a2428-d496-4b1b-8ca6-9d86a9fe6c4f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3611460-ea54-40a8-ac07-23db36c4d2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09156e4f-2d4c-430c-8a3e-7a2c5196e3e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78b1248-b2a1-4a84-a1ef-3cb6995e968d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10704a4a-766d-43ef-8b5d-37045ac49a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4676f6f-6e23-427d-8bc8-1024a06c5009",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413bb656-ae82-4dec-a7a6-00fa50ea8228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caef4274-33c5-4a14-80ca-63986ff5ce76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faaebbe8-6015-4feb-906a-27eeef6ecdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c72bd82-8d7b-4942-bf23-bc824d06b604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879604b2-aa5a-42c4-8896-af1f9211aad0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee60f72-8081-43c0-b5b3-06b3e6cc3b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540f4cc7-db72-4433-86f1-0c4b1a7f5315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1764e3d5-a70d-4155-9527-4fc2e3257948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0838ba-db40-4b85-984c-00fc3aa36372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d3137c-6d6e-4762-9c4b-a6c2142e87fe",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8dd7d81-9d35-470d-b90d-f9103119e3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604c14ca-dcc9-4ea8-a607-ae1b39f70755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d114197-162a-425a-a0ce-37f2be7d455c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18033d22-cfa9-4f42-a656-2343f782242b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbd0658-3ea8-430d-a842-aa1271cd4be7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea718bbe-f972-4037-bf18-1d0d8b4b0c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf86add-84e6-4e49-ac61-d46c7667021c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d8f133-e2f0-4035-be14-e56a27f513ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f1fb99-8cfa-4834-8197-8e24209e0201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db53fff8-657f-4405-95cd-fddd516c9f1f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2591ae0b-b489-4783-a563-a0583b4ec38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85578355-1d49-4728-b34e-58d421109526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32c6b74-f259-4fae-9e3d-57c11b49a764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7d36d7-2521-4317-a575-65643f959415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c8bb48-99e5-4d5d-af38-3c0f403a6954",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbf436d-be9f-4b0c-893d-72e242384cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "605019a6-0dcf-40bf-bd7c-5e5360f899d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569ea996-8c67-419e-a27f-7bb3dd6c0362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a834e94e-b75b-4517-8218-9a4647efc1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2469ce7-3bcc-4a8e-9b30-f7eb22ac4c69",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f25326-ec74-41b9-a9da-54bc1b805f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33acf4e-fadf-47e0-b3d4-bc791c392606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0caafc10-2656-443e-a8a7-cb7a1bcb2bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7407556-47b0-4e82-b3d4-32125aecbc1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8f961c-16b7-40a5-89c7-acea4e0931a8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b78a14f-784c-444d-8a21-1a20e3d290e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc913786-d60e-4910-99b2-e33a86310df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d3636b-674c-41c0-95b4-27cbf187aa38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5cc1547-1533-435d-9456-fd96c5124c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a3a82f-3d5e-46f7-9d0b-353e5b0d4385",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee92a39-a807-4124-ad21-6e67bf933116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6f2185-ce67-4cde-a143-95058947c6cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0425b2-69e1-4453-93e8-ef51e0757d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c98ff804-0450-4ac5-8307-81bfc44f44d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada9b92e-a765-49cd-8f3d-1e928a7afa76",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717248cc-641d-449a-89cb-65acebc27c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab6af65-f5e6-4dbe-84a0-fd1130afd316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0373ff2-8463-43c8-9f0a-dbd7ed984a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad23243-37a2-4281-93f6-15460629b0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553a2400-10f3-405c-b2a7-0e03c7564dfc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c987ea67-e400-4bc5-8189-28df7572dad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739ce2c5-42fc-4838-822b-eb67dbdadb71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c36a6e-18bb-4734-aedc-20565952108d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8af67b-d8e2-4a36-88e0-80cd48ed112b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb96e205-c1fa-440a-8276-2ebb82331823",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e794be-f08c-42d7-a3e9-823b5ae6eab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8631fb56-32e2-4a5a-82d5-c4d3c45fda0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f36ac6-2679-411a-97a1-16c8070072be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0caef9da-0eb9-4c95-be16-7f3974215ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fd1863-8ab9-43f9-b389-b189e7d3c70b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "499a345d-cd0f-413b-8acd-3ca4a5e2de2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6fb0e33-bb3d-4e2d-9ced-8b8e1055c751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5188f016-abcc-43f0-8222-b7cf598cbdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94b0fa7f-8fc7-4e41-8aec-5ecf20cad301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf8e9ab-2d21-4ec4-8d45-e6612426bc42",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d888cfee-57c3-4a2d-b3e8-71670b35b0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c55c30-62f8-4bd6-a00f-eb265863d272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395858a6-b52f-4355-be5c-1788c424be93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7841cff5-ba3c-4103-80bc-68b464dbd092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a18e5d2-c51f-4655-9e6e-ba5a695a1fee",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c4275b-221a-41d0-947c-e722a030e8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74b9c42-b823-48b1-803d-0757023f5e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e58ed0-7f3f-47f0-906b-2b619df67f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "256640b6-82b3-432a-be86-327f7261e0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25657432-0648-4166-9461-44fcfe3dbae1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7173679-3519-429b-bbed-771e76b42c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c532307-2913-4495-b0ba-d114e21e7093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2c8764-090c-4e7e-9f52-0fd25b6b00b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d911d7de-4589-4dde-ae99-99da11546cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ab2209-c4b5-4467-a10c-7ed73f55c811",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e458eb8-26fb-4413-a897-6cf91ffc85d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eccfd7c3-4eec-4a72-b5ad-a6ecebfedf16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d5a7a0-086a-4cd9-8060-81278a3168c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18d84976-f31b-436c-bfc2-2782720e034a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c905942a-ea5d-442b-912e-ab590908d9d5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305430bb-b58f-4d96-b75b-ce1140fc9db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1682ef9-ee36-44f0-a864-5819e25fdcdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4efa746-a660-449b-a9d1-785280eb2d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cff5430a-1d69-43d1-ad03-102c2c8a6e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd1d61e-aa3d-45ba-8048-b5fc97c4671a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c836ceaa-531f-4741-aa56-f9ef5afd39bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7550e9-df64-4c69-a576-a82d83d65b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d4f231-e7e8-44dd-a23f-b723a1f88319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca2b72c0-c09c-40d7-8f7b-63aa270bbd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f32665-fdf7-4b0b-9849-70a28b0debcb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ae2133-2d7b-46a6-898b-e2e77d0ac0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd433f4-aa5e-4da9-a594-ad96f6b9b5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e25ad92-11c7-4506-8e12-4cb3760a8dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c75276b7-bc6f-4423-b956-882288921729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d672ea22-7356-4ce7-9e31-60afe6b63193",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc657f66-316f-4163-9592-5fc3356f7e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfeb2c85-4cc4-47a1-bfbf-28de2ade944e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d410f0ec-3d79-4445-810e-7eeb0cd2cb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "75e0ddd3-6c50-455e-8500-5630fad1488f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5a81be-cfec-4a80-9952-4ffebc8431f6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d49d6f3-f3f4-4c4b-ae5c-830548d1e85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0347e5-c122-4c7d-bb7e-d25fb3dd9927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd88c1b1-4260-4ea1-9d7f-8d50c89da3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f37894-a826-4d23-9180-75aa03deff02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f3b3b7-51ff-4ed5-a1dc-e051a418ca57",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69891fe-8d9a-4487-81c2-e4db763dbff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b570fc-8fcd-4397-8163-fd5686729e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982966b0-8c22-4f9f-bd5d-f2d2bf064cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f368d51-f5ad-4331-9493-3a7c8ea94e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba03044-c2d4-4a98-bd09-1adca142b931",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a4858c-4304-4ca4-9322-555784c556ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27827549-80ca-41a4-98cc-46361e88a382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc88383a-7d13-4ae8-8d58-b7b298327896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3311e81e-97c9-40a0-8f45-1c79d387b976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1c399c-46f0-4876-9278-f251e4d624c6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc592a93-ded7-4a66-bebd-70bdd0f747b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1190c1e6-364d-4e03-9627-d4d991582be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a372567b-b5d7-4647-957c-df9141b218f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "37859950-a34d-41c3-8ea4-4b830b1f6502"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9939d0ed-cbc8-42af-b311-ae059407d0aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b927da0f-f06c-4174-994d-6d6b83ac3bc4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec56fe73-982a-4aa4-b9d9-abcb6bb6487d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "664ffcde-faeb-4808-a087-4cff9c9b5d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcecf0f-b196-48fb-9037-3e0ae4790e1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "802e1831-fd8c-4523-b7c0-bae3508a16db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f477d5d-7108-4e29-a447-3c390b4da17e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bcfabc4-7a1f-4329-9cbf-a446cd4ac009"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a5bf0d6-7133-4f74-897f-5cdb63bff3b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "566f91f2-d8f9-4bfa-b601-4b9a805e3b09"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2e3e9dfb-e162-4a74-8b69-e85609e8105f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cecdd17c-16d3-440a-91a9-bbbd4bd82674"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "872412e0-b2f7-4186-9f72-764a67c327cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2710d3fe-dbc6-4b7c-b8da-4c80a35856f2"
                }
              }
            ]
          },
          {
            "id": "0b2abd6d-f7b9-4172-8e7c-f532c33894f0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ba576754-af22-4db7-be0d-3fd34b3aed09",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0e7d76b7-64f9-4b32-b726-77880b96b066",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6c2ca5-33a8-48c4-b9b8-9bf3ab25df73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fe0817c6-aca1-4ba2-b6cc-485d301ba705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a17f1ac-98db-40c6-a927-64de342c5b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2c5819-05f9-4c92-bdcc-6451edbca347"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "700ecd45-74ab-4a8c-bc08-f1bf121dbff4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0846dd46-77e8-4c0e-ae57-fed4bb2cdd83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6bfa4ecd-904e-4228-bead-54e310c8ef73"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09017b4b-bcf9-4486-8249-5ac6c59cc542",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f939f602-1d27-4272-a330-15628ea6ddeb"
                    }
                  }
                ]
              },
              {
                "id": "c70b78a1-c9b5-4a34-bc86-6070dfad14ca",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03498318-b988-4b2e-999c-6250f34bf5af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69cdcf8d-f02b-4958-b6e2-d08daea9e5d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "851a0ca8-846b-41db-b865-2bf67bff1e9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "588edd0c-725c-46e2-bd9b-c0c7a3e7e92e"
                    }
                  }
                ]
              },
              {
                "id": "e2358f71-c58e-446e-ad01-8c9bf69be247",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a18cb89d-1a72-4f59-b8d1-d5f6836f4ccf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b8fb4d4-89c1-45cd-a0d8-24b5bf7c567f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a0827d5-713c-4be7-8251-a71c903b74f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8c385eac-da1b-47ec-b407-204588e9516c"
                    }
                  }
                ]
              },
              {
                "id": "cd7ed237-4e77-4d8c-8643-62347d174fcc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccf830e1-1018-4972-a3a2-50fe5e3ec945",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c495d8a-13da-4fbc-8259-2eed541eacfb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d53af83-af52-4fde-a1f0-563c78663e6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5a2d7537-9b13-4a7e-8634-96e289622efd"
                    }
                  }
                ]
              },
              {
                "id": "0f55ae98-9bec-46c2-932c-7368d5593dc5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c13fa5ce-8820-4afc-b5a9-af1d33fb8deb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a09fb83-77bb-4a14-8fe6-ffd29ab6f24a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72590df6-398e-48b8-ba69-4a880c0c3ecc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ab29182f-e065-4c74-990c-1470ae3244fd"
                    }
                  }
                ]
              },
              {
                "id": "e707f62c-c6d8-47ee-8e8d-3d7fb9b8ccfb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ba7dec8-ecd7-4395-96a3-488b4ecd8b9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8c89298-5b4d-4dca-b3da-b9615ce59050"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0865602a-767f-4aa6-8841-453a0e09a56f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b91aae89-7ff0-4c39-ab44-bd783d689101"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b5fcdb92-a3e4-4cfe-9044-c109affea09f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9f978fd1-9e43-467f-99b5-e5dd7e16cd18"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1df78d5b-e3b5-4b46-8f70-99388522a548",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "99863e5a-a125-4ebc-b83c-17882de4aab2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8995a6f-4837-4962-a800-656e30c534ee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3e99be0e-c0ee-4d3f-a5bb-db07265126ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d5768d5-a851-4c40-9918-26487f6c0918",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87b25144-e0f6-420b-8f58-c08d146e5f1f"
            }
          }
        ]
      },
      {
        "id": "4fd75d16-f30a-4542-9ee0-68bdc62410e1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "493f3b02-216d-4148-bd76-14b44b50049c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1552abd9-0165-4d46-8ea3-c3069d22fb8c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "935ef2e3-ca88-44b4-bc67-90d689a3b400",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8236c40a-bc8c-46ee-9c0c-fa7f3330c74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222198de-8629-4b09-8b53-c3e09a523bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ed2d81-236e-4f64-bec1-28dc560a69de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f35f27ae-a321-4898-becb-932de51bd37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a06b473-b28d-4b3a-923d-b26ad363921a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc72ee42-58ba-4c85-82cd-aa16e17a0188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69eb204-6289-4586-8d12-0bf9d19ed9cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81de7b0-1b76-4f76-8130-66478b18026e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe89622e-3952-42b2-b59a-f1e9d0d62ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4fd581-a1cd-401b-bdcf-0af205881efd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcb0418-8177-4fa8-b6b9-ab0165093167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca990fa9-fc00-47e8-86fd-3b8bbb2084e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7b18a9-fad6-44f3-b2fc-91a80b4db39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62a588df-d00a-42b3-986b-035495bf8bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1923b7d1-613a-47d3-b686-a11eb952130e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d31d3b-9ae8-4b61-971f-4f649d8657eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b8f2d5-a2b7-4c1d-a11e-237c1675b5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3293141-d0a6-40e9-9e12-c62d18e49560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41a34131-40ee-4d14-9730-64c74ebaf6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8ef2b1-122d-4bce-a436-edf525a7016a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba3a06a-813f-40f5-92ff-bde31909bf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50cb000b-7198-4460-9847-cba4759a83a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a03268-c331-4ef0-bec4-783e619cb3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fafc059f-2542-49d8-9d73-1b81ef74de95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b27fee-a535-4ecc-80c7-6708f523ca5c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b7b32b-60ce-4895-ac7d-e94a3abc8c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475a0808-fe0f-4c92-a7c8-41eabb6abc0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f432f9-38c1-4cdd-adef-fc61af87210f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0954742a-c5ba-4bf1-9b17-fa0c1be45634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca0de67-64b0-43b4-9a8a-5f2abf20ea25",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81b967c-f5e1-40a4-9930-b92d4146280a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bab9aa3-8dfa-46d5-9068-95417e0c56b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b84b077-a5ab-4536-96ea-c32d19603d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd76e351-5e5e-44b6-8c9d-310483f528cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59003e69-a316-451f-b0a2-db8068ae792a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "321f0aca-196f-4281-a9d8-67d27bbe84c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bdd36f-e440-4756-8b23-77f4d8515522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d0182a-54fb-4430-9615-6f27a7a9de86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16c7efca-0242-465c-83c1-944445efed0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60398330-b62c-4699-aa89-1981c3cc3dda",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1732c558-b555-4ee1-8391-56d2171d88db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9149ed-7bc6-4894-8e0b-ce0a77e166f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98628fa5-b617-4319-b83a-4d83c84f2b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cce3672-a7f7-4ac2-b5f2-e24a84899c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e93f86f-abf5-47f6-9454-ddcfad5bf804",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90917d5-0791-4393-868f-23007b5c657c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27772f5d-a6ed-443b-8573-f5ac0ca408d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ed43b0-3d30-4886-a256-d9a0867225c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76868088-e25f-453b-9a07-78132e4f945b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d80731f-f23b-4391-b883-86b070c0285d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046f197c-f88d-4929-abb3-17a5e339b96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef843110-d584-424c-9efd-ea5b22a7039a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f92a1f-f2f8-4b85-b674-571f05a10bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d869a204-be73-4691-89c5-51459eb89276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54304340-54aa-4200-9bc7-0f75eac7add5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ab5b28-551e-4696-ba22-3952f2c789ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55af26b-1c72-4149-8fa3-ff8b03d3154c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e07d74a-3198-4879-b45a-dda3e4b18d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "263637d7-9037-4076-95e7-a5669df23f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c662bfc-999d-451c-b99f-5f3321d76804",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccc1261-4f0f-46cd-a621-e0592a56de3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271f8365-57c7-483f-a79f-7f201f253395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50644c94-c7e7-4159-93f6-503357e737c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "16550872-c2a5-49d9-9f9b-c2564c709952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95b404b-8746-4604-b4a7-6fe0942ae50b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe398d9-af65-4f8b-a5f7-59a848862618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac9f9d7-1daa-4571-94bc-bfe2cd85c5e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03153f9-46dd-4180-b545-70b6a56a531d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b56fa058-905b-4337-bd4f-b6cb71070323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193f55ac-ec61-4753-8f79-152ca19348ea",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6fb8ca-0e75-4302-b1fa-72f5b4f471c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f0928b6-dc77-49c6-8c88-78248e3994c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32c8f5f-2bd2-4d19-acb4-513b97578a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b0d8d9-ada2-4bc8-8d34-d008b33a7ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8089b83-5995-4744-a5f6-b041feb85cc6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437b0ddd-22a4-4f84-8306-611c42b43226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7af1e00-6f34-4a51-ab65-823d46641f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e09308-634e-4470-9705-537e70cb1e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4585b9-739e-4bf5-bd29-5a7261ca2ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf7da9a-0651-4c02-8af6-82591385f3fd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e009c6f7-c24b-424d-b478-1bd5ed56f5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac58553-f852-4c1c-b295-b4851c680641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bf1fba-5ae2-4ca6-be06-219e84c01b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d406ed-cc5e-44c3-be87-b3f65d1f27a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c68dcb9-08a0-4f00-a1e5-b655a04afc96",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029d4ed6-a02e-4631-9832-2d91880c3544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07399f92-13f1-4b6c-b105-8ed9e02f4986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c004f6-aac8-4059-b995-ad1b271f9b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa468895-2d27-4ee1-aefd-5475fa56f729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9b6e86-98c8-4b00-8a99-1d53d735f164",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e3e738-ee60-453f-a7ef-e9427e41eac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c768b580-79ba-4880-af63-0cd0049466bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abdb22a6-0df0-40f3-b58c-30d8f32c6093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "231d4054-0359-4849-ae1e-ff90ae5bec54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484f2e54-2b18-4bdc-8af5-78cda4d78c94",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700c85af-1500-4155-9fc9-48e4ca393e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3fb609-bd78-4703-bbe7-9444b0d5e8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab63eba4-8d9a-4f54-bb2f-15678116a809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a45e7be7-4f6d-4e50-a90e-13fd79efbb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ee1889-c189-418b-9195-10a8dc85f89b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423139c6-69ec-4e22-826f-94652984aad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7aabc2f-7f89-48d9-9fde-af44a4dbb530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7878ece-b282-4c8e-a526-9bb8c84db855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "addd21e4-ec5b-4570-9556-c95edf824fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9dba87-2010-48ed-9498-2b3dbdf4adb1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf85fce6-22dd-4717-8a4e-247535c6bb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb6d8e4-7c06-4ad6-a978-bd2add25a83f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce641fe-5c8c-45f3-a358-9273ac6a63ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a14f4974-c33d-4a05-913f-e1110504f5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b82fbd3-a59d-45d7-b71e-e7b5f2ed1a96",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bb7d97-dbda-411a-9be9-cf8c026b36de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e7c611-b35e-48bd-b743-5cd473e31a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec00d50-6dac-4c77-b75f-17a7b0b31a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb2d984-1dd5-46af-b170-c8ca9531f65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abbe9df-5c4f-44b2-8500-2e29ba144842",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a98408-dfac-4148-a047-9e34ef5c3d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779bb2e2-8e68-44bc-9d57-0e2d509ad0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92fbc47-9a4c-4376-849d-1c7abad54d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c16d328b-b189-4dab-ba27-47d0b4e641c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e86912-be86-4496-a522-d803aba497b5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2b28b8-f272-4107-80ab-1026fa5b821d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a51bc31-cbde-44e0-8005-bac6f98c2558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da6fc95-fa5a-41c0-acec-388a99dad379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07298691-8053-4e6d-bba7-fa9288dc111c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8aef889-5195-45ef-86f4-f17c2fbc57f2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc88453c-5c84-49e3-8901-f2c82fb00117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98e820d-8581-484b-9a1f-678f6b7660b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72b3702-8c53-4e0d-8681-2011f5f7dac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eab76afa-52ea-48e7-9d18-5877748189a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d155b328-39bf-4f21-86de-755a1c1c6b5e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be632535-b4f3-410d-ae57-1b3f89d234ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1126184-1757-44ce-ace1-de48257306c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e18854-bbe4-4651-bb30-cf52dc853abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7220b591-5d30-4046-856c-c8ad89ee60e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd83409-b631-4587-ba77-0d62de5f5561",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d578ac0b-fe98-4cff-940a-8aee354f1a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98836ba-fec0-48f9-8486-ce5785abd37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a7aac2-f647-4efc-8c24-bb1f37dc1857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0ebf70-0edd-4c96-a974-bf6d261d9541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84da9ca-332c-4ac7-bd28-f4297d006668",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ba5b80-9367-496c-b67e-8ced027f8880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd7c1ca-47d0-4d9b-a526-8d100fa368da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81d9384-fe63-4c0f-a617-fb6f92b8efc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edf42146-cec4-48ea-a186-35c087a96007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a01214d-b825-4d82-b3e8-0c6e835d7443",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e84927-35db-4306-abc4-adf2592b76ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "370d3b03-c27a-4179-a166-b323d647ddf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117dcad8-fd0f-47d5-bfba-2d06f1fc87d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6afe21-51ca-41ef-af9e-2dc85281bac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa98ba9-0c83-442b-8c4e-67e5107672d0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ca30e2-9b2a-4968-88bd-666185fcbde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c653267-c648-4458-9eba-ee767e4f846c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea7abfd-32dc-4bb4-9a9e-a766d1d5bb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2396ec7-0b0e-4ec7-ba09-98fb5248166d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf3f649-2343-4b6f-af66-2782215ffc28",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fe1254-885b-4cdd-8fb4-d3d263eb664b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a8a9fa-c0e5-434d-9b3f-13f1b0a88c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec3c302-60b6-4251-9c8d-137f1ed2bf23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aaae345-1570-490d-a0cc-14892a9dd313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5218ce67-3de7-4de6-ba61-621057625227",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d903cde-f91b-4f96-af14-262b9cec7572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10305af5-8970-418f-a93b-a4699ff10399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ab1bd4-712c-4af1-b7d0-525c3a2a5f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f64d6131-31d3-4d53-8504-f798704f22e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6f37e5-5809-439f-9efb-8ca7d8f682dc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22cace0-9b42-4959-989b-a5d02b1e1090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b52f7ce-2702-4416-9969-5b730f787e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3395eda3-964e-4dce-9e34-e1bd420afdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55637ba8-845c-4135-81d8-549029cbc24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57efc859-6acc-4e03-8c67-fc8c6b305537",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40acae0d-31d9-43e3-b018-6f83aaeebf8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d168be50-fada-4b42-975f-146d4542629c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf762f8-4bc0-4665-82d2-ce1cf6d37f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4510ac-af87-4ab5-b834-5c5f955a7efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93165478-7e22-4fe4-a18b-52a54de68333",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0923332-989f-436d-b08b-b2dcbb19f8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a35166-c83f-4b4f-a22c-b3024d0afa2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba12567-58cc-40a6-b2a0-a4f4d01b6f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2645c1f-fefa-4e87-882f-da7f540a7277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ea6274-9bb9-4fce-a050-b9181bfe1ed6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9047aea-5b33-4ed8-b59f-697f40e49054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355c8736-c637-4b6f-a0ec-93d5e6b94cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48afe9b-a8c0-471e-98bf-73d75569f03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96bfcdc6-ee29-425c-a601-f21376c7c7b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7af6de37-8ad3-4d89-a6d9-ea1d54251671",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3dd0936-4e37-4358-bdd4-94e18a0c876f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167443e1-f34b-4802-811d-377d8069ad0b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f00ab7-57ba-43b5-8b2e-6858c8af3b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab1786e-9ac2-4a12-9487-c2f2d149214c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55e9e9e5-48fc-4aaf-839b-bcbfa8c832ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ac96080-4280-49f7-a891-30fa75fd50bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3eb6d29e-5dfb-4f72-8923-30c10fa9e2e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4df7df06-7922-41ad-8d44-9042c281d92b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "936db0b7-430b-418a-bd3e-935c2aab866b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9892e541-f94c-4bc7-8a35-167fa856c1ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7e53b16e-8271-42d5-a339-82c2f1b68709"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d687d3b2-95da-4887-9109-147cc9c5c68b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b46179da-f7fd-4891-bb75-ca0d94466720"
            }
          }
        ]
      },
      {
        "id": "bd668f0b-568a-4a2b-b9c1-36cbfa09f7b2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "16504345-e3f1-47dd-b41b-bdb181d8627b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57082778-72e8-4515-a73d-6ecc704190c9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "588c75a4-de5d-434a-8925-a96cb8fba44e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159fcb79-aed6-4827-a916-774ec1325506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40776881-0024-4527-bfbd-b9a8dfb3690e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b65c8c6-571c-4bf3-929b-b15b2c2c5cb6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d183d8d-06bd-4483-9ca5-cd6f57a789b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42e896a-c1fc-44a3-acfd-895517b5d4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db914faf-c7c8-424f-89b0-155c7f2abbb4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896a7cf0-1bf4-4ad9-b2e3-d660ea357bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc48dd1d-8aca-4bac-9da1-93d6211d2126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07536d6-5305-4ada-9692-1985fb567e35",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064fab49-1531-4a08-8ba5-34a43cef2a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e616c4c8-ef5a-4f43-8965-209ac5bc18ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6475f2-2a6f-4e87-b62c-469fad95cf6d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607dc12e-49a0-412e-ac53-5a6d1d893e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58bf58c1-5b79-4157-b71b-e5d91243eb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bde1f60-17f0-41fd-bb31-72ac8a18c539",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9117af-fa73-47aa-95bf-94ead19bbb24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1606ae93-abd6-4f95-b8c6-d202dc723f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6edc6a-db3f-4404-8836-56fae978987b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f4462b-56d2-48d5-b307-6953611ce239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f140cdf-154d-4e93-ae4b-39bc97a423fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b9fccb-3ff2-4540-9311-917dfff92590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f88404-e443-47bd-ad55-f0faa4d67fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b410ba89-c5bb-4e4e-9328-6ec9914c8c58",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b087c134-00f3-4b65-bb69-2e4f76d16b35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bd800e7-61e7-413e-9b41-26736345ea7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b642f2-a314-438c-a057-86b47c3d21ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60713951-2ad3-48e5-8e76-70eee4690ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5faf599-5185-4599-804b-dd60803977ac",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b0ed48-afe9-46d4-a396-d3b5a5683510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5314b74-317d-4a46-a0c9-0d221837744e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ee755b-c849-4343-97ef-710b948f0be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b290c28-2441-4bc8-8fec-2844f39919b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7c932a-3d47-4c18-8661-08927eb65d70",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27944c5c-504b-4990-826f-301837d28c54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44502088-03c4-47cd-b882-9c1c13925f39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac3eb5b-57bd-4307-ba20-1a12cdfe7314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ea1709-0396-4427-8186-402d6d412802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ec2bfc-e65b-40df-ac94-60b43bcf75fc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3d9826-eae2-4eb4-9060-30c53f6fa854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a82e2fac-3491-4667-b7b2-10bdab15f6be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cfe3dd-475d-454c-b15f-ae8eb7489fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f44cda-69ba-4a24-9f3d-6770b2b64cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a30806f-9fc5-41c7-b970-9c7fe7e67bc9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884dfc36-ca7b-4c8b-b5ad-a25672231c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6d1060-9b36-43b5-9f06-0062ee6c452e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e45c9a7-beed-4ddf-aecb-2ccf071f5e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084a8232-218a-4d88-979b-3d12976d790a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efff917a-5a70-4a83-b096-489b4933dc34",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7892127e-6c50-45fe-8952-199d03ed74e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83c1a654-071a-4fe4-8c3e-0de77250d6af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5804e5d0-23f3-4bce-a322-2b4b0382dee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9053c4f-ebd2-4f28-87e2-8f7a2fdd5e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a1a515-9c22-4753-9b09-c0de7aeec695",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e3ccb6-f9b6-4297-a560-5dbb2361b52d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f92aa865-b8bc-407d-a619-27b92d1b7010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "553334a1-ca1b-4bc2-9224-f6c5fa22d54c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0178e4-5ff0-4ec2-96c3-dbabd0cf5a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503d440f-d25c-4c23-91ae-a02abd65ff16",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289b2288-059d-405a-9071-5ffcae25e12d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afdb6828-c1f9-4b71-a466-c40a56111fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca07c26e-1e5b-4856-964b-d10edfdead81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae35cd0-c35d-4730-9c96-444d3bf04ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b23a4f-8a0a-4c1e-8f19-e2cf5fe721a2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c510d6fd-e54f-4622-a463-589c3bac41b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd894283-1067-465c-bb71-83a905815615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80952234-c0d1-4e38-8cab-456f3abde12a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279bd26c-d61d-48e8-8242-b7788e55b178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea8819d-9cfa-4667-a2ce-4114afbd3fff",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f009df-a617-4481-abc7-eb50fb049844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf092ea-196a-4b62-99fc-b403add9b19e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7652270-6778-453b-b41b-7ca0d56a885e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54a411f-f541-40c6-9f97-4fcdfb12a89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32624d0e-5bf7-490d-8552-d40868859382",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b94357-c2f3-4423-a9f8-febeda831add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ef1f37-8e1e-4d55-b3dd-d9729efbd3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38ff5e3-5762-49a9-bccc-45cc21b60b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d1121b-bbbd-47e3-bbc4-0cc7c62b8b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab95b78-2530-4a9e-bc99-2ad666ead253",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e9137d-45b8-4239-b420-1831a18eb59d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631f8445-da47-431f-b807-8ddade6c4899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c2af7e-9893-4321-95c5-5a092337a68d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1650f0-8e89-4924-9a18-46e08be1746b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4bda4c-e453-4228-8448-81b544f90044",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af461b5a-d850-44dc-9f04-1f3ac18aad61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d42640-2fd4-4fa0-8421-f6c490db918c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9299981a-2d4c-44d2-bd7e-6ce2cb86d94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39bcce58-8ff7-4645-a4b9-155e5289969e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ccbb1a-1aaa-495f-b3e1-a3f2eb457397",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930bd968-4421-4f14-ae97-e53c54895488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b690f8-9dd8-42d8-97d2-ce4eb48f6f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c63edf-a80f-4d54-a130-2a7fd2e0d581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51498990-4189-4e3f-a509-468ce271b8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe81542-6ca5-4272-a54c-2825b9085661",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4de4567-be06-4a0a-88e3-d755113e4dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc831ffe-725e-4312-8768-72838050296c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca36c855-845c-43a8-bd73-f698438173dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f986e3be-9121-45fc-9f6c-13135747242f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c5f01a-fa0a-4908-a818-32f3edd7a930",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf40de5-379a-4b57-985c-596159348492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3b6823-faed-41b7-b482-141692e2cda2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fba847-4e37-47e5-811e-451c592a4f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb11a8e-d57d-4968-b158-a2f64b12d6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7727c0-fc98-4a10-a8f0-9cf333e76670",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45514643-3964-45b6-88b8-303c9419216b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "238023fe-e0a3-43ef-88e8-77e5cf3c63e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcb3bd3-0127-42ad-a867-7abe681c27c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5fd73a-cabf-4c9b-b3ca-e4269687f2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d01c3c-c425-4e08-a166-153e68773884",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fcf756-5d49-4b35-99e0-ea5a33ac6c49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d48d7548-2945-4460-b253-dab33cf74007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e814b3b1-14d0-43fb-9000-fb1b9d874f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3804602a-59a4-4025-96a4-f3192e355ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4983532e-f678-4793-ad73-79d29a083f88",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1707136a-089a-4656-bda7-39d8768182b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75bcb4da-144e-485e-819a-1f5d131d6038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7aed0c-d6a8-4db0-94ab-3dcb4f4e655b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82b1c11-9773-4147-aa78-ff21914f52bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b92822-0ff6-4bd6-a889-a0746cba7f78",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac1ea8f-4f6d-40c2-bc8f-df697ec7073f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e422a4f2-09d2-4d28-b63e-f6f3cebaa5de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c506df-50c1-4d0c-a2f8-daed62ef1847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5f68fb-f44c-4465-ac1f-3dbe32acfb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94ec61b-99bb-4429-931a-6bab222ab292",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28a94d5-16d0-44fc-9850-8128a417c311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a674e21c-80aa-443b-a98b-3cd860107f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f411928-7de6-4c54-a63f-9300882eb5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8b445d-82ef-4547-a24d-9ef5f97b54a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f134ff-553f-4538-969f-824122187c0a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2b2006-7e3b-40d4-98fb-da9b9ac59ed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01147749-17ff-4b32-9c5a-16d3dfd73ffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ab92eb-8bfe-400d-923f-ac4236117142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c807f0cd-6a6a-4a21-a585-31e4e7552468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7216ad-5130-4fc5-8cef-8af7ecf4bf7b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca74682-cd2c-4414-9f31-4c633d550e86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e9ce44e-99a5-4321-9338-b1f8be8c6c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39243d29-ff5b-4b18-add6-22b24bd20a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e5f56d-6deb-4c9a-b055-4a795a4a4724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb00fc3-65ab-4d13-aa50-1f99a634bfc4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b942e1-4360-4947-be7d-449f1909fb4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55a1aa99-3f4c-4541-a85b-4d0521d89420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e6f52d-af8d-479e-893d-fa8c1f9ffdbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514c23e9-b09f-4ed0-987c-d9ce6179f436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51995dd-8b31-447f-b89e-2335649a5a77",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d451b235-f83c-4d9b-9b09-f524af8a8c04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc7ed4c1-55de-4ec4-a793-33bd2b6af4f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "083bb71e-c5da-4a05-af80-185ab9aca52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea54878c-4565-449f-bfbd-408ff6a74629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097a2523-f9bd-43f2-9880-b68b51b36e91",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5375bdf-72ff-461e-9903-869fdb6f2438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31f88f1a-841a-4323-86ee-34d39d21f661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71060ec1-8a19-41e3-9453-20229721eecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1900f34a-441b-40e9-bac0-63462d4078f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2da48f-155c-46c6-8d5a-480505e2bb53",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756825e6-0392-49e7-a1ab-8504113cbbae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "270758f9-5aca-4333-bdc5-13a58d0a0a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "675763ca-bf14-4a28-9cda-c090e3ce6b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff50f3f-b675-4c6f-a7db-2fb281af6228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de666a06-5c11-4cf0-a2b4-012738e0d35f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e261f4-208d-4d86-8f7d-21e4ffe8dc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe387723-ad3a-4661-98ae-76542bc1d9ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "879d063e-4e61-434b-b8a1-bcfdb725edf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f875f8-1664-4407-9893-6edb49ed301d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbdf889-83bf-4e67-b626-29fef25b9409",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638eb82e-5302-4537-a8fc-edfc7fed54d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07b4270-8e95-4e00-9ed5-5ea8bdf1fdca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ea39a5-eb9b-40fa-adb0-20fd5b2d159f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8175ae0c-b051-4471-b763-081460cf6ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76da0ff-f476-4532-834d-a015935c12d4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00b308a-cbfb-496c-9756-6a6ab82eff73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e106f7-15e2-46de-94d1-f6707b22cc07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d955ec2-74db-4892-9506-7ea09d4a07bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e08855e-3bb9-4978-926f-e4434c3eddd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fc8a33-42e5-4d13-a315-0e9f199b8a64",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff7561e-9180-4c85-bfec-3c3ee039d061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06917b00-ee9c-4391-ad09-1f9e141aef61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2390dc71-e752-433f-984f-9186a68df0fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22158d6f-6315-4d09-a086-10ed4c5f0e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bc18b2-216f-4d96-84bd-ee8b7d07fe83",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a54125f-868d-4bbb-8205-db13f094525f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e709596-aa59-4b58-8d8d-d3a94af21f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29864430-d63a-4ec9-8b36-b6a1710929ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de2d00d-1aa9-4b44-8679-bd7bf0cc2df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f2a3fa-064c-4f48-b38b-12e54ad11756",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92eb19b1-7ee4-40bb-ba0c-7c123a7d7c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae4ee30c-27f9-4974-af1a-a3c576e0ad0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35862d4b-011e-4407-a221-6d6e09294d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de13d1a0-ba87-4373-bd92-0c2d891136bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5ece10-5ea8-451c-a0d3-934e8b3b2ee4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7145a224-4d3b-4bc8-bfb8-0070527e64d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a31cd4b-192d-4ffd-a043-fecea0ed67f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1916ec8-753d-4903-9b17-20394ec9bcbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873817cd-1179-46b0-a062-9d9c04011e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b23933a-dfc2-47c0-bb7c-118b3602bc5f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42874ea7-f62f-48da-9fd4-837b3fd8483f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d04ea5-cf00-498e-a261-b0706800c14a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f3a2d7-449f-43d2-a44f-49e7032ac3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1d4dcb-39d1-44b7-89f3-85bbf072b2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588f5b2d-7293-415a-ae73-007ec32a10a8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3317a17a-38a1-4db1-b591-e97eaa9d5141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e7c138-334b-4f2e-937c-40f5b534da08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b651bd-1294-4e01-a0a6-82131dc878f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20285bf-bb11-4cc4-862f-a7562ebbc20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d9bc4e-824b-47e8-968b-ab1201840be1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa988852-06e3-4e59-acfb-61d331c5bd54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a67a18-5ebf-4ce0-961b-9ad7523f9c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82f89dd-815d-4cca-8903-20f98c1989af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e50e14a-47a6-41f6-8693-9972ecc8a5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f9bf2a-2a94-4be0-94cf-64fd3df23d34",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49af4f01-b0e8-456d-b300-5c1c66e5411e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a6a964-8652-4e86-ab02-d70ca347fe1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa0edaf-bb89-4610-8302-2b98109d21f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e404d3ff-87e3-46f6-817f-716901710aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334d473e-a7d6-4158-a360-7384b56ada38",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf746c84-9635-4fde-a940-b580f126473b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbdc7e5f-6baa-450d-86ed-de8fccd8f490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b480592a-b8cf-4df2-9cbe-6519d3514daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62e45c1-10f1-44e7-8ab3-10507f783bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6243cc98-1cf4-4741-b5e2-d831cb675183",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85675020-9e63-4277-9da9-06b17679327c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f07aee-5417-486b-9b14-2b6c0b97fa77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc9060f-0833-44c8-a48c-162791ab0e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f88342f-31b6-47d7-9ef8-d99efaef60fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a834c9-1e39-44d3-b4c5-24efc3d603f9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ebbddd-8779-4303-abd9-8c9b03aa50b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec69b9d7-33ff-4d15-9e5f-38832e497c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "236184b9-0c53-4bfd-a980-ffc10aa68546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cfa86cd-02f3-4e97-babf-4ff5ee134a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58f1ee0-1619-4480-b4d1-f5496dddaff1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bd7f36-8799-4c22-a41f-8b824fc5be00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "731488b1-fce5-4038-81d7-850a3bbb9fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c924fd-6d1c-4f1b-966a-0d7f953774fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bde947c-0072-4f39-ac0e-514e3b8781c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29b9f3a-ea6c-44b2-957a-fde9f2c4323c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8292871a-f650-4237-9ef6-93393d332754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c44e9e3-aced-41df-a192-d9a88be86645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d9b667-c516-47eb-bb62-6bb00777280b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810f735b-a703-4db7-bbbb-09d299d6d9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73e3f21-3c2b-4876-983b-6ac87760037d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84490d9-5ecc-4f88-8251-19d50a6d8151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d29fd02-f1ed-4f40-a2b4-2639233abc46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8240dc8-d35e-48e6-8332-ae6265b2b610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d71e52-2c18-4b40-af61-be9144bd5488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f92f0ea-5e47-4f0c-b1ea-77f6bb98d22d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398eb835-2108-4a17-9fe1-1a87c5ae5095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad58a11e-3f7f-41f7-8feb-e989e3d7b865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73de21e1-76d0-4c3c-95ed-4b69d6c5675b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86422053-0582-45c6-9115-0813570efcdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d464c0-2836-4862-9028-7bce3781af9b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b449928-f73c-406f-ba08-342dbcc001bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdbd00c6-1eff-4ba3-acf1-94d9796b1ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e9ef0d-072f-4358-ac10-bc45d37ff1eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8885fa24-b9c7-4a83-a507-a97d1745a2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f419a5ee-9d9b-4b5a-9ba3-740f292a1daa",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728e6b3f-1d1e-4b32-9412-763335fc851c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b785d568-c666-4f05-ac47-451202e7aadd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb6eb0d-45ff-4de9-89ba-9504c03c1ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46933c66-e5c3-48b3-bd54-58d45d132784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be69c186-4dff-4443-91ab-afbff38a4c5b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b06251-c94b-4e12-90e1-3e89110df543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0198ccda-5deb-4c9e-8ace-ec2851b01ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac52d90-877d-4326-93d8-ad58fd56ebde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d2d51b-3099-4a1b-a6fa-b5bc4bf3f8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0de4a2-9461-4bdf-b74e-5c22cae67e1e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ccfff1-d254-4d97-b093-5b42c88e9c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ddae23-dc48-4a09-a7aa-fc98e7d23467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f91ca25-59a4-46bc-a4fd-6ee054a732da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c92654e5-2edc-4924-83ec-400b385d7c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0092370-76a9-4db6-a6f0-84b13468bef6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24250830-21d7-43ed-9c9d-3c96508c2cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29eef321-c251-4a59-8ffe-e562cf7345c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a41db2a-c80a-4cfb-a648-149ba16d9562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b61fe7-7902-4154-9f6c-f6995f98bc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f476c16-fe3f-4d20-96bd-f53714b12dc6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2fe3b0-ea9b-4f74-89f0-57b83cbe5305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5fe002-ec6e-4679-bde3-bc9931d3ea21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f903c9df-c562-439a-89ee-d166fa290857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d002dd4-dc43-4b13-a5cc-4c2f910d8a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdf0c72-1e90-42b3-95f0-5aa2f7801b42",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d560998-775a-4555-9e59-1ae35d59a172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae6ef37-118d-4ff3-b57a-864411c5b3a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc18582-5aa4-4763-847e-8be5e0e004c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40cc52ae-de06-4dfd-a15c-25519e956235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6372e46-d0d4-4b7c-a2f8-07e03b968ff0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192dabf0-a9ae-4681-89c2-23b714fcd06e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ea9efb-0a0f-45ab-8dd8-1f5014c966d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1231b200-bb93-4666-9247-6fa78ab60ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e5f99f-5e9f-4bbe-a471-62c808aacd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec2a902-ddfa-4c99-a137-16f534749133",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4353b308-483d-42b5-bbdd-2739f3d9eb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9938a259-062a-4eb9-aad8-8387005354cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d571b1-6eaa-4ab4-a9a3-ca4ea2ced15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3219bfe8-7df7-431c-9827-7964fd2e9f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1ca403-a7c4-402e-b02f-7ab9a0e8d3f8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f07e15-f454-4233-b2b5-4177be86042a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42918c31-9448-4c7f-bb57-2b5f174e60a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0582d7-56e9-4cf2-bde1-6150d15aac19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53212e2f-2eb8-448e-bf3a-0f6cc434c119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81be8e3e-2c8c-4e64-a21a-108a5a15b248",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168600ac-0f5a-4dbb-b154-c7233eb99bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12043383-6958-46b6-8a79-8ef05fae90b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80b884e-9ae7-4701-8e63-3016232fc76a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18b0601-650e-47ae-b56a-96ef1d536aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4fbd58-4f88-465e-a862-8ffc45a3052d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62237c2b-424c-4a1e-8a80-1946479f03fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc2a75c0-7352-4bac-b062-438690d9873e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d9899b-e90b-418b-b9e8-9358bdb82e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f6bc35-5483-472e-8797-5559ec065187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ddbfce-5ac4-4c02-ad3d-4236088bf260",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d18b2b-3ca7-47b6-9251-c151f1225b35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37f2261a-c0ca-4f0a-b0d9-8f32b8d4a530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cca613-e3b7-4868-9866-4b3c21184290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad205fb-12a5-4b9b-a7ce-1377ca921369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c2d80a-9191-43a1-8e4f-518de1e6a781",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de920e5-7752-43aa-ba4b-b09e5b69e514",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7360870-14c8-459a-98cc-c4a5a02d4de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3160e21-95d5-4eea-9c79-59e403b504f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0100534-9327-4fc8-8b89-9eab996aeb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c680c86-aa9d-4fb6-856e-26cb1337f0e3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527e1ac7-fb62-490f-abd4-c1307826f925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5db7f031-f647-4092-a660-8e5da005c937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b17533-2504-444c-8544-8f7f89820d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48a774c9-9950-4e82-abf9-e0438f582a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609a3ee4-3fd7-4355-9b83-7806029143b0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694646c8-0c70-469b-afff-aec9729c2cc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52fcfeb8-6320-4f1a-adbc-a1137fe5beb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00911a7-e8d0-4f76-96be-a2a8692b66a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071e3dfd-1fdd-4d58-bd3a-ed5fe94f041d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85413822-07d5-435f-a8bc-8f4538a43d97",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73616e82-a735-44bf-a2a0-3fae5e66f32f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cc5df19-dbfe-48fc-a03c-40e65a9fc2fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa190229-0f3b-4e0b-abd4-24d662ec33cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb6226c-00bd-4c97-9115-321e1ae358df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62e0c5d-424e-4a5b-8bf9-09636318797f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c84c9cf-2c69-4f2a-93ab-da067dd7a61e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cc6a266-1451-4fc1-8c2b-6a2b2aa33605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a06fcd-7ab2-4908-ab01-1b24843767a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b66ead-390a-4074-ab2b-9f85c0652d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b4109a-d5bf-436b-8091-f90e80f1bac1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564c6548-0313-483a-8d73-d8461722b854",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1055105c-547d-45da-8064-3ea3efc5bbfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f314cf-d06a-4034-b074-66c297517cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c86afd-263a-4d44-a497-38c59ee9f3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ba349f-28af-4c02-8ef7-822d248741ee",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfaff812-5f53-4002-a9d1-ae3f54a0d986",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "470bd607-d6e8-4813-b9e9-0f65bd96951d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8985e62b-891f-4c52-a39b-fa3905b12aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6318863-45cc-4511-a0b6-59e7d106b0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe57fcc8-f386-40d9-a70a-ecd10322e2f0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1993eed6-4282-492a-95dc-6ed8f3bfa476",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffa12c8b-8621-4afb-803d-6a8df27417b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea64278-ddfc-4d22-947f-09cd54fed57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4952311-688a-4295-8493-5517de9ecad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cd26a8-abdc-41f9-832c-34f029c36a62",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34c58e3-e924-4f16-9b01-a4b8a9f90622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "671ffb4c-7071-4f14-91a5-022dc6bc93e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde2ff07-ee6b-49f4-af2f-d1815336828c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c085125c-c215-4e42-ba02-276b95982296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b29759f-8601-4236-90c6-780241d32048",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a845c4a0-99c2-468b-8105-b8e6247f3783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "252499c4-7d7b-4dc7-96d7-02de066bb0b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3cd30b-e641-4885-a257-676f66b727b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef1faa4-6e74-4aa4-8152-8670bbfd9861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93ce398-cf1a-4f24-8ee0-5ffb803fef23",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d93cad3-777d-46dd-9001-b2fa6ed90983",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "295b05e8-cc9f-43f5-bf06-afd0100bf8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a64d5f-11db-4b7d-99dd-8c5661c9cb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c4f2f2-3802-4090-b6d3-a630d80dd0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7956585b-25f1-4f2c-a26b-7c3308964302",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105d58f1-71a2-471e-ab14-bf27e6d1038f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3c929d1-eebe-4650-b363-d2119c30b9c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31eb4bf6-61b3-4c30-a0bf-02507319de78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9c061f-9847-4bc5-acde-08baa9839a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876598a0-e063-4ca6-a37b-520d0ec701b9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f97033e-331a-4cd8-879d-7137e127af00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1189d510-e3ee-437a-a85a-c1ec682f6061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da05e5f-21a2-4b54-814f-dd1bb74f8971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772b8ddc-5970-4273-bcfd-2c96309331ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb43241-5c7d-478f-8598-44b0daeb7b95",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae90cd13-cd6d-452b-ac6d-b374d07886fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1585086b-e041-4877-aef3-1c298190b387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17290b8-4ef6-4e82-99b5-719e4232adad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9522cb1-21ba-4f72-89fd-28523bd65353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ff2a7e-091e-4386-ab04-75418032b3e1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e9cd36-38c4-423c-8f1d-217981159bff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "237b70da-7008-4129-9b8b-eb71f7bf9a02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29aa6eab-6257-4b2b-b2ec-b8f1b6d3db7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42dc219-8780-4115-90ba-0bbc1b19f74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f72958-471b-4de3-8e44-8620bb10cf5f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d092a60-23a2-4f24-bdf3-6e13e7c02039",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a599b7b0-4928-4bd1-b1ad-e9c7463e4217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72ef137-6f61-43aa-b05d-29cdc4693dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12de2577-ece4-4afb-a680-2fd242280561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79ebceb-1389-4abf-ba9d-f649536081da",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90aef7ca-f81a-42e6-b73f-97882ff78efc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6117519d-8cef-4c05-986d-3d6eed53afef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94710ae-fd90-4522-9d93-8fd13e663222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6ff3b1-bdcf-4986-bdac-99651e97a256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca1d865-bbda-493c-a935-f7827d3c9692",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef40c922-45ac-43a0-a9ff-f96bdb06db18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4796c36-f6b3-464a-a712-41d5aa2bd9d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fff8ad-6834-442b-b9d8-f8125c831d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf695fdf-0f66-49a4-91a1-cbfa33913516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5224a2a2-7b8d-4159-82cb-183d5e6672cf",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb3b7c1-17b1-43fe-8d0e-1d9c72ea80d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aa3192c-5f74-4e3b-aa44-8c0c5e52ac9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05db490-3f7b-4d91-9d88-b0c8d6659bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daeb64fa-d2fa-42de-91ed-577f5ef0381c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0965794-678c-43d7-8527-fc86e63e8f58",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2e0f3c-5495-4a1e-aa42-ab03cb62e68c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22bce1d7-94bd-425d-8b73-fc56472987fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d506f5-7873-4360-a024-bd2a98b464b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f07ad4ca-9e0f-4785-afb4-d05f51db5e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9536b19c-23f6-4068-baff-678269eb5c96",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d81fff-9e35-42a4-9c7d-be8a2fcd5341",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69a793c6-8776-40ce-9e9d-c5d346b6dbf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fce22a9-c0c3-4c1b-8521-cc76ec52dab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9427c7cc-a8a0-45ae-a207-f3c158fa9466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a30ad7-c52d-494d-9bc3-97f450f0e5a3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9aed4b-8fb6-4a94-8dd6-2691903715ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "970f0fc1-7729-4b09-bc23-a0d4a51cebbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e127c023-351e-42dd-bcfe-ff25381b14ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22b113d-ee3b-4555-82e1-7fdf702c7745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c7e530-b876-473f-b38d-9ca3c2b93ec0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f49b45-4edf-4701-9016-8fb20bd18305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9963894a-9e14-455b-afb7-62fcdd6a4e03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b196a68-b825-456e-855d-614c490c1d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d344b3-c304-4daf-b8dc-44e17bb59500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f258544-811d-4e02-9cb2-8ffad6d2b84c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c7b288-a98a-4b97-926b-d12ba84eefed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4dc3770-f4a7-47c7-bb0b-409d410a266e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9821f6dd-410a-4d9d-ad96-4cd65cd0058b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744ed5bf-5cd8-4316-a9df-efced2a124cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77637c2-f47b-447f-8787-aca7cfbbf46d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360f7c4e-3810-459c-b90b-e689ce74648f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b205447-6fc7-477a-9b72-d72629911b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f82c0bb-6294-4685-bcaf-22f7689a0aa7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2dcd098-088d-4fea-b9c8-afceedcf7078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33ca0be-baff-46cb-828c-2876ba7a9ddf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a50848e-cbb0-45cd-bccb-67ee1b58a1e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c71004e-6123-41be-872c-34cb375b3f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dce16f-26ea-4543-8f82-bca2d27703cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59f10f9-7ab4-48f7-a0e5-882e8dde601e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3898aca6-0ebe-4a7e-9df2-ec1441d507a5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bc7966-1164-44ea-a673-6241f74bddd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfe4a266-cd41-4b4d-b12f-8167de5bccf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92056fe5-2718-4a9e-9d0a-22e59a11e706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0904e54e-bd82-48f6-aa5a-6fc05dd36759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5209d6-1559-40b2-a4e1-c7fdd5e875ab",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec0bb7d-2b4a-4e79-acb9-6418c7e593f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6533848a-f4f3-4cd3-ac5a-072ef30f7f2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de7fd93-fc65-4684-b48a-4b1e30c99ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825af298-d994-404c-9c5e-c33fe1ce4c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f34ea8e-5b7e-41de-8b11-758727b93e79",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819336f5-a650-4522-8b97-d478aa7b2f08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b3a7951-610f-4b88-862f-078fd2e2ede2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5f9ff4-7da7-4693-b74b-09f9c00645d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdfad884-daa2-4495-b5be-eafb173fb08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941b1dab-2d57-46a6-a329-20543e038f68",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79f71f1-a2f9-4b72-99d8-de08ad6d58cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f25e3d8-d473-4db4-b450-b573980f9572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf71a68-dcfc-481d-b493-2dd0230f3bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bc9d99-5e5f-4f1e-8db9-bfb0a4ff9574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7d32b6-98fc-4bfd-acb7-b4d159aa0edd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706408fc-5ccc-4a84-bcac-a2ff6d7520bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b624995e-ab9c-4ac0-9d38-5d03a4fb788b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fa28d4-4414-4dfb-8dd9-77a82349238b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385c4d9d-5eae-4a03-9adb-08b201b2f5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b4f348-7126-48f9-8ee2-b9da3fc333a9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9225b516-279b-4a1e-8780-df9e7e33fa8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e842e9e-1d9b-4755-83dd-4a839cc84e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4846b08-0c0b-4155-97cc-764b279323be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f638180e-e3e0-4b01-8393-1b1e3d2c4a63"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab09a67d-7de4-4978-8f87-2ac8fc3d05e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad260ec1-00f7-4610-ada9-40c84541882a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dafb4025-0710-4df6-a2d4-74c7754c8e91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e337510c-9417-4cbe-b713-affc39bd179e"
                    }
                  }
                ]
              },
              {
                "id": "41ee7119-0a9d-4398-af8c-ed51aa32189e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39bde785-4bf0-4b87-a551-c99c48dc6bdf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60fd0cf2-4be2-48a2-8666-c997c20c3b04",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b975d36a-b197-44af-8c8d-0e0aa634b108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae1689f-bb26-4a39-b08b-fd535bdedfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e33e009c-182f-47ae-8e2b-e6002257bd63"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f321869-236f-4fc1-bf87-e5a330dfd931",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e26753da-804e-4b35-8578-a17f46ebc66b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35e0893c-db53-4691-9bf9-0171ae1ce36e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fea22aa1-5eb8-45f7-ad78-aa24f894d205"
                    }
                  }
                ]
              },
              {
                "id": "23e93960-13f5-46c9-b082-8390183a7b6a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "79ee738a-52f0-4e68-ba1c-a69b5ab42904",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f52482a-5d15-4ab4-b28b-35cace01db51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e9089024-f264-49ff-81d4-27ac74858524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855b205c-8aa8-4e0f-84ed-578bf856acd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb81b2b3-da96-44e2-a2fe-1dfba4179086"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "13832815-7623-40f9-b165-6f72d6cd9faa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "41497890-f4cf-4511-9e28-120b2a9b76b0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a6dcacd-18f0-44e2-8181-4c158c694557",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0194c91d-aa4c-4bcf-8565-69962e5551c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea5b0c72-800a-43cc-8b1c-a998c5a17533",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d1d701f-880f-4aac-868e-f6f7938f1a2a"
                    }
                  }
                ]
              },
              {
                "id": "581e3551-1f80-4024-9767-c97bebdfc92b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6378b93f-5e5a-4c9c-8790-ca161b7bbc67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "826b5802-39aa-4573-bfbd-f0e1b826cdd8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "218b9296-b9ed-4081-9211-1f32233a5095",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f858cbb3-6461-4fa5-9953-8d36b354c6ef"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8c7a546-31ba-4dca-934e-cfbe1b032494",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "46cd7416-caa7-439d-8ce8-bbc70666c702"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42d18f2d-c0db-4fc6-ad1e-477c9fcf592d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f0cc41f-adb7-4721-95d3-864a18f0739e"
            }
          }
        ]
      },
      {
        "id": "915e3e80-8996-456b-a2ec-585642285514",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c248fca9-b16e-496f-9eca-e19aee24e39c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21765ad8-a3c3-4cfd-9c88-092bfd2c7a96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0d426cb-9c1f-447a-94fa-5ce9995ba64d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03448db1-4fbe-4a35-a4a8-ba77a49322ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2ea83a0a-dec1-4c04-a5d1-1fa7c599230f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca57d9ca-4d1f-440b-af52-5a7d33df824f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0b7751d-8385-4e70-883f-10da439e9f42"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8900e072-4724-44da-a3f2-2d2e5baf237e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "808d4903-39f6-4072-8c5d-9026e4d86c2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec82e40e-8d0a-4720-8592-931fdb28e03f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a33467b-7097-46b7-b562-a40e74f3a530"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "921cd992-d3d9-43e8-bc40-3968a3e4a70f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a649708b-1d52-46a8-8e92-52266a0d4ce2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "483b6497-95c3-4884-b881-886bb24f0f1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ff9a8bf-5864-47f5-ae8b-e52b7fce35da"
            }
          }
        ]
      },
      {
        "id": "4d2f4737-04dc-45e2-8f7c-78988c0da2da",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d85a80ad-93dd-4e0a-9eb3-18d9e232b86d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "338b44ad-f879-4669-a0ab-7094de81450f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d670ece-c4e6-47d1-adcb-49cd5c8f3262",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f11fbd-596a-4339-a9f5-58307439d330",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80f90cef-8a2b-4aa8-9d1e-f460af8a57af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74e9e03-7fa9-46ee-b746-c544769173f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68d48e30-4262-41dd-9360-a231b2d1267a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac8e6e2b-9ab5-4d50-b711-7c14a30f2801",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8382944b-99c0-4cff-b3a4-9e263c587b17"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f9fad36-a9c7-4047-83dd-d3651cefa4e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6904a02-9ae7-49e6-a4b5-a7447490ebf5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8eec18f3-7a88-4ab2-b11c-9fafd150b133",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "43fa1302-6ae3-4646-90dd-62c7e9c52e84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97826a0c-e745-4037-b7fc-3cd42b37105f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46964361-0b6a-4e5f-84d1-fa07e8fce5fa"
            }
          }
        ]
      },
      {
        "id": "8af6a7f6-f448-43e2-abac-992235cf5164",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bbd0e680-38a9-424d-83be-0547cd626e95",
            "name": "Negative Testing",
            "item": [
              {
                "id": "60f66a92-8845-4225-a166-cb5727dcfe9b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "925859a3-504c-4450-b92f-31fb02ca6e11",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd544eb6-43b9-4a6a-8117-7ded26ce6a45",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b48d49f-cac5-4ee4-84e4-2d6a2811c6e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da6c043-e433-42f3-913b-c66b8c203020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f92d7cb-fe8f-45a6-9771-8c4e72c8e429"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38525352-254b-4d91-9821-db74cb44eaef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a27246b3-8773-46e5-b0e0-60276c95db08"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6d02274-0719-417d-92bf-c55d0843ab8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df46a50c-59d5-4658-9c81-3afba037e777"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "897e2902-0b83-4b25-add9-8d16683c0533",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "237d6983-7d56-496f-b865-c0dc85665987"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5f378e6-1c5d-4fc1-a681-170b2f4c642e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99f09adb-c2de-443a-9d1a-61e725ab095c"
            }
          }
        ]
      },
      {
        "id": "3494baed-f387-4a56-8a14-696470fe2244",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fb0c6e7-d601-4991-a32c-938e70559cc1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5398ae87-11e2-4877-8c00-f77044106d1c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1a3cf6e1-2ef8-4786-a696-981cc53904d3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "670a8e20-dc96-41b4-9b95-d98e515b77bd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6383151b-59e5-4a94-a000-a0695ae0cf14",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 41
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 213.88095238095227,
      "responseMin": 21,
      "responseMax": 10055,
      "responseSd": 1249.829303311042,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722213683975,
      "completed": 1722213746039
    },
    "executions": [
      {
        "id": "e970cac5-f76a-41e0-aa91-0807ac643223",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e08bbe78-463e-4834-8f6d-96d2c9ec9076",
          "httpRequestId": "e4051762-2f27-48e4-abd7-37033eea8fc8"
        },
        "item": {
          "id": "e970cac5-f76a-41e0-aa91-0807ac643223",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "98f456bc-197d-416d-bd0d-7455c46a3b58",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 0
        }
      },
      {
        "id": "ddced2ee-d518-43f2-a1be-a18d770945e4",
        "cursor": {
          "ref": "d1b372a9-9b19-4213-ae01-48d8661fa26e",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c6a57f78-e328-48d0-8c54-e92a370ca2d8"
        },
        "item": {
          "id": "ddced2ee-d518-43f2-a1be-a18d770945e4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8043d7c8-1467-4913-9c45-986e78e544a9",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "a63d0b03-6354-4273-bca5-bdc46500143d",
        "cursor": {
          "ref": "0b5bfb37-8bc6-4654-835f-24074dc60e6f",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "15835016-8718-4d36-9aff-346c79afcc1d"
        },
        "item": {
          "id": "a63d0b03-6354-4273-bca5-bdc46500143d",
          "name": "did_json"
        },
        "response": {
          "id": "ff7d2ddf-a63a-43fd-b425-f8e651dd7546",
          "status": "OK",
          "code": 200,
          "responseTime": 315,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29990a9-e77a-4f94-b37b-48f1cd730666",
        "cursor": {
          "ref": "d5ed0a27-f7bf-46b3-b749-46b3f4807374",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6d613d7b-1620-4953-8c4b-e52fcf0fd081"
        },
        "item": {
          "id": "c29990a9-e77a-4f94-b37b-48f1cd730666",
          "name": "did:invalid"
        },
        "response": {
          "id": "4645a84b-b69d-4fcc-8fab-6f411007d24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29990a9-e77a-4f94-b37b-48f1cd730666",
        "cursor": {
          "ref": "d5ed0a27-f7bf-46b3-b749-46b3f4807374",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6d613d7b-1620-4953-8c4b-e52fcf0fd081"
        },
        "item": {
          "id": "c29990a9-e77a-4f94-b37b-48f1cd730666",
          "name": "did:invalid"
        },
        "response": {
          "id": "4645a84b-b69d-4fcc-8fab-6f411007d24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b50fc8-f1f2-4fdf-b638-18d136901f3e",
        "cursor": {
          "ref": "ac5b0833-6f65-4aa2-9e08-8c8a5736a79e",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0cef0564-1be4-4b9f-a2e2-6581c2daa8d9"
        },
        "item": {
          "id": "12b50fc8-f1f2-4fdf-b638-18d136901f3e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "56cacae4-4aaf-4fff-8591-4b4229554a8a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 206,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac36493f-99ac-4f77-a307-696cbdde9b4e",
        "cursor": {
          "ref": "86ed05c9-01d6-4bb6-946d-888ebafdbaa5",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b7946ea3-bdd2-4ab3-b53f-ad59ba1be344"
        },
        "item": {
          "id": "ac36493f-99ac-4f77-a307-696cbdde9b4e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5d9dfe0b-19bf-4cc3-9f8f-15c975a35314",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9def992d-16d7-4b85-b0d6-ef164e7156a1",
        "cursor": {
          "ref": "bab324ca-1222-4769-b41b-78c2e35129d8",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d7d67811-a66f-4415-ae6c-d37fb83e3a51"
        },
        "item": {
          "id": "9def992d-16d7-4b85-b0d6-ef164e7156a1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "216a3959-7a6a-402c-a016-fd46caed9113",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acf9a3a-b28e-46a5-9a7d-98d45e93a323",
        "cursor": {
          "ref": "3e923b03-7030-4246-a5da-2b2f97d2303b",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2ba94c2a-3354-4a12-8f46-ed5bc300ee22"
        },
        "item": {
          "id": "0acf9a3a-b28e-46a5-9a7d-98d45e93a323",
          "name": "identifiers"
        },
        "response": {
          "id": "adc3e04e-98e9-418c-a2f4-3f9efd20da45",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79551e2a-1f57-478f-a4a9-ca3c815e36ac",
        "cursor": {
          "ref": "03e40142-6f16-4f66-b35f-6505291b5228",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7442a560-8fef-4a6e-94e5-57c03be6cb0a"
        },
        "item": {
          "id": "79551e2a-1f57-478f-a4a9-ca3c815e36ac",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5e2f903e-2bbd-4e71-91fa-2122cec8941a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de494a4-1092-4e9c-8713-6ee4aaaaaabb",
        "cursor": {
          "ref": "d8583fe4-2bd3-42b9-9694-e1a50cbd0480",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ab39d9e7-ee4a-41a9-8914-bbaa18a1e973"
        },
        "item": {
          "id": "8de494a4-1092-4e9c-8713-6ee4aaaaaabb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b5528284-eea3-4e0f-9422-042f09490a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01938ae2-1edc-40eb-8ca9-8b66881c62d8",
        "cursor": {
          "ref": "9d5ae8aa-356b-473f-af3a-bcfc55a5642e",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7ef8fb7e-35ea-4509-8af2-ad5c5554f466"
        },
        "item": {
          "id": "01938ae2-1edc-40eb-8ca9-8b66881c62d8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "90ce368a-f9e8-49d6-b61f-6f9d29f0999f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790f320c-b1c4-4b18-b4e5-e0a65d5d0a42",
        "cursor": {
          "ref": "c917784e-4af5-4a11-9c67-276b0611ed4f",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5c497da3-781a-4161-a29f-5d72f825dfaf"
        },
        "item": {
          "id": "790f320c-b1c4-4b18-b4e5-e0a65d5d0a42",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "061df1ba-6e66-491d-8584-56ee994ae4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc91a31-ca2a-40ed-821b-bb114db1cdcb",
        "cursor": {
          "ref": "e6734ba4-5f9b-4b9c-a11f-9e8de74f8a6a",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "74350094-2598-4645-9d81-2be1748f4a89"
        },
        "item": {
          "id": "8cc91a31-ca2a-40ed-821b-bb114db1cdcb",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3eddc622-1838-4368-bff7-49c36ce52aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af9ab95-30fd-40f9-a64e-b7311d1e33a4",
        "cursor": {
          "ref": "2df81119-502f-4048-99b6-4633782dadaf",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e48cc9a7-da38-4bb6-8037-307e501883c3"
        },
        "item": {
          "id": "7af9ab95-30fd-40f9-a64e-b7311d1e33a4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a92c8673-6472-46e1-b97e-d4f2a101a71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6a9946-8d9d-4358-904f-aaf34ca36a62",
        "cursor": {
          "ref": "8a10fb62-41e0-43b0-853a-15f1dc491d07",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0a2c8231-5d18-4531-ba48-db9fa4a6ed13"
        },
        "item": {
          "id": "ba6a9946-8d9d-4358-904f-aaf34ca36a62",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "93ac18ad-e1fa-4b6c-b53e-9b3f3f90a077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5fff7e-462f-489c-a3ad-436ed9aa229c",
        "cursor": {
          "ref": "0dbfb767-34bc-45cc-ae39-a6f0f835b75d",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "eb77af72-fda8-43d2-ab7b-c5dfc179fe23"
        },
        "item": {
          "id": "9e5fff7e-462f-489c-a3ad-436ed9aa229c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ad0a125a-0da0-4be9-b169-16915c454608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701c844f-c326-4dd3-b279-70fb787de625",
        "cursor": {
          "ref": "5818f197-b792-48f5-b56a-44e40d206430",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "95d8df10-3987-4c72-96b5-9431cb178deb"
        },
        "item": {
          "id": "701c844f-c326-4dd3-b279-70fb787de625",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "13e80be2-20d7-41aa-8a10-60640cabe1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3104c854-4c4f-48f6-8cc0-e5e21d042a35",
        "cursor": {
          "ref": "0705d5a1-72c3-4bce-836a-9c3e6d1d6ca4",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b0771ad4-a741-490c-b500-d23547f37e41"
        },
        "item": {
          "id": "3104c854-4c4f-48f6-8cc0-e5e21d042a35",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7db992ca-8362-4f59-8bb3-21b154a25a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780ea63e-db17-4849-a855-e857eaeab01e",
        "cursor": {
          "ref": "d2108010-b8ff-4b09-9cc6-02780142f2fd",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2da5a028-0ce4-4933-9222-3f05277ee711"
        },
        "item": {
          "id": "780ea63e-db17-4849-a855-e857eaeab01e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e27714d4-9776-44c2-b98a-615fe22e8c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79dc0d7-9ee4-45b8-9458-c8efd077e82c",
        "cursor": {
          "ref": "6f5c968e-2e44-4bcf-866b-a7c9dbfa4f23",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3e5b3139-a57c-475c-be7a-135ff60ca029"
        },
        "item": {
          "id": "e79dc0d7-9ee4-45b8-9458-c8efd077e82c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "01640352-40f6-4c0f-9034-5ab21454e4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c55b1a-3012-428c-a28b-fccaafa9afaa",
        "cursor": {
          "ref": "6b4daad3-4c2d-460a-b44a-9e5686b56881",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "095ed0d7-a154-4c13-a697-a72cb20e0a87"
        },
        "item": {
          "id": "b1c55b1a-3012-428c-a28b-fccaafa9afaa",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2b67820a-bc04-4461-a25a-6321c1a874b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceeaa863-c721-406b-963d-1f9998f847e8",
        "cursor": {
          "ref": "ba593fb5-8469-48df-9d4b-3befeb6cd037",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b34e9a18-3f61-4525-98ab-71c84fa1faf3"
        },
        "item": {
          "id": "ceeaa863-c721-406b-963d-1f9998f847e8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ef489c53-b82c-42ee-9470-805789672bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53920b94-ac0e-4911-9da6-c05cbb902b06",
        "cursor": {
          "ref": "aea5b568-3b10-4d9a-ae45-8fb7a216c153",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "571577bc-c0b8-4492-9ee4-107ae9555a36"
        },
        "item": {
          "id": "53920b94-ac0e-4911-9da6-c05cbb902b06",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "230e970b-3594-48a4-a695-18dfde8bfd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3528c2a6-09c2-427f-a708-618a47a24a79",
        "cursor": {
          "ref": "7acdbbd9-ffd0-48aa-a8af-45d659ebbce1",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "967e6e5f-d730-4255-926d-5939b492590f"
        },
        "item": {
          "id": "3528c2a6-09c2-427f-a708-618a47a24a79",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c20bc5e3-8f52-4289-9816-9ee83b8161ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd51ebb1-1899-41e7-9375-e153d1335216",
        "cursor": {
          "ref": "dd82e754-e268-4dea-9c24-bea796d94ef2",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ad2dbea3-5402-4966-a5e0-8e2c6f4a14fb"
        },
        "item": {
          "id": "fd51ebb1-1899-41e7-9375-e153d1335216",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "dc40be07-ec55-4033-8bcc-8f41050dae12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbb0672-aa59-4e98-a6ca-dd7a32f5a4d3",
        "cursor": {
          "ref": "54a564a0-6754-455b-b078-72c6fba8c756",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "61945b92-7ed8-4412-98ff-23d8272ae4ae"
        },
        "item": {
          "id": "3fbb0672-aa59-4e98-a6ca-dd7a32f5a4d3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8fb3146b-d5a5-4f1f-85bf-f3a6032272fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906df18b-f450-4870-af73-64e40d3d930f",
        "cursor": {
          "ref": "ef0682eb-c751-418a-9964-5a2ef9acf875",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "67f2acd9-90dc-40fb-aeac-8ce44033f20f"
        },
        "item": {
          "id": "906df18b-f450-4870-af73-64e40d3d930f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "950e64fe-ac86-4b8f-ab08-7259715c61b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bd210c-9c4c-4a5d-bdfb-312bf62f5522",
        "cursor": {
          "ref": "89178812-b4f8-4fba-a34d-4fac1d3bdd55",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2da54847-1e54-423a-925c-05d155da4427"
        },
        "item": {
          "id": "96bd210c-9c4c-4a5d-bdfb-312bf62f5522",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9ea117cd-58f4-495b-89d0-3ebf0bf7a3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24947494-49b8-4bb5-8ab2-824b3c43fe9e",
        "cursor": {
          "ref": "c00f5ee0-a45d-488a-bc5e-2963662948dd",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "46a48785-457c-4d5a-b716-0a8a7a1c9c23"
        },
        "item": {
          "id": "24947494-49b8-4bb5-8ab2-824b3c43fe9e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "11b88751-e00d-4cc7-bf93-814096e51547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf81615-02bf-490a-bdd3-dac92a1d87c0",
        "cursor": {
          "ref": "0fd22703-b5bc-4d61-8fe3-d5634832105a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "09452a9c-72a6-4fbf-a93d-3d1e18411a9b"
        },
        "item": {
          "id": "0cf81615-02bf-490a-bdd3-dac92a1d87c0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d18d4023-5373-4bb0-9b4a-ec46f5889654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41226ee8-c347-4f10-925d-9acaf26cf6fe",
        "cursor": {
          "ref": "636becde-956d-4997-80c1-88918a44458e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d5eb79bb-125e-443e-b291-e1317de55cc6"
        },
        "item": {
          "id": "41226ee8-c347-4f10-925d-9acaf26cf6fe",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3465a55f-a4e6-499d-8f01-9909f89abc2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da604a0d-0efb-4745-b69b-b2e0a54f4950",
        "cursor": {
          "ref": "57cd1a6b-c3ff-4098-bf04-bf5853088d9e",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "202b75f9-cb94-4ce2-93a2-c106bd0d6158"
        },
        "item": {
          "id": "da604a0d-0efb-4745-b69b-b2e0a54f4950",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "50713718-fd90-4cca-b5d0-aca4191aad59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295baef1-1ff9-42ea-89ce-c29f01abc5d4",
        "cursor": {
          "ref": "f8575b98-0941-418f-861f-a97382453100",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3144c503-5b50-45b6-83e0-21ff0192ddaa"
        },
        "item": {
          "id": "295baef1-1ff9-42ea-89ce-c29f01abc5d4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6ea0dcbf-1a48-433a-94aa-2224d949173f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f584eef7-3bcd-478b-a2a9-c5471fd3ef46",
        "cursor": {
          "ref": "2995ac0c-deca-4e9d-853a-e1ffda4f7ec6",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a95c857f-1636-471d-8fea-63442d8104f9"
        },
        "item": {
          "id": "f584eef7-3bcd-478b-a2a9-c5471fd3ef46",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f7857f87-5e33-4d41-b7ff-c9e3341e37fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2423c025-932d-4f41-b46a-b56a381ec5af",
        "cursor": {
          "ref": "726cbecd-0ec0-4cfd-9700-1044508d4e4e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "dce9a548-b86e-4319-b22d-18af7b892ed1"
        },
        "item": {
          "id": "2423c025-932d-4f41-b46a-b56a381ec5af",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3f4a490f-cc66-4520-9b1f-670bf9df7839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa48f45-f3c7-4a89-9690-af61f9fcf25d",
        "cursor": {
          "ref": "1eec7989-1e8f-4898-b24b-a26b3e06771e",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "10ba56b6-a6ce-4919-b512-764a847ab49b"
        },
        "item": {
          "id": "ffa48f45-f3c7-4a89-9690-af61f9fcf25d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b2984681-ca23-4d3d-91a6-bb186f161dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb97611-1844-4b1f-b99a-d7ea5ee03923",
        "cursor": {
          "ref": "479ee4b7-d361-4d90-8954-fb33d6223bf3",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6a1593a4-d516-4f14-918d-d9c30626b0e5"
        },
        "item": {
          "id": "5eb97611-1844-4b1f-b99a-d7ea5ee03923",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e8c7e2d6-5dd3-40c0-8a60-8487d078b51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3876b48a-1f55-403c-8e95-5356d3244174",
        "cursor": {
          "ref": "86461b4a-924b-4412-a9ca-e672274cae37",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e7ac5707-d018-49b6-af64-7b39f003ec90"
        },
        "item": {
          "id": "3876b48a-1f55-403c-8e95-5356d3244174",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "78d2d804-3d08-48be-af3b-2c94d974d17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5c84d7-8ab7-49dc-9246-b55f1186df46",
        "cursor": {
          "ref": "41e23cfe-e5ca-402d-8fc1-1ef92d466230",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "546d7ca1-531f-49dc-907a-8388faab9d0e"
        },
        "item": {
          "id": "6f5c84d7-8ab7-49dc-9246-b55f1186df46",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a06e92a1-59c5-42d9-94c5-99ac8a1e4539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc2160a-0c49-406d-b0d7-c761d8e0957d",
        "cursor": {
          "ref": "c396b2e7-37cb-439a-badd-2545b8d5b951",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "db1064fe-7bb6-46d3-abb0-481365b80481"
        },
        "item": {
          "id": "cfc2160a-0c49-406d-b0d7-c761d8e0957d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cbed27a7-ab1a-4282-bd70-8d795cd0b713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ff8006-b090-4c49-81f9-0038b2d2955e",
        "cursor": {
          "ref": "449838f0-6dc1-424b-80a5-11db2535af25",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fce0e4f8-3831-4694-b057-14993d16285d"
        },
        "item": {
          "id": "23ff8006-b090-4c49-81f9-0038b2d2955e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "33e607a2-b749-4b0f-9140-e09367120776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e808ece5-b01d-4fb7-a80d-e8f0f3e2aeb5",
        "cursor": {
          "ref": "a4aad0d0-0d34-4690-8265-599dfcd08617",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ad56c1e8-ef59-4d2a-b662-e2d81aa362ee"
        },
        "item": {
          "id": "e808ece5-b01d-4fb7-a80d-e8f0f3e2aeb5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8fc370ee-2d19-4f0b-a5a3-825c6475ca87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ef0e13-ab28-4d7b-9970-ecff2db52a97",
        "cursor": {
          "ref": "a73766c8-e189-4517-8da1-e02a7dda378e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "512346d6-4d64-483f-866b-f9f8b2dbe434"
        },
        "item": {
          "id": "53ef0e13-ab28-4d7b-9970-ecff2db52a97",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3cbd4480-0131-43ba-9702-14bb31f20b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c505e4-5f7e-4b84-8ca1-9837c525efbf",
        "cursor": {
          "ref": "36fbf0ac-334b-42b2-b285-423146485d0c",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "736031fe-bf81-4e84-b19f-3322529ce2db"
        },
        "item": {
          "id": "58c505e4-5f7e-4b84-8ca1-9837c525efbf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2405c182-b9de-4e03-91db-3a054ba80044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1065825a-60f2-442a-a955-878ccdd186e1",
        "cursor": {
          "ref": "a2dd0c80-88d3-4fe6-a2d6-b70ee06c4f82",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "98edbf71-f681-4aa1-ab85-56ec59ab157a"
        },
        "item": {
          "id": "1065825a-60f2-442a-a955-878ccdd186e1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "791f2724-1e15-4662-b90c-d76d41c2470a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169f0e0b-2369-4199-bd7d-9779d91dafe9",
        "cursor": {
          "ref": "9c3c0b20-2e01-4664-b1b4-909a98a9411a",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4db37858-9ab3-4379-a266-2d16184f71d6"
        },
        "item": {
          "id": "169f0e0b-2369-4199-bd7d-9779d91dafe9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3d8e19a7-bddf-4597-8c80-4639cd3004ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ab8da3-82ce-41d5-b0cc-5cda4fb6c0f5",
        "cursor": {
          "ref": "1e9f4029-7a45-41c4-8252-6d76c8ccf3ca",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "aedde9ad-e9a6-4536-b1ab-4ee5e7564552"
        },
        "item": {
          "id": "62ab8da3-82ce-41d5-b0cc-5cda4fb6c0f5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ec0680dd-992d-4d4c-a5b1-e0bacf81bdde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc43d470-275f-4a96-8f64-62aa28a56ae7",
        "cursor": {
          "ref": "3e413270-b23f-421e-b1f4-82d82ee45e8a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5e13b90e-c309-458a-8406-0342865faa43"
        },
        "item": {
          "id": "bc43d470-275f-4a96-8f64-62aa28a56ae7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f7ca52ce-b019-4857-aec2-08c7b014f2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf78ad4-16a7-40ae-848f-7c5518de2dc8",
        "cursor": {
          "ref": "b77d695f-8a5f-4ad7-a2c7-ed1172080775",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "37248fee-1502-4c3d-a4e3-655d9f00706d"
        },
        "item": {
          "id": "ddf78ad4-16a7-40ae-848f-7c5518de2dc8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "53a48709-9e2a-4bec-a061-ca9999e5d89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8c1d4f-910d-4aef-b740-bb23668c31c3",
        "cursor": {
          "ref": "5123c7f4-f5c8-4735-9514-aba8c4e7520d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "93f65438-47bd-450a-b30b-6dd864fb4517"
        },
        "item": {
          "id": "6c8c1d4f-910d-4aef-b740-bb23668c31c3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a6ecfbd2-508c-489f-9dc5-52c451007102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ab542d-c7d1-4814-85f4-d7daae3c7333",
        "cursor": {
          "ref": "5dffc2cc-208b-4da7-aa6e-b511e2d1b92a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "be9f5555-9e31-4e56-b6bc-ccc9c1ac9893"
        },
        "item": {
          "id": "a7ab542d-c7d1-4814-85f4-d7daae3c7333",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e32a3eec-c8a7-496c-a3c6-c5e117867151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7745b0-fddf-4c63-8c1c-e4c80084e84a",
        "cursor": {
          "ref": "c20c977f-4666-4b7a-ba4d-9e0b87042c2b",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b64c187d-a970-4a33-8d84-4e44ee9d3a7e"
        },
        "item": {
          "id": "ac7745b0-fddf-4c63-8c1c-e4c80084e84a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6272e058-967d-48f8-89e0-ccac2fe6fc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86101b5d-3134-40d8-93cd-ee9fb6e2faf7",
        "cursor": {
          "ref": "d6fec3ad-3c48-4b23-8dbf-02afee448618",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "dd0d3c47-98f9-4906-901b-902b9c9ea8ab"
        },
        "item": {
          "id": "86101b5d-3134-40d8-93cd-ee9fb6e2faf7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f0bd5ef5-2a55-46fb-a3b7-d84b99512533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2648fa6c-6be6-4ecc-99bc-7467da1226ab",
        "cursor": {
          "ref": "674b9fad-3006-452d-9ceb-70546a06a8de",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a2d6306d-995c-4712-9665-411bcb33504f"
        },
        "item": {
          "id": "2648fa6c-6be6-4ecc-99bc-7467da1226ab",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b0b68698-8973-4702-9f6c-c029a84bb9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e3e5c3-cb6c-4fa7-bcbc-c95d370717ee",
        "cursor": {
          "ref": "3091b329-a5d4-40f5-91f9-8fbd706ed621",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "89d711d8-8812-4997-a678-83b4bdb7a704"
        },
        "item": {
          "id": "a0e3e5c3-cb6c-4fa7-bcbc-c95d370717ee",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e78bc6b1-8f96-4770-969d-28d90302c667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f203ba-9b5f-41b8-b941-28ac096f66a3",
        "cursor": {
          "ref": "257d2590-6858-475f-85e0-66bd7355272a",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d4232077-3fad-4cea-8dfa-0e65a20b3017"
        },
        "item": {
          "id": "33f203ba-9b5f-41b8-b941-28ac096f66a3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c732d94b-12f9-4366-a3e8-3ee07654bb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0827966-fee8-4819-82ed-92fd541dd05f",
        "cursor": {
          "ref": "3bfbb605-5e00-46c8-8d99-c93f9a83d40d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ea9ec323-a437-451d-9cd3-6a7b5c2af44e"
        },
        "item": {
          "id": "c0827966-fee8-4819-82ed-92fd541dd05f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "edea8568-ff62-4eb2-901e-91e70f251d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e38aff-23e6-4889-90c3-8870b1fa0a79",
        "cursor": {
          "ref": "68596c92-d1e6-49e7-90e2-b7114dff7b2a",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0662fa77-32e7-44c1-a271-f47dfe33d585"
        },
        "item": {
          "id": "14e38aff-23e6-4889-90c3-8870b1fa0a79",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a27b7374-7d00-49ce-bc69-1183c4134197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72509aa3-bbf3-42db-8f9f-523e2a06e359",
        "cursor": {
          "ref": "6460187b-4d33-4124-bb09-d6cd14722ce2",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "74b98aee-3c36-4a49-92f2-ebbbf9c2d865"
        },
        "item": {
          "id": "72509aa3-bbf3-42db-8f9f-523e2a06e359",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "db0fb69d-94e9-47ef-9f7f-6d7c3b2e71f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5038e06-3221-420c-b7c5-0f2f048bf24c",
        "cursor": {
          "ref": "2a5ca98e-b0f3-4736-90df-be0bb7821c75",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b272beb4-f10f-4105-9bdc-8e5d44973815"
        },
        "item": {
          "id": "e5038e06-3221-420c-b7c5-0f2f048bf24c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4bdf21b1-bec5-494f-b7de-abd690aa6a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b313aefe-1e4c-4022-9c0a-cdfa6ba8d9f3",
        "cursor": {
          "ref": "976486f8-8a93-4da7-8247-f11e1c24de91",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1df6d8d9-af3c-4746-a7e6-67355d0e5e77"
        },
        "item": {
          "id": "b313aefe-1e4c-4022-9c0a-cdfa6ba8d9f3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "baab48b2-5c60-40e0-855a-a8a17925c50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3781cfb2-db8f-4eb0-bc2e-6e82a1901b1c",
        "cursor": {
          "ref": "141ef156-064b-416c-a1f2-2e431c5fd339",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d689b59f-03f3-4562-a620-02b703627c9d"
        },
        "item": {
          "id": "3781cfb2-db8f-4eb0-bc2e-6e82a1901b1c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7866432f-d165-4be6-a87f-5394632eeb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7cf88c-98bd-4606-8521-30d4a3ba89e4",
        "cursor": {
          "ref": "bc5a41f5-a78c-48c3-98b4-99cca4da4ae7",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "24769a84-87d7-4503-a6c6-44c6be0c438e"
        },
        "item": {
          "id": "0a7cf88c-98bd-4606-8521-30d4a3ba89e4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2fffe7f1-56e1-4f60-bbf4-e5282009bf13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09d9975-dcff-4c51-ac88-7fc1e4f741c3",
        "cursor": {
          "ref": "45eabeb2-bb5e-451c-a65f-31086a067d7f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b6ec543a-fe6e-4590-85af-ebca76da8ac9"
        },
        "item": {
          "id": "d09d9975-dcff-4c51-ac88-7fc1e4f741c3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bc171169-a179-42a9-ad1e-099155e8a92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c32a07-8a44-47e5-8f94-9f2e9b1662be",
        "cursor": {
          "ref": "35d59f3c-ef47-40b9-aa15-ed799dc19268",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3e04e7f2-36f8-4264-9534-688606a8a2fd"
        },
        "item": {
          "id": "92c32a07-8a44-47e5-8f94-9f2e9b1662be",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "29913eaf-5c06-473c-ab83-846f739a9882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687f4125-74a7-4d61-8cde-9376ecba71ab",
        "cursor": {
          "ref": "451242d0-c84f-429d-9717-d1c78071833a",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "00a01bdc-f9ab-4dad-b0a8-1fa96a44dd31"
        },
        "item": {
          "id": "687f4125-74a7-4d61-8cde-9376ecba71ab",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "73df0a2f-e4f4-4964-a2ca-27e2edf4252d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e3078b-27ac-4524-886d-9c7475f99448",
        "cursor": {
          "ref": "e06622ba-0786-463f-bd68-e854b26aecb4",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a2d01e2e-eb33-45ec-a0e6-72da99a4ba86"
        },
        "item": {
          "id": "81e3078b-27ac-4524-886d-9c7475f99448",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6853b351-3226-4552-a167-4e771c3f1423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3219892f-8035-4520-86c5-41bf5a4abbee",
        "cursor": {
          "ref": "a2f179ae-a525-4c49-87ac-eb11249ab81d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1425702a-5afb-4220-97c4-a7c7f7f8c867"
        },
        "item": {
          "id": "3219892f-8035-4520-86c5-41bf5a4abbee",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e358f393-f19f-4a6c-920f-62c1376ebd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840c1740-ffbd-4cbb-8a79-e1b9a03b2001",
        "cursor": {
          "ref": "8e99cfa5-dbba-4d2e-b33a-e55abef3f583",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "cf5a0550-85f2-48d1-aea5-2d00b32cee62"
        },
        "item": {
          "id": "840c1740-ffbd-4cbb-8a79-e1b9a03b2001",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0f4bf3af-1f83-4c38-8972-cc21464f1e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b0c12c-1a79-44e7-8a22-31865933b042",
        "cursor": {
          "ref": "e379cd92-7e8d-4879-8f1c-5ae8951f9e0c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e86a9b1f-48a8-46b9-bb82-b281627a7398"
        },
        "item": {
          "id": "f1b0c12c-1a79-44e7-8a22-31865933b042",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fce075fd-e8a0-41d5-bcd2-75add532f900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7beebbe2-7855-4679-b41f-12dd55c5b5ad",
        "cursor": {
          "ref": "96bb1a07-6a68-4f46-8419-e12d7dfd91d3",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a937cafd-34c7-4631-a8b5-ec5e4c5dbc7a"
        },
        "item": {
          "id": "7beebbe2-7855-4679-b41f-12dd55c5b5ad",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "33d7c98f-e4cf-466e-9cd1-5349b483d625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1376a407-b875-48ce-905b-d337fd32082f",
        "cursor": {
          "ref": "699f5b35-40ef-49e8-8e05-d042165be0c7",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3bc10f15-e0c9-433e-af76-e7ab576c85af"
        },
        "item": {
          "id": "1376a407-b875-48ce-905b-d337fd32082f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7acde744-33f1-4bdf-aaaa-04ae2da450c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826c98bd-b171-4fe4-9815-575876dc2b60",
        "cursor": {
          "ref": "9d11fd39-9607-43be-ab17-1d140414097d",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f5134f98-21b8-47f2-bb2f-a77b408fa4cc"
        },
        "item": {
          "id": "826c98bd-b171-4fe4-9815-575876dc2b60",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cfac2969-9668-43ed-be15-b6a1b6ac0e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23a037c-dbb0-452e-b46c-782c4a8390b9",
        "cursor": {
          "ref": "61ca6366-3520-4db7-84bc-3583bc51f1fb",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8f413be6-6b87-46de-8b06-b70966c8bef6"
        },
        "item": {
          "id": "d23a037c-dbb0-452e-b46c-782c4a8390b9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a58978fb-4470-41f5-96c1-f050b934dbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825a2428-d496-4b1b-8ca6-9d86a9fe6c4f",
        "cursor": {
          "ref": "6bf328fc-4ccc-4f4f-96c1-2313295ad93c",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8de7d3fe-52a9-46f4-8c39-d53014d4e55f"
        },
        "item": {
          "id": "825a2428-d496-4b1b-8ca6-9d86a9fe6c4f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0d08be92-1ca3-4280-ad31-2d46763d9aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4676f6f-6e23-427d-8bc8-1024a06c5009",
        "cursor": {
          "ref": "c1b30844-ca22-4c6e-a3ed-e72cb9912dfb",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e82e2e6b-afd6-43f0-a53c-174689566281"
        },
        "item": {
          "id": "a4676f6f-6e23-427d-8bc8-1024a06c5009",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8ef8e8a4-b6ca-4b7d-b7d6-3724c41e8850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879604b2-aa5a-42c4-8896-af1f9211aad0",
        "cursor": {
          "ref": "006125b0-6cc0-40d6-9424-6f44c14f2462",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fed22f3e-64ee-4f9a-bf1e-51ef518f7411"
        },
        "item": {
          "id": "879604b2-aa5a-42c4-8896-af1f9211aad0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "03121d3e-684b-4eab-947d-2124a818a9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d3137c-6d6e-4762-9c4b-a6c2142e87fe",
        "cursor": {
          "ref": "2a239622-eee3-492c-b03c-b70226f9c4a9",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "97468d16-972f-4dac-becb-5385a20a3b49"
        },
        "item": {
          "id": "a2d3137c-6d6e-4762-9c4b-a6c2142e87fe",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "91902585-d008-4a9e-9196-1fd952e03e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbd0658-3ea8-430d-a842-aa1271cd4be7",
        "cursor": {
          "ref": "cfab140d-043e-415f-8f39-2554abb31894",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cee924b3-d703-490a-aee3-7d42c09c9cd4"
        },
        "item": {
          "id": "3bbd0658-3ea8-430d-a842-aa1271cd4be7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ffae135d-2665-432f-8f19-1f5774cf5bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db53fff8-657f-4405-95cd-fddd516c9f1f",
        "cursor": {
          "ref": "36260ef3-87ae-44eb-bb23-cbef23b3d782",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2cf48cf2-6bd8-43e7-92b4-bd53aa4d6f8e"
        },
        "item": {
          "id": "db53fff8-657f-4405-95cd-fddd516c9f1f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "40992eaf-d088-4c9c-87b0-41623ec0723f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c8bb48-99e5-4d5d-af38-3c0f403a6954",
        "cursor": {
          "ref": "9c2b8d47-ba4a-43aa-b920-a0356d6d3fc4",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e01e3499-5d3d-498e-a5a7-ae0d48ea426f"
        },
        "item": {
          "id": "20c8bb48-99e5-4d5d-af38-3c0f403a6954",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3455f14f-2993-49f8-81c3-127781980b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2469ce7-3bcc-4a8e-9b30-f7eb22ac4c69",
        "cursor": {
          "ref": "55178845-1348-4154-a806-e4bda49029e3",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cb1f8438-3aa6-4daf-8b5f-2dd7879005d0"
        },
        "item": {
          "id": "a2469ce7-3bcc-4a8e-9b30-f7eb22ac4c69",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "258c14c0-bde3-4765-aa7b-1d1e8d0196ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8f961c-16b7-40a5-89c7-acea4e0931a8",
        "cursor": {
          "ref": "4759b4fa-54e2-4a3d-bd94-e369df8c9359",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "126fa534-ea57-4cb6-90d8-0f7c6d808897"
        },
        "item": {
          "id": "be8f961c-16b7-40a5-89c7-acea4e0931a8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "84cdf324-1e37-482f-af94-0b9757969d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a3a82f-3d5e-46f7-9d0b-353e5b0d4385",
        "cursor": {
          "ref": "1fb32842-a797-4e52-8e83-17a35089391e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fdfb785c-5c73-484d-864b-2f72abd4fe9c"
        },
        "item": {
          "id": "84a3a82f-3d5e-46f7-9d0b-353e5b0d4385",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "52ffcfbf-54ab-4816-b52c-af22409589d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada9b92e-a765-49cd-8f3d-1e928a7afa76",
        "cursor": {
          "ref": "04737575-1577-4304-88cb-406fdc6ca8ff",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4d080565-6379-4ee8-8ca7-2357f87ba950"
        },
        "item": {
          "id": "ada9b92e-a765-49cd-8f3d-1e928a7afa76",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e750bdbe-098f-4bb0-a535-bb43e175758a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553a2400-10f3-405c-b2a7-0e03c7564dfc",
        "cursor": {
          "ref": "9d616e6b-e939-42c8-b894-950d887e91e2",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a3df2c08-ae87-4f7a-a079-a90d0363699c"
        },
        "item": {
          "id": "553a2400-10f3-405c-b2a7-0e03c7564dfc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1ae9ef96-f4f5-4cb7-9fb9-fdb455c8e92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb96e205-c1fa-440a-8276-2ebb82331823",
        "cursor": {
          "ref": "c3cf05c3-83e2-4224-8050-cb4d08bf4242",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b48c3660-ab30-4105-8a4a-02f7363f9699"
        },
        "item": {
          "id": "bb96e205-c1fa-440a-8276-2ebb82331823",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c565af84-b8cc-4560-92b4-e99176a29dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fd1863-8ab9-43f9-b389-b189e7d3c70b",
        "cursor": {
          "ref": "26fbbccc-a594-46a6-865c-ffd11096b1b9",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f7329386-6d9d-49a6-b1d7-6918a82acd98"
        },
        "item": {
          "id": "34fd1863-8ab9-43f9-b389-b189e7d3c70b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4f47dc57-8220-4ce5-b30d-86f375fa34c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf8e9ab-2d21-4ec4-8d45-e6612426bc42",
        "cursor": {
          "ref": "18099ae3-509f-41aa-bb77-fad071d20088",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0822f058-90c3-4812-b1e5-62cd63b53345"
        },
        "item": {
          "id": "9bf8e9ab-2d21-4ec4-8d45-e6612426bc42",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "630da397-5250-41c9-9a8a-2b2a0dd4088b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a18e5d2-c51f-4655-9e6e-ba5a695a1fee",
        "cursor": {
          "ref": "d3ac8888-c734-45e8-a5ef-8b3292e6d4e5",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6034fb13-7c15-4a5e-9f0e-51f08b5a3f77"
        },
        "item": {
          "id": "5a18e5d2-c51f-4655-9e6e-ba5a695a1fee",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "50676721-8599-465b-8398-d823477c9190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25657432-0648-4166-9461-44fcfe3dbae1",
        "cursor": {
          "ref": "30c11956-4b15-4bb2-87c8-b285d878d25f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "55bf5294-c341-4c8b-8ddc-5cd68608873c"
        },
        "item": {
          "id": "25657432-0648-4166-9461-44fcfe3dbae1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0dff744c-3b7b-40ae-ad96-cfdd3fa3f9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ab2209-c4b5-4467-a10c-7ed73f55c811",
        "cursor": {
          "ref": "5cd832fa-9f68-4649-b4e0-22bd7e255ce2",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "63be732a-9e35-4c28-91c0-34ec06f9aaf8"
        },
        "item": {
          "id": "13ab2209-c4b5-4467-a10c-7ed73f55c811",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "46ad87d6-042b-44a1-9fb0-e23a7f20d84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c905942a-ea5d-442b-912e-ab590908d9d5",
        "cursor": {
          "ref": "d83d1ca9-51f5-4a72-9d6d-f4e0dc24379c",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d27eff71-8f12-4375-8393-27cd5ca5437e"
        },
        "item": {
          "id": "c905942a-ea5d-442b-912e-ab590908d9d5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fee19fed-b1b2-4a29-b2f2-d9b4b397e3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd1d61e-aa3d-45ba-8048-b5fc97c4671a",
        "cursor": {
          "ref": "bc679aa3-dfd1-4860-8c1d-a825a83832b3",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "405a9424-caa5-47ca-96f0-f2681ae0f567"
        },
        "item": {
          "id": "dfd1d61e-aa3d-45ba-8048-b5fc97c4671a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ab867c0d-5570-4fdf-8e7d-cbe343ae5729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f32665-fdf7-4b0b-9849-70a28b0debcb",
        "cursor": {
          "ref": "f58a8e5c-7394-4a68-8306-e450bddbf525",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4dd36636-b0ed-4dd9-b3e9-659565de3c56"
        },
        "item": {
          "id": "e4f32665-fdf7-4b0b-9849-70a28b0debcb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "db39b0fa-a93b-4056-8fb0-dbb4369e638c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d672ea22-7356-4ce7-9e31-60afe6b63193",
        "cursor": {
          "ref": "ce752d56-04fd-46f1-a5e5-97e522e373c1",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "28ba63e6-95bc-4578-a6fb-3e1c084bd31e"
        },
        "item": {
          "id": "d672ea22-7356-4ce7-9e31-60afe6b63193",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0a28c826-5fb8-46db-9afe-8b0a8e673a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5a81be-cfec-4a80-9952-4ffebc8431f6",
        "cursor": {
          "ref": "81425e12-b531-437a-9b0e-c9b22ae98a38",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f03acf60-0f14-4ecf-88a4-ff21b28db6c2"
        },
        "item": {
          "id": "7a5a81be-cfec-4a80-9952-4ffebc8431f6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d451a0a8-e4c4-45cd-ab32-a6980c4bc1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f3b3b7-51ff-4ed5-a1dc-e051a418ca57",
        "cursor": {
          "ref": "bc51bc48-60da-489e-ad9f-b8ce531dc27e",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "52b0ec67-3eb5-46b4-8c59-429a2ca10bc9"
        },
        "item": {
          "id": "c4f3b3b7-51ff-4ed5-a1dc-e051a418ca57",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "741e870b-d01a-478e-a44c-1f82b9b319df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba03044-c2d4-4a98-bd09-1adca142b931",
        "cursor": {
          "ref": "998b0ace-5b37-45a3-9f48-d6ba2028ca19",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f3435e23-1394-4e37-8ccc-33e6acf3e6ea"
        },
        "item": {
          "id": "cba03044-c2d4-4a98-bd09-1adca142b931",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "644a5fb5-99a0-4f9d-8ccb-bd0d7bf0aba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1c399c-46f0-4876-9278-f251e4d624c6",
        "cursor": {
          "ref": "a00d1967-400e-496e-b84e-7e300fcdc48f",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cf98e6d4-4bbb-4806-8ddf-7125a6b7cddf"
        },
        "item": {
          "id": "9e1c399c-46f0-4876-9278-f251e4d624c6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b0ecc004-1c82-4e61-b19d-ae70e31318cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b927da0f-f06c-4174-994d-6d6b83ac3bc4",
        "cursor": {
          "ref": "8de5df3e-7eee-438d-88d7-33979b294afd",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f0627245-4984-4f92-b859-07398ffb68b4"
        },
        "item": {
          "id": "b927da0f-f06c-4174-994d-6d6b83ac3bc4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3f6d3a6f-7954-438f-ba66-7186946e9580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7d76b7-64f9-4b32-b726-77880b96b066",
        "cursor": {
          "ref": "5393d64e-9907-4959-b14f-8ab4ab2d96ea",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "55a9dac2-a0c6-460c-9346-e11ddb050782"
        },
        "item": {
          "id": "0e7d76b7-64f9-4b32-b726-77880b96b066",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5aad0cf2-a052-43c6-94e5-f0abdfd881e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "700ecd45-74ab-4a8c-bc08-f1bf121dbff4",
        "cursor": {
          "ref": "e9d2e5cf-14b9-4e76-93e9-3f107ea8a3ee",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f0aa7231-ee19-40d9-b5df-cd7ae2192751"
        },
        "item": {
          "id": "700ecd45-74ab-4a8c-bc08-f1bf121dbff4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6f9c1e76-ba04-401a-af59-cfb1390a0d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "c70b78a1-c9b5-4a34-bc86-6070dfad14ca",
        "cursor": {
          "ref": "24a82e0d-093d-4659-ae9c-a351fe4022ee",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cd81a76e-368b-4b07-8546-f3613d5d9e0f"
        },
        "item": {
          "id": "c70b78a1-c9b5-4a34-bc86-6070dfad14ca",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "af57d64e-824e-4227-aad9-1f4de3e0123e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e2358f71-c58e-446e-ad01-8c9bf69be247",
        "cursor": {
          "ref": "a58749b4-e651-40ed-a3c6-7d0aa95bd123",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "644af091-9373-4b82-b534-4627549892d0"
        },
        "item": {
          "id": "e2358f71-c58e-446e-ad01-8c9bf69be247",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ea3dd4fb-4b7d-4329-b630-c2b323acc775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "cd7ed237-4e77-4d8c-8643-62347d174fcc",
        "cursor": {
          "ref": "9744dc55-b853-43b8-9889-738fa4ee9fba",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2b799012-7d7e-4031-9ae5-ee6f357ed1d5"
        },
        "item": {
          "id": "cd7ed237-4e77-4d8c-8643-62347d174fcc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1813f55b-e510-4db7-bfbd-daa94d45069b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "0f55ae98-9bec-46c2-932c-7368d5593dc5",
        "cursor": {
          "ref": "9552d46f-33e4-45f1-bf16-a4ba0f7eab0d",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6ad1d407-426b-45a0-b9a9-7e430afee680"
        },
        "item": {
          "id": "0f55ae98-9bec-46c2-932c-7368d5593dc5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "788fe272-be3c-433b-9681-04c51559cb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e707f62c-c6d8-47ee-8e8d-3d7fb9b8ccfb",
        "cursor": {
          "ref": "99361e0c-e67f-43a5-a6d0-80793cdee7d4",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "da2391d0-088a-4f79-b968-1db0b168a814"
        },
        "item": {
          "id": "e707f62c-c6d8-47ee-8e8d-3d7fb9b8ccfb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "eaae2df4-7816-44cd-b54d-1f5d6eac6477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "935ef2e3-ca88-44b4-bc67-90d689a3b400",
        "cursor": {
          "ref": "f6357554-86fe-4728-988a-81c20d65a59d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0203a877-9e99-4345-ba48-63956a767100"
        },
        "item": {
          "id": "935ef2e3-ca88-44b4-bc67-90d689a3b400",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5ec46f48-5017-4942-b0d9-ef1b57634ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a06b473-b28d-4b3a-923d-b26ad363921a",
        "cursor": {
          "ref": "09d86456-72dc-4113-aca2-7c5fbd789366",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1a3e85cc-2b7c-4c61-996b-442c9f43aab5"
        },
        "item": {
          "id": "6a06b473-b28d-4b3a-923d-b26ad363921a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3b20078c-3266-4037-91eb-4a6e6136754a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4fd581-a1cd-401b-bdcf-0af205881efd",
        "cursor": {
          "ref": "824d97c7-75a3-45fc-ae25-de941f9fa05d",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e789d741-a4de-4bc2-9244-951e84fa413d"
        },
        "item": {
          "id": "7e4fd581-a1cd-401b-bdcf-0af205881efd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3294959e-fb01-4468-89a4-b78ce6e1393e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1923b7d1-613a-47d3-b686-a11eb952130e",
        "cursor": {
          "ref": "3c5e358f-b5bf-4751-8033-2d91a97fddab",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "de70273a-ae43-4158-ae44-9eadaa1e8d0f"
        },
        "item": {
          "id": "1923b7d1-613a-47d3-b686-a11eb952130e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1823dd68-32bf-4c85-8840-e75184935ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8ef2b1-122d-4bce-a436-edf525a7016a",
        "cursor": {
          "ref": "7fe03f39-a98a-4ad0-a2c2-1a9e2581b639",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b2b759f4-fe79-42f7-8467-30f67c0e0527"
        },
        "item": {
          "id": "6f8ef2b1-122d-4bce-a436-edf525a7016a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2a77d2d9-dbc4-40d9-b164-89899f429c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b27fee-a535-4ecc-80c7-6708f523ca5c",
        "cursor": {
          "ref": "c35184e5-c40e-4459-9d2a-e9dd5f37c2c9",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e282c3a0-b2c4-4034-8eda-4268ddef0801"
        },
        "item": {
          "id": "b9b27fee-a535-4ecc-80c7-6708f523ca5c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7d6da06a-bae7-4476-a5a4-3d75741c2d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca0de67-64b0-43b4-9a8a-5f2abf20ea25",
        "cursor": {
          "ref": "20317549-6c34-4d49-a667-ba4c63d7e31f",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1c55bb8b-0ce3-49a7-9373-4adbd73bfb35"
        },
        "item": {
          "id": "3ca0de67-64b0-43b4-9a8a-5f2abf20ea25",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "da6ef242-c769-4dc2-ac8d-fafad63be0fc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 10052,
          "responseSize": 109
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:115)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59003e69-a316-451f-b0a2-db8068ae792a",
        "cursor": {
          "ref": "a1da226d-b181-4861-8a4f-cc7bedb9b786",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a06d4092-4714-430a-b832-3eda882c2452"
        },
        "item": {
          "id": "59003e69-a316-451f-b0a2-db8068ae792a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "67474b12-4636-4cd3-8455-9fbb8e1a873d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60398330-b62c-4699-aa89-1981c3cc3dda",
        "cursor": {
          "ref": "d02b76a8-c18a-49e1-a31d-c8eebca43d08",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9afb1701-2062-47c7-9755-a5786fcd94c1"
        },
        "item": {
          "id": "60398330-b62c-4699-aa89-1981c3cc3dda",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0def40c8-fabc-4e7d-b5db-62071ef62c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e93f86f-abf5-47f6-9454-ddcfad5bf804",
        "cursor": {
          "ref": "71dfb6ac-aa01-40fe-94f9-7c3d738ecd67",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "72b5b9fc-87d3-4e42-aedd-cad3a6f12af3"
        },
        "item": {
          "id": "1e93f86f-abf5-47f6-9454-ddcfad5bf804",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5963f8f9-910b-492f-b9a6-c6c6d67eefb3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 10053,
          "responseSize": 109
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:118)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d80731f-f23b-4391-b883-86b070c0285d",
        "cursor": {
          "ref": "4f684c45-bfef-4683-acfe-33c9abde1080",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d79a5e2c-db8f-42ed-9b47-6587569ff00a"
        },
        "item": {
          "id": "7d80731f-f23b-4391-b883-86b070c0285d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "53f7edd5-c749-4f92-8b4f-3502ec6c4dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54304340-54aa-4200-9bc7-0f75eac7add5",
        "cursor": {
          "ref": "387e6a84-1552-41de-b7ed-0092b6d43e5e",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5a85febb-e99c-4c7b-8af0-63a88eb8f933"
        },
        "item": {
          "id": "54304340-54aa-4200-9bc7-0f75eac7add5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0c672191-408b-44e2-a69f-2f5e42992272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c662bfc-999d-451c-b99f-5f3321d76804",
        "cursor": {
          "ref": "aecf1ba4-dfde-49b4-89cd-88c05685aa8e",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b140cfc1-809e-45cc-9398-3f741138a873"
        },
        "item": {
          "id": "0c662bfc-999d-451c-b99f-5f3321d76804",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c787b286-1bc1-4d22-8147-2edecbd3e29e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 10055,
          "responseSize": 109
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:121)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95b404b-8746-4604-b4a7-6fe0942ae50b",
        "cursor": {
          "ref": "f5771bde-1d6f-4375-806c-1722883d6cea",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "423dd321-d247-49a7-b13b-a758e35c76d9"
        },
        "item": {
          "id": "a95b404b-8746-4604-b4a7-6fe0942ae50b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c6bafe24-d4c8-4988-986f-10526c8d09a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193f55ac-ec61-4753-8f79-152ca19348ea",
        "cursor": {
          "ref": "2a1d3a75-c3b4-42a9-a777-31eeddc0aeb0",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2a780d22-ed54-4b67-ae65-99cc5ae31736"
        },
        "item": {
          "id": "193f55ac-ec61-4753-8f79-152ca19348ea",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b64ebcf8-3f1c-4a81-8807-ef8c3a78ccc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8089b83-5995-4744-a5f6-b041feb85cc6",
        "cursor": {
          "ref": "23edd090-90ae-4e66-ad34-93db6b491b47",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "870b1fe9-f596-48f4-bda3-0e53322a973c"
        },
        "item": {
          "id": "c8089b83-5995-4744-a5f6-b041feb85cc6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e899c187-4713-4e6c-9b95-88cc86a0c751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf7da9a-0651-4c02-8af6-82591385f3fd",
        "cursor": {
          "ref": "11679fc7-992b-470d-baeb-1f38fc2ab3f8",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4c3c41fe-5aa5-43c1-bd19-974c80b7e138"
        },
        "item": {
          "id": "9bf7da9a-0651-4c02-8af6-82591385f3fd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "287a0570-1a1f-4f26-8296-6c588f3cb0c4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 10053,
          "responseSize": 109
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c68dcb9-08a0-4f00-a1e5-b655a04afc96",
        "cursor": {
          "ref": "e8a88c3a-cae3-46fb-8ead-1a8e0b752f06",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "10af3e2f-4248-4a63-b4c7-c4655b2fbb72"
        },
        "item": {
          "id": "7c68dcb9-08a0-4f00-a1e5-b655a04afc96",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5233b1b3-ab52-4fc6-a16f-400f9a5cdc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9b6e86-98c8-4b00-8a99-1d53d735f164",
        "cursor": {
          "ref": "c9c771e1-f006-4035-bd08-7660b07076eb",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "aab49ed4-4bef-4b99-a7a6-68bd846587b5"
        },
        "item": {
          "id": "fd9b6e86-98c8-4b00-8a99-1d53d735f164",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "13266705-5401-4b42-b484-c241203d5fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484f2e54-2b18-4bdc-8af5-78cda4d78c94",
        "cursor": {
          "ref": "b4b0d653-a651-4fd8-a620-3118da3fb4ff",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0f4c7639-4dd2-4897-b930-352d82710ad7"
        },
        "item": {
          "id": "484f2e54-2b18-4bdc-8af5-78cda4d78c94",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f431f96d-4b1f-45ef-8ad7-4cac59ca9f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ee1889-c189-418b-9195-10a8dc85f89b",
        "cursor": {
          "ref": "3029a2de-2c3a-410a-bbb1-b4c066355e60",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e5b57f70-90f0-4070-90c5-ebaa0fe865bd"
        },
        "item": {
          "id": "66ee1889-c189-418b-9195-10a8dc85f89b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a5c37465-0f0f-4a7b-9628-2acb4a8297c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9dba87-2010-48ed-9498-2b3dbdf4adb1",
        "cursor": {
          "ref": "cd1a2966-3de3-4cf2-ab2a-bbfa4ddf1a55",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d55d9282-1ded-45d8-a591-38503a070cb9"
        },
        "item": {
          "id": "cf9dba87-2010-48ed-9498-2b3dbdf4adb1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b891a36a-ad03-4039-9602-3eeed95fbddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b82fbd3-a59d-45d7-b71e-e7b5f2ed1a96",
        "cursor": {
          "ref": "aed95d00-7684-41c9-b811-82fca24266ad",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "304daf6f-f16c-43a9-8a87-72292c7901d0"
        },
        "item": {
          "id": "9b82fbd3-a59d-45d7-b71e-e7b5f2ed1a96",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "30ae3156-effb-4395-b292-a0efb349b45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abbe9df-5c4f-44b2-8500-2e29ba144842",
        "cursor": {
          "ref": "ab0f246b-b920-479b-8301-9e42b14ce03f",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ac416a0e-2b4d-47a9-9616-2d5311825cc0"
        },
        "item": {
          "id": "0abbe9df-5c4f-44b2-8500-2e29ba144842",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "db2796c0-c537-4160-b2b8-6589b14cc2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e86912-be86-4496-a522-d803aba497b5",
        "cursor": {
          "ref": "ebd307c4-b456-4aaa-9568-b029591ed909",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ced87717-3d87-49e3-b4c0-5e651fd37192"
        },
        "item": {
          "id": "c2e86912-be86-4496-a522-d803aba497b5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "93e46690-bcd7-4c1d-b1db-56ef5b63a7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8aef889-5195-45ef-86f4-f17c2fbc57f2",
        "cursor": {
          "ref": "83aa214d-d071-49f6-89d9-6831e17e14dc",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "27049a1b-bd5f-40e5-954d-237aad6378c5"
        },
        "item": {
          "id": "f8aef889-5195-45ef-86f4-f17c2fbc57f2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "81ff6d3b-19f5-4809-a1c6-693a4d42dbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d155b328-39bf-4f21-86de-755a1c1c6b5e",
        "cursor": {
          "ref": "87c6db61-1eba-4e81-a2e2-06eca0795626",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b815e7e5-8929-4488-9de6-89481ea36965"
        },
        "item": {
          "id": "d155b328-39bf-4f21-86de-755a1c1c6b5e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f5a21967-fc23-4e82-85b8-7a3bdf10d5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd83409-b631-4587-ba77-0d62de5f5561",
        "cursor": {
          "ref": "1b175c6e-fa33-432e-a063-477f61a99fb6",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "db81a16b-1845-4ea6-8af2-6d9d3f8091ad"
        },
        "item": {
          "id": "8fd83409-b631-4587-ba77-0d62de5f5561",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1e53345c-2be5-4f17-919d-f4eb194a81b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84da9ca-332c-4ac7-bd28-f4297d006668",
        "cursor": {
          "ref": "86504a95-05d1-42a0-a426-440bca645ad3",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5910cb70-8db2-4e4b-afe6-dac84d03b718"
        },
        "item": {
          "id": "b84da9ca-332c-4ac7-bd28-f4297d006668",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "78a2f69d-a459-4a6e-a17d-b4de145ab0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a01214d-b825-4d82-b3e8-0c6e835d7443",
        "cursor": {
          "ref": "391af503-db6a-4491-a547-20cb66050681",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4d4dc0be-3f73-40f8-a8c4-ed5a78c46070"
        },
        "item": {
          "id": "8a01214d-b825-4d82-b3e8-0c6e835d7443",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ea1c18bf-65fe-4192-836b-022ad4f58ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa98ba9-0c83-442b-8c4e-67e5107672d0",
        "cursor": {
          "ref": "a03ccca2-4236-462a-ab36-0af852b15151",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "acd7a77c-766a-4624-b336-3830ebed30bb"
        },
        "item": {
          "id": "2fa98ba9-0c83-442b-8c4e-67e5107672d0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5ce54c3f-5f7f-41fe-91d6-eaa825f3fcc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf3f649-2343-4b6f-af66-2782215ffc28",
        "cursor": {
          "ref": "bab61046-1ce8-4b01-8884-52ccf0255186",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7a796d65-b298-47bc-a3cc-b6d8e70dc666"
        },
        "item": {
          "id": "baf3f649-2343-4b6f-af66-2782215ffc28",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "720be20b-99b1-44f5-b96a-607111397da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5218ce67-3de7-4de6-ba61-621057625227",
        "cursor": {
          "ref": "ed670f30-611d-4506-a6a5-05ede93f84f7",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e55a7eb4-9c79-4f75-b78d-2012d1fd6487"
        },
        "item": {
          "id": "5218ce67-3de7-4de6-ba61-621057625227",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9aac865c-827d-41b1-a9ae-09e33f309d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6f37e5-5809-439f-9efb-8ca7d8f682dc",
        "cursor": {
          "ref": "272074b9-a71d-4fb4-aa92-0b6f41391e5a",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "773607ad-3c8c-413c-8dfc-61d6f5ae8128"
        },
        "item": {
          "id": "3a6f37e5-5809-439f-9efb-8ca7d8f682dc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a334ea96-a958-407b-b2c9-3db18d91673e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57efc859-6acc-4e03-8c67-fc8c6b305537",
        "cursor": {
          "ref": "2f4fb2bc-8c54-4465-97a9-a5ef56007cad",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ca955fa8-f447-43c0-a0a5-8f5194baba81"
        },
        "item": {
          "id": "57efc859-6acc-4e03-8c67-fc8c6b305537",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8bffca97-1727-4b86-812e-bf7e9736b810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93165478-7e22-4fe4-a18b-52a54de68333",
        "cursor": {
          "ref": "3aef6b98-9f70-4dfc-bf36-f30c5fdf252a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ee2bd67d-b24e-4c3e-92ee-a230c74830bb"
        },
        "item": {
          "id": "93165478-7e22-4fe4-a18b-52a54de68333",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9a067c3b-6b99-4d54-a62f-8cbabdc472e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ea6274-9bb9-4fce-a050-b9181bfe1ed6",
        "cursor": {
          "ref": "2afd5d4b-3749-4cc5-a9e8-a96b612b9215",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "45eec68c-084b-4e06-b61c-3b0b8a6b181a"
        },
        "item": {
          "id": "73ea6274-9bb9-4fce-a050-b9181bfe1ed6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a6af65ec-67ed-42cd-82db-24dcae65cd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3dd0936-4e37-4358-bdd4-94e18a0c876f",
        "cursor": {
          "ref": "82565b0f-37d8-4c7f-adf9-bc4510d95a79",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d1425279-2ce3-441d-b559-5384de7663ef"
        },
        "item": {
          "id": "a3dd0936-4e37-4358-bdd4-94e18a0c876f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c975095a-da26-4555-aabb-4eece8ca8ee3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588c75a4-de5d-434a-8925-a96cb8fba44e",
        "cursor": {
          "ref": "8c057328-a45e-43d5-a6cf-d2468d191772",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9f102608-5e7e-4693-887a-8b36e406ba28"
        },
        "item": {
          "id": "588c75a4-de5d-434a-8925-a96cb8fba44e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "255249fa-cc59-4949-aaaf-1575719c4c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b65c8c6-571c-4bf3-929b-b15b2c2c5cb6",
        "cursor": {
          "ref": "b96b4e6b-270b-42bc-a741-0cda21b506b2",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "68cddb4e-0502-41e5-8650-6ba5b22c6831"
        },
        "item": {
          "id": "2b65c8c6-571c-4bf3-929b-b15b2c2c5cb6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b2b72d6f-2c0d-4488-b98e-df774624d30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db914faf-c7c8-424f-89b0-155c7f2abbb4",
        "cursor": {
          "ref": "c0c8c937-cf93-4767-bf51-70ed17d89918",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "35abc6d1-b9f3-42dd-860e-51f13cac8545"
        },
        "item": {
          "id": "db914faf-c7c8-424f-89b0-155c7f2abbb4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "da8effb1-e393-4424-a505-d1a22b10427e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07536d6-5305-4ada-9692-1985fb567e35",
        "cursor": {
          "ref": "2d32ac50-0424-459c-8be9-431b0f1c6363",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4a375984-f051-4d14-a78a-7f844ed76fe6"
        },
        "item": {
          "id": "c07536d6-5305-4ada-9692-1985fb567e35",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8eff29ea-c955-446b-aa99-0d51c35c97ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6475f2-2a6f-4e87-b62c-469fad95cf6d",
        "cursor": {
          "ref": "0875f79c-4f95-43b3-aec2-0f890b342cff",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d4d40a70-b46f-483e-9b84-1fa37161a65b"
        },
        "item": {
          "id": "cc6475f2-2a6f-4e87-b62c-469fad95cf6d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "439f52c5-101a-42fa-8249-5401380d7fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bde1f60-17f0-41fd-bb31-72ac8a18c539",
        "cursor": {
          "ref": "de507c25-eadb-4c4e-8c28-a69bb925cff9",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4463ceab-e762-4027-ad4b-0245894ed10b"
        },
        "item": {
          "id": "3bde1f60-17f0-41fd-bb31-72ac8a18c539",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c5fdb765-7bff-43c1-8d07-db78d7734412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6edc6a-db3f-4404-8836-56fae978987b",
        "cursor": {
          "ref": "3055a5eb-6f6a-4ee6-82d0-d3b8db920302",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a3f574a9-cb4b-4ee8-a3f8-c2582aa9106f"
        },
        "item": {
          "id": "2f6edc6a-db3f-4404-8836-56fae978987b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "eb4a3879-79ba-4c3d-b81c-9e548525d6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b410ba89-c5bb-4e4e-9328-6ec9914c8c58",
        "cursor": {
          "ref": "3ff7bf44-2a70-4666-8e8c-a25486350631",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5696ba94-c59f-4e39-83ab-aa1270f172c5"
        },
        "item": {
          "id": "b410ba89-c5bb-4e4e-9328-6ec9914c8c58",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f2c33711-aa2a-43a9-861c-68251fd13d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5faf599-5185-4599-804b-dd60803977ac",
        "cursor": {
          "ref": "28bf1460-c8ec-4eb5-a158-6efa79ae6c2a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7c32e96f-2370-497b-a5a4-11ee29b7d17d"
        },
        "item": {
          "id": "e5faf599-5185-4599-804b-dd60803977ac",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5f477cb0-d2a1-4284-a808-6b8bbe39b642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7c932a-3d47-4c18-8661-08927eb65d70",
        "cursor": {
          "ref": "a385bf1b-7edb-4127-aa37-8a6a7ed9b567",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c74b9342-430d-48dc-9df9-09ea78cb972a"
        },
        "item": {
          "id": "1c7c932a-3d47-4c18-8661-08927eb65d70",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "03dd46f8-919f-4666-b9ab-0db6d2821493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ec2bfc-e65b-40df-ac94-60b43bcf75fc",
        "cursor": {
          "ref": "60fcc7a7-1e1e-42de-b2c8-79190639a0e3",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b01b154a-ef85-4566-8388-18eeb696663a"
        },
        "item": {
          "id": "64ec2bfc-e65b-40df-ac94-60b43bcf75fc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "fa994414-dba1-46af-abc7-6c9fd0aff8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a30806f-9fc5-41c7-b970-9c7fe7e67bc9",
        "cursor": {
          "ref": "cb01baf8-51b0-433c-af21-fae8d03b7613",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "546e97fd-f83e-46f9-8f72-93e008d8c53c"
        },
        "item": {
          "id": "9a30806f-9fc5-41c7-b970-9c7fe7e67bc9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5042b859-2744-449e-9846-bc09cf0d7250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efff917a-5a70-4a83-b096-489b4933dc34",
        "cursor": {
          "ref": "a864e86f-d224-4ec3-bbcc-9a18d8840d3b",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d3e39ec1-3988-4d52-bcc1-737189a69387"
        },
        "item": {
          "id": "efff917a-5a70-4a83-b096-489b4933dc34",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "48b71b7a-dc91-4474-9cbe-ff42339e3873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a1a515-9c22-4753-9b09-c0de7aeec695",
        "cursor": {
          "ref": "c77ce455-a91e-4de5-a5a2-52991a0f5c1f",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "373f289c-0b35-47c8-bc2f-f0b2d4169cba"
        },
        "item": {
          "id": "d2a1a515-9c22-4753-9b09-c0de7aeec695",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cbc57123-9e9b-4c98-a538-9f0bf0f06d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503d440f-d25c-4c23-91ae-a02abd65ff16",
        "cursor": {
          "ref": "ad857753-c32d-40a9-a39a-0a373440c55c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0b053f16-ca99-420e-8384-9272d31d3027"
        },
        "item": {
          "id": "503d440f-d25c-4c23-91ae-a02abd65ff16",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "dfd295a9-94b0-4c4a-adc8-30f28d8329d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b23a4f-8a0a-4c1e-8f19-e2cf5fe721a2",
        "cursor": {
          "ref": "18782b0c-93e6-4215-b86a-7f4894d4202a",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b449bc29-f85d-46b6-8556-f3c24540f6ec"
        },
        "item": {
          "id": "77b23a4f-8a0a-4c1e-8f19-e2cf5fe721a2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "62a88cb1-6797-4481-b82a-52961a5c6c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea8819d-9cfa-4667-a2ce-4114afbd3fff",
        "cursor": {
          "ref": "c31f9395-f2b3-4211-a7ac-37c0faa7e8a5",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "793c7162-3394-456b-8e2c-2fce9acb92fc"
        },
        "item": {
          "id": "aea8819d-9cfa-4667-a2ce-4114afbd3fff",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c15a5b25-2052-4722-83f9-0e38df127fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32624d0e-5bf7-490d-8552-d40868859382",
        "cursor": {
          "ref": "74962fd4-ea94-4d4a-819e-bfbe2df5f454",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "aee8b098-7236-47cf-9983-6195d284a93d"
        },
        "item": {
          "id": "32624d0e-5bf7-490d-8552-d40868859382",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5a19fa66-23fc-4e89-b49d-5e7e132a8cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab95b78-2530-4a9e-bc99-2ad666ead253",
        "cursor": {
          "ref": "8fd8ef57-846a-413f-80a5-8c97817e303b",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8f81e83f-3e7f-4073-b5da-3d7c02914b6f"
        },
        "item": {
          "id": "7ab95b78-2530-4a9e-bc99-2ad666ead253",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "297cedb5-b3e8-4a02-9b50-e0f53bbb7790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4bda4c-e453-4228-8448-81b544f90044",
        "cursor": {
          "ref": "5a825644-7e0f-4199-aac0-b35086ebbe21",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8c19a3d3-710e-43a6-83ef-bdb6a43f327c"
        },
        "item": {
          "id": "9b4bda4c-e453-4228-8448-81b544f90044",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "15d24b3a-e6db-4e61-8564-19e802db7b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ccbb1a-1aaa-495f-b3e1-a3f2eb457397",
        "cursor": {
          "ref": "7245c2cc-7bcd-4399-ad67-9692f1f482e6",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3333b49a-7a16-4097-ae7d-6b991cb354d0"
        },
        "item": {
          "id": "34ccbb1a-1aaa-495f-b3e1-a3f2eb457397",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5bbbef7a-fd52-4d4e-8e50-d810c4c047e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe81542-6ca5-4272-a54c-2825b9085661",
        "cursor": {
          "ref": "6f8e3d20-57a7-44a5-a03a-3a2a8584f690",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "584b592d-8fc1-4086-88d7-098cd86df583"
        },
        "item": {
          "id": "dfe81542-6ca5-4272-a54c-2825b9085661",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ce15f069-7260-4793-9f7b-5b69499f47cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c5f01a-fa0a-4908-a818-32f3edd7a930",
        "cursor": {
          "ref": "1412c17a-6a03-4141-b6cc-0589c33b9640",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "552aa17a-a31e-4d9a-aa48-0854b95f8771"
        },
        "item": {
          "id": "c9c5f01a-fa0a-4908-a818-32f3edd7a930",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6ef4622a-52c8-4349-995c-a2bfbf1b43d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7727c0-fc98-4a10-a8f0-9cf333e76670",
        "cursor": {
          "ref": "e0cd07ef-c8fc-44d5-bf95-247e94c0a324",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "045e777e-a13e-4fea-90e2-cd259ad26026"
        },
        "item": {
          "id": "ac7727c0-fc98-4a10-a8f0-9cf333e76670",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "057461ed-972a-4c35-9e89-a9f1fbc374e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d01c3c-c425-4e08-a166-153e68773884",
        "cursor": {
          "ref": "c1921a1c-7e47-492b-ac77-8e7ebe16350b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "054145a5-bd5b-4cbb-802b-f1d31cea0ab2"
        },
        "item": {
          "id": "23d01c3c-c425-4e08-a166-153e68773884",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e4a6b042-197f-46c6-9a3b-da97971ad873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4983532e-f678-4793-ad73-79d29a083f88",
        "cursor": {
          "ref": "132c81d3-c24f-4355-9f0c-30489edd6d64",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ff0b7536-6b2d-44e6-8af1-8301e53aa0b0"
        },
        "item": {
          "id": "4983532e-f678-4793-ad73-79d29a083f88",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0393e865-2d47-4b28-99df-11cdbb2fd59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b92822-0ff6-4bd6-a889-a0746cba7f78",
        "cursor": {
          "ref": "1676eacf-8099-41f0-b284-951105172f2d",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1bff974c-1bc8-4574-a284-ad22daa44f6a"
        },
        "item": {
          "id": "97b92822-0ff6-4bd6-a889-a0746cba7f78",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "dfe7bf54-7a65-454e-8c10-471b38a008f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94ec61b-99bb-4429-931a-6bab222ab292",
        "cursor": {
          "ref": "74e45dc0-44e9-42dd-aa44-ccfa83de5387",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dc17110f-5717-40c2-b47c-ea23366d535c"
        },
        "item": {
          "id": "a94ec61b-99bb-4429-931a-6bab222ab292",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7cd02f8a-e422-4174-a197-6c06d21ca58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f134ff-553f-4538-969f-824122187c0a",
        "cursor": {
          "ref": "3c6b96d6-6029-421b-9665-3f423fbd89e5",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "72b06329-7207-41d8-8ff4-45207ce09ba3"
        },
        "item": {
          "id": "20f134ff-553f-4538-969f-824122187c0a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8a9611f6-7d0a-41f8-95a8-52ae31559861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7216ad-5130-4fc5-8cef-8af7ecf4bf7b",
        "cursor": {
          "ref": "b9e5752a-c45e-40a3-8f58-9fe5cc4731a4",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "489e8d88-1847-4433-bc2c-027be36192a4"
        },
        "item": {
          "id": "be7216ad-5130-4fc5-8cef-8af7ecf4bf7b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9d7fb28b-fbb5-4ad5-88b6-eec7fb6876e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb00fc3-65ab-4d13-aa50-1f99a634bfc4",
        "cursor": {
          "ref": "4a766e3d-3322-4833-9f34-23af52556757",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0250682d-82bc-44d0-b738-004e326e2584"
        },
        "item": {
          "id": "3eb00fc3-65ab-4d13-aa50-1f99a634bfc4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "fb68f899-1a04-4057-9c01-a4ffa26570b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51995dd-8b31-447f-b89e-2335649a5a77",
        "cursor": {
          "ref": "0e8bc0e7-4c6e-4343-bf00-7e9f09159736",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "92a1bd81-c25d-4a76-a21b-6962f532fc26"
        },
        "item": {
          "id": "f51995dd-8b31-447f-b89e-2335649a5a77",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "03bafde3-7616-446d-a5d3-dded30d0fc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097a2523-f9bd-43f2-9880-b68b51b36e91",
        "cursor": {
          "ref": "28173df8-2e8e-4b37-bcd4-8b086eca3a88",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "15e04f1a-b8be-4bc7-9ab4-18294ce426d0"
        },
        "item": {
          "id": "097a2523-f9bd-43f2-9880-b68b51b36e91",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e73d6685-6fa4-42b7-8e4b-4446e5dc2099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2da48f-155c-46c6-8d5a-480505e2bb53",
        "cursor": {
          "ref": "0a96c31f-4249-4a13-82e8-bef911f806ea",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4f8cc9e7-dd3b-4b01-bb4c-2d7c99f2345a"
        },
        "item": {
          "id": "af2da48f-155c-46c6-8d5a-480505e2bb53",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cbcdc101-7b6d-42fd-add3-cc6d7bdd85e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de666a06-5c11-4cf0-a2b4-012738e0d35f",
        "cursor": {
          "ref": "061211f5-02aa-4b61-8aed-ea30688bb629",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fbcd5516-aed2-4484-9bcf-bc448576b8e1"
        },
        "item": {
          "id": "de666a06-5c11-4cf0-a2b4-012738e0d35f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "42690ef4-271c-40b5-9e03-0c6768adb3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbdf889-83bf-4e67-b626-29fef25b9409",
        "cursor": {
          "ref": "7c86b443-a792-432c-8045-7a3128546231",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4f6f7559-afee-47d1-94d8-6e43d0a1c69d"
        },
        "item": {
          "id": "dcbdf889-83bf-4e67-b626-29fef25b9409",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e88eab99-de33-4502-8633-70ca4a3306e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76da0ff-f476-4532-834d-a015935c12d4",
        "cursor": {
          "ref": "9ac9b298-aa5b-4902-9606-e8e74082db38",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5f986b67-e9cb-4770-bfbc-53a2788372aa"
        },
        "item": {
          "id": "e76da0ff-f476-4532-834d-a015935c12d4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a73ccccf-8f0e-4633-8996-3b21e95c6be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fc8a33-42e5-4d13-a315-0e9f199b8a64",
        "cursor": {
          "ref": "02658b91-05e4-4e4b-aad0-b0d446c8ebfc",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0962f49a-93ba-4882-87b1-46f30d3c53ea"
        },
        "item": {
          "id": "f6fc8a33-42e5-4d13-a315-0e9f199b8a64",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6ab52bbd-c743-4ce2-b0b7-ff240f77ada9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bc18b2-216f-4d96-84bd-ee8b7d07fe83",
        "cursor": {
          "ref": "60ecff52-f6d4-40c3-9c97-4427d4caf197",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9aebb1e8-f260-4108-9da4-56b70c463b19"
        },
        "item": {
          "id": "84bc18b2-216f-4d96-84bd-ee8b7d07fe83",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f7df4cc2-1637-46fb-b96f-ca0b19397a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f2a3fa-064c-4f48-b38b-12e54ad11756",
        "cursor": {
          "ref": "8dc898fd-9d2b-410b-a7b6-233abf8b0cc4",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7169bac2-4edc-48ea-a15a-fb88a2c9823e"
        },
        "item": {
          "id": "e0f2a3fa-064c-4f48-b38b-12e54ad11756",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "830e40a5-0258-4a3f-b47a-3936a3aea420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5ece10-5ea8-451c-a0d3-934e8b3b2ee4",
        "cursor": {
          "ref": "8016664e-b453-4cd7-ad81-ecb968f82cd9",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2a914c74-c0d5-44c7-9092-62172481c1b0"
        },
        "item": {
          "id": "5e5ece10-5ea8-451c-a0d3-934e8b3b2ee4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e392a74a-14ba-47fe-bd04-d2fd041f386c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b23933a-dfc2-47c0-bb7c-118b3602bc5f",
        "cursor": {
          "ref": "9f5b392e-72f9-4bb6-b66a-4339a944ee0c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7928a26a-750d-4c98-9c80-323645e11ad8"
        },
        "item": {
          "id": "4b23933a-dfc2-47c0-bb7c-118b3602bc5f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ce4e7053-f289-450e-8a98-bc72083bb249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588f5b2d-7293-415a-ae73-007ec32a10a8",
        "cursor": {
          "ref": "1f6a7a5e-34b4-4d94-91f7-3944d35f1ed3",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d1ff5828-eb7f-4235-8b6c-1c25f7aeae4f"
        },
        "item": {
          "id": "588f5b2d-7293-415a-ae73-007ec32a10a8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "80c864bb-38a6-443e-8bf1-b2226d4ab685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d9bc4e-824b-47e8-968b-ab1201840be1",
        "cursor": {
          "ref": "bdb5fba3-f24c-4fc4-94f9-19395f6afa15",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "edf49ce8-4aa2-431d-a5af-cc6b6a97148a"
        },
        "item": {
          "id": "a6d9bc4e-824b-47e8-968b-ab1201840be1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "88495597-7af6-4fba-b8e7-be6232c38980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f9bf2a-2a94-4be0-94cf-64fd3df23d34",
        "cursor": {
          "ref": "77275029-f06f-4550-a86a-efe7ccd62f1b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "aff90e4c-b1c4-44f3-bba9-1126d976b55a"
        },
        "item": {
          "id": "89f9bf2a-2a94-4be0-94cf-64fd3df23d34",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2c22ebea-410f-4b03-9630-63b4090580ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334d473e-a7d6-4158-a360-7384b56ada38",
        "cursor": {
          "ref": "7da13698-5449-48d1-9bf9-0c523700f1ff",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bddf1642-afa3-40a7-9820-758a786030ee"
        },
        "item": {
          "id": "334d473e-a7d6-4158-a360-7384b56ada38",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cac3adc5-9b70-48d3-891a-76f655ba181f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6243cc98-1cf4-4741-b5e2-d831cb675183",
        "cursor": {
          "ref": "2a5e9b48-f733-463c-ae86-08db59cb3c0d",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e801a3b5-0995-4100-9503-21d93b7971d9"
        },
        "item": {
          "id": "6243cc98-1cf4-4741-b5e2-d831cb675183",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3e3b5726-cbd6-4401-a519-19027c89adbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a834c9-1e39-44d3-b4c5-24efc3d603f9",
        "cursor": {
          "ref": "9b8414b7-49ae-460d-99e2-decca8a19191",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "29ef07bf-d258-42dc-824d-c676059ef8ac"
        },
        "item": {
          "id": "67a834c9-1e39-44d3-b4c5-24efc3d603f9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "56deb861-51aa-44bf-800f-80770f8e7a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58f1ee0-1619-4480-b4d1-f5496dddaff1",
        "cursor": {
          "ref": "024a5569-462d-48b5-87ab-0f20dc1abf73",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fb414c9c-1b6f-46fe-9457-53d8f32e9fae"
        },
        "item": {
          "id": "c58f1ee0-1619-4480-b4d1-f5496dddaff1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "eead1c20-b248-4c69-83ef-12c1f6f91358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29b9f3a-ea6c-44b2-957a-fde9f2c4323c",
        "cursor": {
          "ref": "b90209f8-0864-4518-93d0-3b220d9eaed6",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bbf04bef-60e1-4cee-8cb5-2ef86057a2c0"
        },
        "item": {
          "id": "f29b9f3a-ea6c-44b2-957a-fde9f2c4323c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f0e34844-fc24-46fb-abfc-27229da24b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73e3f21-3c2b-4876-983b-6ac87760037d",
        "cursor": {
          "ref": "4f42267b-e74e-496e-8e23-3387d9322f34",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3e3e4454-ba4f-449e-85ba-08b4c5c017c5"
        },
        "item": {
          "id": "c73e3f21-3c2b-4876-983b-6ac87760037d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "692a8652-c907-4399-a845-52eeb8528ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f92f0ea-5e47-4f0c-b1ea-77f6bb98d22d",
        "cursor": {
          "ref": "4ef62fda-4ba5-476c-89f9-642ecf524941",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d6c49de6-d182-4c71-9db5-310afa7341af"
        },
        "item": {
          "id": "5f92f0ea-5e47-4f0c-b1ea-77f6bb98d22d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "936c76df-b2c1-474e-b26b-f4b13bd105a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d464c0-2836-4862-9028-7bce3781af9b",
        "cursor": {
          "ref": "a0f56843-33ae-4b4e-9139-6aa5ba7efd5c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cf96ccbc-8a54-4df9-87ed-4c95d8b91989"
        },
        "item": {
          "id": "55d464c0-2836-4862-9028-7bce3781af9b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a0479daf-5d09-4d73-af84-a9ccad069a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f419a5ee-9d9b-4b5a-9ba3-740f292a1daa",
        "cursor": {
          "ref": "a08c6b7b-24d3-4ff0-810c-4f1256601fb8",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d131ed6e-4eaa-4a93-9b97-5bc8dc635696"
        },
        "item": {
          "id": "f419a5ee-9d9b-4b5a-9ba3-740f292a1daa",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "198ecf4e-fcb8-4b1a-8485-3aea477e8177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be69c186-4dff-4443-91ab-afbff38a4c5b",
        "cursor": {
          "ref": "f505afb4-2f01-4049-9800-61dbdae753ec",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9e4bcbec-91ff-4a5b-ae7e-f811a12bed1d"
        },
        "item": {
          "id": "be69c186-4dff-4443-91ab-afbff38a4c5b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3f6b90fa-673c-405b-a0ff-ae9ed0089e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0de4a2-9461-4bdf-b74e-5c22cae67e1e",
        "cursor": {
          "ref": "7a814f48-886e-444a-9cf8-956d81f9fb02",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "68459d15-882c-4908-a879-dce2a56062c4"
        },
        "item": {
          "id": "ad0de4a2-9461-4bdf-b74e-5c22cae67e1e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4b2a39b7-f401-4da6-b0c7-6baa137bf5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0092370-76a9-4db6-a6f0-84b13468bef6",
        "cursor": {
          "ref": "6553b113-c142-483c-962c-92c3dc4eecd5",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d403f79d-583d-4b16-af3e-7d2bfb9e55d8"
        },
        "item": {
          "id": "a0092370-76a9-4db6-a6f0-84b13468bef6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "94b071fd-0721-4213-9ad2-1835bdb63a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f476c16-fe3f-4d20-96bd-f53714b12dc6",
        "cursor": {
          "ref": "047edbb0-e1c5-485b-90f2-53f73c964cde",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7b6e91de-b5e1-4fa0-84c7-66f2ab371f05"
        },
        "item": {
          "id": "7f476c16-fe3f-4d20-96bd-f53714b12dc6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5bec2774-4a17-4e8b-a028-d5e4669126d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdf0c72-1e90-42b3-95f0-5aa2f7801b42",
        "cursor": {
          "ref": "5663944a-1473-4f85-829e-0bfa92339141",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4a508800-625c-4d25-8ea5-61aea4bf2e1b"
        },
        "item": {
          "id": "3cdf0c72-1e90-42b3-95f0-5aa2f7801b42",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "80681d62-f9bb-429e-8d4b-91431e6e714c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6372e46-d0d4-4b7c-a2f8-07e03b968ff0",
        "cursor": {
          "ref": "c3ea8123-6bbd-47a9-b187-2266df8d2a32",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "763c9224-c018-4168-87cc-cdd296e66daf"
        },
        "item": {
          "id": "a6372e46-d0d4-4b7c-a2f8-07e03b968ff0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "552b7102-9e24-43cb-bc24-c3c7bc138dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec2a902-ddfa-4c99-a137-16f534749133",
        "cursor": {
          "ref": "af5e28ce-1a15-403e-94ed-3a42190c4959",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "be9a5641-4e1d-40e6-a021-97a11bc0c019"
        },
        "item": {
          "id": "7ec2a902-ddfa-4c99-a137-16f534749133",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "49a11e52-fb26-41ed-991f-19648686f43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1ca403-a7c4-402e-b02f-7ab9a0e8d3f8",
        "cursor": {
          "ref": "07d767df-52cd-4b05-b766-8d6f4ab45257",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "37b0467c-5fb0-41ae-8bcf-0f316027a837"
        },
        "item": {
          "id": "ef1ca403-a7c4-402e-b02f-7ab9a0e8d3f8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4c61446a-d0db-4d67-ac5a-f2b126d95709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81be8e3e-2c8c-4e64-a21a-108a5a15b248",
        "cursor": {
          "ref": "0df97324-ac7e-4b5d-ab96-199b09cfae67",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1d1e727f-7ac3-4eff-afe3-23c100a5b3a0"
        },
        "item": {
          "id": "81be8e3e-2c8c-4e64-a21a-108a5a15b248",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "aabf6345-fca4-4c44-bbef-6c068b1bd8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4fbd58-4f88-465e-a862-8ffc45a3052d",
        "cursor": {
          "ref": "f6ea3a91-a104-4535-b6cb-0ea9b54e0f70",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f0468a01-fd8a-4d94-a2b1-56e0a4faf291"
        },
        "item": {
          "id": "fd4fbd58-4f88-465e-a862-8ffc45a3052d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5a78a74b-089a-4a99-81e3-7d8d6f7aabc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ddbfce-5ac4-4c02-ad3d-4236088bf260",
        "cursor": {
          "ref": "35e522e6-4094-4957-816e-62cdc9ff4eda",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "79f7b9f7-a6b6-4bf1-a130-b4bbf50afa9e"
        },
        "item": {
          "id": "a5ddbfce-5ac4-4c02-ad3d-4236088bf260",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d6b27f62-2406-41c9-a825-2a3a83cca9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c2d80a-9191-43a1-8e4f-518de1e6a781",
        "cursor": {
          "ref": "15831f7c-876d-4861-a777-542c34c76417",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e379b298-350b-4bc3-bc30-3920364cfc75"
        },
        "item": {
          "id": "a7c2d80a-9191-43a1-8e4f-518de1e6a781",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4c1306a1-297e-494a-a740-161efccf030a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c680c86-aa9d-4fb6-856e-26cb1337f0e3",
        "cursor": {
          "ref": "ae44ed75-c0d4-4d54-ae76-07ef9558146f",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "47f96382-1ece-429f-8764-45b7ed022b2f"
        },
        "item": {
          "id": "1c680c86-aa9d-4fb6-856e-26cb1337f0e3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "83107b78-c20c-410a-a9b3-de865e1d2196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609a3ee4-3fd7-4355-9b83-7806029143b0",
        "cursor": {
          "ref": "988eb9cb-bb46-4d1a-9037-d4ea944c44ec",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8cd4895e-ef88-4317-98d5-7d97e51d30af"
        },
        "item": {
          "id": "609a3ee4-3fd7-4355-9b83-7806029143b0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3cc06ce2-cc16-4d80-9498-14419ed0db94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85413822-07d5-435f-a8bc-8f4538a43d97",
        "cursor": {
          "ref": "48cbf682-75b3-42a2-a3c2-bfe0213203ae",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "871a911f-046f-4ed8-9317-43a5656bb061"
        },
        "item": {
          "id": "85413822-07d5-435f-a8bc-8f4538a43d97",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b5b196ff-b759-4c78-b72e-482f84283565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62e0c5d-424e-4a5b-8bf9-09636318797f",
        "cursor": {
          "ref": "50ae797e-a52c-4c8b-a02b-bf267b535e13",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4e578c04-4e5d-429e-ae38-0c89b34df034"
        },
        "item": {
          "id": "a62e0c5d-424e-4a5b-8bf9-09636318797f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5522340e-a76e-42f8-b1e2-78dd74b7e70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b4109a-d5bf-436b-8091-f90e80f1bac1",
        "cursor": {
          "ref": "f671b79d-1692-4780-818e-1969bd1d3a0f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f24a0009-2a1c-4be6-bd96-3ab24a6eaa05"
        },
        "item": {
          "id": "a7b4109a-d5bf-436b-8091-f90e80f1bac1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1bf73e10-9290-40b9-8c23-cc57756c5c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ba349f-28af-4c02-8ef7-822d248741ee",
        "cursor": {
          "ref": "ffb170ec-c1f9-44a1-b7b7-26e923ccc30f",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "dfa3f0d8-b0ef-426a-87ce-e25d95fc744d"
        },
        "item": {
          "id": "73ba349f-28af-4c02-8ef7-822d248741ee",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2f337371-eea5-4c68-9522-4a73fecb76ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe57fcc8-f386-40d9-a70a-ecd10322e2f0",
        "cursor": {
          "ref": "9d5e70bd-f7f7-4e1b-94f8-c29ec2c7df62",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "36370bb5-18c1-4b31-a5d9-626e14c91a28"
        },
        "item": {
          "id": "fe57fcc8-f386-40d9-a70a-ecd10322e2f0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "23b68354-daaf-484c-b71d-7bddf57e82a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cd26a8-abdc-41f9-832c-34f029c36a62",
        "cursor": {
          "ref": "aaa62ed3-8b7f-4448-a4e4-47dc5430b21e",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cc4ba4c9-b06a-4f50-991c-fae5b2aa0711"
        },
        "item": {
          "id": "36cd26a8-abdc-41f9-832c-34f029c36a62",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3d416906-d139-414d-960d-24179c675e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b29759f-8601-4236-90c6-780241d32048",
        "cursor": {
          "ref": "d47a9d75-fc31-4903-8a24-adaa9a560a1e",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e31840ef-4b46-4149-80c0-03904375a7bc"
        },
        "item": {
          "id": "5b29759f-8601-4236-90c6-780241d32048",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3c6acacb-0888-4f7d-8dba-f47e282c0931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93ce398-cf1a-4f24-8ee0-5ffb803fef23",
        "cursor": {
          "ref": "a5a5e2c3-0ae2-4b00-b9a5-726c6ea7817d",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c3645e9e-5db8-49d6-9372-4ba3f2e0de65"
        },
        "item": {
          "id": "a93ce398-cf1a-4f24-8ee0-5ffb803fef23",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e28f0d2b-7d33-4b53-b348-ee938d2aab3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7956585b-25f1-4f2c-a26b-7c3308964302",
        "cursor": {
          "ref": "b38d0d17-1219-4891-91f0-f1233d0672ba",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d73b4261-b187-4175-8bdb-55cbeaf20a7a"
        },
        "item": {
          "id": "7956585b-25f1-4f2c-a26b-7c3308964302",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f2bf8cf1-612d-444e-9798-54fdf7b1b960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876598a0-e063-4ca6-a37b-520d0ec701b9",
        "cursor": {
          "ref": "7bb70f4c-78c1-4c4e-9c2a-6e55f83dfebf",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2d417027-c608-45c1-b039-de149ca18d84"
        },
        "item": {
          "id": "876598a0-e063-4ca6-a37b-520d0ec701b9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b444bb3b-784e-40f1-a116-7669d8342ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb43241-5c7d-478f-8598-44b0daeb7b95",
        "cursor": {
          "ref": "19b74da6-2b6a-48b3-80ec-88cac2983879",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f7a1647f-1907-4800-9b18-b6a485da33f4"
        },
        "item": {
          "id": "bdb43241-5c7d-478f-8598-44b0daeb7b95",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "25fcb1d0-e0c8-4443-be9c-7d2fe1014c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ff2a7e-091e-4386-ab04-75418032b3e1",
        "cursor": {
          "ref": "294b74e6-c49e-49d7-8756-f7acc250e249",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "06f026bf-1351-4cf3-a1e6-9b32b8cca7d3"
        },
        "item": {
          "id": "c8ff2a7e-091e-4386-ab04-75418032b3e1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "227776e3-8805-4675-aec2-c07f95e0894f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f72958-471b-4de3-8e44-8620bb10cf5f",
        "cursor": {
          "ref": "4d63c1e4-c0c0-401b-9228-c8f2c771c0f7",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9ddbc2e1-2962-44d6-b0fc-b916e8847cd4"
        },
        "item": {
          "id": "02f72958-471b-4de3-8e44-8620bb10cf5f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "05037f15-1a31-4b76-b25e-26b6118e0177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79ebceb-1389-4abf-ba9d-f649536081da",
        "cursor": {
          "ref": "faa28b54-3681-4cc0-a2ea-4cf1eee866ad",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "aa18dbbe-f810-4287-b398-7bc1d50cda27"
        },
        "item": {
          "id": "b79ebceb-1389-4abf-ba9d-f649536081da",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "79159a26-9d49-44ff-b35b-1641ca976cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca1d865-bbda-493c-a935-f7827d3c9692",
        "cursor": {
          "ref": "2f53c736-2cf1-4a46-90f6-ee9efebc5beb",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "81f131e7-2986-4c34-b3ed-999784bd7c5a"
        },
        "item": {
          "id": "6ca1d865-bbda-493c-a935-f7827d3c9692",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "fdf4e222-71ca-4b31-af4c-70fe1a1284cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5224a2a2-7b8d-4159-82cb-183d5e6672cf",
        "cursor": {
          "ref": "07d1a182-b811-44f2-be56-6d0ac1ade03b",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8c06f9e7-c3d4-4c86-a108-b3ec7e902d71"
        },
        "item": {
          "id": "5224a2a2-7b8d-4159-82cb-183d5e6672cf",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4af4cfbf-3714-4638-a6bb-1b24c3eeb60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0965794-678c-43d7-8527-fc86e63e8f58",
        "cursor": {
          "ref": "3bffbb39-f05c-48de-9412-cb6a2c9d21db",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8772e392-e70f-457b-ad10-b61d973324c8"
        },
        "item": {
          "id": "d0965794-678c-43d7-8527-fc86e63e8f58",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "252a97b3-b855-4a7d-aaef-048ef6de8832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9536b19c-23f6-4068-baff-678269eb5c96",
        "cursor": {
          "ref": "d943c0dd-2480-4f12-afa8-eb37483d7f7c",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e4053581-1423-4b90-a312-df7eb70001e6"
        },
        "item": {
          "id": "9536b19c-23f6-4068-baff-678269eb5c96",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2c673290-6906-4741-ba33-dac0d26f71d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a30ad7-c52d-494d-9bc3-97f450f0e5a3",
        "cursor": {
          "ref": "994f6713-77ec-425d-9ae0-053ac2a5e3af",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3f2c4c16-5b0f-4d2e-9e01-8e48a564d22b"
        },
        "item": {
          "id": "31a30ad7-c52d-494d-9bc3-97f450f0e5a3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a67af5ca-c843-4446-ba67-ad60e9b54d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c7e530-b876-473f-b38d-9ca3c2b93ec0",
        "cursor": {
          "ref": "282c00b4-85e7-4e5f-aeee-fae25cc81c2d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "35e44ef1-3920-4cf9-8844-9488df71623d"
        },
        "item": {
          "id": "94c7e530-b876-473f-b38d-9ca3c2b93ec0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "58b1c43e-eccf-4cfd-9bde-1db8ad3b18b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f258544-811d-4e02-9cb2-8ffad6d2b84c",
        "cursor": {
          "ref": "e60d8e30-f148-49aa-96cd-48387c6d1ed3",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6df6b087-01f9-4bba-a588-04f59a0f7785"
        },
        "item": {
          "id": "7f258544-811d-4e02-9cb2-8ffad6d2b84c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ace14a2a-33e4-43f8-94a4-5ce86b69438e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77637c2-f47b-447f-8787-aca7cfbbf46d",
        "cursor": {
          "ref": "5359dd61-86c7-449e-9ab7-02de40f407d3",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "058a2470-f7d1-4c56-8ef5-e14cb540dd8b"
        },
        "item": {
          "id": "c77637c2-f47b-447f-8787-aca7cfbbf46d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "88fb8689-ae7b-40f2-ac8c-7652c4f85d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33ca0be-baff-46cb-828c-2876ba7a9ddf",
        "cursor": {
          "ref": "8a9410ff-59d7-41c9-b029-9f7a7a23e6b3",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ed18ea90-60c2-4be6-ab54-581ecebcbeb3"
        },
        "item": {
          "id": "b33ca0be-baff-46cb-828c-2876ba7a9ddf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "13901326-105c-44b7-9a98-e685c1eac35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3898aca6-0ebe-4a7e-9df2-ec1441d507a5",
        "cursor": {
          "ref": "1cfb8527-372d-40b2-a09a-42adf1428443",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "729bd0ec-7d2a-4c10-b3f7-8c8674670039"
        },
        "item": {
          "id": "3898aca6-0ebe-4a7e-9df2-ec1441d507a5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "39dd201e-ca1a-42b6-9a7f-21071d24b344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5209d6-1559-40b2-a4e1-c7fdd5e875ab",
        "cursor": {
          "ref": "707d0814-759e-4115-bfce-c82925aa9102",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "705a5ce7-0549-4143-93e6-408c15178f2a"
        },
        "item": {
          "id": "4c5209d6-1559-40b2-a4e1-c7fdd5e875ab",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "387ce096-939e-4efa-89a5-163dc911a1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f34ea8e-5b7e-41de-8b11-758727b93e79",
        "cursor": {
          "ref": "25c2335f-378e-4d32-b0b5-8a1196e433d9",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d04c9204-b5b3-4c77-a105-cdd302d75ef2"
        },
        "item": {
          "id": "1f34ea8e-5b7e-41de-8b11-758727b93e79",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "09a7c2f7-9076-4793-9bb2-86903dc30e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941b1dab-2d57-46a6-a329-20543e038f68",
        "cursor": {
          "ref": "7a2d8950-6e47-4abf-9301-cec90111069a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2b497470-6777-4101-9f3e-2cadee69889e"
        },
        "item": {
          "id": "941b1dab-2d57-46a6-a329-20543e038f68",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f7163431-e1dd-4a1d-83da-48f0f7a2bb2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7d32b6-98fc-4bfd-acb7-b4d159aa0edd",
        "cursor": {
          "ref": "f8496e53-70fd-48c4-9c85-b04da0c509c8",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ff79fb82-5bc0-4bda-9ff2-6e9fae6925ab"
        },
        "item": {
          "id": "bd7d32b6-98fc-4bfd-acb7-b4d159aa0edd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fdbb759c-9780-456b-99a0-97bef06d1ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b4f348-7126-48f9-8ee2-b9da3fc333a9",
        "cursor": {
          "ref": "cd270369-e216-4644-b230-a699cf83fd5a",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e53959ff-8e23-44ec-ae3c-878298b814ac"
        },
        "item": {
          "id": "30b4f348-7126-48f9-8ee2-b9da3fc333a9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a00e7ab8-e526-448f-8bdd-561a2cd7ca47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bde785-4bf0-4b87-a551-c99c48dc6bdf",
        "cursor": {
          "ref": "6df1620d-eb14-4b73-9b03-5e24b95c3372",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "68b63e81-b57e-4ac7-8de2-f0ec34076ff1"
        },
        "item": {
          "id": "39bde785-4bf0-4b87-a551-c99c48dc6bdf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7136a99a-df11-44a1-ac2d-a79a52446bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ee738a-52f0-4e68-ba1c-a69b5ab42904",
        "cursor": {
          "ref": "21622b50-621b-4523-97b2-e8c9b92b2ed5",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2b3668ac-b4ba-4412-815b-dabbe3c57a4c"
        },
        "item": {
          "id": "79ee738a-52f0-4e68-ba1c-a69b5ab42904",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "913bd806-ca10-474c-9d5e-f8831843aa74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "41497890-f4cf-4511-9e28-120b2a9b76b0",
        "cursor": {
          "ref": "fbdfc9a9-bd61-4f19-8ab6-0fd3a36d5568",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "40239e7b-76c9-45dd-b5d0-5a38e053062d"
        },
        "item": {
          "id": "41497890-f4cf-4511-9e28-120b2a9b76b0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3238e224-9883-4597-a6da-6ee8e0f17bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "581e3551-1f80-4024-9767-c97bebdfc92b",
        "cursor": {
          "ref": "36ee1416-b5aa-42fa-bf3c-d6470f979c6b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6db645c5-436e-4f16-8ac1-b2639684bc4b"
        },
        "item": {
          "id": "581e3551-1f80-4024-9767-c97bebdfc92b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "eaac33c3-08be-4ad3-911c-f6980124390f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "e0d426cb-9c1f-447a-94fa-5ce9995ba64d",
        "cursor": {
          "ref": "f0d4af0a-6dd0-43f8-b5f3-24332b5cf75f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "46bc56d4-3420-463d-8731-68298aeeb167"
        },
        "item": {
          "id": "e0d426cb-9c1f-447a-94fa-5ce9995ba64d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c28d54b3-0f89-47b8-b51b-081ccb71193b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d426cb-9c1f-447a-94fa-5ce9995ba64d",
        "cursor": {
          "ref": "f0d4af0a-6dd0-43f8-b5f3-24332b5cf75f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "46bc56d4-3420-463d-8731-68298aeeb167"
        },
        "item": {
          "id": "e0d426cb-9c1f-447a-94fa-5ce9995ba64d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c28d54b3-0f89-47b8-b51b-081ccb71193b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d670ece-c4e6-47d1-adcb-49cd5c8f3262",
        "cursor": {
          "ref": "336b0c87-b677-40d7-b9f5-c2935758a251",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4896271e-a8ec-43af-ab55-056463d29acf"
        },
        "item": {
          "id": "0d670ece-c4e6-47d1-adcb-49cd5c8f3262",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b657f9ff-7fa3-41aa-8a21-4361e02204d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925859a3-504c-4450-b92f-31fb02ca6e11",
        "cursor": {
          "ref": "f512bfb3-8508-4741-89b9-ba94ba95627a",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4779280e-1056-4672-b2a7-a592e76bd99c"
        },
        "item": {
          "id": "925859a3-504c-4450-b92f-31fb02ca6e11",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bc1e3c9b-bc43-454a-9785-19188ef7f308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}