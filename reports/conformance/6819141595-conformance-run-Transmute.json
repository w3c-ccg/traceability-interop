{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5ec3b3a6-6615-4bdb-8924-8ea78c34b582",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f94e7a8e-3281-4cd2-a476-b7a1ca25b72b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7b15e1eb-9125-4948-8f4a-34543565fd7d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "abc2e6db-75f0-4b7c-81a6-dc0bf4e55b5f"
                }
              }
            ]
          },
          {
            "id": "0982377e-d78e-4c25-b4aa-a6ebb65aac49",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f013bb75-55f0-455f-8957-6da7777a0d07",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c3871398-a48d-4e0b-9b2e-b5349fc0e095"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7effd915-1aa2-4d92-b6d4-144450ac7503",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d15e01b0-0233-4ae7-877e-9c73b4d86de5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "313dd5cd-f9c1-46b6-94b8-896561553721",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1db75df2-51e6-494e-a36e-5a8a9a963c88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "058910d7-81b3-4607-a5d3-a57f5b1b72ba"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4eeee274-63b7-4e8e-9e4c-1b23438c51c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ecc1f99-970a-4a22-b8cc-840af3465075"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0961a809-9470-4d74-b6e5-121914a076de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3af0dae4-5fb4-421a-b820-2ffda3c9a7ba"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc7482d8-9a96-4ed1-8c37-5e4d4efdf97d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "80beb74c-6585-4832-9266-1ffed98c0730"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51087a59-d139-4fee-83aa-9d54c6320b8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0ba3e74-b935-4ecd-be6f-a9e982ce54e2"
            }
          }
        ]
      },
      {
        "id": "72bfd8ce-cb38-43bb-8d11-f317dc3d3088",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b995562a-8bb6-4d9d-826b-9a596d602632",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a137495-2f7b-440d-a600-a562c6ec077f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5155fb2a-2b9c-4059-9a88-eece6d5e3169",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d170b8-56e6-494e-9a39-bf0d47f524e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "891cc106-d30c-4e04-b9c8-87e2e8cf225e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0feab708-28b1-4e39-b6cc-fdc6c9276f23",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fc01c7-c8c0-4861-97e0-8150a6137471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7ffe563-97f4-4b00-8ea7-7e186afdcaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3db360b-186d-4492-9c99-f74f615e156e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42dd6dab-ab7d-4ebe-bdc6-95c94b77ee69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61e160c8-dc10-4707-a38a-ba05208cf0d9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ddc5c900-9948-4bac-a5d2-d1387a04e744",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1347e63a-45ca-4fda-a2fd-db450a292e21",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77846c5-746f-4604-bda4-2bc16dff0f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "825cec98-32d9-49cf-824f-a0f567994d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80849ada-7f60-4261-af93-6d589af8e3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730d2df6-641e-417d-818f-2c1c9e9aa1df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3b1752bd-ca00-4d3f-a05c-99113c97bd0a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8f297bb3-ced8-49dc-8b70-4546cec07f16",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35a254fe-4c3a-4cd1-ab16-37fda0ed31bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d8c5cf6e-4e9b-4e0e-9e0b-5a1d709bbd73"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "216b98c4-2703-413d-95a0-bbf550f9eb73",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "03136dd0-7e86-476b-9e84-aebe0268097b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f782ccf-6bc0-420c-a28c-4c314042942d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "efe7d506-4673-439a-b29e-6bac5fe8d835"
            }
          }
        ]
      },
      {
        "id": "54f927c7-3f80-4306-b8f5-5abcc3d31206",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "51fca8e4-6327-4a6d-b476-7217b1f75732",
            "name": "Negative Testing",
            "item": [
              {
                "id": "41cb8d97-48d5-4345-ab5e-763c4540a821",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5e19b184-ccd3-46e0-a12a-a21abaa01b60",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337a7f54-ea87-4ecd-ade1-04ea411c3049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7249d6f-7a4d-435a-a708-48e3d8b43481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b629bfc8-f8ce-4108-a718-a8e413606116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1f766b8-bad5-419b-a764-5c9fe022cf24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d7425d-6d52-4a64-8e26-89df07e520f8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b603e8c-5055-428a-8c87-5518b9fecc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93bf0181-95ff-4b05-89e7-291c21ecf266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a615828a-aec7-41bc-980d-cd9e6a3ab6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e210135-b30d-491d-a6bd-f6faacd6f4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89221579-54eb-49f4-a625-a14a9f9eca70",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeab1385-19cb-4aef-bea3-6bd192884607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c589caa-26c2-4d4d-86b0-ae38ba9e3569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4c344c-ef3c-433e-a449-18f6c55bd096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8dbd6446-e271-41b0-8df8-8ef48a2a8210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12bb94da-0751-4415-b0a0-e1a9efc0dd5a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b39bd46-b6f4-4b44-9d5e-0489a5a7cdd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686e58a2-91ba-4ce3-a64b-fb51710538a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46cfc26-051a-4ec4-9047-8123fbacb0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "392356d9-7b7d-4f7d-b3fa-278e37c9f2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bada5f23-7496-4f68-8de0-dd3fab6c618e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14c08eb-b6ce-415d-b14c-54752687227d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25c3a8f-073a-43f1-8bb0-a6cdb2f46df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fa5f2a-7607-4e3a-ac03-55b90ec59325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c49a49a9-5421-45ff-968d-45b26cbd598a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfd1579-2c5b-46d6-bae5-6c17444554d6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0957fa6-c4f5-40da-a5c9-eec9df972046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e0ca36-3661-43db-87d0-39c5ddff2e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da436089-1e9f-4c1a-b3fa-31929ac0d9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fac9e0f5-fc07-497b-970c-4eff7c9972b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27bd409-c228-44e0-846d-eac183b14f6f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc16cf4-6e6f-44eb-8922-05a1db77b8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52976a11-e080-4568-9d5c-e67549bdb890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67010f45-520b-485d-b1ef-d49cbb30d5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de911131-791a-47b0-aa6a-65959ab4dedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5aeffdd-00b1-4a99-a71b-96b2c3810391",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153efe3b-ed08-43dc-b66b-067fd91e8be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909084a6-608a-46cb-9f36-0c0e827477ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01096bab-460c-4812-8c67-4a363f8ec527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "155b0215-4b92-434a-aef3-6b9b9f78d971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ae1607-12db-4abe-8876-aea8c017571e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5653917-a298-436b-aa52-a11cff87a810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f6db58-eff9-42e4-96db-3c570a5d1ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659664b2-7530-4fb9-a130-000d74eb6525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c06765fe-938a-4394-ab46-a91684b68ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e75a77-4845-46d5-9032-2dc146e47662",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b8792c-0e0b-4b90-94bc-56982d215ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f478609-ae80-45eb-b9e3-9329926d5013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d333a54-1a01-49b4-8ab9-3201ec93f1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "093f7635-5343-4acf-b52c-17e63006d72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc727622-31b1-4518-a649-0b418d3023a2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cc90d7-eb24-4160-9549-9245795295a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fddc6a-f363-46da-b804-6cdd84b750ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc0af5f-000d-40ec-adb4-9ff8cc87b270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b98e2e98-8c0d-4ffd-a7fd-d6023860e2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aadcb07-4366-4987-a8f2-79bc57475fd0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94ccb9c-044b-48c4-bc08-ba0b1a3a996c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c1de61-88f5-42f8-95ad-37713b777d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02065e6c-4a2e-40dd-ba58-20d4dd022511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1140c5b3-54d6-4b4d-8a11-6660032095cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6ce2ff-1102-4a37-af38-9ca06d57f9d5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42dc46b3-1190-4342-a236-82a428e56f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f83c4c-7459-4841-bad8-dfb3c0060c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fdac36-b4dc-4e1f-9e55-3388b6686736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7edb33a6-1d36-4625-b896-b147dd4a86c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b74a15-b276-4426-b07c-c59c152f39bd",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19a16d7-027f-4f81-929d-f5f3dd86e9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c3a83b-99d2-4cea-91c0-583694317d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e775e08-bea5-4050-800c-a64a1f19d649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acb846c8-1737-466d-babd-31479238cb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854ce771-479f-46b9-b1f3-819698244057",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c068b295-df09-4851-8440-82293be52720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857d4934-908f-4f1a-9afb-ec3059f83d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d84eeb6-52bb-4139-ae77-8532975498b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8248ccc0-3d0f-4293-8f0f-c54cddce84ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276f087b-adea-4a29-859e-dff3a51def46",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd98cdb5-9955-4a7a-bf8c-e18a48baafba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc3448d-9bbf-4611-bbb8-95a9d47e56ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03201ae-3c28-4b6d-a0cc-32408db28355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa568727-0849-400d-b841-0ac0b5ee977b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80504e7d-447d-4fc8-b801-c73c12563a87",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e28777-5eac-4fec-bf6e-5712025ad9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0678beed-f516-4a2d-999c-8bbf5f50a858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7703eb6-7220-4772-ad07-aa280c356542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b3ce259-e282-46fd-a672-2298d7710a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7289ed4-7ba9-4fce-b198-fd8424ab92a2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21b1e94-7a55-441e-b8be-238513bd3a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630dd698-969f-4b77-bf7d-1613840a8de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7702167-7b39-418c-a8ae-fdf5055b775f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0172a4-4e5c-4ca9-b3d2-6ed180e1352f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109c4ecc-8773-4723-83c6-67545de909a6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a056d1-7913-4479-9bdc-e9b3df8a8597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b6129c-ea0b-40c3-944b-b5204f3aea8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e0ca4c-de1e-4643-8a2d-216a19e0d66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c128dc01-8a87-47e9-9cee-0b7dd4c4ccf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a32bed-c89a-4a8f-b0a6-2a135555d7d7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4bb7d13-cda3-44f6-920a-5774dee6e5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a414c3d0-6506-4e2b-bf99-b6049f66e610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579e1f66-dd72-4cf4-8794-270ce86ca4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a47a10a-4555-4d21-80bd-09a44dff4ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c4251a-17a8-48a1-871e-f379e5f36ca0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da161694-4a3b-4e0b-acdd-7d25423f5404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f35bf1c-38fd-4030-8ef6-c30d53846653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7f7ec8-4152-40f5-a308-00186e18ba81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4459a48-dcb8-434e-8c75-d43665954b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6cc64c-5fea-46ad-8b23-d80d1c69593e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6246e05-b376-4097-9233-522a06f1cad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfd68fb-ebfa-4383-88b7-0fe61ec0bbd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170a4bf1-6432-4f6c-a771-9bf32d2f2849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "79c68b6a-7b04-436e-991a-5da04909a642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e274e8d6-c154-4a6a-bc12-d36f1fcdacb7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1603253b-38b6-4443-9788-c876a6546a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e04cac-8c15-4254-8ed1-af79421488a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f13704-69aa-4ed4-a81d-b363d738c6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb1f419-595e-4815-a535-1b6f1eb87ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007d7449-c9ca-4195-9824-d02109853afe",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b41a90-1c59-4148-bd2b-ae559bbbbf64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10cde030-5ba7-4f1e-8b53-6df003d84921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da053747-6f03-45ce-9ece-91dce58cd1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "81de1d41-e2a2-4819-84ea-15d0c5fa4df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b64d52-390c-48bc-8f9b-e946a94afd72",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a805617e-232b-4743-884d-b1079687f687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe816553-8cae-42f7-9e3d-30b023362966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d01e85e-0dd8-4dc3-9795-275f856e7277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61a501d6-fcc3-4728-96fa-99f149037c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33734584-08df-4e53-8d52-9c78645f32ae",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d888f5-70c8-44b5-8411-4f400f37b104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7161e9-f0fc-4d70-a647-5f3ad1308fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982210b8-33fc-4def-b813-40abc782e4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "316b8f58-7a64-4e26-832a-7bc99840913a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985b80b5-8799-41e7-b746-1ddf39c513b6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad233e4-8b61-4fed-9725-a408062bd3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c1b23e-5084-47a2-bbb3-5656889d4355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8651ea11-f042-4c4c-82d8-13404844cca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44e06b26-4817-4d12-b677-eca8859ec64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74315479-f518-4cbf-ac66-a0e3e5dfffed",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67da221-92b8-44e2-95f5-2bd91ea9f813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "295c36a7-ba0d-44a9-8929-4b667f088e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4d4881-3530-4b39-a3c5-e50508e24c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bed7337b-c08e-47e7-a8e5-04a8393db113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c767502f-2ec4-49c0-abf9-4ca7c3e42963",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc3275b-91ba-4235-b429-78bdfdc03437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d16e89-7691-448a-ac05-71b846e40248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab9a7fd-9169-43da-87f1-ff9ddef7c111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3453a53b-5ac6-483b-b0ca-d17ffaa283dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa643d6-64f1-4c9a-991a-e3d92fee85ae",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21aff945-caca-4bb1-bd8c-ee94c55fdb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76323151-ddd4-4327-a2e4-90f28bfb0449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88350f4e-dd9a-45d2-810a-7ec22de13c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3cd0953-bb57-4df3-8850-6da34f8536d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d2bbe4-9d74-4010-a359-a4b9d0b05676",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb3dae3-8a45-4f39-a512-628a700ee710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f981f9-ada5-4ef7-8e3f-d0b4581a70d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504d471d-f6c2-4f8e-81da-52c3aed5b990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e24776c7-9c73-42c5-a076-cefeedd1ade6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09cce548-25d3-42d3-8ab8-1d16d91fe0cc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e69b00c-b07b-4db5-8766-5f3c3993be69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57fac962-9dbe-4779-9136-315fca2d607e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0403f9-3fc3-479b-83ca-3f9d7e8279f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "673e4632-cb21-48b5-b227-6487fd64729f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed73a49-a6cf-4d1d-ad2b-dc5c2f9759fe",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c24086-ddf6-428e-83e6-2741792e1545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda253cb-bd8c-4e6c-8780-5ede362ba714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f101d9-484c-4ea0-8e13-2091b70646f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61153a55-e94c-40ae-b2c4-048b2835fa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9dde226-2149-4d68-a380-82d47143e262",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9603aba-aeda-4188-b251-744d68090192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3948b098-b877-4471-938b-afbf81fbebb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f088f11-5fe0-4078-b030-30427b5700e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa5890de-7ae2-4e20-acc9-e9b822632a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb46a637-b595-47b3-8dcb-3f86c7537b80",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232a98f6-a0f7-4a9b-98d1-7893a18d4bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc5ce69-0611-4d43-8177-6e0b872c3245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1a73fd-4824-44f6-a0cc-305263de286f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e20d5a-01ca-4a9a-b09b-ad357ef3aadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8479928-5444-4135-aef9-1b5b7b65f6ff",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d5238d-9400-42ca-a056-d0861eef3094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b360e43b-f1da-4bca-8f42-02f0661777cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28d5b7e-d23e-4b33-8339-a5b7b8e3e666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f98d04-33d7-409e-8881-8a220d6ec7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3a1c42-5531-4407-ae1b-d9465bf40fe4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c6f67d-2fa7-4e8d-8db8-d29c3d151c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479eac95-4aee-4dca-9cda-be2e85a93109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5f8400-3993-4cb7-9eac-d166c9a75785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c23b5578-847a-4199-96de-03c35404687e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b580813c-89b5-4041-9ec4-b781f046c1ff",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf70d50-4181-41e0-ac2e-ff814f515099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2851119d-b44a-43f0-b2f2-4a0f586c8c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f04af4-fd54-488c-b54d-a90330e1449c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "35f41ac8-3735-43b8-8858-72a54d9deca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df99b002-1482-42c5-9fff-20925427a1bf",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6250287c-c4bd-40cd-973c-b2a35fd00e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd63e1f-6b74-42a9-95c4-b6d361bd0c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5bedda8-dbe0-4205-8a18-b861f48a250f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a562fd-880f-4a08-8ec6-060a0b5fd40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93719b7c-fc71-4c9f-83aa-efa3cd7379ba",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af23251-ed26-4ac8-aac1-4308711bbb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45fe27e-6790-474b-9907-626bb6acfd7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c982889-e809-46bd-974f-d02a6a421f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b85c7318-d845-47e8-aadd-87fc563ce362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5170950b-8748-40d4-9912-e82a9ac28898",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357ea2e6-39a9-45bc-b267-d36c62214a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ea4c8d-cd66-4b03-9711-637ac54ebc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2dc79a6-38b9-4d25-9d82-f0dbfad9e518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "27d97742-61c6-4af6-9fd4-2d52a48921ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1657224-eccf-4a03-800e-1fa427444c9d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9722c60-1210-479a-aad6-2cab85063401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3849ba53-c89b-4bc8-b6d0-efee7087fa82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937b1a70-9b79-4ffe-8665-6785f53290df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f0bc6c01-c4b0-4152-9f5f-ed8f966d8f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc42dbe-040d-444c-8fef-d99190b269f3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bdc5a1-dd7b-4619-a483-b337849326be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a61dc76-1aa1-4a9b-9533-7b1f2911abfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4d6859-9cf3-4158-8e10-f8cdc2dfb95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "42018878-0650-492c-aae2-059636323628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bb7731-9e4f-4cf8-b897-d9068ba005d2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d438c7-3dc7-45d3-87f5-93e73449340f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553bbd3a-81e9-4547-992b-48970d1e5c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85187e46-abe5-46b8-a94c-8a58a72ab600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "20e50c16-2ad8-45dc-9fa9-7f5773531a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3dbcf8-9685-4b31-b93f-87b060e5778f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a76cdfb-66ed-45e1-be00-ef1c550e43e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78271a81-199e-4693-a51c-02561beede3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e0415a-6308-4e2f-b69d-b9a0b8255525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "230a1cf5-46e2-4eab-a6e4-13b339ab30d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2b7bdc-e307-4b7d-b0bb-0176ca480715",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "defb0c97-9204-4966-8829-fc93117dc728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9af099-1f54-4891-880c-94d902ef6a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43ea7b0-1d02-4699-8f14-d39f14f7755e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1723eb8f-c332-469e-90f5-77a5335b8e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bafa78-b1df-4b2e-b2ac-bfb7bca84314",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c2a87c-f465-4731-aadd-72a6e4e01ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249bdc68-666e-4b18-a69a-21aa0ca61e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fcb3ea-d900-40ae-87f2-cc03dbcd1205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2820a2e-6116-440c-a668-3676b6508cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ecf8ae-efcd-4257-8dd2-86f741fda0ea",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef73b4a-453d-4894-9bb1-8b6d2b0c802f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25419e15-e853-40cf-989f-29b882d40699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c99ab1-f214-403c-b643-3b92d2a22d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "321812d3-8c26-4b2c-860f-4f2e736c6b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b43be3d-9f06-41e2-85e3-66247442c432",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c2a748-36aa-440e-9c94-cbf275f18f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41312ec8-6275-4d84-9098-827ee7d62fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6f4f9b-3906-43a4-b38e-fa3854116a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "207e9d79-67f3-4c6e-83ff-cfe7651d812f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fd4c9f-ac92-4391-864e-b931049b2756",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bee4ff6-020c-42ef-a346-b15baaac8529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6914b14c-e2a5-4f3a-a0b9-1afdb21004ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49d3804-f0d0-4e47-8bda-8a43362e9cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "955caaad-8235-455a-893e-7384ef729fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab06344b-6c48-4a32-be92-2447ef42d4c3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f38755-5931-4c54-ba94-f3df9f034736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3cf8f8-0a56-498d-a393-45e3dd5fc1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2d6175-6bbe-4451-829e-8367ec1ed69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "50abb348-cb06-4f70-9039-7d5876530865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dba1ae-c43d-43be-b1a1-9bc4a6ea0809",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec447d68-3f3c-41df-adf5-00ca90120fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8770c40-bb29-4e1f-af5e-65abcda4f82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d49d79d-827f-4046-819c-a9453be114c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab8d7c72-1fdd-4699-9849-885ab48dc01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7fe203-bf77-4c55-bf1f-5d05b3e710e6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d89d74d-d8c0-4082-9912-1354b67c05c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b529a2-d7df-4b74-8804-38b0f98724c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7354bb09-5b9a-4e17-a978-155f4f8236e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2430d51-8800-4aa5-b82f-d2af1fcec9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddfcc14-8fda-42f1-a3a2-2ab4cba6d9b5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b39eb8-dabb-4be1-a952-f1396bc15f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865fcb7f-1829-49e0-b57a-5116456f71e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ceed863-96c3-4288-bb39-07d8edff13c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "045979bd-a9af-42e0-b11d-c20b85790ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c57be64-43f0-446a-b479-deb28a0c9509",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2adc342-a0b3-43b3-b690-f26f9df82a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098c0e74-39a0-4849-83bf-adeb4c08ed6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655a1264-2082-4214-a107-94ad7ebecc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d0e1c7d-868b-49db-9376-bb6a30ac0e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31de8f8c-4dcc-40c3-a1d5-04a1503d580b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e391df-5349-4a67-8212-c2f739c62b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f42278-87e2-44f0-a8f9-ec381da2d321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa02876-18ae-4e0f-8ea9-c7bae01fc7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "86bff0f8-275e-4c60-b406-ec9bc83547f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd146a46-dfc5-4ee0-baf9-962cfe433d7b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcbf441-ad3a-423c-937e-37958d9fc7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47021627-4396-4dff-abac-da4699d5d369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00cd4d6-fbfe-47f2-a51e-e7ea2cd48bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "904c07af-3fec-4ed1-b6a1-8c5f00ab718a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e034c62c-1213-4c8a-91b0-109109f6d873",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1720dedd-cb7a-4083-afda-1780a7558050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef6f92e-e3d1-4444-948f-04a46c07bd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c462a52b-873b-4641-8be1-386100bcd6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "21a6b0c3-242c-4f94-96c5-6db8ea983c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1871dc0a-dd57-4cea-bed3-1e2b7fda57c3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375dbeca-bf55-42e6-8952-e5eb292eb428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8096417e-44f1-474e-8817-4c338ff87597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d22030-a63c-4154-95dd-40c0c3d7d772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "35ecc1e3-dd24-44eb-a625-514c652e8e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935dc928-bf33-430d-a48f-fd7b70142dca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3044198-ad73-46e7-ab03-4a36809ea543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf78e216-f63c-4584-8766-9c37aae0b4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64eb70b9-f957-481e-a83c-6bd985cfe686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1efc6f-4238-4117-ade1-97f4e3a77804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e32fb2-9919-4396-9f42-012d81e16d35",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6093f6ca-014f-42d9-8f6a-b7064863e2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d859a54d-8cb1-43ac-96bf-b9b9fda9cfa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f15ee83-3194-4041-9587-6a8c65297188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a46e4ae-a392-4e10-afe7-68701d94eb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b95269e-9070-43fb-9608-b20e2dc2b1d0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe37a16-6d45-4f34-b0e3-2a56c24929d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e0a678-57a5-4e35-8925-d25d42110231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2130a0c2-9e48-4b10-bc38-77d12f382c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "480546d9-2ae1-4f3e-b6b3-b80d0508989e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833b08bf-a926-4a60-9e7c-e5389c915fa0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5323e2c-1a6c-4516-bd4c-2a7cc1e830e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5521675a-8923-4a09-89c9-2d207e3e4006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3bf38c-80fd-4da7-acab-3cbc5b570e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea388ad-8bd5-4f11-ad69-31dac80d07f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39afb4c2-7abc-4fc2-bac5-8fba730175c5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a760c6e7-9a50-4d84-b2a0-9d12ca55e84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c9a9a2-38c4-4453-9f77-1808d4b355f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdccd291-7ba7-4d54-b653-832b8b857a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a493d49-4d58-4578-b38f-b03ab3111806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e3be53-ecc3-4352-9881-49e39b34c1eb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99140503-7ee3-447b-a67c-b48fb73e3c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04be239-94f4-4ef6-af5f-81eae263a2e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5519b0-1f73-4b36-899b-23a9225b1129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e31ed012-a06d-43c2-a56f-a355f6d7c720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf86f9e-ef80-4bab-9e05-1d846045c0e0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e080f731-4d2b-4ab1-b8af-9b742b9b901b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bedbd0e5-ba78-4850-b37d-6a90f74ab25c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffeda44f-59ed-4a33-9994-8348fe437858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1945648-ac96-4be2-a520-ac283e39af93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf80e355-e6b5-46bd-9f37-8899cbed3b33",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ed4154-5637-498e-bdfa-5fcd869401d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4118d9-5b59-4643-b462-f137e3557483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d844e90-0ec7-4775-89cc-edb062b737ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf22748-5e95-40af-b2be-af560b75c288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1854127-9a83-42ba-955f-88016138d976",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99bba6a-7b71-4787-aaa3-963423eb5a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35ae7ab-327c-4e9a-8124-7457b06f0a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915f35d2-5786-4479-b71c-7a6a20cef7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f52cfc1d-4418-4fb8-8c19-b7d659fe05eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18acf55-77cd-4684-be49-9c20eb4d27ce",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992a6585-89f7-48b3-8c20-152568ee8be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5695948f-3c0c-40fe-9e55-eee14b2a1bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25aabe5-a4ed-49f1-a59d-ce5927643666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "88524132-4aa3-45fb-b06a-44bf5406e975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9007c1-f70d-4fc2-a779-c122477e1d89",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6db9989-371a-4672-9042-8b7259fd6000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2aeacd8-ddf0-43f9-b2ad-67e72e99c857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a89c55-e736-4298-aff7-02c0d92355a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db31a0e1-f75b-4748-a26c-b029f3c0777e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b5c94a-c212-42d5-8dd1-4c97d80065ec",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e741cc-201c-4108-a4c0-31c4b6664347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ca50e5-76fa-4a62-abd0-2ee1115fef5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a8bd2a-5108-4afd-b8d6-712c1013e5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d2fd2f7-30cb-4256-b9f9-8a95d3d10127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c74028f-4fa9-48d1-8678-32aa0ccee34b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c824c6-7589-4ad6-b1c8-38bd0d34c376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64769575-83bf-492b-b77c-6d7278f0c822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e49024-f302-4841-93c0-20f15695eb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d618241-ca94-4b95-be3c-7e6ae0268d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1423f0ed-4231-4bb7-8f60-ebdcee2bb7a7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a74408-48f0-4eac-930c-87cd25a76545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7999b237-47e9-45e8-b9dd-e79b30b644cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d828513f-7365-42e2-993a-c742b8f7a489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bba2f58-90be-42b4-8985-0e3bf9daf809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297304cb-7676-4e1e-83f9-fa2e6b54d526",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef4222f-7adb-4b66-ba4d-e0daedce9b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b180fd-e975-4523-93db-267fc3fc7e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0902de13-92aa-44b4-b48b-ea9526f3043f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1163319-fdba-450f-9fbf-16e1a3378cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d44554-12bc-4900-9a4c-a88d108a4b52",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06b3d73-bd4e-40e1-964f-90dac28b1db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb4f910-5ec7-4c4f-aa4a-dcd4920b9802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b4e9ff-c56c-4e2b-ac44-31b0e85a30e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad0fdcd-07d4-45de-952f-ba5267be331b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4c6596-71e3-4353-915c-349508548990",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53e4706-8a49-4e2f-915a-ed58c1d7da99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17328a97-b68a-4f41-85c3-b5904347737a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5f3705-12b6-47ed-9915-785cd147fa06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46a668bc-8b2b-4dcc-94b0-83461d9b814c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80303953-5f86-4f56-89c2-0ca2a879557b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adcab4d-9101-4bb0-9630-636ad7ace48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af79c91b-2e45-44bc-b160-302ac76dfb30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839af953-f197-4d82-a98b-d6fa48b3ea7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "746441d0-fbb3-40d4-bd41-4a2afcfd0e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f029b9-c4b6-4748-b292-36d68249f603",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2427ba-2d9c-44c2-8895-5499e487d2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be495e29-039d-4805-a9ec-0d7ad848b3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c6ca40-8eba-494b-b75f-0f6f5a5714e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "405e4cc5-59d5-483a-8bf1-891d85b1eadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d153f1-d3d8-412e-8a59-97e1a4211145",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11b2b59-76ff-4cc0-bede-4ea99d38eec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6462194-1965-4660-9139-18e917c02adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28ea4d4-b2d5-41c8-acf5-3182d49bff82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6642e662-ae77-45c4-a1db-ab92fddcf388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd63d06-d3af-4947-b082-a20f24c15e84",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01a32c8-1abb-4764-bf21-e95f09940b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60ad1f9-20c3-4291-b509-e3d0e53516d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fa5b90-0f21-4bd5-a01e-b66efce75781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd1172c-c6ed-413a-8dd3-52eb8a2a4ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855692cd-2017-46ab-a34d-675f920ad8f4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdae05b-0674-4c87-a053-4e79e25c6aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449f63fd-752c-496d-9380-c9ddb34a7682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e572c410-7aaf-45a3-b702-d6c805e2fd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "afba2932-bc8a-40a7-9ef7-64177dd91928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01ddba5-f75d-479b-b5b2-453989ca02d6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b7aec0-b5f3-4273-b21b-90d2b6e37187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c8ab6a-9c0b-4ce1-9d16-50f3fd4950fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0defbd-b63d-4ee1-9296-ade46c3b4bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a57ca83-11a7-4191-8a0d-0b27a14e8879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe035f9-eb37-476f-a5f8-23ba41a80e48",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7516fbe-c281-4f9f-9310-68fa0ee03c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc7187e-2de6-4eed-af2e-52aeed16604d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84e84f2-ad16-4113-98f9-f143e9bea0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78a9a271-9ac8-4603-9aeb-c104f850d035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c591a945-b620-452e-80a5-db28f1b784ba",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabafd84-dce0-42c4-b42f-371c6bdcdfa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551a4ab0-29ef-47e1-bc61-47044b8bbb67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c706f218-dfaf-440d-8270-f800aab9aeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc9399d-169a-4ae0-b536-a8b5ed304d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b95aeae-1050-4c38-8a14-4d513701b7f1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a58414-a69a-4b43-ad3f-c067f17f1812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72bb91e5-15dc-462d-8ef9-b9d7e3b29c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e180e86a-341f-4621-b48f-571f97a1205b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7f4d9f-7631-48bd-8f50-09cbdaec8011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5044151-9912-42de-beab-3abd01fa6331",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a4eaf4-e3ea-4bd7-8e0c-6f73b5cb16f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eaa9d53-54c6-4348-9cc1-ab7f9592f9f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb26cd4-1597-46d8-9077-e6cfe8fc64c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "158e7db9-2f87-46bd-ab68-333fb443b2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eafe194-7e70-49d2-946d-7c2589f14070",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cef48a-64b0-4e83-801d-6d0104f50a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d67accc-c88c-4431-87da-76de6603a3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbca509-6d5d-4099-aec2-654928b1d4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fbe7e7f-4136-4fab-9a2b-dd8b159e46e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2290050-8a11-4d01-8b91-bb844ed8a30b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92f6696-47d9-45b4-bb32-05eceb33bbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595612a9-5703-4b1d-ad37-5e2b791ef0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4752dae-ea33-4070-a510-2306654e0b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1170d61c-4ae0-46ac-b125-ca57f0f499f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48732675-eeff-42b5-818e-f340eaad6f9d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db24cf22-3711-40cb-a2b4-d591c2f25fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd75a7f1-fd82-44ea-9ac3-eee28debbab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa5296a-3225-465f-96a8-c4e047a22569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "54e45958-fcdf-4648-8568-364e86495c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020a71ef-d47e-41ec-9872-e5004eff3ac7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d0b4f4-bbd9-4731-8ac7-9990b213adb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30df8a4a-6a2f-4abc-aab3-e9f1af08e8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2473fb5e-647d-44f3-9aa8-974f65025630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "815b4e47-6a29-43b5-922e-73383dec88ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85bc3ae-e460-473c-8c26-81d1c48f013c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a5d43c-f4e3-4273-bb5b-fdcac9ffa99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "accd1911-8bdd-4e9a-b923-3b2e357bbf1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b8bee5-40f7-4f9b-b87c-c21af59da165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "309f5ffd-c700-44e3-91e3-2c0a727f9047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7ea66d-8146-4a72-840b-7b294b538c77",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb47e6f-005c-478f-9aa9-0ade3218c39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ccf87a6b-f37a-4e9a-beda-2b05767569a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ca80bc-fe1b-476a-9507-46a93c7c643c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a60a24b9-a047-4370-85a1-f1db1e9e857a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e28e920c-4ef8-4d93-a237-225c88ecd7e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bbfed82b-04cc-4828-8ccf-e69be547c41b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38631e25-c9d8-461b-b566-13f61b3d10fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0782221b-3663-4ffa-9d12-97baade81c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465abb3d-7038-4fdc-ade7-f1c8d123d7c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c8c2008-0cc9-47a3-92a1-90eefc8bad76"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8bc9aa2-a31d-4f5b-b6da-3de991f05548",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04d47d85-c9cd-4c7a-9afd-706fd0601844"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c01b459-0284-414f-a1b2-fb9aa2f303e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0456b87e-800f-4705-8e2f-913485b18ccb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d6247871-027e-4f7e-aa93-ce3ca04e6cb8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "37709d83-5fad-4d88-b865-1e290e01f997"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6de45a04-dc55-4b98-bae9-38e03c2ff2a5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d34132a4-f0b9-45e1-b8fb-3f085c029d85"
                }
              }
            ]
          },
          {
            "id": "e2e8cfe3-83a2-4bfd-b49a-59f95d505d3f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1d116c64-a9aa-46ee-850f-bb8f67537c45",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6abe302d-b90b-49af-bf32-a2ccea32cfcf",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3564ebb-248a-4fa0-a3c9-52ef1f0688d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "eca64691-30dd-42ce-badc-07d8ae9771b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20864d7-6781-4539-843c-185ccb08f3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a38028-327a-45cc-8f10-9b6c748deb93"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c31b7e3b-ce25-4511-a264-e48e811a3f21",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24ae7cbd-03ad-48e6-8f2a-5718d95ee594",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5cd40146-415a-428a-bf37-c299af9fb82c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7be7d2d0-4cf7-4b34-aa34-a114a6f9bb87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "310bb58e-ed74-4cf5-99c5-91ecec7c289c"
                    }
                  }
                ]
              },
              {
                "id": "169904d3-a1d9-44c7-a4ea-3fdc62087322",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c45a2e0f-c6c0-41f5-85b7-785f6c9b638b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e910e86b-b847-42b7-a210-6dfbd4863323"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e759a6d-664e-49c1-bbc6-f9c080d54950",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "64cf1d24-5eab-4c5c-96b4-64a20971b98c"
                    }
                  }
                ]
              },
              {
                "id": "d0df9d64-30c5-42df-810b-fdb3d337d4c0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33da36ee-17dc-4017-828b-b108c7d31a01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "972a9342-aa68-48d5-9c95-398722f0c730"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84634a87-fa91-4d05-bb03-0ab6a7d65747",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8351c095-c226-4792-94c2-daf70e193dcb"
                    }
                  }
                ]
              },
              {
                "id": "1c063ffe-9734-48fa-a896-0ca29e7d1288",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "671736be-d951-48cb-ac2d-a4615bb4789c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8acc5b4-c778-4900-ab5b-24cb8e5982a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a20dce6-a456-4d83-a5ef-ff0e0ab8a5e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9904ce68-9f8d-429d-a7dc-60d5e7125127"
                    }
                  }
                ]
              },
              {
                "id": "67e673ac-6e71-4fc2-a38f-ead8e39ac9ae",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f169a157-05de-4d8b-857d-96287862fcb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9131ad9d-e469-4c64-b245-7e288f6ff318"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48168b30-5bc3-4525-8ddf-d7e5eb608e2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ecca92b6-850c-409a-b2f0-6ac35a690439"
                    }
                  }
                ]
              },
              {
                "id": "85d4a837-e466-46af-b25e-169952a80c4c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8722d487-8a2d-4444-bcd9-e43c46fea113",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3445de54-ed7b-4d0e-aa7f-b27f4c9cb958"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "799f3d5a-38a6-45dd-8f00-ea6927085c86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1fb4542c-485f-4c78-949d-b951c6085bfc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f44ac9d8-06a4-446a-aa56-142292c898e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "505c4335-a735-46bd-83ef-ac6215af8278"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "173c3e61-7c88-4b59-ae0f-a98ec647a8cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "31b16f99-4b2b-4667-994d-19fda0d027f7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44cafaa1-5a4e-4fec-ae1c-bbbc72475889",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8921cd4f-09a8-4bea-a1f9-e1bf4baebc60"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ece760fa-3a27-4cd6-badd-d1c9664f81fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6941ee12-a799-409f-9b0d-8a52e2ad0efb"
            }
          }
        ]
      },
      {
        "id": "79c702f4-3498-44a3-84ae-7cc1b49beebf",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "37c2417c-5a0c-4d22-ad7a-3e193896f54b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "501f576a-9fb7-4f78-a057-4bec30870ab3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b40caedb-4fe9-4992-96cf-7250986b9601",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a4f221-1e5e-48f5-9a10-87f0f4336f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d07583-a69f-4651-87b9-abdce7cb1b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c038daff-aaeb-4726-b53a-e9b888503af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6596bffc-691b-42b4-930a-df50bd03a324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302b3450-6d1d-4383-b8a8-06f38d7a5dd4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c0a626-783b-4c27-bd1a-875e70593395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78362a15-e5ae-4df1-add3-743248e24219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d180327-ce87-4a4b-bd97-6b8614926f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a0fbdc8-88ce-4c27-8e57-621f07f64f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a5a60d-028e-4de1-a4a8-082b2e8aa14d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd36a38-00ed-4b02-8220-9edafc31db98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1da258-d33f-4131-872a-d4aef2cddf99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677f7cdb-15b9-4115-90da-ef594a25a7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9419144-f2f7-41d2-a579-b76c0b3a765a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced97966-eec7-4659-a0b7-4932b33ccf6a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8098b688-0bd9-43df-b8cf-0dd09a9ffb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a731ef2-ae77-4a66-9c75-0199cef8fdbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0dc546-4cbc-4cca-83c7-c5c26bf81f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d120fbd-ad70-4b70-b74f-62448ab8359a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3885fcc9-2b38-41ae-b138-4e2d63e6079c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5525d6ae-3fd9-457e-9814-81bbda9d82a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c00692-dded-4cec-9ac2-4f3beb14b22b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46899567-dd0c-496a-83a6-ba7610d6e98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28ba0974-000e-4591-bbcd-a9b4470440db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb769e3-f16a-43cc-a2b5-213fd4162f24",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4826dea0-64bb-4456-a47d-429afc53abcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c1955e-abbd-4e73-a812-e6db52a83ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9210bfd-97d1-43cf-a244-26f3dc742360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad22513-de92-447c-98ae-4089631a5ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d96363-375f-49ab-be24-63b1974eb1d1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd430e3-6257-4517-bbc1-d6a7ab69e796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c65554-1e01-4c65-aa48-7e8d86267ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65ac143-4802-4f24-8869-5b7fb6069610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad82ce1c-aa5d-499a-9b2d-f648c36936b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47da1634-821b-46b9-8f07-6c2f77e091ec",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a54a92-3fb2-46f9-b391-756bf8f8bd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b2d365-4c63-4524-8d78-e23d2e742689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0777dd9-cdfc-42e9-8470-a13b318ff5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2398296e-d146-4955-964b-568ecf4195f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c467fee-c26e-467a-af72-d0138ed9e765",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcb3e71-a378-4fad-b710-af62e1e2146e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91a02a1-b106-4d2f-b634-fcb4664e0f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b410934e-fc87-4137-91a0-49301ff60738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "263ef4fb-b093-4352-ae4e-049cc78e25a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb10fe3-25d1-4a29-97fe-59bbf305f675",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863660ba-a302-4cb0-a7a1-e2aaac4ed2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91238057-ec2d-4122-8a2e-13c5a52d7409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fd8593-ab70-4270-bb39-8b6642ff236e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e84a4ee-a728-4f7b-98dd-0d976c865470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d979a03d-6388-418e-8f78-becceb8d83d9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85260ca2-9c66-4e6a-ad7b-d80a2aa0e4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d8c366-9615-4bad-8720-95cce8ff83cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fdb2db-0eb2-480f-970f-e77647e3c5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "450d1326-8e35-4ad5-8d3c-b5a1c8daad92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32dab1ca-3e86-4c4e-a1aa-0f858e1bcbbb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd768d3-1f04-4b32-a4f7-751da3caf9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173d9717-e437-4b0e-be9c-f20b83911651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c010e03-b0d0-4df8-a40b-3bba22c5920d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d787a32-90a8-440f-8102-afff661d5019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3caad7ea-ab4d-4301-9f40-260b2c6db2ca",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866b3533-ee9b-485d-b297-5873bbce0c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869f83ea-478b-460f-9cde-411be709cae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9d1f36-78a5-4f8d-b8cb-2c94636d19ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4826504-1897-4166-afde-1cfce90bd12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2377c089-7356-4489-96a5-06df64a9bc64",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c9d65f-8198-4af9-8679-2568920d305e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6106f85f-31b9-44a1-bf14-e71c856ff0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0cc420-6126-4048-83be-d3db655db38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a51f7b81-f66b-40f7-a97b-a5da4cf62e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b14ae51-6bdd-446d-b063-9a063b4d390c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadf4ddd-0c25-4c0f-ab9a-a1a802013c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e8ada0-6d50-4753-a420-9bf30b53b2a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a18f41d-d198-4d07-a1d0-eac3f890d0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "284bb528-475f-43eb-8dec-6ac336c25906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63aa8567-6bce-4334-bff2-949836506958",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246edc0d-a2f0-4f88-a0e2-2e53181fad37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f947575f-f62a-456d-895a-b2ac782a00fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffd5c78-dcb2-4f52-9569-28d134cb8311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bdcb3d2-369b-4174-a1cc-387ec956ed89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d750715-395f-4128-844d-846f6e9d999e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013b095f-4438-4f7f-bbf7-e6c9abed68b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1bc10c-d2fa-47fa-bda7-915d13f791f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f411ec0d-f692-4bde-91de-c8b8330eac77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "630f0550-2ade-4c93-994a-f80e156809bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1264bd-697d-4177-8c14-f3fc903cc75b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24f94ea-22f3-4d8f-a3bb-bdeb0e7eecf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df92ae2-17dc-45fc-b9c8-339d30d4f469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0b80f9-67c8-47ad-860f-1e8021d07951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8db44c0-468c-473e-ab58-bb436548a5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8762314-b63d-4c3a-b6dc-443dec1e8194",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1057f80a-ddec-4afb-990f-3c32c4f86047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863ce579-39bf-4358-a562-5aa850f0e024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b091a2cb-1c05-4b34-b4d0-3c7dce793181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9def073d-0450-4733-adc3-df8354f74d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec052099-3870-4a79-aa2d-8bbf84c982a0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51deb40-a87d-42b7-870a-605e47ffd08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb394152-7989-493d-861f-cec6bd55880e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e805607-7c1e-481d-ae33-7959eeaee8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8e4db7-95e5-448b-9c80-9d3f4ad40a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518862ca-b4d5-4570-939c-69dc4984f323",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088afc40-5dd9-4fac-bdcf-5f90118396a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6cd317-2c37-4039-8d2c-05eb984abe57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9774ef59-3688-4ba6-a025-4b75c884cd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d77f0d5a-39c4-4829-b759-13df76ec7036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de8c619-bd31-4403-a385-c81331da7775",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444530e0-38df-41c6-9a33-8e9a3b275f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7fd410-c284-4f74-b3ba-bf3a64df1e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc5a0e9-b60b-4f48-b40d-6cad948ef1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b66e528b-917d-4e44-81d8-524940dfb686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ceed569-5d30-4afd-8821-c0fa6d9843a9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac8c724-61ff-48da-a3c3-6b009519d78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6a9251-3d30-4a80-8b41-0cc28740b298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17659eeb-35ad-4ba0-8c1c-5c8f7bd12cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da09b004-b41c-4790-81e9-d0e4f97a4acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb38c092-8161-4c77-84e7-5d20a0175c4b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5a8638-8457-41f1-839c-a3213f8dc9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0fac9cd-ffef-408e-9d05-1e23a7e122a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccde82e-6037-4afc-86a7-9fe8ddfb2255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a93c2de-3d51-4f95-90a3-33dfee2bbd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7a27f2-0a08-4f15-95f2-c6f6fbaa4dcb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672d1735-4b5e-4263-a9d4-a4800cec33ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788660e6-cdd3-4fb4-abc3-e9e42ba2c8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8dd91f-bddf-418d-8acf-0a85839dd2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b79d8d-d6e4-429b-a475-8a455c85a5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccde664-0dc8-4527-ae5c-c441dee4a87c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a2e8a1-fa3e-444c-95f7-7b77c92092f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa86735-a332-4a4f-9e64-06f984d304b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee88e01e-a5d2-42a2-9563-8b0a434db3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3267e3-58b1-45a2-a790-3d98eca775c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98a37de-84a8-4347-876f-49b978983361",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654b2c43-2fb9-43a8-a709-a7b948782bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd670cd-2ced-4cde-b783-4600078ca7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a902b1cc-c1a3-49cb-9a9f-517d213206bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9be8869-1d35-452e-9bed-afe5d127ad79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356415b5-9e12-41af-a302-89c1f3212dfe",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7554b709-d7c5-4c7f-a76f-ffbb52cd4980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e148814-e141-4108-8ab8-35fa516a51a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff2559c-2eb9-41ad-8a09-bf2334d484e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b41c54cb-aea1-4214-bde1-c57b90625dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea4665c-ec17-4d56-ad54-796124d9ceda",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9263638e-8ecd-442f-82a7-4dc4e1a704b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca6c32e-c77f-4c62-8d5c-a667d45ee8d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5a29d5-9db7-4994-99e6-8377bcf3b34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20b9b5fc-3be1-4cbc-b9b5-4be8303643a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcb8850-9bcd-4a88-9643-e88b71c38e8f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09ee7c1-ba86-4efb-b5d9-1fd4d554f9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a1ed40-f129-4f3f-b98d-b2f8c5680fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ed41a1-d477-4f78-ad9d-9b5adaef6cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "598ba8e3-6e9a-4c5f-be3a-d20d68d43706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcf3b88-0d2b-4b53-9129-e769c25bf671",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2ae38b-e4c1-4098-b49d-8a5cd6f96675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9374f1a4-5bfa-4a7a-b0f0-2040ecdff5c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f74d225-c744-464d-bc4f-766dd75ab3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef7cfe7f-50b8-40c8-ba94-364f880d9d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd75c22c-8f2c-431f-ba81-0548529e0b2c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dee37a4-90ef-40c3-9361-5027929b88f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61cfed25-8bf1-45cd-950e-1611fe128d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c048486-3d75-47a1-a2ff-1faab8400bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f16e57cd-cd59-4396-9208-ad798d4951d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ccfaef75-e5d4-486a-97f1-a7106081ace8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "843c1ad7-93c6-4419-8420-acd7923f00f9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aaf0c11-8690-4890-aba6-c6553c955021",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "66c3e3b6-a48d-4ffa-8d72-5dba0c66f908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fa04f9-c13f-4b68-ba32-f22d23f62ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f2d208d-7227-4c2a-bf89-26299deef310"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59ab818d-509b-4c26-9c13-d5859953a573",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ba89b7e-e2fe-4dc0-bfb9-5d519aaf8393"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74a19808-1af3-4a64-906b-8d8cd020208a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "debacdd6-4613-4288-ad85-d2a851a3f8f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef3053ae-1e9d-4d4a-a143-0b506bbe8875",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "973cf194-4c2e-4262-be2e-e30be125eee7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9398d3d2-281a-4169-b515-43255c1a1b18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0ade047-6aa8-48af-bb90-50451e25176a"
            }
          }
        ]
      },
      {
        "id": "cb8e9361-6103-4bc3-a5aa-e15039fbe539",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "52e7994f-f38f-43c4-816f-2edc45f8f389",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b7c6607-50ad-4364-9718-e8ed96333f39",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c5a24736-0ac9-4ce4-8241-98512b195129",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30bcc26-7531-428a-ad70-af77d7f000f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "befe0a05-7c14-443d-91ff-9d258b435d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea04c3b2-ec4f-42a0-93ef-554dd69a7ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d81e6c-0a35-41e4-87b0-54f31f46dd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12760c7-5d12-4706-b479-738d0fd0eda5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678f69a9-f958-4a4c-ad54-0bbc20f401d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3e4bd4-379d-4ebf-b901-d8ed930e6e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20dd2e7f-9233-4303-8230-af2f590ec85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e49fee3f-d30f-4687-b216-aac7da43851f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86872053-cacc-41c6-b340-018b4a33ba47",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd770adf-fe98-48ff-9d2a-db2b7bba857a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada402ff-b119-412e-a19d-034f4a6caf61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b54d03-3706-40ee-99a7-986807fb2307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85aa5c91-6c4c-4250-ae83-14aa47c7743a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0941baa2-71ad-4c0d-aa06-2e1ab09f1635",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31917714-176d-4d86-9258-6df0a3edf52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547f8ae5-7a13-4a01-a663-50f960522e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d369158-c77c-48b6-b24d-b39646906714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6abf82e2-cb20-4b56-a39b-956d22dc72e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3cc963-06ea-4603-b51a-54b6fdca3f46",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2cdbd9-c7e3-4470-91a6-d810764efc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d57c80e-341d-4e8e-b503-bb0366a7eb39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41eae92-0561-4d21-a87c-ccef02c93731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3231ec3-de73-42ea-8e68-29ba6c335002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28133a05-bf82-4f42-a013-cd5f0092f370",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d326e76a-bcde-4ce9-a242-69693a151175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3c23110-c00e-4652-b84c-613d3ffa87ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb57aff-7a1d-4d2e-85c6-2e4923a9bc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1482b07-0e12-4fee-b5d1-20f9e170d9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44eaabdc-2043-49b7-8e00-f545c6316eac",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10c33f1-9b07-45dd-97ee-70b60a6d2c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e0827d-ca4a-4307-a4ba-e4e84dc691cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72772f55-c99f-4f9a-ba0c-f0ce4676b4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "45407661-1659-4e73-8d4e-3a954e3f750d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7998dc-e269-4240-9504-e1258badf50b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e11ad7-80b8-4e7d-a75d-4bbc08067bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe90c96c-0b78-457f-9bc3-e77eb7ee299e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089dd561-4e79-4f07-b5a2-98e468d2017c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87da7d65-634b-4e05-9371-259192a36e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6edc2d-dca3-4832-9f42-64c195992bac",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43680b09-8819-45bb-87f7-f3cf3ac2db5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5de570-8122-428e-b08d-05b68afd9be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa246d4e-d292-415c-9c25-baa17a2b4892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc8be6c-55a1-436c-8d8f-485d7526cf82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b089b7e1-2dec-41a4-868b-a5eeb5ff1a95",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762c4db2-3317-4c2b-a20f-314d340cf263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e17bad27-c162-412d-8ce9-e06ba653317a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5deab1-3f44-4cba-9c39-8ff08d77b927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d583d5bd-5106-42cc-8f72-8a246b0e54f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829f0c24-e92c-4d51-a178-06781a87c48d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afa82d0-bd19-49a5-a29b-8a5b010d44a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "001b723a-9006-46f4-ab77-2266128cf1dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163d4c6e-4f4a-477a-b28d-b58bc33d1f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a8341e-d0cb-4530-a5ac-f860a35a2bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7545f3c-67dc-44a8-9aaa-dba7524831de",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058f821a-eec2-4187-8697-71b97fa97d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f7903b-96b1-4b5d-8844-8b8b08e616c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a216bd-8be6-4c0e-bb53-72d4fe3f429b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1ebad3-27f8-4e79-ad17-c9645f24a096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143b2661-8a62-44a8-81b7-6f21522dd012",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1861ba07-045a-4e64-bbbd-c7c7becd28ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a38d4a-09d8-4c41-91ff-f70b9e80cd3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98fedbe-8c9f-4ef5-a738-19ad0f14df1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dce0b86-4586-418c-b274-bbeb78dc5acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f5786f-4ff8-4b36-a84f-525d783777fc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4980bd67-9ac4-4a15-8180-dfe9ab7c8ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1ec161-01da-4fef-b650-7202fcf7bfbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bfcfac-3165-4e19-9d4c-2ebd78284d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "21a70a16-1e84-4c50-a840-c1e0770a761f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c097e009-d49e-4e42-8db5-6ef803341c8c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c19e4be-181b-418d-92e9-b19775d83272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a83f07-191d-4bd4-b46d-31f7feb061ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7c3293-e9fc-4e6b-aed9-1879338fea7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "62de3774-e759-4d12-9029-fb021edaaedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0644cb11-7227-4bcc-9294-28ffc6619f36",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3616e8b7-8cbe-40fa-aafc-2f154066da4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3517a843-532b-4625-ac57-0149c5e2a54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b830ba0-8a5c-473a-9762-2527d531326b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "149e497c-4e0f-4365-b091-c6d04f682637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fa9ed3-7ab7-49dd-b1f1-50baa61350f2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4ca598-4b17-4212-800f-58851f7817b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58338d79-910e-44e0-97ff-bef0e8bd2d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114c5be7-dc99-472b-bcfb-8ae9166a79c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb605cff-8c4e-4224-b51f-38b6e457ece4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc374886-9e9f-4691-ad9f-27699b9a9fac",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa082bc-73b1-4405-a556-80fd9c1e2e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc5a0fd-391f-457d-bfd0-cb3957563351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd5ac6d-3673-4c84-ad30-d80a3c3d0325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2d9228-7c60-4f2f-9932-3e617b1f5ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c091b93f-7679-4281-bb9a-fbb0e4a7b3d7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361f789c-a7f6-4ede-80ad-7b2cdfee6c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd7c496-b003-4dfa-b01e-9c814b012ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588c8d08-6831-4ff8-ad51-22f2beeb6c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de46915f-43c2-4f13-97f2-54dfdd530cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a77711-da9b-4703-b3b2-180fa20064b0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb67fb83-3a02-4c7a-9cf2-9b912d522764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8654fc2-8207-4a55-ba95-eb6fcb0e8fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfef2630-c6d4-4488-ab16-860b749033b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6fecb4-105a-469d-af2f-e3c8b4471410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c907210-cdd0-4df7-a52a-4017ee5c5487",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe2d646-535c-40b2-b45a-f33fae070043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "809df650-fe0a-4035-86f4-3160648a3de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3636e904-fb19-4508-89b6-b1fbff999ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af5cc9e2-e1e5-40fa-9479-6225ebbc229d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab56b22-da4f-4359-8fa4-4e4d6e8d7ee7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec3cbcc-58f8-4a72-ac9c-d53331bb9a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1852025-6a67-4ac3-9569-6d9200c54c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b4c7da-5669-49e4-9fc2-4c0c24f6d2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f0b8a4-ddee-4bea-99ff-23a062517796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea24abb-e4b4-4236-b7fe-1f403b678991",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d50942-19bf-4d62-b524-6a2e9a43541e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23fbfe7-7f0a-412d-a4f2-5d129bdab7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7d5f58-f455-4281-a474-afa332446aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6d6406-aa87-426f-b048-ceec6f1fbbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe6c8a6-3deb-49bf-9f1a-38a4d942979b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1aa853-d953-4cbe-a552-3e9c116230c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed203f35-e0a8-410c-b63d-7536fc81dde3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2dc8fb-42a7-48e9-8ae1-37c2425a2e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1050bc20-6a86-48ff-bf39-bde7a26811e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb65ea0b-08ff-40ef-bd37-9512b5d51d82",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64a22e6-32fa-4f4e-a8ed-1cfb2f0187cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3726323-4829-40aa-bd14-c649b559808f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64b6014-f3c4-4643-ab77-a8e2253bff44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2a80cd-56d7-4ec4-bd65-f6e56da1a76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cff1deb-e81d-4c6a-bde9-09616b364e0c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8c6543-619f-4d98-9ba5-ae444472f201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8405d165-b899-49f6-8724-54b8ef30456c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e20f9c0-2843-4370-8c31-e99dac77c4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ef43da-7470-4180-bb29-fa10e8b5c980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c924e69-9127-435c-92f2-73196de26b91",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc93cd13-522f-4173-b2df-d1ed84cb9ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe451fa-c654-4f25-a303-29791b013f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e4a369-20b2-4830-a025-92ad6e83331a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5597b43d-3bef-4bfc-9de8-61b80561302a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58818fbf-c051-4720-82fa-09ce20e86103",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf201d4-b964-4f59-b898-9f28cdc03e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15212699-722c-40a3-a815-d272e0548d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510f1dd0-de04-48df-b509-f84f15ebcef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a511b981-eb58-4793-8614-d041632accc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce163255-f0e2-4401-ae84-490f65ec27a4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f2c785-e048-43d4-baf9-356836a8d5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e4ecba-76e9-463d-a412-2aa5999f3ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8193efea-b4ad-4b71-b64e-0d7f24918f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61331da6-5a31-4a52-8418-8fb8e303d61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3b28d9-6f3a-4c13-9a7e-734e87d7f945",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8398e59c-d76a-4f3b-991a-70b38c6ad920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912c221d-280d-473f-834d-e6dd271ecacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e79335-3be9-48f6-9357-2a47ac361a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9ff772-70f8-4f31-8641-c74f97686ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd9718e-2036-4073-8713-6b05ad409c96",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e63ccb5-c916-47fc-a6dc-29bc3378bc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b903b9ac-a6e1-45e8-94ea-71031b00b663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7550953-7985-473d-a0a1-85ee46cf9d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a617254-2e0e-4c0b-8017-39f3efea13ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d047408a-749c-4bd1-b168-7d56b8f4f4ef",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d546f6b-ad0d-4659-99fd-b76798d3c6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c730f7d6-6334-4145-ab4d-669afd2d5e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311dcbbc-0637-4e04-976f-3ae855275bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c3c6be8-1d83-4b06-a06a-d9681a343ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13366fb7-0698-4771-ae97-f3be846179c5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37761861-14c4-42c5-a246-5bdff4314581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd83712-8389-4133-bc18-1b8ad000eb1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1643e37-f925-4f99-8300-57e93518b1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "072c32fb-9a29-4874-a8d1-198700988f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b6a6ea-112e-4170-929f-6ce7a8091a92",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21b4d2e-86ef-4d93-8051-c575efab75a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11f55cb-caf3-4af5-afac-98de6befe03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219974b4-9795-40fc-888e-19cf2eb10204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "992c6e07-da0a-4243-bc9d-e381a0210a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d02e43-7440-404c-9b9f-b5a3519b263c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de0db44-0984-4851-83cf-81fc91cad5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1010734-887f-4189-b682-e6558b241d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e6df1d-cc50-4709-ac1c-0fed8be9c64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f90c0ceb-8ff1-46ad-98ea-90b511c3c8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab38001d-1e5a-495a-a202-7541ec22bc08",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57c0526-03df-4a59-b958-982c60a73c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28ac7a9-b1f0-415d-9d10-01054065714f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bffb394-9f75-4b08-8d1c-1274fc5a6f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c72478-fc58-4d65-9e65-09fdf8ecc7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77f114e-4282-4f70-90f3-79439f0fdba3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8369c6bb-a128-41b5-85ea-9e3f9e3e7846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee8590c-9da2-47fc-ab67-03dcd1f0085c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89da4779-ea0a-4ff9-8b1f-d8ab798f96f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce075c7f-6733-4f61-8785-f7a335f7e4ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7539d0cd-2469-4108-a656-c36517241474",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73a70bed-b9c7-4794-900c-8623dec5e159",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504849cc-95db-4bdd-85f8-b55d5c3cb914",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "60ecb94d-36a1-43e3-bf41-abc5186b0fb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e16a685-18ce-4be2-b396-2a4b3aee58d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ab2422a-111b-4094-8342-a46263ad05af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "770f2b7c-b7a2-4020-9087-915554ef548b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4d59f38-5383-4f19-ab7d-7e13be7f9656"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "401af2ca-a97a-4762-9488-0a7a494e36fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e492d7e-d9c8-466c-9710-16c5d377cb2a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a0295ac-3b22-44aa-a6db-5a8fe5aa871b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "52adc7f3-21e6-4172-b36f-758c8257a03a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aeb1b895-73da-49e7-8e2b-bd74d5c5d843",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "556b3f0d-23ec-4838-8efb-596e3ba3e9c8"
            }
          }
        ]
      },
      {
        "id": "cc7cbe78-d662-406b-9203-335f4d0d4d52",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f18679cf-76a0-4b89-a3ab-7366e2a1f23b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "79656ac9-f25e-46a8-af29-9fa98fde5c70",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "52df2420-047c-44da-b6af-0d9143ffb3c6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c710579a-63ee-4d4c-8a03-37d9d011572b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4405f2-cd71-45cf-8967-a7b212d7b169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452f6513-7a04-4182-9e8d-5602eb0ef0b9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65531d01-b942-498a-9e8c-206f161f9630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43380423-329c-4706-a5cb-44024eecfb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8614679-efc7-43e5-a216-24315c6b4fbe",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7c085b-e9a1-4af8-8d1b-d5104569e16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bced9b03-a74e-47fc-b31d-9ad60dd18554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6b8a45-0230-449a-8d70-6cbb1c6d419c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33018a98-f546-469d-bcee-c0bd04272442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9829433a-f1bb-4e08-a495-51bde7140645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf64aa7-c88a-45e2-875b-fe47b74e068c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7080d5c-999e-498b-b1d1-e8ad8a303da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "accdc1a8-e7c9-4ece-b6d5-3fc274312e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e86ebaa-4fe6-41ef-9e17-1296744070d1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659f4c16-1294-47f9-b629-e86960d2c884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951aec66-3157-4b65-9338-dcabb82eee89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c53889b-e210-46dd-b6d7-f47991ae490f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4214dfab-b7bf-4c9d-9990-f11d282ee97a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892c657c-6ea7-46fd-90b5-abfe389d3a2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc474ec-7660-4d71-8ffc-520527989285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762697cf-a7c6-4225-9005-e780163962db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9a1859-0b07-4b72-83b1-0ac7d4539f62",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc968c0-8a87-4574-9858-f6385deb4b7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86474ac8-9b27-4983-b05f-c139fe4ace66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5d3d4e-b4ab-4888-b6a8-d679adde505e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081cd8c8-a2aa-4401-9c17-e122ed5f4743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935c18bf-6c20-4229-8b74-a606c6018ef2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bddc4612-1406-429b-90d9-93bdeaf0476e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d2685cc-4d31-42f3-aa22-0772774556ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef01fe7-572d-4717-b9ed-0f3823351c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df837de5-1738-4a76-b980-4121e490c72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac29153-fe8f-48b7-a474-310da784b524",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42750524-c565-496e-b9f0-e8975f54ae4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84432298-c05c-497e-8b2e-b084c7ffaede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08992d68-fc64-4392-8b36-a1cadc063de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0d021d-aace-4818-8366-eb9e6b8cecdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36117b21-7a7c-48d9-92b8-6196b4692cf7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362eb1c0-e447-45d5-a010-e3038e1ffca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e25d9aa2-10bf-4005-9666-549ae3ee07df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6a0c64-e62b-4e77-ae19-dd8d10f93aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293f6f9f-7007-4ab7-b499-c0dace37f864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aac2b0f-af1a-4a21-97bb-0b906d6b3210",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21a7810-1246-4254-b6bd-78fac330d3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c89fe3-f53e-41f0-83f8-c18448480fa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca794e3d-dd65-4256-afbe-5863e6610f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4bc634-af05-4f8c-86d9-0446ff187cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aeafc30-2854-4626-bdf1-2b1614e5f229",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9dc6ab-ca08-4d56-8bbe-64ec78b7010e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a234e89e-9e8c-4c0f-aa29-b890f5d43b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c04f04-c314-44df-99a2-357d55aeac44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615b5faf-194d-4ea5-b793-097e19b7bd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f3e2d6-0b3f-4902-b42f-3f7523a732ac",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a745cc5-d48b-4e3e-96ac-dad7404ae180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b476a4ea-956a-4a0c-be95-3d600562e3b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b99dfe2-4f50-487c-8925-c0a8aad0924a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e681a6-d8c2-4a6a-ba4f-6a271cdeef6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c4f213-72e8-4c1f-aa64-7ed12e884549",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bd3490-883a-4ef2-aeda-ffa7114224cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "539f0be4-5894-4a44-b808-75712c4445c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fece3cd0-a52c-4d7e-9bc3-c1633335e438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5199bf2b-fc88-44bb-886b-8988d53b5017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb886322-9c10-404e-8c5e-263f3226c66c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ef38e1-a2fc-49df-b097-d0fef07b52be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4978f90-a19c-4ca4-a33e-071daf05cfcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395a3a4c-ff48-4319-8e8a-01587f07c42d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06535211-5d20-433c-b0ac-5001eef3ee40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b2eade-e1da-4393-a49e-35527860e06e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66249746-3b06-4063-9eda-d57ebda1432b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5f3e39-cf47-47e5-a2d0-a38c3765c3b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1817d7a-84fb-4351-9f53-eb76d4615989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebe0d92-ea5f-498f-b75a-bf1688072026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f716c0-4668-4693-92e2-ed20ecb0712e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e1baf9-2e3a-48e6-84de-1bbd8c11684f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7bba2d-0223-4633-9945-e39a1c16a8bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ddf0eb-e848-4042-b2bb-78c9e05e02b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2511d1f7-8bd8-4324-990f-a93b078d338f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28076b8-54dd-46b6-abe9-5ca8d7a66162",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd734bbe-fb3e-4082-b396-efb9088e5ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38167ee-af6a-412a-960a-e87b9651f63c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6c8455-4a56-447e-a991-3e56002788f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d92fd3d-1397-4677-836b-27bbf5f188e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16436b3-b706-4158-a732-2e2b0823e363",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f9778e-3146-464b-a89b-0ca9a91b3f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ece191-b663-4a74-8c08-8b412bee9c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e30472-8f25-4181-b2f0-ce7243d60187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3efbba-3529-40d0-8f8d-4af1f810ae75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e5a905-0d33-4099-8bb1-6412da6f05b4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c10d15-5f78-495f-8742-a249c27f3597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7736d7c-3e12-4d2f-a290-984d4973bf51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedc9711-9f5a-4343-97c3-ac58b778a365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "276a079d-d00e-45fd-a626-1b10176a0816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9947c714-0a36-490a-994c-537d15445681",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e5b2cf-fa7a-43dd-abe7-8d84c281d62e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2437b407-4e3f-44e1-8e82-f9091b651b1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c3299b-0c65-4630-9baa-a5d8cbaffd90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459c02cd-94a9-49fe-816d-36c7ca649e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd137fd1-9f1c-4d9e-84fa-e2fd8af1c35a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cca264-4505-4262-8bc1-a9bce29c8f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd2757a8-8ff8-4724-9f60-fa9cd3398caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47d120a-3487-420b-8b28-fe62c2b3cc35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232adc03-dbf8-45ab-8542-06163d7d089f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64517e2b-4272-4e57-8ca0-02a8bb075e41",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366b65b0-e9e2-46e5-847d-44d6f243df92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "073b5285-82be-4baa-beea-e1792ff1846c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721a0b49-664b-47d3-a4ee-d616a7671a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea22349-e8dd-4956-9a53-8e64a7e21dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7716c222-91df-4678-b743-c9a9816ff53b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d215811-7955-4500-a9f2-71f87bedc1cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6abc1aa0-0377-4397-a828-2c2d0856a0e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e0ab3c-a16f-4b12-8957-d5cb1bde5b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70951957-2b22-42c5-9187-522bb0c891fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ee141e-ae31-4def-8444-ea19dcf318ad",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5519f45d-40e2-4eb6-8136-40f7bfeae9b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51ad189e-3daa-4203-a7ad-24763580872a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98536b57-fc4b-4a3c-a1f7-00a1451a06df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6431b4-d2db-4d65-b4c4-d66cfecd63a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e65b7f5-0b2b-41f6-8bb1-fd0d4264ccf9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1205366-c728-4034-8d3b-9e34ba6047b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39a5f395-df20-4928-ba08-d09ce76a7f30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c91c911-6d0f-481d-be7a-efd97a9f8ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ce0abf-a1ef-413e-835d-2751e52f6636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b46ea03-4f5a-451b-b2d5-819333d67297",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4302234-cf43-402d-96c4-9aa7104ff944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408d6f2e-a07b-407f-8229-221680f6b2fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef5674b-feb3-4857-a458-68d0f236da65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2484c1a-e157-424f-898d-35a624947be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e13f47-19ff-41ce-bf61-0427ff98b2bc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783bee8e-dc4e-4edf-97d2-62abc347e4cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1fe2b03-0f49-4412-b4d9-3a0dc0766efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24b6814-7a1d-4eb2-99f6-4b44b08ef950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d36888-9a6d-4e7f-9689-90072271279b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f177a31e-525a-4f77-bc11-f6d85478a595",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28012122-2ef3-4e44-aca8-11abf5fa712e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b85640a4-5f0d-47a1-a798-2043fbbaba3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba3968e-179f-46f5-aa5d-27270c931126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a2226f-b84d-4e93-a573-60eae9c33ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88e735f-bef9-4c11-8997-c1d4620a70d7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8832fffa-9108-4025-b4a7-d624b2b9bc16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0abb52ac-3cd5-4d3c-b9e7-7fa5387a24f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67161d4b-a8e0-4f72-bcc8-3692826083c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe60258-9def-45e9-b68b-c66e1ff63e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0646806-1d3c-4294-ad23-8c5032f554bd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ff6d83-bb6a-4c32-9f3a-bce876ef1fcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66133025-ef59-42e1-98c1-942bf22ea4ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd8a44b-9fd0-4fe5-9297-eea821d89eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f326f40-3049-48ba-bd67-7d8ec554762a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689fd508-ffda-4f35-9511-509b659a3108",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b165df-2237-40b0-8528-c11975ace171",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8748b63e-886d-4694-8b5c-ae1b5c62f88a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3868ae17-5b46-43c3-87a0-710712131d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab77bf3c-3fe9-4fe1-b0b6-80ac1cbe3a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505a6867-5f20-4518-83ee-a6027ba449d2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340ca3f7-fe9f-4ff3-947b-e6b46b1de823",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f634b3a0-4c23-454c-ae74-646cf24a6b83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d888521c-6000-422d-b483-82e49ee5f82c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374a0826-51a3-465a-977d-9d45aa0e2d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935e5299-9f25-4a61-8432-cd562d8327f8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23280dc3-4bfb-417b-87f3-7c85bd0d516f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848a4acf-ec23-413a-8033-fc0f8663e8a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e836657-6e99-43e1-8046-d51748a6edcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b283908-a9a2-43e4-8ae7-12511283479c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527ce4a7-ac92-4aa4-ba7c-3d66850f5e97",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e89e7f2-3ac2-4afa-8426-7429aa2fc92e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e60595a-f5b8-439f-8882-66f83c4889ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c3ec79-97da-47cd-a172-6c2bdd9840ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645e7917-dc19-4b00-96ba-a80ea0aff8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9952e739-0d95-4f31-b211-77cacfff144c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35765737-50b6-4635-b9cf-e61717fbdd48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67bd8c23-9a07-49b4-b357-b5ef03a9e981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b57c66-ece1-4255-9011-0b32cc23e1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfe2b9a-7164-494c-8de6-4ba8480e5080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2b05d4-336f-4b79-a132-122037cb4a82",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362bcf6e-45eb-419f-8563-44cb938bf464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df82cce4-7551-43c8-afaf-4ad28774058c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3187897f-0ecc-4032-b365-b88d2ae03990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e07df2e-c009-4f6d-80d6-35ccb632c79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c388b72-d91e-4c2c-8247-f7191f2c92b8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f188d572-fc21-4189-8854-d211b56d6cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be081032-c7de-4f61-89bf-4ca73674d1bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "929e9c66-0a89-4b05-9976-428d0e6c0524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508d9fcf-bcdb-4bde-b3f8-bde4e6d224f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b210934c-6dbd-4abf-9244-a93ec55ddae5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d9c9a7-5baf-44c9-82d3-f475dd6c3dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb6fa57-1d4d-4ab5-9356-39f325d5bf8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22eb550c-579f-408f-955f-7795e476a8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38bca56-30a0-4707-8d52-f1b2f0fb091b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4fafea-1e56-447f-89a3-75da3eb6b046",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b50fa5-53d2-4948-ae18-20f811b777ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316faccd-faac-425e-8f1c-782dfd396da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2477e027-5fc5-4507-a780-f4d23e00bb74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b206393-6958-47a0-9c69-d10feef634f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52551589-eeb1-4117-ab94-1c7f44d6715d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e95cef-d9a3-4897-9114-0edbcc22fbf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c9548e-eea8-46e9-8dc5-2f75c0df61dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5f2892-f510-46d1-99a8-1bc8fec21f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e68fc9-bdbb-4b08-ab6a-2849c56884f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651d3660-19ab-413b-9cf9-cdb1b55b330e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf55108-8204-434c-99e2-a6ae16c6380f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217f10b9-e58f-4806-b31f-007ee4298753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016b7430-a037-4a7f-bb5d-45b566dfed35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a3927f-7011-4a39-9072-8072436db012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b804c721-4d65-4f0b-adcb-85e229e07312",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8148c3f0-257d-4227-bf4b-df29e4f66dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667e8d06-ad18-44b5-b15c-542c8acae785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaebdb76-2018-4fe7-9599-a17fd552a481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93955272-685f-42d1-98ba-88fc500a5621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75697f25-9d68-4d20-bd42-c0a8c730ab9a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3639264-c7e2-4f51-b082-f662e784ec5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a58a99a-4f9e-4a55-bedd-30f79f7c9c1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a3e632-a6ac-44e0-8e85-ccf051a50892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba541633-2663-423d-b4d9-54dff51056f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bb3fba-4053-47d3-863d-ff4e03a770ed",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75eb5e2c-968f-4ba8-acdb-6e21d9d6c1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c722a35c-9eab-4d4a-acd2-053b23c0c121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a83fa26-f4e2-42d7-a9b3-9a9e9cbcdd85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60aced1f-8573-4107-9198-0fbde33a3492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19196e83-8b34-4a18-97f6-6393b5033f90",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be3f260-77e9-49f4-9e06-87ec45fe711f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d57a396-27e2-4300-958b-d1557d2f47d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d14615-9225-4992-b049-e78b74614107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70610d54-ed7c-4a25-b44d-fcdb84f6408d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788aabe8-4b63-4622-86a9-3185a8aa4ce5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740f742a-e5e3-480d-9b06-0f0ae26f4532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a68b69c-4997-420a-ba4b-6b62cd733aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7691f5c-900a-4011-9082-70df8e2a4c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a2f407-4381-4e04-a611-afb8e8d03d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0f84c8-dcad-41b1-8ae0-c0456f3d2227",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17942461-fe11-4e03-a359-afa3d9250370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b481316-3e79-4748-ae31-053009bb84e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5b3a6b-2c1f-41b4-bf26-a49abd437cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120e599b-ac7a-4775-8828-17ead4b6e201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ddf498-9ee8-402c-9c3d-db448eacca51",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21766c09-5a89-4d9c-adec-ed2dafa2c0cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654ba824-9e28-4db4-a8e7-4ae52c0b4ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7facb2e5-4cd6-47dd-ab17-2aede081428f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc970ba-86ff-4707-81c4-cd4eef724f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e4ca9b-b1a0-40d3-95f4-38cea1ddfc11",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de9eefd-d5d4-40e4-a5da-2137dc2852ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654188e2-30ea-47b5-a7e3-5fe6d78de903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b1257d-bad2-465a-bb28-c3bb9838c179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06ad949-b775-47eb-9405-b05851a41513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95568959-cb27-40ee-93bb-49f91a9e6e3d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e905721-9cba-404d-b965-00870be881a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1149f63e-0eb1-4223-ac43-ea0948f1d898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdf7fb8-26be-4446-acec-dc5d63a91902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f57dc53-5363-4212-ad58-bfda74aecab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1388ce7d-653c-409b-8834-2b02d0c6a7bb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c848453-d8a3-4c52-85b6-368962ecc5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5fcb7e-c18c-4370-9484-ed603b34e061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1c238d-7313-4410-b2c9-5198ba614011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b77fec7-e4f4-4bd6-9b84-5266ec579c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9d0ccb-c916-4e26-84c1-ad69326564f9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93674a15-05ff-43f6-b868-af74996507a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74cdcfa3-f516-4849-bd23-db774048ac21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0f9b14-3552-4116-9d74-8d0b5300b393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4dea71-31f6-46d9-9bee-666e1e01fb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40febac-e09a-47e9-af60-dea131214083",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f626f6-eb96-40b5-b8f5-faacc6787458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688762f4-a981-467d-8baa-a366ec671eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1215e791-ecef-4ba2-816d-63a9128a79f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892cca07-a00a-4cea-bbb4-429796b548c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6234ed02-1f18-41c3-9888-d66f4bda277a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48347425-019c-43e4-9d09-3385fa227e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53934d82-c1a9-4727-91e2-38d3812c1dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5b67f4-1cf4-461a-a635-2da41f45f4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0f41b1-77f0-432a-a72d-41e453c35a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f023a8-c962-40bf-a55d-cf07c15df9e4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063737a5-2ef3-4cb2-9821-63d5d8d2b944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e08ab2-423c-486d-9102-f1ad0e5e64a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c87cc1-f598-4344-be51-5d68eef56531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb53b90-7aff-46af-8101-c8506a1e95b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0daba8b-aa11-4f78-9b5d-6784bb596ea9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df24838e-64d2-4458-bc3a-3abf304e5cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d054291c-1af2-4404-b879-6daf3419a8a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80582988-cd93-4f1e-b02e-18194fead388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1de247-d410-4607-b136-134ba5d418d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c694433-7a97-4dc6-9ec1-eba9c99f9c42",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db401885-4e4d-4649-91cd-a1180eee184a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f6a5fc-39c0-4af2-b25c-5b21d60c8990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12cac17-df21-4267-b0d7-14d542f17f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9961b22-04ca-447f-be69-498ff3e4e595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c242435f-0dcd-479a-961c-9052079ada97",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40181dfc-a1a6-462d-b082-2a2652a6b47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a4aa39-e4fa-4317-b67a-4db7320aa562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b408bd6-4fb5-4aa6-a231-8fe960529a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2626845-1b0f-41b1-9a6e-373a929db37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af1a73f-330a-477c-89af-9ddd52ab6b97",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1247ef-6144-4126-a4ef-2b7f24cd627a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af5b4c17-14fc-45d8-9766-7f884d219668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85417d4c-09b8-4eb8-a9c5-7481818caece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5271791b-4a38-450f-af74-1b649de05129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41ac191-cc09-4bee-b117-36ecbf96a11d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9dc3d4-633d-464c-ac52-cc0427af43c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db882b8c-87c4-4378-9b53-fe0230b083b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89434ba9-25f7-4596-8c29-fdc29b0c5701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c9bfd5-ee59-499f-858e-6c621ddcfb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de44b3a3-c924-445f-aa88-15f093b64457",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee694244-a778-4f11-9238-70dacd6973b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c4158e-4af5-40fe-b720-dade63e2092b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ce42d8-1c3c-4262-9922-6c6745cf7c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a06c095-5b9e-4d0a-8688-6c4bc598051d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5594be36-f288-4e29-a535-3d99ffe08987",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9dc8f6-ba4e-4543-bc32-39ea1c8d12de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8e67e8d-e063-4f36-8b48-a9677686645a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880688df-0070-454a-bbdc-7eb0b233362d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9a75b4-6948-4444-b06b-75fbd5c9d0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042d5931-2f89-4fae-a0cc-7d8c88119a69",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b5249b-69f0-41fe-a26b-213a783005bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c0c0d75-fcbb-4b9e-a52d-dd69f5c829eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80330ed9-4ff1-41a1-aa24-15e4bf36c9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0022be-8bf3-42aa-babb-c7291ea350db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17e2733-0e01-4e65-88cd-815c33d8269c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f946dbf-176d-4a60-a9d7-4dda54cb70f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cc30b4d-5dcc-4dc6-ac3c-f167541ff0e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "221af89d-2ea6-452a-b0db-864a7ef3cec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c7a9dd8-3378-4ab8-b07d-d024ea02615a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1778e725-011b-451b-adde-6f0639bada46",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771a6804-5599-43b5-9b6e-f635a3bb8ee9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38f311b9-6403-416a-972e-6cc25a7d03bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc37c533-4fc3-4416-80c0-bc12947809f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f2d422-f779-4595-a66e-bf5174c71d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6859641-7af4-42d7-84ce-cd34056fed76",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25fca19-0ad8-431d-b4f8-d6da8177285f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9811e4b-c9df-457f-89ce-2a08396ec99e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa34590-423c-4268-bb06-f11460624799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e717e1-e45a-45ef-aaf0-714f16f558e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02edf587-cd03-42ff-aeee-8ff8bc3bc09a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6643723c-673e-4e9b-9456-9eca662530ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc7a7008-3abd-4550-a2c8-dfc2a19058f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f999e1-f295-4ce8-bf7c-49c000ed7622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf0d861-ff05-4dc4-9f70-61c36df41f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bea1307-9596-4f3c-be08-841d9ea9c338",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce529a4-b7a2-414e-96c1-974a2c43f69d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c99d7d94-a0f1-4d07-a70e-a50c09e55568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d618ba5-b156-4f80-be9b-db04c0a0acba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48fb1f32-0e17-4267-8256-9da0a911569d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc9b661-54e5-44e4-bb52-bb8e4d4ba5c5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce58c0f-9e49-4510-9b37-15aacbe3b17d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5863a803-c429-4f0a-9500-9195017372ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70de94f-d10a-4a69-8276-89e36f0f5ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d123f36b-8ad1-4d60-a30c-3b8cce2706e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ff32b3-6d13-41e8-8677-5a2251c22115",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a090f7c9-04d8-4913-9d24-9b56bbe34e34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e47da65a-38e1-4b36-ad50-bed599ed28da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1969d51c-40b9-4e62-9f2e-176048466a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09f34a5-6a3e-493b-9c6b-0c4ba82139c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b647e85-e040-4f74-a644-4e64d5f91aeb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e04267-1886-41fc-ac69-ce2513577ca5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0408baf-5cc1-4c92-b04d-f7772dab826c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea74080-7021-4307-91ae-763dada2a1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8919c5e-657d-4742-b20c-265fdef34bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1145fdb7-58eb-49eb-80dc-8fc8928b0efd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668a7840-92a5-4bcd-a2c2-acfb21f413cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "655d7027-683d-48c7-b238-376a1128a927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a8a889-4dc7-4492-9312-39e1a2ccea87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7118b4-9b64-439a-b68c-ff00a305ffb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9c246a-d714-4a65-a434-fac7fefb264d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cecc5a-1894-438c-8cbb-d6fa5393a62b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acd3b72e-4698-4e8d-9ce3-eaafa8f799d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0975ee4-32cd-434a-9840-5bd8c3de0b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abb0b2d-ce09-43bc-9cb1-d0f8c5b589e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6690da8-e810-4a72-9cf6-dfefe38e4048",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e2ef43-76b2-4b2d-8c7b-26cff6f726f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90f42aa0-81ab-491f-a9dd-654f82d7640c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be085401-10b3-4d84-b355-4e60b555b857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134d0e7f-71a2-477f-80f0-83e1d9568d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179e89fc-138c-4d13-9d69-d7c441248a9a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9fefbc-1dad-46bb-afbc-23e6c0bfef3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b9c7632-3f53-4d24-bf35-54c0b66595c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97010af1-0502-4ec5-93ee-74da56e6ed99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5afb644e-3985-40c8-b62d-dc81decfccef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cfe0b8-7429-471f-85f3-c34cb55c9b17",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3794cc1-f3ee-44e2-8f73-59d8d96cd2e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69036a66-938c-486f-a944-dc16e59630da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25cbb6b-1cf7-45af-9a1b-6e430b8ee9e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44048e57-5d35-4086-a787-07b7a2a20170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eab0c3e-dbd9-4a48-a9a2-3be4cd7b3205",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e49c9cc-423c-4428-8b77-637f909fe901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77095a72-5d3b-4ecd-ab86-5627bd677350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d922bde7-c2ec-4881-bcba-ef61f8e450c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6637351-42a5-4c09-a7eb-98da2cb5754e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cf8f81-2392-4774-8eba-0dda08d254e3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a591c1f-b1f0-4716-ab77-d0b1a2c527c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14332068-02d7-415b-a197-fb02d3b7079d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be887b9-6d86-4ac6-986f-902584c6b778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65f4896-e15a-4e59-907a-2c238db98a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abd3fd6-09ef-41ff-9e0c-68ea911b4447",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077f0a0b-3722-45e8-b9f3-14365487af99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "668da5e5-04d6-4aca-8935-5e95e3007203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42d87cf-093f-45ad-8329-f16c462b471a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6067782-310f-485a-8b7c-58047058a719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be47c758-3585-456c-80db-24089afac430",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1604ab4-3234-42a4-b9aa-714a7d5dc6e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f46ac2-f7c5-415b-9d3d-a23dfd708084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfece32-61d4-46fd-ace8-1958ada3749c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc01bdb1-51ab-4637-b68b-652053295165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31709aa-1cf6-4835-afea-649d24e5baea",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ca68b7-a17c-4f8f-87c3-c29162f29c43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c82eac58-7d00-4a74-97a0-d3ded76fffc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa1a896-cd9d-4141-bc2d-72b464289ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910f6888-5187-452b-9a15-c917fc6f5b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920581b1-1d1d-45a6-8e61-9cf11a19e5ab",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b7b560-20eb-4197-9f22-117d43bf437e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e99af147-8ad0-47c0-a015-c2e7b731cdbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d75bd6c-eae3-4e46-a035-325949a02098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340543b9-8f16-4f36-b2bb-5660311727f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c50f70-7bd9-4014-9099-b07323d11b85",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de86aa05-b1fb-4343-afcd-773b6a542c2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "379c4625-514f-4548-adf7-a3f0136cb521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "964c3d15-cc45-4a19-ba28-c1820064d7cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be304d4d-fd89-4a61-862b-162555a3db46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30ea482-2e53-4ef2-aa2f-ac603415f304",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f8deeb-097b-4ad4-b706-c7e8e13165c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dfd4d22-4013-4b37-b4d2-ceb6a12f0872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5b9932-5593-4585-9ea2-ec1f14a28f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be25552-d8cc-439b-a5d6-9b671018501e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c237a09-4911-4a83-84e9-af2e3515ba57",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a69eedc-1102-49ec-a76c-0920173ae399",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08a65b86-919f-412b-903c-1ea419312cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6217d8-a9a1-41b0-84be-610cd353f8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5773ffdc-720d-4ac3-a916-a046beb4f3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52d04cc-2521-4e42-8877-0c412132c0f7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adb5bd1-fa2c-4b3c-be8e-2f3018ca0c53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa364501-d033-4fc7-8e7b-ca07d5e14268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01427e8e-4973-4095-9ec0-376239f219c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943e6ea1-f56c-47c0-bbec-8bf00142c3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54831a15-34ec-4475-abed-eabf6f14a506",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a64f7e-72f9-455d-8c87-a3ffd36b99ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22f5034a-6adc-46b8-85c9-641a5f3f06f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff86b5f-1501-44d1-a76a-f9b8f967c843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593bcb30-d56c-4e52-811a-a75bcdb83035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea1c5ee-98db-4464-b97a-674d0c1c4ab0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5972e619-fe9c-4ab5-83e8-db3ea345b6a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f18a41bb-1cce-476d-8a1b-b64c0f64727f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3ea568-4d69-45bb-b3ae-91710c282808",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a943819-c8e8-486f-b7c2-13766f8faccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1d2197-8b2d-44c0-847b-90586e5d0833",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e46c758-e019-48ff-9bd0-586371855f00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "290c033d-b727-436c-9846-880d89ea76c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50348565-f2ec-4528-8a05-41f75326087d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c389b21-c52a-48c1-98a6-f3027a9062f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6472441-f160-408b-b6f2-8b78fda5da8e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e98c356-e1d4-4f64-814a-0e02b2434c1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1b66e92-dc6e-4239-ab94-61da00906f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fb259e-0b49-412e-a967-39deea7bbd97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba2c13f-883a-482e-97ba-b53b023caf5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff9fa3b-772b-44d5-bedb-709fc1b25686",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2012bacf-937a-43d1-ab6d-41fb151fe358",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b703638-e036-4970-a1ed-be79cec25503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585f8d9a-eaa3-4ae6-acac-28e1e6b6aefd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4431065c-5336-4ea8-8fbf-c4805772bea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e569aac3-2c11-47bd-bb8a-b505e14dcca0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fe65a5-5035-4a17-b18c-6c4f515a1ffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1ade5de-c4c0-4368-b908-7502070fdf9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b67fbee-5577-43f3-9427-2ec939559f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6761b529-06bd-45a9-8f06-33aec6b05f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45914f98-cea4-4f1d-a623-a0c1a95194db",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eecc4f25-b1f2-4ce6-8743-a75aea92231a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8274325e-8736-4825-8789-8c3305d6cb5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0163e03-6d27-4e98-b415-5e25d66de5ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "785bdda4-86fe-4202-9c74-4ae3ce20168b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e291b2d-720c-46f5-b011-9f7ee74c593c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d76b03a-df0a-46cc-983c-ff7319cd6f5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1b69b6d-a312-4c68-9686-c0a1eaf42d59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6221a02-dea2-4254-8624-497a85c0bdff",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e334deef-d4c4-4332-a1f6-6316d6a08667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7ead2b-9951-474f-a861-bfdff0b8ac61",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899e5aab-c2d3-406d-90a7-f1272dcfa23e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "050d049a-079f-4c96-a8fe-67e427524f02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2419f0a1-764f-4060-893b-020b214ee87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f74130-0faa-4fd6-9571-d17b63d59e60"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70f575f6-db01-4c3b-ab8d-9283136a22ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "273a825e-c104-4a64-b1a5-023118523740"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "deb8a590-529a-420e-aad5-d50a9964a7b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ec0ffc2-d38c-421e-9988-b1bf6bba3e20"
                    }
                  }
                ]
              },
              {
                "id": "94ea5580-0978-4474-984e-48d0488c5645",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1cc2bc7e-ada1-461f-be3b-e34581a3cb17",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352634c4-ba95-408c-84e4-1fd3479c82e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ecfe1343-c875-482f-a290-ae67055f0e31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2b1336-78cc-4179-9063-d124d2fb702a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f938a5c1-2e75-436b-a8fe-c23d0bca1a07"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cde0cb9-aad1-4da3-b942-647fb9543618",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eca60daf-b965-4cf0-b72d-80e92733156d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "612776ce-fa8d-4c42-b2c0-69051cc4cbcf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f843592-aed0-449b-81de-0a38e8350ca9"
                    }
                  }
                ]
              },
              {
                "id": "9f296e21-be78-4dff-85a7-cc1c1a8bd4c7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ffaf7afa-bdbd-4a4b-90d6-556f9d4317b8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152f4b17-087a-4369-b6a7-a5ddc5b6b6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8c79a21d-98c5-4366-b511-13ad73dedb57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07579827-4649-4931-a54a-c2b268653536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e425db-1b16-4e02-9438-25c935239440"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ac628a03-f032-4669-ae9f-56fd8eb75326",
            "name": "Positive Testing",
            "item": [
              {
                "id": "841088a7-dc42-47f5-9be7-a250056b8bc1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad478f23-6cf2-49c9-9f1f-ce366161c057",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "31fd7966-5115-41f8-807c-ee4679af3470"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33d932e5-8599-4e87-a144-ebc58052d695",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "437434e4-6924-4f37-bf39-a862f3da074f"
                    }
                  }
                ]
              },
              {
                "id": "b7608257-7986-4e33-9034-eb122ff80d3f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b61e6050-0fa7-4616-ae20-9b389184c991",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0b0e754a-2944-4429-836e-f28f44f3b829"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d06e1560-00f4-480b-9d0b-214055915edd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da7693d8-ba3e-4780-88f3-c070d33b31fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd855fba-5dda-4a03-ac8d-2b8bf27bff51",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "57ec75fd-6c33-43fe-b203-0005343035df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d528e095-bd3e-4d2b-8de9-0b1785445fd8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3482199-c63e-4725-b02c-f80d916c55c4"
            }
          }
        ]
      },
      {
        "id": "be57b004-ddae-4413-97a0-bfa81dce4594",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "282dc7e2-0d7e-4610-be37-7ff003f1fd7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a66e322-adc0-41c1-beb2-b81851cb7f64",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80944c6f-d85b-486f-8940-36b92057fe85",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725fde7c-4a33-475e-a7b8-fefb31a324d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "950568f9-6549-43bc-a275-b38696c1c6be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1023fbb-d8f5-415b-90eb-c39744ace16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb7dda0f-697b-483e-b5ad-a86633c76f32"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7091b6b-6734-4299-99c9-b856240b5cf4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e52d3ad-c6c1-457a-93a0-d973c4bad45d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "90b0ae41-b88f-4e49-a099-fed402bc5d49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9705097-eab6-4097-9c90-39f57c8ac04b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ab78c09-ab16-448d-8160-51c4ef3fbae1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fb2cd743-672d-453f-8884-ac6362205f53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "181231d1-3804-4c27-87f5-c518f7318349",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0e9be10-cc40-48c1-939c-b3d13278148b"
            }
          }
        ]
      },
      {
        "id": "436d6d50-02d3-44d3-962e-5e5e28ec93f6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "33f2bac8-c745-4f5a-bd96-d8b59a65a6a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "892aff0b-7a6d-4ef3-86b1-0f55b28127cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b6e1925-1ead-463a-a355-fa57ff29199a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ace8925-59ae-4732-a306-a74b2d09ceac",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e02df67b-a140-47c8-821c-6934a06977d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47c60e5-b9c8-4104-a9ec-93f7cb702d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "564fd855-4806-478f-8b1b-521064cede63"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d8d95f1-4371-4650-8ec4-518d4a4c83d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa811215-bf36-43c6-9f87-1e5e14ed43aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "af583065-426e-4f6a-bb48-e4fe10f6dede",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8eaafd8d-0a91-4d09-a480-f5036d24e2f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7495be1-9d60-474d-8092-79380d67a809",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2ee3515e-9797-4ec5-9e84-a79ce886d493"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "256c3bb8-0d1f-467d-b746-7ebfd268155e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7a3cc26-e399-4cfb-851d-a531d2e6f1be"
            }
          }
        ]
      },
      {
        "id": "1f872e45-10c4-44ca-8cb3-cc118e4fb685",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a37f6a92-f1e7-451f-b9cb-11874bde4204",
            "name": "Negative Testing",
            "item": [
              {
                "id": "572cfaf0-6d4d-49f4-9d9c-2dec48ccaf9b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5e20b79-c745-4c00-9e59-9290421fe1c5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020b82ce-cfbe-4459-8213-be5caa0e060d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8c89a06-b990-41ab-8963-f5c9a62dda34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39047976-34fd-4aae-a51a-07abf69bb31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e44abb4-0799-4138-a6ff-330087deca0a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e717b32d-7af2-4092-b58f-690b76287aa0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2995947-0505-4fa4-b83b-c6fbbf3967d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70311b4e-0fc8-4564-a0d2-360a76376abb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1003a6d-e980-4830-b91b-0c3d227b6c13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2fcdbb15-f930-482e-ae5e-9e03c640ff18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b589aabd-382a-4989-a5ed-bfaa1812e504"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6415f58-4772-4838-8331-cfed89005b28",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc28f9de-28ba-422b-a870-9a0ae25b0694"
            }
          }
        ]
      },
      {
        "id": "5cd464cc-c769-44e8-9655-416600dc6941",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b273512a-7ce1-4e72-86db-afffc1698202",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f64db84-c9f5-40cd-a534-93c2354d2241",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "72f67995-b3bd-48c6-967b-42e117432bbf",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75322fd7-e1b1-4b76-8b48-0f3f42584866",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3632340e-6d70-4d4e-bd38-d0a76241846d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 253.4421052631582,
      "responseMin": 6,
      "responseMax": 9628,
      "responseSd": 1181.9254619160192,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699576451786,
      "completed": 1699576533723
    },
    "executions": [
      {
        "id": "f94e7a8e-3281-4cd2-a476-b7a1ca25b72b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f02d58d4-0fee-453d-a0f7-50077b88ff25",
          "httpRequestId": "b5b8cd00-8f0b-44e9-b4ef-9cc5114a5efd"
        },
        "item": {
          "id": "f94e7a8e-3281-4cd2-a476-b7a1ca25b72b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "be50eb4d-9f01-4288-aa01-ea949ea2f449",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "0982377e-d78e-4c25-b4aa-a6ebb65aac49",
        "cursor": {
          "ref": "d82b3b6a-c94a-48b5-aa08-9b6abf3cd14f",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "15c1dde0-a70e-4485-94cb-5214605da787"
        },
        "item": {
          "id": "0982377e-d78e-4c25-b4aa-a6ebb65aac49",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "286dcc6b-72da-45f0-9dd3-846175262ac7",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "313dd5cd-f9c1-46b6-94b8-896561553721",
        "cursor": {
          "ref": "3b3fadc9-aa60-43ae-8835-6cd718e8d4ad",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fe7ee645-f95c-4d90-9679-a4a5f3bd416b"
        },
        "item": {
          "id": "313dd5cd-f9c1-46b6-94b8-896561553721",
          "name": "did_json"
        },
        "response": {
          "id": "371acf67-0084-4392-91e5-64b6affd657e",
          "status": "OK",
          "code": 200,
          "responseTime": 1728,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5155fb2a-2b9c-4059-9a88-eece6d5e3169",
        "cursor": {
          "ref": "0b44091f-6ec9-4e87-aa39-5c955b8e8549",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "50ab3f54-3a1b-4c4e-8c2b-20167d03f902"
        },
        "item": {
          "id": "5155fb2a-2b9c-4059-9a88-eece6d5e3169",
          "name": "did:invalid"
        },
        "response": {
          "id": "5bdadd1d-66e5-4e24-98aa-a83b6f789bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1089,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5155fb2a-2b9c-4059-9a88-eece6d5e3169",
        "cursor": {
          "ref": "0b44091f-6ec9-4e87-aa39-5c955b8e8549",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "50ab3f54-3a1b-4c4e-8c2b-20167d03f902"
        },
        "item": {
          "id": "5155fb2a-2b9c-4059-9a88-eece6d5e3169",
          "name": "did:invalid"
        },
        "response": {
          "id": "5bdadd1d-66e5-4e24-98aa-a83b6f789bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1089,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0feab708-28b1-4e39-b6cc-fdc6c9276f23",
        "cursor": {
          "ref": "203808a0-56e1-4946-b260-8763102e6a8e",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e73c4418-7d7a-41e8-83b1-09d3f42166f8"
        },
        "item": {
          "id": "0feab708-28b1-4e39-b6cc-fdc6c9276f23",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5065728f-3575-4c1f-a13f-eb3d5076ffb5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 108,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3db360b-186d-4492-9c99-f74f615e156e",
        "cursor": {
          "ref": "7071d68e-9ea0-4b3b-8245-eb1b29ab55e4",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "79bce307-b016-40d0-99d7-59ec8b99125e"
        },
        "item": {
          "id": "a3db360b-186d-4492-9c99-f74f615e156e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5fde0fb4-21a3-4ba5-b45d-f1c89393cfc1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1347e63a-45ca-4fda-a2fd-db450a292e21",
        "cursor": {
          "ref": "fac003bd-2887-4161-a87c-88d794f14995",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9a82a39c-f858-44aa-87cd-689fbdda61c6"
        },
        "item": {
          "id": "1347e63a-45ca-4fda-a2fd-db450a292e21",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e4ca77cb-e522-4fe2-a736-c199785c6223",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f297bb3-ced8-49dc-8b70-4546cec07f16",
        "cursor": {
          "ref": "06701797-53f3-4be1-8f96-b255d7614cd2",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "86f5e148-3d36-4255-8d20-dd0830dcb574"
        },
        "item": {
          "id": "8f297bb3-ced8-49dc-8b70-4546cec07f16",
          "name": "identifiers"
        },
        "response": {
          "id": "9450de57-4783-4a7e-99d2-647f2e004af8",
          "status": "OK",
          "code": 200,
          "responseTime": 1308,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e19b184-ccd3-46e0-a12a-a21abaa01b60",
        "cursor": {
          "ref": "8e0202a8-75d3-4dab-a92a-1fadc4806bd9",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c880ae93-b3c6-41a6-9db9-34457324daf2"
        },
        "item": {
          "id": "5e19b184-ccd3-46e0-a12a-a21abaa01b60",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5f9bfeef-749e-429f-98e2-3729b58bfb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d7425d-6d52-4a64-8e26-89df07e520f8",
        "cursor": {
          "ref": "c395699b-f063-4580-9bb7-9582badb7983",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b3470934-c028-452a-a85e-a11c010a0aa5"
        },
        "item": {
          "id": "39d7425d-6d52-4a64-8e26-89df07e520f8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d0359759-3ea2-45cb-b574-0fe00475ca25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 930,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89221579-54eb-49f4-a625-a14a9f9eca70",
        "cursor": {
          "ref": "1938127d-6b0f-482f-8b54-9807c2ef3a06",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "486d6130-dd7d-4a4c-b0e0-e8077a93ac32"
        },
        "item": {
          "id": "89221579-54eb-49f4-a625-a14a9f9eca70",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "daf09c83-4d73-4417-85a7-c39731e30d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12bb94da-0751-4415-b0a0-e1a9efc0dd5a",
        "cursor": {
          "ref": "e2e40382-e69d-495b-9db4-6e1c0cb21d47",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e84eec36-f5d4-4b3e-a454-a7ea57a11558"
        },
        "item": {
          "id": "12bb94da-0751-4415-b0a0-e1a9efc0dd5a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cc757c79-509d-4f3a-896d-626b921bf58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bada5f23-7496-4f68-8de0-dd3fab6c618e",
        "cursor": {
          "ref": "af6571cb-8dd6-40c2-8eb4-f3cbbc49419d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cfe23e9a-577d-4609-b886-dab2a6b3ba5f"
        },
        "item": {
          "id": "bada5f23-7496-4f68-8de0-dd3fab6c618e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e0031359-dc93-412d-8e26-2781c6e5449d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfd1579-2c5b-46d6-bae5-6c17444554d6",
        "cursor": {
          "ref": "56a05357-3910-4af4-8c8e-5c2b2fd626e3",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c711a75c-6d63-4e9b-ac69-395e3245d2fa"
        },
        "item": {
          "id": "4dfd1579-2c5b-46d6-bae5-6c17444554d6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "77c51636-22ba-4bc8-ac66-ca0d3ddeacf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27bd409-c228-44e0-846d-eac183b14f6f",
        "cursor": {
          "ref": "edf22787-6f99-4f94-8b9a-e69fa1d9f5c5",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6093b62d-b25e-47e6-a6fc-c7ab48a42fab"
        },
        "item": {
          "id": "b27bd409-c228-44e0-846d-eac183b14f6f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "88815389-17c5-4156-815b-5d34fc65d2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5aeffdd-00b1-4a99-a71b-96b2c3810391",
        "cursor": {
          "ref": "eddd437a-0ab8-45f3-a59f-4765c4c6addc",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8beba58a-44bd-43ae-92da-5b729f657437"
        },
        "item": {
          "id": "a5aeffdd-00b1-4a99-a71b-96b2c3810391",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0f01cb9f-268e-4a47-b555-9ebdee3c9f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ae1607-12db-4abe-8876-aea8c017571e",
        "cursor": {
          "ref": "ddc7abc9-4d4f-4a7d-91b7-5da683cfd299",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "913d8c0d-733d-44d6-94d0-ee8f38fa010a"
        },
        "item": {
          "id": "a6ae1607-12db-4abe-8876-aea8c017571e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "62c76d9a-16f2-4f43-8546-63314e3a8095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e75a77-4845-46d5-9032-2dc146e47662",
        "cursor": {
          "ref": "f21dd27f-e68c-4b33-86b6-c23361fb469e",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "760315a4-d0ea-4a8f-81d3-8e2ee54f0d79"
        },
        "item": {
          "id": "e7e75a77-4845-46d5-9032-2dc146e47662",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c883f2d5-ff6a-4cb9-a418-9fa39dd3e890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc727622-31b1-4518-a649-0b418d3023a2",
        "cursor": {
          "ref": "7be639d6-5482-40ba-bfd4-14c80511ca8c",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "603e2caf-786e-4aeb-962a-5f61405a7109"
        },
        "item": {
          "id": "cc727622-31b1-4518-a649-0b418d3023a2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "496cffe4-36b0-4e3c-bec1-5c16f0b3bb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aadcb07-4366-4987-a8f2-79bc57475fd0",
        "cursor": {
          "ref": "e37949dd-182e-4c8e-8034-86e7da5d9e61",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "60e0da75-9264-4ef0-ac82-0df777f371c9"
        },
        "item": {
          "id": "1aadcb07-4366-4987-a8f2-79bc57475fd0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0bfaf940-5c07-4613-8908-62878290618d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6ce2ff-1102-4a37-af38-9ca06d57f9d5",
        "cursor": {
          "ref": "b212ae75-03a4-4d19-abb0-f5d1d8c26a75",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9963bc2f-c86e-41b0-954d-30f1818a5b9c"
        },
        "item": {
          "id": "1a6ce2ff-1102-4a37-af38-9ca06d57f9d5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "929ba135-a071-4d46-95e3-c9b81305e117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b74a15-b276-4426-b07c-c59c152f39bd",
        "cursor": {
          "ref": "b16a64d4-3b38-49f3-8f7b-045d35d2080e",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "dd3c716a-75be-4f58-a641-9fa1922ee0a9"
        },
        "item": {
          "id": "78b74a15-b276-4426-b07c-c59c152f39bd",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "31a03773-0f11-4d19-8e06-7dffe61ec622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854ce771-479f-46b9-b1f3-819698244057",
        "cursor": {
          "ref": "0ac3210e-76d2-4b13-a671-4a5e90e6d8b6",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "22336430-686c-4e99-9199-fdfa00ac40b0"
        },
        "item": {
          "id": "854ce771-479f-46b9-b1f3-819698244057",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e7baec8f-47dd-4f98-a2e1-8f93acc8e0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276f087b-adea-4a29-859e-dff3a51def46",
        "cursor": {
          "ref": "9d171ea7-1453-4d24-8b27-2e168d556fb8",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7d841495-3aa9-417f-aae7-0dea275564fa"
        },
        "item": {
          "id": "276f087b-adea-4a29-859e-dff3a51def46",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "85a37f6e-da2b-4f5a-bebd-96625a038e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80504e7d-447d-4fc8-b801-c73c12563a87",
        "cursor": {
          "ref": "d2ef2398-2a1d-4ebd-8bb2-ae452d998c13",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c7a35823-8e62-4de3-9ed0-5b3572906681"
        },
        "item": {
          "id": "80504e7d-447d-4fc8-b801-c73c12563a87",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4557350d-578f-4e6b-aa7e-94a27d696bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7289ed4-7ba9-4fce-b198-fd8424ab92a2",
        "cursor": {
          "ref": "20985b98-d4a3-41d1-8f51-a8134adab8a4",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0d78f917-9427-47f4-8dd5-bd731062cd25"
        },
        "item": {
          "id": "a7289ed4-7ba9-4fce-b198-fd8424ab92a2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "79415a0c-d01b-4514-a8e4-926d41102566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109c4ecc-8773-4723-83c6-67545de909a6",
        "cursor": {
          "ref": "ab81ecf9-8206-4fcb-a9df-0866d53ff7ea",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "72854dce-4ba5-4556-812c-10029307f2d1"
        },
        "item": {
          "id": "109c4ecc-8773-4723-83c6-67545de909a6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "018f2440-8d78-42b1-9684-49738e79f1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a32bed-c89a-4a8f-b0a6-2a135555d7d7",
        "cursor": {
          "ref": "f49ceb0f-ef44-4a65-bece-e49137df75b9",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4a1c1b64-3841-4171-9870-b024acf8b0ad"
        },
        "item": {
          "id": "e4a32bed-c89a-4a8f-b0a6-2a135555d7d7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e70aa328-19ef-4fc3-9377-cd17796b66c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c4251a-17a8-48a1-871e-f379e5f36ca0",
        "cursor": {
          "ref": "a24f8013-7018-4487-8890-fa04de8d06bb",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9e8c708f-2b67-42f7-9dc4-700db860938f"
        },
        "item": {
          "id": "e6c4251a-17a8-48a1-871e-f379e5f36ca0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bc09ac34-aac9-4104-8643-b1832f0cc393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6cc64c-5fea-46ad-8b23-d80d1c69593e",
        "cursor": {
          "ref": "40d046a3-343f-4762-8b04-5282ab141a50",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a1e772d5-f164-4840-976c-2ec31e6ba252"
        },
        "item": {
          "id": "ca6cc64c-5fea-46ad-8b23-d80d1c69593e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "58a613f7-4e86-42c6-9ae6-caa0d1e7914d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e274e8d6-c154-4a6a-bc12-d36f1fcdacb7",
        "cursor": {
          "ref": "d0971cf9-34de-4834-b2d2-787e6c4f8766",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "82638982-5b72-498b-9f75-baaaa29c3b16"
        },
        "item": {
          "id": "e274e8d6-c154-4a6a-bc12-d36f1fcdacb7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ea60789d-7a96-4d6b-8c5f-8e7a3b819c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007d7449-c9ca-4195-9824-d02109853afe",
        "cursor": {
          "ref": "04d6cfc9-7238-46f7-a7f1-34d61612620c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "87d051d3-066b-44cb-8cbc-5a5fb59a541b"
        },
        "item": {
          "id": "007d7449-c9ca-4195-9824-d02109853afe",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1ec54c49-f87d-4189-bad5-9095481f08c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b64d52-390c-48bc-8f9b-e946a94afd72",
        "cursor": {
          "ref": "2c9623af-6121-425a-8e46-4b8d8d648068",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6cc7668c-abef-49ee-9f80-34ec7c6f847e"
        },
        "item": {
          "id": "92b64d52-390c-48bc-8f9b-e946a94afd72",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bb8c169e-2cbd-43b8-a4ea-30668c332171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33734584-08df-4e53-8d52-9c78645f32ae",
        "cursor": {
          "ref": "3a451b49-cfcf-41e0-9663-cfe5fddb6c5c",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "108d9cb2-bd2e-4956-b64f-beb969df5667"
        },
        "item": {
          "id": "33734584-08df-4e53-8d52-9c78645f32ae",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ce1dc19c-0307-4e4b-b5ae-43573fcde53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985b80b5-8799-41e7-b746-1ddf39c513b6",
        "cursor": {
          "ref": "5bafec37-6212-49fb-a8df-fb68a41f43c8",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "52f5ad59-67c2-4d3c-93d0-f84366a546de"
        },
        "item": {
          "id": "985b80b5-8799-41e7-b746-1ddf39c513b6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f5c6cc4b-5c9a-4d69-b1ca-9904096a4730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74315479-f518-4cbf-ac66-a0e3e5dfffed",
        "cursor": {
          "ref": "fa790a6c-5029-4510-a670-aa1696e62fa2",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2804d2cd-a122-4236-a2ce-dc9d497155a6"
        },
        "item": {
          "id": "74315479-f518-4cbf-ac66-a0e3e5dfffed",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fbb07552-f718-456a-a073-80206a259948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c767502f-2ec4-49c0-abf9-4ca7c3e42963",
        "cursor": {
          "ref": "f8dd7148-4b3c-43f9-ba5b-7a955d156f6d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cfb8d4b1-c803-45fa-9b51-e01248f9cf0d"
        },
        "item": {
          "id": "c767502f-2ec4-49c0-abf9-4ca7c3e42963",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "16bc26fe-9195-4c5d-9468-5be236e6b861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa643d6-64f1-4c9a-991a-e3d92fee85ae",
        "cursor": {
          "ref": "307acd6e-5f38-4756-b07a-742ee3e604f6",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b4c6b6fa-f8c0-47d3-ac07-60a80759a1aa"
        },
        "item": {
          "id": "ffa643d6-64f1-4c9a-991a-e3d92fee85ae",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e147c0f0-892a-4843-9a6e-8cf8a1d45d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d2bbe4-9d74-4010-a359-a4b9d0b05676",
        "cursor": {
          "ref": "05efd558-95e8-40dc-85e6-5a06bb61a0f1",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "50b6576c-44dd-4a71-ae9a-81682f970033"
        },
        "item": {
          "id": "26d2bbe4-9d74-4010-a359-a4b9d0b05676",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9bcf3d94-eb29-43a7-a469-f56154f7bd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09cce548-25d3-42d3-8ab8-1d16d91fe0cc",
        "cursor": {
          "ref": "55bc5c3f-eecc-4968-beff-8e2eb758e6d9",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3e175415-14c7-45dd-9429-5b56d4a0e712"
        },
        "item": {
          "id": "09cce548-25d3-42d3-8ab8-1d16d91fe0cc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "157f2de8-a0ce-43d4-a18e-209c58a43da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed73a49-a6cf-4d1d-ad2b-dc5c2f9759fe",
        "cursor": {
          "ref": "ffb53ab8-3a43-4b8d-a50b-c939a2be425a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f4fd9cd8-7667-4553-bc9a-02a626ef9070"
        },
        "item": {
          "id": "2ed73a49-a6cf-4d1d-ad2b-dc5c2f9759fe",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "883eb5a3-8050-43a2-ab5b-735a6f0e51fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9dde226-2149-4d68-a380-82d47143e262",
        "cursor": {
          "ref": "7e687955-7f1f-4d7e-a6fa-08933a1a39c8",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bde619ce-432d-4591-94fd-42a68b6e6382"
        },
        "item": {
          "id": "d9dde226-2149-4d68-a380-82d47143e262",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c7cab709-a5c6-4534-81f0-f61889fee075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb46a637-b595-47b3-8dcb-3f86c7537b80",
        "cursor": {
          "ref": "3f9470d8-4207-41a7-ba1c-81c964ffc4f7",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a240d861-fba2-444d-9239-f8640d95ffeb"
        },
        "item": {
          "id": "bb46a637-b595-47b3-8dcb-3f86c7537b80",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1dea2b7d-5506-4cc7-adf6-bae19ef70700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8479928-5444-4135-aef9-1b5b7b65f6ff",
        "cursor": {
          "ref": "dd222339-612e-464c-b2bb-27e3512a4bb2",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "24c30f0f-e7fc-4ce8-a2e3-2b610596dc4b"
        },
        "item": {
          "id": "e8479928-5444-4135-aef9-1b5b7b65f6ff",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8f1df531-5fd2-4ed6-a9f6-b10116b8ba52",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1503,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3a1c42-5531-4407-ae1b-d9465bf40fe4",
        "cursor": {
          "ref": "42eb7a87-fb23-45a0-b58b-4509ed8515c0",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "84154e2a-38a1-4bf1-bae6-5bbb50c4f0a2"
        },
        "item": {
          "id": "cb3a1c42-5531-4407-ae1b-d9465bf40fe4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3b5afbf7-584e-4b0c-88fb-4d2ded7a0660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b580813c-89b5-4041-9ec4-b781f046c1ff",
        "cursor": {
          "ref": "38e53d67-58c1-4bb3-a161-1cea5930c864",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "40da2669-8fe3-4a93-b7d4-cd46d345564c"
        },
        "item": {
          "id": "b580813c-89b5-4041-9ec4-b781f046c1ff",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "31c3408f-a548-4ba0-960b-6b01c28da491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df99b002-1482-42c5-9fff-20925427a1bf",
        "cursor": {
          "ref": "c2be8bad-6039-4f66-850a-d39359bc4aba",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c83be09e-052c-4160-a5cb-81e115342def"
        },
        "item": {
          "id": "df99b002-1482-42c5-9fff-20925427a1bf",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4e1230c2-6e80-49a7-bfdb-f9dbc3669f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93719b7c-fc71-4c9f-83aa-efa3cd7379ba",
        "cursor": {
          "ref": "451fdc50-c4c8-4e8f-a905-df9a459d1251",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6275eac9-2741-4c5f-863f-1d1b01a4627b"
        },
        "item": {
          "id": "93719b7c-fc71-4c9f-83aa-efa3cd7379ba",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "13dd9545-9728-4efc-aaa9-dc39dc2b6f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5170950b-8748-40d4-9912-e82a9ac28898",
        "cursor": {
          "ref": "06bd4de1-b908-420f-91f6-94727ab8e1cb",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "99a4babd-aa1f-4fab-a2ba-95fe6e677627"
        },
        "item": {
          "id": "5170950b-8748-40d4-9912-e82a9ac28898",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7436f5b4-4436-41eb-bf23-2d5e9b128f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1657224-eccf-4a03-800e-1fa427444c9d",
        "cursor": {
          "ref": "58fbea9d-f57d-4192-af12-5c94b1bf1d9d",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c161be8d-ac38-491a-b50c-60edabd32611"
        },
        "item": {
          "id": "f1657224-eccf-4a03-800e-1fa427444c9d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "95d4ea43-4e59-4784-a29c-68df4a39ee63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc42dbe-040d-444c-8fef-d99190b269f3",
        "cursor": {
          "ref": "77965350-57e4-41ba-a5b7-b32e3b6b270f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4f4132fd-b141-487b-9236-690ed4b6f052"
        },
        "item": {
          "id": "bfc42dbe-040d-444c-8fef-d99190b269f3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "40ea5173-4ab9-41bf-b205-50a04fdef300",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1541,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bb7731-9e4f-4cf8-b897-d9068ba005d2",
        "cursor": {
          "ref": "eb72396d-00a3-4d5b-80ca-7e36b0aaceda",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "542a38ee-1233-4588-8daa-d624718ebd65"
        },
        "item": {
          "id": "41bb7731-9e4f-4cf8-b897-d9068ba005d2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "793ae1f3-e052-4b17-8fe3-b77613cd93d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3dbcf8-9685-4b31-b93f-87b060e5778f",
        "cursor": {
          "ref": "694a37f1-90cf-4f3a-aadf-a19621dbcfc4",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "99308a81-e11f-460f-86c7-31d3d4f37122"
        },
        "item": {
          "id": "8f3dbcf8-9685-4b31-b93f-87b060e5778f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ae284aef-b3f4-4c75-b825-4373e9f88406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2b7bdc-e307-4b7d-b0bb-0176ca480715",
        "cursor": {
          "ref": "d5fcb5ab-ff39-46b8-87e1-9c2f547a60bb",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5f9bdd5f-b291-4dca-9ffb-ccd372106636"
        },
        "item": {
          "id": "1b2b7bdc-e307-4b7d-b0bb-0176ca480715",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b3024127-f498-4783-a41e-83a574a34048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bafa78-b1df-4b2e-b2ac-bfb7bca84314",
        "cursor": {
          "ref": "6852426b-e038-4180-9438-d0a82e653862",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "affb61a3-cf0d-4765-9de8-90a26415246d"
        },
        "item": {
          "id": "92bafa78-b1df-4b2e-b2ac-bfb7bca84314",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bb61e8c9-a91c-4c37-94c1-bf37e395ee48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ecf8ae-efcd-4257-8dd2-86f741fda0ea",
        "cursor": {
          "ref": "ffc773e5-3f66-4077-abbd-0159bccf1949",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "90619ed7-1cea-4dd3-91c9-cabd0b08db49"
        },
        "item": {
          "id": "c2ecf8ae-efcd-4257-8dd2-86f741fda0ea",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "87f7dbdf-ae6f-42a4-add3-e7a80950ec83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b43be3d-9f06-41e2-85e3-66247442c432",
        "cursor": {
          "ref": "cda597cf-7f1a-4a49-8cba-bd0741eba494",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "81ffac21-a8fb-425f-a8d2-9eb02ae956e7"
        },
        "item": {
          "id": "5b43be3d-9f06-41e2-85e3-66247442c432",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a585d1da-7566-4e8d-ba9b-d8b6869ec20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fd4c9f-ac92-4391-864e-b931049b2756",
        "cursor": {
          "ref": "f21cd6de-e506-4c62-9721-d3cec387540e",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b28a2e4b-3726-4d05-a2a6-137717a2a3da"
        },
        "item": {
          "id": "01fd4c9f-ac92-4391-864e-b931049b2756",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "896fe976-2b3e-4fff-8331-6875359fcd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab06344b-6c48-4a32-be92-2447ef42d4c3",
        "cursor": {
          "ref": "5686d5c2-5fb9-4f28-871a-4a84c42ad96d",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d480b5d3-4712-44d9-9a90-fbc4499792d2"
        },
        "item": {
          "id": "ab06344b-6c48-4a32-be92-2447ef42d4c3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b5c60cab-b164-4835-90c6-038f97bfb96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dba1ae-c43d-43be-b1a1-9bc4a6ea0809",
        "cursor": {
          "ref": "715c0396-b8dd-4bc0-88e8-524edc34b667",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d62aa17f-4a75-4632-8c90-b54cdd39e689"
        },
        "item": {
          "id": "08dba1ae-c43d-43be-b1a1-9bc4a6ea0809",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6cd1a0a3-d42f-4f7d-ba5e-5033a756cb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7fe203-bf77-4c55-bf1f-5d05b3e710e6",
        "cursor": {
          "ref": "6ccf9319-b62c-4f86-9799-52c7936d9bde",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ac712f9b-68ec-4451-b780-dddfbdad4bbc"
        },
        "item": {
          "id": "8b7fe203-bf77-4c55-bf1f-5d05b3e710e6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "98319f04-2c16-437b-89a8-a4efaa9d3016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddfcc14-8fda-42f1-a3a2-2ab4cba6d9b5",
        "cursor": {
          "ref": "8be0775d-a5d3-4213-9e4f-64ec72a7b030",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3bf44599-a01f-45e8-bbd2-f93324e3c3ec"
        },
        "item": {
          "id": "9ddfcc14-8fda-42f1-a3a2-2ab4cba6d9b5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d5997ce1-680e-42bd-a762-1aa7d7274ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c57be64-43f0-446a-b479-deb28a0c9509",
        "cursor": {
          "ref": "e6839f74-185e-4ed8-a2f6-174e4a99fee8",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "71f0d249-b5d1-44af-829f-1d262c4982c0"
        },
        "item": {
          "id": "1c57be64-43f0-446a-b479-deb28a0c9509",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9d0db917-1bf5-4d91-a057-badd79d5b87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31de8f8c-4dcc-40c3-a1d5-04a1503d580b",
        "cursor": {
          "ref": "058dcbc4-0bdb-42f5-9bdc-5c97525ac1d4",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4c4ed1c3-b64a-4a98-a22a-fec4eab2c06f"
        },
        "item": {
          "id": "31de8f8c-4dcc-40c3-a1d5-04a1503d580b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ff88c6c1-ae0f-4c84-a5fd-703af1d26c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd146a46-dfc5-4ee0-baf9-962cfe433d7b",
        "cursor": {
          "ref": "1ffd730f-1960-4218-8f90-930dfafc2694",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "703d5cd3-7690-4e7c-9fb4-7d6fc87683ef"
        },
        "item": {
          "id": "dd146a46-dfc5-4ee0-baf9-962cfe433d7b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "35e8cc04-0359-48cf-b3c7-c0fb63a1ddfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e034c62c-1213-4c8a-91b0-109109f6d873",
        "cursor": {
          "ref": "1023b0b6-2932-497c-807d-67f481dacf8c",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5af7dd5f-1431-40b3-92a9-959518d1218a"
        },
        "item": {
          "id": "e034c62c-1213-4c8a-91b0-109109f6d873",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ec8db85a-3ae9-4908-b297-150abd11271e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1871dc0a-dd57-4cea-bed3-1e2b7fda57c3",
        "cursor": {
          "ref": "fc62ef00-f40c-410c-a09b-269958951067",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f5101ffe-9f3e-45cc-9894-6e430c9c61a3"
        },
        "item": {
          "id": "1871dc0a-dd57-4cea-bed3-1e2b7fda57c3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bc19885f-3e03-451f-89fd-cf82882ebee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935dc928-bf33-430d-a48f-fd7b70142dca",
        "cursor": {
          "ref": "ac608158-cad5-4114-a1f8-3c332affd19a",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2ad908b7-52ba-43f6-8ece-a34328135c83"
        },
        "item": {
          "id": "935dc928-bf33-430d-a48f-fd7b70142dca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b3ef315b-11d0-408d-b0aa-0836a4f0fd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e32fb2-9919-4396-9f42-012d81e16d35",
        "cursor": {
          "ref": "dfd99106-7500-44a5-8ee3-7af8c084878a",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6e48d3fb-16f1-4860-80df-ecbe34f75227"
        },
        "item": {
          "id": "d0e32fb2-9919-4396-9f42-012d81e16d35",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "46aabfd0-e949-4752-ba40-cfdd1d45d1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b95269e-9070-43fb-9608-b20e2dc2b1d0",
        "cursor": {
          "ref": "65c9750a-c05c-47a4-a74a-0f0c37ac9308",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0c3ae228-8f52-4823-b0e4-476f968b7a2a"
        },
        "item": {
          "id": "1b95269e-9070-43fb-9608-b20e2dc2b1d0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4b6ae3f0-77e7-4502-b586-ce53f8913261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833b08bf-a926-4a60-9e7c-e5389c915fa0",
        "cursor": {
          "ref": "ba35e7ad-7181-4ec1-9d44-f5533faf3c20",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "06364099-c144-4aa0-8237-a9cc57409b3a"
        },
        "item": {
          "id": "833b08bf-a926-4a60-9e7c-e5389c915fa0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fb3fcde6-f981-4026-aee6-c9192a2dd516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39afb4c2-7abc-4fc2-bac5-8fba730175c5",
        "cursor": {
          "ref": "b4c4e846-2264-400f-8b75-b1294bccd813",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f5591c3b-9931-4eb4-971d-5c2f183f1338"
        },
        "item": {
          "id": "39afb4c2-7abc-4fc2-bac5-8fba730175c5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d114d363-80c1-4e2c-b72e-14e22e688446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e3be53-ecc3-4352-9881-49e39b34c1eb",
        "cursor": {
          "ref": "50d774ca-723b-44db-89e9-add041dbd80a",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4a3526d1-06d9-4bd2-a9ae-5075f9f2f468"
        },
        "item": {
          "id": "93e3be53-ecc3-4352-9881-49e39b34c1eb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f2aeafb2-362d-4178-8cd9-9a72effa785f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf86f9e-ef80-4bab-9e05-1d846045c0e0",
        "cursor": {
          "ref": "ffe60d49-d52f-418f-a8bc-5bcb46fd419f",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "260e67ac-7bd9-4ae2-9efe-1b91fd86a15d"
        },
        "item": {
          "id": "cbf86f9e-ef80-4bab-9e05-1d846045c0e0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fba55cca-15f5-4876-894e-ad94080eaa48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf80e355-e6b5-46bd-9f37-8899cbed3b33",
        "cursor": {
          "ref": "87e19a09-9487-4418-b06c-15864e53b40f",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "20997037-f7e3-48ef-bd7a-b76fec0ccd34"
        },
        "item": {
          "id": "bf80e355-e6b5-46bd-9f37-8899cbed3b33",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5f226736-d46a-473e-81a9-56ea9a8af774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1854127-9a83-42ba-955f-88016138d976",
        "cursor": {
          "ref": "20178719-903d-4fd7-9dbc-05c5ace4bee3",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c00d88a8-597f-4622-9092-f5b88a39a0a7"
        },
        "item": {
          "id": "d1854127-9a83-42ba-955f-88016138d976",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "87bb702a-07b7-4e90-b926-0f9e2cb76c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18acf55-77cd-4684-be49-9c20eb4d27ce",
        "cursor": {
          "ref": "dd3ba793-7a23-4089-93c3-2fa5316b538a",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "612b4a15-175a-45a0-8d6d-3bfcbd6697ee"
        },
        "item": {
          "id": "f18acf55-77cd-4684-be49-9c20eb4d27ce",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a66c4d27-59ea-49dc-9178-84b72277b0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9007c1-f70d-4fc2-a779-c122477e1d89",
        "cursor": {
          "ref": "4e885e8e-cdba-48ef-9352-ff069eb60f80",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b7cc816b-4ed7-43d2-9c77-01d1b74c3aeb"
        },
        "item": {
          "id": "8b9007c1-f70d-4fc2-a779-c122477e1d89",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "49473ea8-08bf-4213-8b94-b0f8317f6fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b5c94a-c212-42d5-8dd1-4c97d80065ec",
        "cursor": {
          "ref": "ae898348-0449-444e-ac26-1ee78f5af80f",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "076fcb6c-fcdc-498a-8708-271c0305daca"
        },
        "item": {
          "id": "17b5c94a-c212-42d5-8dd1-4c97d80065ec",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b67b25e3-13d5-4a73-bbbb-e86a11ac24af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c74028f-4fa9-48d1-8678-32aa0ccee34b",
        "cursor": {
          "ref": "4cc9fbd4-8c3a-43f7-aff5-a43c4344b21b",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "be6f012b-d70e-407d-92e2-3c7b8b6a3d93"
        },
        "item": {
          "id": "1c74028f-4fa9-48d1-8678-32aa0ccee34b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f64bd3a9-e8a7-4f6a-bed5-a467fea6d435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1423f0ed-4231-4bb7-8f60-ebdcee2bb7a7",
        "cursor": {
          "ref": "fdad7870-b541-4bf9-a3cd-301cf676d353",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "48bf3946-6e67-4199-b0fb-4bbdfaa3cd74"
        },
        "item": {
          "id": "1423f0ed-4231-4bb7-8f60-ebdcee2bb7a7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2f19baa7-7583-4c35-9d47-cd817ed45338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297304cb-7676-4e1e-83f9-fa2e6b54d526",
        "cursor": {
          "ref": "cd760156-2494-4c0a-9943-2e76493846a1",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "76ceb0eb-45f8-4022-b600-a35862486d7b"
        },
        "item": {
          "id": "297304cb-7676-4e1e-83f9-fa2e6b54d526",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c9597c85-9ae4-41dd-94f9-3effe5e9422d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d44554-12bc-4900-9a4c-a88d108a4b52",
        "cursor": {
          "ref": "b0fc2a57-09d2-4dd3-94ef-79c9949d269a",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "117f53a2-fd9e-4faf-957d-fa241225597e"
        },
        "item": {
          "id": "06d44554-12bc-4900-9a4c-a88d108a4b52",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "496f6db0-da5f-45e6-accb-7474998f1aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4c6596-71e3-4353-915c-349508548990",
        "cursor": {
          "ref": "1cbfd648-fb47-48bf-9277-4fed13ab107b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c113837b-72b5-459e-bf06-e5aed470bf6f"
        },
        "item": {
          "id": "ce4c6596-71e3-4353-915c-349508548990",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "14e40f09-585e-4856-8f71-3e650e5f4c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80303953-5f86-4f56-89c2-0ca2a879557b",
        "cursor": {
          "ref": "fb92d796-120d-4a62-a81c-d616a59e836d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fffbca28-645f-4d50-8342-e02e311a2422"
        },
        "item": {
          "id": "80303953-5f86-4f56-89c2-0ca2a879557b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "613b5a39-a499-42ef-8bf6-f5c840756323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f029b9-c4b6-4748-b292-36d68249f603",
        "cursor": {
          "ref": "d45193d2-8ca1-44ce-86fa-781c94aa0999",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7c00dcdb-f451-4c3b-8c4b-7579ea731215"
        },
        "item": {
          "id": "c1f029b9-c4b6-4748-b292-36d68249f603",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e66030dc-f553-4a13-bad4-62c61733a382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d153f1-d3d8-412e-8a59-97e1a4211145",
        "cursor": {
          "ref": "bca88ee5-a3cc-4254-a8be-63e416fcaa29",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "db3042f6-6b22-46b6-a3a8-e22841fee067"
        },
        "item": {
          "id": "b8d153f1-d3d8-412e-8a59-97e1a4211145",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "632eb873-da70-4ab2-a6db-af8a0941f5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd63d06-d3af-4947-b082-a20f24c15e84",
        "cursor": {
          "ref": "4d2bf263-13ec-4ad7-a14d-c7dfbddb9eb2",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3b2e546a-2d6a-41a8-aaeb-777f1b60f1ab"
        },
        "item": {
          "id": "6fd63d06-d3af-4947-b082-a20f24c15e84",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a6ae302a-c826-4625-9386-ecf538858cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855692cd-2017-46ab-a34d-675f920ad8f4",
        "cursor": {
          "ref": "ec7dbec4-8c78-47da-b19a-1bb2ef87b194",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d5feb1c2-6837-4db1-82cd-241e3ad100b7"
        },
        "item": {
          "id": "855692cd-2017-46ab-a34d-675f920ad8f4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "31bf78f3-4132-4f0d-8a20-caddf7334706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01ddba5-f75d-479b-b5b2-453989ca02d6",
        "cursor": {
          "ref": "ae6f2191-2388-428c-b17d-00442d2dedae",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "38e89cbf-d785-4d0e-a7a9-307aefdbf915"
        },
        "item": {
          "id": "b01ddba5-f75d-479b-b5b2-453989ca02d6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f1e47b57-a1da-40f5-94c1-f2c44e1e7f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe035f9-eb37-476f-a5f8-23ba41a80e48",
        "cursor": {
          "ref": "8c1b63e2-9186-4009-9811-a5cdc083a3b7",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b6628d39-4b39-4b06-be4d-d7120f42aa0b"
        },
        "item": {
          "id": "cfe035f9-eb37-476f-a5f8-23ba41a80e48",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0a72ff83-d727-429e-a240-a924bd0e1e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c591a945-b620-452e-80a5-db28f1b784ba",
        "cursor": {
          "ref": "7c87fc60-3b25-423f-8418-31f015e9aa64",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1c6efd47-f642-421c-a447-9feefb40357d"
        },
        "item": {
          "id": "c591a945-b620-452e-80a5-db28f1b784ba",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "aab70c17-523b-4d71-9aa1-15428f6de86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b95aeae-1050-4c38-8a14-4d513701b7f1",
        "cursor": {
          "ref": "21fb08ac-587f-4ad7-b8a4-6fd627e59d59",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b139d2f3-8d66-47a8-946e-6cf54ac52371"
        },
        "item": {
          "id": "6b95aeae-1050-4c38-8a14-4d513701b7f1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4ecae418-7504-4ee7-82ce-89738ed598b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5044151-9912-42de-beab-3abd01fa6331",
        "cursor": {
          "ref": "d59e66dc-02b0-48e4-8e23-9fcfc51b1db9",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7e56326e-fb3d-4bc1-9a41-7ebd000d3b59"
        },
        "item": {
          "id": "f5044151-9912-42de-beab-3abd01fa6331",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c05854fe-096a-4bbf-837e-8e4078294359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eafe194-7e70-49d2-946d-7c2589f14070",
        "cursor": {
          "ref": "e2b08945-780a-4842-83a1-bf751e3317fd",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "12a66ffd-5711-4b3d-a7bc-22de4f4489df"
        },
        "item": {
          "id": "2eafe194-7e70-49d2-946d-7c2589f14070",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6f780f8b-98a9-4769-9672-a96b58bdfa88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2290050-8a11-4d01-8b91-bb844ed8a30b",
        "cursor": {
          "ref": "65321e6f-5682-4e62-a0d6-84e1c488baeb",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4679c0e1-b031-48b8-b38d-272ddfb8e9f5"
        },
        "item": {
          "id": "e2290050-8a11-4d01-8b91-bb844ed8a30b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "234d46cb-9e5e-4f1f-a9c6-835510084b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48732675-eeff-42b5-818e-f340eaad6f9d",
        "cursor": {
          "ref": "22884818-fb89-41b7-82ce-7941726e908c",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7fd627ff-1bfb-42b4-809a-8ae0bcb21fe0"
        },
        "item": {
          "id": "48732675-eeff-42b5-818e-f340eaad6f9d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "16ead2b9-86d5-41b9-b4d4-9bc93701171c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020a71ef-d47e-41ec-9872-e5004eff3ac7",
        "cursor": {
          "ref": "2b00b0e0-5ecd-4134-91ad-413b6c058764",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1691c62a-a5e1-4185-8846-384696980bd4"
        },
        "item": {
          "id": "020a71ef-d47e-41ec-9872-e5004eff3ac7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6e60f602-fb51-4a98-a250-41461436dd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85bc3ae-e460-473c-8c26-81d1c48f013c",
        "cursor": {
          "ref": "56e342f8-6ea9-4b6f-ae18-47166a6baa54",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "031047e1-a1a1-4111-a290-5315f39650eb"
        },
        "item": {
          "id": "b85bc3ae-e460-473c-8c26-81d1c48f013c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a0be2b8f-aab7-4d73-aa19-ba4804a00d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7ea66d-8146-4a72-840b-7b294b538c77",
        "cursor": {
          "ref": "5e1ea12c-3488-4956-adac-c522b67988d1",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2f75b07c-6d77-4d6a-8277-fc69cb1a5e9a"
        },
        "item": {
          "id": "bd7ea66d-8146-4a72-840b-7b294b538c77",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "baa185b6-0dda-4512-9e8c-147239c82367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfed82b-04cc-4828-8ccf-e69be547c41b",
        "cursor": {
          "ref": "f6e7b30a-7ab0-4408-91f2-a73731f5601e",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4c69a5be-f650-488c-9d68-d59645e9b2c8"
        },
        "item": {
          "id": "bbfed82b-04cc-4828-8ccf-e69be547c41b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5263602f-35e8-47a7-9ca7-a2185c22d1e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abe302d-b90b-49af-bf32-a2ccea32cfcf",
        "cursor": {
          "ref": "79e0b012-3e96-4284-8ca4-a0f105fbdfb5",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "20484b26-ef79-4f6d-a6b9-ddbbd68234c6"
        },
        "item": {
          "id": "6abe302d-b90b-49af-bf32-a2ccea32cfcf",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7840c11b-2452-44e5-a616-44187b2fc1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c31b7e3b-ce25-4511-a264-e48e811a3f21",
        "cursor": {
          "ref": "00da1d36-7608-499b-86a8-ae3ca0469a00",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "54e9078c-c44b-4abe-994d-93671bc5a435"
        },
        "item": {
          "id": "c31b7e3b-ce25-4511-a264-e48e811a3f21",
          "name": "credentials_issue"
        },
        "response": {
          "id": "48e10e7d-9dcf-4ddd-ab75-65ad1a8ffb52",
          "status": "Created",
          "code": 201,
          "responseTime": 9628,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "169904d3-a1d9-44c7-a4ea-3fdc62087322",
        "cursor": {
          "ref": "e76ba170-6330-4106-9b89-2cd9777e4721",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8c5a7011-9bd1-42d5-9383-45fa6dd64b77"
        },
        "item": {
          "id": "169904d3-a1d9-44c7-a4ea-3fdc62087322",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "985899be-0c92-403a-bfb5-f5eee58b59e6",
          "status": "Created",
          "code": 201,
          "responseTime": 8529,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0df9d64-30c5-42df-810b-fdb3d337d4c0",
        "cursor": {
          "ref": "38c62f43-5398-4ca9-8374-2be4d438eed1",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cdf98e3b-42a5-4d24-b6c3-992e31c3fd7d"
        },
        "item": {
          "id": "d0df9d64-30c5-42df-810b-fdb3d337d4c0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "959fe1e2-a2a3-466b-86f2-4cae4ef2ff76",
          "status": "Created",
          "code": 201,
          "responseTime": 9220,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c063ffe-9734-48fa-a896-0ca29e7d1288",
        "cursor": {
          "ref": "4d6856cd-b592-4ef4-a73a-21d6a96b9203",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a0343a0c-b0a8-4faf-ab2a-5707f9e2152b"
        },
        "item": {
          "id": "1c063ffe-9734-48fa-a896-0ca29e7d1288",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d6f7d2fd-beac-494d-a567-edd7885da648",
          "status": "Created",
          "code": 201,
          "responseTime": 8463,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e673ac-6e71-4fc2-a38f-ead8e39ac9ae",
        "cursor": {
          "ref": "674d493f-6d82-42b4-943e-31ab5b2a51d6",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7179ea89-f23d-4125-95f8-a037b4c465f6"
        },
        "item": {
          "id": "67e673ac-6e71-4fc2-a38f-ead8e39ac9ae",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c9157c16-5e68-468d-ab36-d4d8e59863f0",
          "status": "Created",
          "code": 201,
          "responseTime": 8662,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d4a837-e466-46af-b25e-169952a80c4c",
        "cursor": {
          "ref": "27bc92f9-7488-4364-91e6-3eccfa1a92c6",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "54c16cd3-c32c-4ab5-b5ca-0d66106c6901"
        },
        "item": {
          "id": "85d4a837-e466-46af-b25e-169952a80c4c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "02fad122-ff7b-40c3-8e40-984f3b48a060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b40caedb-4fe9-4992-96cf-7250986b9601",
        "cursor": {
          "ref": "5f81421f-4197-4b3a-99d1-7edb21d86d61",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6c68daf6-e285-4555-af0e-2ef08a68ee0d"
        },
        "item": {
          "id": "b40caedb-4fe9-4992-96cf-7250986b9601",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "75f78b3e-d117-44d6-84c1-d30ba60efe71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302b3450-6d1d-4383-b8a8-06f38d7a5dd4",
        "cursor": {
          "ref": "34dae85b-4f29-4121-8475-60ce5a60d98f",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "058a85de-abb0-4d00-bcf6-75d9e3ec5138"
        },
        "item": {
          "id": "302b3450-6d1d-4383-b8a8-06f38d7a5dd4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2d7990f9-3ef9-4f3b-a28d-3eccb7dba44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a5a60d-028e-4de1-a4a8-082b2e8aa14d",
        "cursor": {
          "ref": "47e0cdd7-8064-4f9c-9398-62a993118eda",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "15422bd8-c8dd-4a17-ac40-85f5fe771c03"
        },
        "item": {
          "id": "85a5a60d-028e-4de1-a4a8-082b2e8aa14d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f9870046-0fd3-43e0-b4dc-1559874e30af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced97966-eec7-4659-a0b7-4932b33ccf6a",
        "cursor": {
          "ref": "d58bcee3-1851-4dc7-b4b0-677cc24d2cff",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7ca59b24-e4e4-4b44-bbc2-69dc08f38431"
        },
        "item": {
          "id": "ced97966-eec7-4659-a0b7-4932b33ccf6a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ae4736eb-5004-4c48-8d6e-fc23de4a850f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3885fcc9-2b38-41ae-b138-4e2d63e6079c",
        "cursor": {
          "ref": "da595d19-9abe-4706-82be-5c946283751f",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f943a4b3-fe52-4c91-a5ed-bcf318734be9"
        },
        "item": {
          "id": "3885fcc9-2b38-41ae-b138-4e2d63e6079c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5a2f6c95-82ea-4c60-8ac9-f6c0b73c79cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb769e3-f16a-43cc-a2b5-213fd4162f24",
        "cursor": {
          "ref": "610a09c9-edaf-4021-b6c4-1206e9dac838",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4d5a887a-50ea-48f4-9729-4b644a29ebbd"
        },
        "item": {
          "id": "ddb769e3-f16a-43cc-a2b5-213fd4162f24",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5f0f4a3f-2ea3-4359-9a77-104ad9f06bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d96363-375f-49ab-be24-63b1974eb1d1",
        "cursor": {
          "ref": "5dde604e-0b33-4df5-88f7-bd6975675760",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "88aa25d3-7692-43d2-89e0-74becff7418b"
        },
        "item": {
          "id": "f0d96363-375f-49ab-be24-63b1974eb1d1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "759fe8db-126f-4ffa-91fa-ba45cc476cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47da1634-821b-46b9-8f07-6c2f77e091ec",
        "cursor": {
          "ref": "6e822023-76ae-48f2-a087-063740c35cf8",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "70ea49d4-e649-491a-bf20-84314280f982"
        },
        "item": {
          "id": "47da1634-821b-46b9-8f07-6c2f77e091ec",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bf0284c0-e88d-437d-be07-d46c7469977f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c467fee-c26e-467a-af72-d0138ed9e765",
        "cursor": {
          "ref": "a6dcd6ca-83f7-46e7-8d69-c98ce3686291",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c2c2ad48-cd16-459f-9928-5ad286e01b9d"
        },
        "item": {
          "id": "3c467fee-c26e-467a-af72-d0138ed9e765",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "09e28d70-8a1a-4086-a3f9-c629f8947d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb10fe3-25d1-4a29-97fe-59bbf305f675",
        "cursor": {
          "ref": "15b92a69-2646-42cd-a0c6-b81655d8dd0f",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fa0aa9b3-a256-4257-ad56-40c83c52b6b9"
        },
        "item": {
          "id": "3cb10fe3-25d1-4a29-97fe-59bbf305f675",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2bd3e13f-453f-4f89-bcd2-89d8cd657af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d979a03d-6388-418e-8f78-becceb8d83d9",
        "cursor": {
          "ref": "0a05ea4d-c729-45ea-ab4d-5a554481b353",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "409322ec-377a-4d75-978e-ff4c41e43931"
        },
        "item": {
          "id": "d979a03d-6388-418e-8f78-becceb8d83d9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "26c7211a-cd91-4082-8369-366d0d3ae057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32dab1ca-3e86-4c4e-a1aa-0f858e1bcbbb",
        "cursor": {
          "ref": "5527b286-5912-432f-a280-958987db29e1",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7046dadc-30e0-48bb-80dd-0acc1cc5424e"
        },
        "item": {
          "id": "32dab1ca-3e86-4c4e-a1aa-0f858e1bcbbb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e2d67b69-3937-41c5-83d5-6a13f0927045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3caad7ea-ab4d-4301-9f40-260b2c6db2ca",
        "cursor": {
          "ref": "0da2117f-d23f-4ffd-86a8-f8fe601552f5",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c82ba034-0bab-4574-a520-efa7883dfb53"
        },
        "item": {
          "id": "3caad7ea-ab4d-4301-9f40-260b2c6db2ca",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "277280f0-8574-4c76-8ad5-ecb492ef21c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2377c089-7356-4489-96a5-06df64a9bc64",
        "cursor": {
          "ref": "b0de5aac-e5ae-4fdc-92ab-99edf110ac9e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "58e3d5c3-f02f-4a99-a6cc-4cd650fc63ab"
        },
        "item": {
          "id": "2377c089-7356-4489-96a5-06df64a9bc64",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "562897c0-5a72-47ad-b7d4-0807c5e6a366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b14ae51-6bdd-446d-b063-9a063b4d390c",
        "cursor": {
          "ref": "996637ee-c54f-4c4a-b6ca-1aa2b22cf6da",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9da3948f-c736-497f-8c47-832de4b8ed8c"
        },
        "item": {
          "id": "2b14ae51-6bdd-446d-b063-9a063b4d390c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ac85293f-4d8a-4995-b9b8-8eff41f60614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63aa8567-6bce-4334-bff2-949836506958",
        "cursor": {
          "ref": "fb19cc9d-1667-4a20-8486-26db99d0749d",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b74660cc-6d08-4182-8b21-e73530ac59e2"
        },
        "item": {
          "id": "63aa8567-6bce-4334-bff2-949836506958",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "402cd4bf-1c88-447e-bf7f-d68fedbdf6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d750715-395f-4128-844d-846f6e9d999e",
        "cursor": {
          "ref": "924b2640-8431-489d-83a1-8d16de22e4e4",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b60d3fc5-8aa3-494f-8678-bef038fbd941"
        },
        "item": {
          "id": "5d750715-395f-4128-844d-846f6e9d999e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "30025c95-a501-48ac-8bce-0f0a7aef27c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1264bd-697d-4177-8c14-f3fc903cc75b",
        "cursor": {
          "ref": "fc2fe1bc-ebfd-4672-a473-276324db7fdd",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "de0ac3da-c6fc-47a1-8864-9538e45a9f32"
        },
        "item": {
          "id": "6c1264bd-697d-4177-8c14-f3fc903cc75b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f9bb7f9d-09a4-4c3d-93ac-dba1e658ce90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8762314-b63d-4c3a-b6dc-443dec1e8194",
        "cursor": {
          "ref": "53469295-e46b-468a-bacf-1babecad1166",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "12e377fc-95a7-460f-9acb-8dd7e2ab71de"
        },
        "item": {
          "id": "b8762314-b63d-4c3a-b6dc-443dec1e8194",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cc25da5f-c2a1-4096-8a79-a15a0e6750ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec052099-3870-4a79-aa2d-8bbf84c982a0",
        "cursor": {
          "ref": "2bb7cc66-aaf8-4ace-8bf5-cc5e4c0af7b8",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "289ab5ab-ff19-430f-bc1f-d2ac6f91f058"
        },
        "item": {
          "id": "ec052099-3870-4a79-aa2d-8bbf84c982a0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "22c8127e-bb06-4b75-8709-1142c01ce52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518862ca-b4d5-4570-939c-69dc4984f323",
        "cursor": {
          "ref": "b43e113d-007d-4a86-87ff-3135ceb40339",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "706e555b-6fb9-4470-8251-39c4cdaba0fc"
        },
        "item": {
          "id": "518862ca-b4d5-4570-939c-69dc4984f323",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3ef02dc3-768a-4de8-85c3-5846875bdf0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de8c619-bd31-4403-a385-c81331da7775",
        "cursor": {
          "ref": "f45d75b3-7460-4efc-9033-4ac20ed15573",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ccd3f276-d696-4741-bc5e-25bab4a6af57"
        },
        "item": {
          "id": "8de8c619-bd31-4403-a385-c81331da7775",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5586ea8b-e01f-475a-ba73-814b9c5b519a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ceed569-5d30-4afd-8821-c0fa6d9843a9",
        "cursor": {
          "ref": "eb5ea841-2a01-4c28-8b2d-eaa1f89161ff",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f82f42e2-2a68-4fac-89c5-79e5cd921d89"
        },
        "item": {
          "id": "5ceed569-5d30-4afd-8821-c0fa6d9843a9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7a4ab8c5-4d8a-47ed-8d39-837d938a185e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb38c092-8161-4c77-84e7-5d20a0175c4b",
        "cursor": {
          "ref": "5ae49915-e803-417f-80fc-f76d89b71908",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7f75edcf-2617-4488-9f3e-3517eedfb0db"
        },
        "item": {
          "id": "eb38c092-8161-4c77-84e7-5d20a0175c4b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "aba8fbb1-ed3f-417c-9de2-b8e4a8971986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7a27f2-0a08-4f15-95f2-c6f6fbaa4dcb",
        "cursor": {
          "ref": "65bfb6ec-a82a-4aa4-9fac-45697466156c",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3852f1bf-6e3e-4dba-9f99-efecb6807e72"
        },
        "item": {
          "id": "8d7a27f2-0a08-4f15-95f2-c6f6fbaa4dcb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8c17cedc-20e1-4fc5-999a-79efc9d75499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccde664-0dc8-4527-ae5c-c441dee4a87c",
        "cursor": {
          "ref": "182e0e9d-9037-4fb3-9321-4c3cfdbe8325",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "33770cb3-f86a-4b70-98ad-2d78dbdfd85c"
        },
        "item": {
          "id": "7ccde664-0dc8-4527-ae5c-c441dee4a87c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d96e6e70-f07c-4fa1-9c67-641df840cc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98a37de-84a8-4347-876f-49b978983361",
        "cursor": {
          "ref": "bbe807fa-bc22-4397-bf20-f957ac2c839c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5176dbaf-72d5-4c78-978e-1d0349d468e8"
        },
        "item": {
          "id": "b98a37de-84a8-4347-876f-49b978983361",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "415c821a-b46b-4b1e-b4b4-59ccc407545d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356415b5-9e12-41af-a302-89c1f3212dfe",
        "cursor": {
          "ref": "79266384-dcdd-4c59-a933-2e37fe0bfa4b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6ecae77f-f05a-4d27-acc9-b856c573a654"
        },
        "item": {
          "id": "356415b5-9e12-41af-a302-89c1f3212dfe",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "661eec7a-960d-493c-ba66-0c83385e537d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea4665c-ec17-4d56-ad54-796124d9ceda",
        "cursor": {
          "ref": "470db537-213d-40f0-a571-b1c4bdb9891d",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "06ca4968-febc-4de3-9d8f-f12065c9a953"
        },
        "item": {
          "id": "2ea4665c-ec17-4d56-ad54-796124d9ceda",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "866b200b-e741-40be-9143-d9521fe05de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcb8850-9bcd-4a88-9643-e88b71c38e8f",
        "cursor": {
          "ref": "6ce27055-1b65-4097-b2c4-6579c1aa0cd3",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5c7080d5-e782-44dd-9273-c69686b32a07"
        },
        "item": {
          "id": "4dcb8850-9bcd-4a88-9643-e88b71c38e8f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "72aaa310-40a4-4dd5-a48e-a97378bb1b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcf3b88-0d2b-4b53-9129-e769c25bf671",
        "cursor": {
          "ref": "3a43fc98-b70c-4f4b-ac8d-18b2402199da",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6bdf207c-d91b-45d5-9924-d3061a01bd9e"
        },
        "item": {
          "id": "efcf3b88-0d2b-4b53-9129-e769c25bf671",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "67cd3e13-6c65-4e6b-9abc-27714c29294b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd75c22c-8f2c-431f-ba81-0548529e0b2c",
        "cursor": {
          "ref": "a9a961f2-1131-47e1-a41a-772dbdf98ec5",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d5937ebb-3b7b-4d73-9fa0-8373fb020907"
        },
        "item": {
          "id": "fd75c22c-8f2c-431f-ba81-0548529e0b2c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "62012346-9240-47b6-af48-e9c81fd58363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843c1ad7-93c6-4419-8420-acd7923f00f9",
        "cursor": {
          "ref": "df5ab092-71d1-4d23-8ab3-6cd4f4be4cd3",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "357b0c2f-95d7-41b1-8203-75d55a6aa7fb"
        },
        "item": {
          "id": "843c1ad7-93c6-4419-8420-acd7923f00f9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "385d424d-d373-41ee-b29c-9e8bdfa909fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a24736-0ac9-4ce4-8241-98512b195129",
        "cursor": {
          "ref": "e57e760b-574c-47d6-a0e6-156e56c1b947",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0b46c1c7-31b7-4e32-81de-5df0cc7c2631"
        },
        "item": {
          "id": "c5a24736-0ac9-4ce4-8241-98512b195129",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9fb07cc4-a6e5-4964-a825-4b0f454bd7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12760c7-5d12-4706-b479-738d0fd0eda5",
        "cursor": {
          "ref": "1f7da179-d164-4744-b27c-3f71a193862a",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b7d79f64-c742-4aa4-bb88-260a898feb9b"
        },
        "item": {
          "id": "c12760c7-5d12-4706-b479-738d0fd0eda5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "18c68522-5ded-498f-9c6c-b44677e24290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86872053-cacc-41c6-b340-018b4a33ba47",
        "cursor": {
          "ref": "23fce46c-68c5-4a4b-8550-37f1d804a231",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d76fbe3d-bf98-49f0-bc4d-0b4ac5694cdb"
        },
        "item": {
          "id": "86872053-cacc-41c6-b340-018b4a33ba47",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d7b17a30-50da-4cd6-a505-5417902bcdc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0941baa2-71ad-4c0d-aa06-2e1ab09f1635",
        "cursor": {
          "ref": "1e7da620-c754-42a5-b9ae-d33f13d5dfc4",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a0cb4fc0-2e0e-40f5-966a-7709ae4f7a72"
        },
        "item": {
          "id": "0941baa2-71ad-4c0d-aa06-2e1ab09f1635",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5ee93e9f-9595-441e-8d62-ad977fd90fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3cc963-06ea-4603-b51a-54b6fdca3f46",
        "cursor": {
          "ref": "2e5ebc7f-3772-4142-a2ca-e788ee2f64ac",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "72cf9591-1d1f-4c5f-9eb9-22bf23915c99"
        },
        "item": {
          "id": "fc3cc963-06ea-4603-b51a-54b6fdca3f46",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "69ad6bf1-7d5d-4587-a8c0-2ecd508cb6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28133a05-bf82-4f42-a013-cd5f0092f370",
        "cursor": {
          "ref": "882b78d9-3978-4937-8980-69376676e919",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "685d730b-292d-4e40-89c6-879e97595fed"
        },
        "item": {
          "id": "28133a05-bf82-4f42-a013-cd5f0092f370",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8d2a492b-a5eb-4ec2-9ceb-d278136bc335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44eaabdc-2043-49b7-8e00-f545c6316eac",
        "cursor": {
          "ref": "5f560f7d-4526-4401-b1c7-40514b4066f5",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "575bf466-c28b-4c29-890d-9de01eaa06e5"
        },
        "item": {
          "id": "44eaabdc-2043-49b7-8e00-f545c6316eac",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "840aab91-f28f-4d45-ac87-5756b28be3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7998dc-e269-4240-9504-e1258badf50b",
        "cursor": {
          "ref": "43d8625d-cbc8-47f6-bfdc-94f0622585b9",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8f672c3c-b306-4be3-bbd9-988a64e60586"
        },
        "item": {
          "id": "6a7998dc-e269-4240-9504-e1258badf50b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b19474cc-566b-442b-8c85-c1db92c1afc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6edc2d-dca3-4832-9f42-64c195992bac",
        "cursor": {
          "ref": "fa71c696-f479-4593-8a22-1bb8ef87df60",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fb8f4ccf-ce3f-409d-9720-48d2d8ecd3c6"
        },
        "item": {
          "id": "dc6edc2d-dca3-4832-9f42-64c195992bac",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "dfd9cf39-d715-4a77-9a6e-1b85fd5df1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b089b7e1-2dec-41a4-868b-a5eeb5ff1a95",
        "cursor": {
          "ref": "578d457e-ac76-4046-8e86-31339a24b352",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ebf9121d-632b-42df-bf53-d27a180407b0"
        },
        "item": {
          "id": "b089b7e1-2dec-41a4-868b-a5eeb5ff1a95",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6a68b8bf-2823-441c-bda4-dbddf65d0e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829f0c24-e92c-4d51-a178-06781a87c48d",
        "cursor": {
          "ref": "75029198-b714-401e-8d80-7c8899da8062",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "019faa74-c512-4f25-a70a-7b5ad2a55bb8"
        },
        "item": {
          "id": "829f0c24-e92c-4d51-a178-06781a87c48d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "15a7836f-597a-4adf-84df-baf0f7e543d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7545f3c-67dc-44a8-9aaa-dba7524831de",
        "cursor": {
          "ref": "347b5016-3003-49ac-b813-cd55c0d86bf5",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "540c403c-66b6-4c0c-9dae-e72244d369f4"
        },
        "item": {
          "id": "c7545f3c-67dc-44a8-9aaa-dba7524831de",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "57136875-6b4e-4edb-b03e-d547cdaee943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143b2661-8a62-44a8-81b7-6f21522dd012",
        "cursor": {
          "ref": "e1808ac2-2de9-49ca-bc08-c8ebb04f8c3c",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ec95eb71-a222-4faa-bad9-2fe0a890b47f"
        },
        "item": {
          "id": "143b2661-8a62-44a8-81b7-6f21522dd012",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "87d4c72d-61c2-486c-bbe8-d561f30fecb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f5786f-4ff8-4b36-a84f-525d783777fc",
        "cursor": {
          "ref": "28850629-5e37-4c5d-89ce-b68f424c29a1",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3064460d-b3b4-4610-bbd6-42c5433a3e5d"
        },
        "item": {
          "id": "08f5786f-4ff8-4b36-a84f-525d783777fc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1cb0f5c0-95f1-4711-a6f7-616b2fc13496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c097e009-d49e-4e42-8db5-6ef803341c8c",
        "cursor": {
          "ref": "59aa56ba-b8f7-4eaa-a5e1-ab18902a9c92",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4aa09804-5e38-47d8-9f8c-1753208ca4e0"
        },
        "item": {
          "id": "c097e009-d49e-4e42-8db5-6ef803341c8c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a87df0ed-7ab2-4da2-b8cd-04c055ce4646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0644cb11-7227-4bcc-9294-28ffc6619f36",
        "cursor": {
          "ref": "ccc33d0a-cdb8-4bef-baa7-4d317aaa38d8",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "73b9bb90-3be9-4216-b15f-54c507f7bf7e"
        },
        "item": {
          "id": "0644cb11-7227-4bcc-9294-28ffc6619f36",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6f1e1415-0966-4e4c-956c-e5e678828a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fa9ed3-7ab7-49dd-b1f1-50baa61350f2",
        "cursor": {
          "ref": "927dd923-7cc9-4cf7-b781-186329f42d56",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "aea497cf-8761-4940-bab8-212f2e45d9b0"
        },
        "item": {
          "id": "b3fa9ed3-7ab7-49dd-b1f1-50baa61350f2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "36638e22-4bb9-4c9a-8cbe-6aeed5024e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc374886-9e9f-4691-ad9f-27699b9a9fac",
        "cursor": {
          "ref": "1e63d404-b6e3-433c-9da9-5bb465f2dfef",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "98f38bb4-74f2-40b7-add9-cdc6cc923e21"
        },
        "item": {
          "id": "fc374886-9e9f-4691-ad9f-27699b9a9fac",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "56847dc4-4f93-42ac-b7f3-3f7f4ff5fa95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c091b93f-7679-4281-bb9a-fbb0e4a7b3d7",
        "cursor": {
          "ref": "12932b23-e0e1-4dc1-9077-2cb491328906",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "15d75e41-7697-4815-906c-6d4da28de6e7"
        },
        "item": {
          "id": "c091b93f-7679-4281-bb9a-fbb0e4a7b3d7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "428a8e9f-6a5e-4de6-a6c3-84ba5be48277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a77711-da9b-4703-b3b2-180fa20064b0",
        "cursor": {
          "ref": "daff59c3-8fba-4317-81ac-8031ce3ed3ad",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "550878ca-906c-4e9b-94a0-e89c1f1fc3b0"
        },
        "item": {
          "id": "a0a77711-da9b-4703-b3b2-180fa20064b0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "87f9c634-de78-4e02-968a-392154b2431a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c907210-cdd0-4df7-a52a-4017ee5c5487",
        "cursor": {
          "ref": "9afad7c7-8a74-4b0f-9671-395aa12e487a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "55413a2e-6ff5-40da-a730-13dc773ac007"
        },
        "item": {
          "id": "7c907210-cdd0-4df7-a52a-4017ee5c5487",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b651c344-cbc2-43b0-8f64-8263ba8d3082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab56b22-da4f-4359-8fa4-4e4d6e8d7ee7",
        "cursor": {
          "ref": "d6d6ac9f-36d6-4acc-8a88-dbd0675c607f",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "01f61d34-9c1c-4e38-8944-bcf0892377e1"
        },
        "item": {
          "id": "aab56b22-da4f-4359-8fa4-4e4d6e8d7ee7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5bde2a72-5dbc-4beb-af6f-6499bee9fd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea24abb-e4b4-4236-b7fe-1f403b678991",
        "cursor": {
          "ref": "041b1ad5-80b0-48bc-aa66-8bc9441ecdd8",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2a191bd7-33eb-43ed-ad23-3e4d2f3580ce"
        },
        "item": {
          "id": "fea24abb-e4b4-4236-b7fe-1f403b678991",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c8c58b3d-bfa0-4c4f-862f-5c69aafa9692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe6c8a6-3deb-49bf-9f1a-38a4d942979b",
        "cursor": {
          "ref": "fd589621-05e0-455e-ac35-9916af5e19c3",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7b074028-ed55-4d14-8609-89130624c879"
        },
        "item": {
          "id": "2fe6c8a6-3deb-49bf-9f1a-38a4d942979b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cfe60056-fd13-4f41-b36e-3f50bfd1b315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb65ea0b-08ff-40ef-bd37-9512b5d51d82",
        "cursor": {
          "ref": "048bda1a-1fcc-49fb-a21c-f9233291ed69",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a38a1b62-4518-4773-9727-05443c9a205d"
        },
        "item": {
          "id": "cb65ea0b-08ff-40ef-bd37-9512b5d51d82",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "77c8ff8d-932b-41e2-b122-a63d40b69823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cff1deb-e81d-4c6a-bde9-09616b364e0c",
        "cursor": {
          "ref": "383af0ef-eb89-4097-a5b9-469c44b8f264",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c6656907-e11b-4f30-ba1c-08b27463bed6"
        },
        "item": {
          "id": "0cff1deb-e81d-4c6a-bde9-09616b364e0c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9f061aa9-09d7-438c-a5af-69bc2bbc8878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c924e69-9127-435c-92f2-73196de26b91",
        "cursor": {
          "ref": "d9f39a05-5ee2-4f5b-8e6e-820a14930d1d",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "02792563-c93c-422a-913c-6b7c988c45a6"
        },
        "item": {
          "id": "4c924e69-9127-435c-92f2-73196de26b91",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bdbe765d-2def-4626-aa3d-d1d4f8cd6450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58818fbf-c051-4720-82fa-09ce20e86103",
        "cursor": {
          "ref": "9f7280c0-de87-49ff-b3bf-e103a0a0f19e",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "18332196-a2e6-4769-a2a9-d37094dde2f9"
        },
        "item": {
          "id": "58818fbf-c051-4720-82fa-09ce20e86103",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "edbe9658-d397-40fb-9cc9-17c27ef7b580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce163255-f0e2-4401-ae84-490f65ec27a4",
        "cursor": {
          "ref": "b337b6f1-736b-4850-888a-fb7729e05dc1",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "75278864-9cc5-4ddf-b0d2-92939274c6e9"
        },
        "item": {
          "id": "ce163255-f0e2-4401-ae84-490f65ec27a4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b9f91d03-380f-4c5f-8b39-0339caf8f0c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3b28d9-6f3a-4c13-9a7e-734e87d7f945",
        "cursor": {
          "ref": "eff06d0c-b16f-41af-943a-184b25544c70",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7f28eb1f-1af2-4dd0-872e-99ea76373f42"
        },
        "item": {
          "id": "9d3b28d9-6f3a-4c13-9a7e-734e87d7f945",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "17ded1ad-8181-4741-b4c1-2a4691cdaaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd9718e-2036-4073-8713-6b05ad409c96",
        "cursor": {
          "ref": "d7bbb015-53d4-4cf7-952e-8ec13e135e63",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "11f32cd7-898d-42c6-869c-16ed05112361"
        },
        "item": {
          "id": "cdd9718e-2036-4073-8713-6b05ad409c96",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6f871650-2029-435a-a64f-16c5f772904f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d047408a-749c-4bd1-b168-7d56b8f4f4ef",
        "cursor": {
          "ref": "fa950756-1f44-4733-a287-19dccf575689",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6e8ce4bf-7d56-444a-a329-5b2d0aee55b8"
        },
        "item": {
          "id": "d047408a-749c-4bd1-b168-7d56b8f4f4ef",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2ed22b2a-f19f-4993-8f4a-f12716a7f868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13366fb7-0698-4771-ae97-f3be846179c5",
        "cursor": {
          "ref": "9a0defe3-cbac-41e4-8e19-7d65e63822b3",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c90ff82a-5fdf-44a3-a4a8-a0377f265ac0"
        },
        "item": {
          "id": "13366fb7-0698-4771-ae97-f3be846179c5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2608e079-b56b-4ae0-a865-7fe5a312012a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b6a6ea-112e-4170-929f-6ce7a8091a92",
        "cursor": {
          "ref": "eeeb2855-7976-49a1-885b-45cd7d667709",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "739ca600-2ee4-49a1-9e76-7e02e5c9fbb2"
        },
        "item": {
          "id": "c4b6a6ea-112e-4170-929f-6ce7a8091a92",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "291c5b0c-c016-4017-8121-d301ea08434e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d02e43-7440-404c-9b9f-b5a3519b263c",
        "cursor": {
          "ref": "a3242356-2111-4387-ad58-f6c89075a1ba",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b685e1f7-b668-4058-b45f-ef436039ccb9"
        },
        "item": {
          "id": "d6d02e43-7440-404c-9b9f-b5a3519b263c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d839d537-5eef-4bf7-97bd-56b3cbc70fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab38001d-1e5a-495a-a202-7541ec22bc08",
        "cursor": {
          "ref": "731862d5-e4bc-4f14-b1ce-c7bbdab4c4e2",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "60f85863-3d25-4c2f-adf9-3b8bec5acf1b"
        },
        "item": {
          "id": "ab38001d-1e5a-495a-a202-7541ec22bc08",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ef990a8a-e64d-4d35-addb-28e98f62708c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77f114e-4282-4f70-90f3-79439f0fdba3",
        "cursor": {
          "ref": "15a28c46-4911-4bd3-bd0b-37c636bc94f4",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cc6ee622-739b-499d-8167-4062d5f8b414"
        },
        "item": {
          "id": "c77f114e-4282-4f70-90f3-79439f0fdba3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d5e8784c-ac80-451e-a3be-eb1c83e56020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a70bed-b9c7-4794-900c-8623dec5e159",
        "cursor": {
          "ref": "23ea5da3-eece-47c9-8697-63da6dc10616",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "126d7529-1694-4d1d-a77e-23c0835d6019"
        },
        "item": {
          "id": "73a70bed-b9c7-4794-900c-8623dec5e159",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f866eafc-2455-414a-bdc8-d8eeac9e54ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52df2420-047c-44da-b6af-0d9143ffb3c6",
        "cursor": {
          "ref": "ae401bce-5252-45de-b16f-4af3b4132098",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "10a70253-1cd0-4f3e-b098-ac8d3356da75"
        },
        "item": {
          "id": "52df2420-047c-44da-b6af-0d9143ffb3c6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "00739b50-8e8d-4e1e-aeef-57f59ae5be70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452f6513-7a04-4182-9e8d-5602eb0ef0b9",
        "cursor": {
          "ref": "2ae4c6e3-4d94-4790-9ef1-c8a66ffa6189",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e333b533-f5b9-4cd3-9e15-904897541adc"
        },
        "item": {
          "id": "452f6513-7a04-4182-9e8d-5602eb0ef0b9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "eee2e475-589e-42f0-8189-208fd3e6e864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8614679-efc7-43e5-a216-24315c6b4fbe",
        "cursor": {
          "ref": "acd2a890-456f-4281-9c17-0f6a1207f261",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3cee9459-65a3-4a79-bcb7-cb0dc47b3fd7"
        },
        "item": {
          "id": "e8614679-efc7-43e5-a216-24315c6b4fbe",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1e9fb9b7-6560-40d7-860f-44b69dbe3717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6b8a45-0230-449a-8d70-6cbb1c6d419c",
        "cursor": {
          "ref": "cc6160a3-2712-464f-abb0-e99ab708843d",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c58fdd80-a0c1-4440-8db3-fa4895a82cca"
        },
        "item": {
          "id": "9f6b8a45-0230-449a-8d70-6cbb1c6d419c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1fe5ee0f-d843-4b64-a000-e453f49f5547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf64aa7-c88a-45e2-875b-fe47b74e068c",
        "cursor": {
          "ref": "822f0861-f404-4435-8f84-0d0808d49382",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5185decd-b0f6-4403-b784-fa7c9083c547"
        },
        "item": {
          "id": "0cf64aa7-c88a-45e2-875b-fe47b74e068c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "78820a12-9dc8-454e-a26c-c4e0a21d9778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e86ebaa-4fe6-41ef-9e17-1296744070d1",
        "cursor": {
          "ref": "02914709-063c-40c3-b00b-5f07e4ac00d4",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3da80599-d82f-4849-a444-4659d92a7ce2"
        },
        "item": {
          "id": "7e86ebaa-4fe6-41ef-9e17-1296744070d1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "20042a76-f5bb-43aa-8351-53731e4d9e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c53889b-e210-46dd-b6d7-f47991ae490f",
        "cursor": {
          "ref": "b251e7fe-9a83-4c8a-a5f7-960f0d5eff62",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c51dfa99-351f-4616-9169-5abac653e09f"
        },
        "item": {
          "id": "8c53889b-e210-46dd-b6d7-f47991ae490f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9c86bca7-fedd-491c-9c8d-282903877576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9a1859-0b07-4b72-83b1-0ac7d4539f62",
        "cursor": {
          "ref": "da608ddd-e893-4364-9404-f07dd3232608",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "18455c7d-50d4-45bc-a89f-99e14ad481f9"
        },
        "item": {
          "id": "4c9a1859-0b07-4b72-83b1-0ac7d4539f62",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4466619b-bfc3-49d6-ac33-7d35c76869b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935c18bf-6c20-4229-8b74-a606c6018ef2",
        "cursor": {
          "ref": "1baf16e1-48b8-4243-8130-dd1986ab5bb3",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f0422b59-6924-4d1c-a5c1-747fbd5c708d"
        },
        "item": {
          "id": "935c18bf-6c20-4229-8b74-a606c6018ef2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "aa1ab1aa-ec83-44f5-ac39-747e7ace5254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac29153-fe8f-48b7-a474-310da784b524",
        "cursor": {
          "ref": "5c5715e8-24dd-46e1-a567-03adb8834c60",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "95d504d4-2245-4e1f-8b76-f10b137d70ce"
        },
        "item": {
          "id": "5ac29153-fe8f-48b7-a474-310da784b524",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ce82bbcf-9af1-4a06-84fc-2f7e22bd3d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36117b21-7a7c-48d9-92b8-6196b4692cf7",
        "cursor": {
          "ref": "220223b1-03b4-49be-ac41-8341e3f1d60d",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b4a1198f-f013-4640-b45e-71fecbfee6b7"
        },
        "item": {
          "id": "36117b21-7a7c-48d9-92b8-6196b4692cf7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0213234f-7b7e-4086-9e7e-580cf0fb4079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aac2b0f-af1a-4a21-97bb-0b906d6b3210",
        "cursor": {
          "ref": "52b5186f-2765-4c6f-99ea-4c7269de34ce",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b9e83850-0895-4748-a092-e835943129d5"
        },
        "item": {
          "id": "6aac2b0f-af1a-4a21-97bb-0b906d6b3210",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "919e0813-b025-4bb3-b8f6-157684a7a272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aeafc30-2854-4626-bdf1-2b1614e5f229",
        "cursor": {
          "ref": "2d174cee-b20a-4a65-b86a-6d973d28d2f0",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e581e59f-26ea-4e23-8671-6b8319de5df5"
        },
        "item": {
          "id": "4aeafc30-2854-4626-bdf1-2b1614e5f229",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6958edc7-4f4d-4064-9eb6-6a1a38b1479e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f3e2d6-0b3f-4902-b42f-3f7523a732ac",
        "cursor": {
          "ref": "85e66c58-8f32-408d-99d9-a24e5ba517e9",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f5a7ab63-2187-4f93-a5b5-89ccebe3332a"
        },
        "item": {
          "id": "d2f3e2d6-0b3f-4902-b42f-3f7523a732ac",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7484bc93-9397-4512-8298-b0f1714480eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c4f213-72e8-4c1f-aa64-7ed12e884549",
        "cursor": {
          "ref": "1f9695c7-0c91-4639-8f0c-085afe3f6a6d",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2a1366da-4361-409c-be1f-b6e402dd4894"
        },
        "item": {
          "id": "a3c4f213-72e8-4c1f-aa64-7ed12e884549",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fa0d4231-9874-4d4e-94bd-621e49005327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb886322-9c10-404e-8c5e-263f3226c66c",
        "cursor": {
          "ref": "974dd941-68f0-4701-9e20-a85c8765fbdd",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9f812b4f-103a-485b-895f-4c720fc73fc3"
        },
        "item": {
          "id": "cb886322-9c10-404e-8c5e-263f3226c66c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8101d5ad-dd00-49b2-9503-4b005236b22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b2eade-e1da-4393-a49e-35527860e06e",
        "cursor": {
          "ref": "23d493f9-bc30-4678-98c4-8e0ccad72535",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4b790454-4d31-45de-8438-a0616eae0d3d"
        },
        "item": {
          "id": "f3b2eade-e1da-4393-a49e-35527860e06e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4a46ad35-39f1-42bd-bb00-3d6d96ecbf0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f716c0-4668-4693-92e2-ed20ecb0712e",
        "cursor": {
          "ref": "06d4ab24-22be-4525-aa25-d21b476dbb83",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "84f59f21-b50d-446a-8b9c-d485516e16c3"
        },
        "item": {
          "id": "93f716c0-4668-4693-92e2-ed20ecb0712e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c6cb0f02-e2eb-416b-a1e0-3a6adf4907aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28076b8-54dd-46b6-abe9-5ca8d7a66162",
        "cursor": {
          "ref": "3f821ef2-739d-4b5b-ae6e-8de33457783c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "18900798-9409-4353-8242-bf8879af451c"
        },
        "item": {
          "id": "f28076b8-54dd-46b6-abe9-5ca8d7a66162",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ac284de6-8d5a-47b4-a064-37e930e17885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16436b3-b706-4158-a732-2e2b0823e363",
        "cursor": {
          "ref": "b6288ac8-25ee-49fa-b027-896e9b32ac49",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8c32bfa4-2309-453b-bd48-fd268a6773d8"
        },
        "item": {
          "id": "d16436b3-b706-4158-a732-2e2b0823e363",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7a6291d7-638a-4cd3-9371-8617438595df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e5a905-0d33-4099-8bb1-6412da6f05b4",
        "cursor": {
          "ref": "ac94f459-cbc1-478f-a8fe-f2a354d2bddd",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "563102ff-3618-41e8-8c13-4a9b411b609a"
        },
        "item": {
          "id": "17e5a905-0d33-4099-8bb1-6412da6f05b4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5f9b3699-dc0b-4395-a972-553b01e99404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9947c714-0a36-490a-994c-537d15445681",
        "cursor": {
          "ref": "9eba0fa7-f77d-470f-bb69-fe1308d6489d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a4154553-bf6d-4101-a964-9600135cb758"
        },
        "item": {
          "id": "9947c714-0a36-490a-994c-537d15445681",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "37d3a765-05f5-4eb1-81e4-253f3199da77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd137fd1-9f1c-4d9e-84fa-e2fd8af1c35a",
        "cursor": {
          "ref": "70047bfb-df1a-43b9-918c-ec09dfdb7c91",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a88a6a79-c67f-4a7c-bdc6-23433eb61f88"
        },
        "item": {
          "id": "cd137fd1-9f1c-4d9e-84fa-e2fd8af1c35a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8cc2f304-e1cb-46c2-9499-2192c8197b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64517e2b-4272-4e57-8ca0-02a8bb075e41",
        "cursor": {
          "ref": "82e79f77-c506-4ffc-b3eb-020e3cf9c4e8",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a97d7303-ef4f-47e2-bf66-1759fb0de18b"
        },
        "item": {
          "id": "64517e2b-4272-4e57-8ca0-02a8bb075e41",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "805c6de0-88cd-4184-8e2b-7dc92cefe52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7716c222-91df-4678-b743-c9a9816ff53b",
        "cursor": {
          "ref": "748fe28f-dd4f-4ef0-9713-2c097048732e",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5d4a6e97-1487-4d93-bbb2-fb89dfdd0702"
        },
        "item": {
          "id": "7716c222-91df-4678-b743-c9a9816ff53b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2a858293-9195-4b45-b292-38e833addb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ee141e-ae31-4def-8444-ea19dcf318ad",
        "cursor": {
          "ref": "c57b51a8-a135-4c96-b04f-30476a769150",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d6ae048a-c975-47ff-bb64-3b1d5ec816bd"
        },
        "item": {
          "id": "23ee141e-ae31-4def-8444-ea19dcf318ad",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f5679497-ab51-4e53-9df7-fbecf5a995e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e65b7f5-0b2b-41f6-8bb1-fd0d4264ccf9",
        "cursor": {
          "ref": "006881a3-ef2b-447b-99af-d64f06e87f6e",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a548534e-0631-4590-b9a8-cfc6dd373bc3"
        },
        "item": {
          "id": "7e65b7f5-0b2b-41f6-8bb1-fd0d4264ccf9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4d33c3f9-31ed-4e78-9412-3eea66599394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b46ea03-4f5a-451b-b2d5-819333d67297",
        "cursor": {
          "ref": "499a79ad-3000-4276-8168-0e688b7454bd",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4e92edd0-25a2-4c95-83e5-c99689487458"
        },
        "item": {
          "id": "3b46ea03-4f5a-451b-b2d5-819333d67297",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e7ac1178-d5c6-4fa1-b6a4-3036c0da6688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e13f47-19ff-41ce-bf61-0427ff98b2bc",
        "cursor": {
          "ref": "26750939-e146-4454-be29-5495ee2604ce",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "08b67dc2-c07a-4807-8982-7385d128f4c7"
        },
        "item": {
          "id": "86e13f47-19ff-41ce-bf61-0427ff98b2bc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2ac4c016-8a67-4a84-a716-152569763345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f177a31e-525a-4f77-bc11-f6d85478a595",
        "cursor": {
          "ref": "190e09d1-80ee-4172-961d-371f026c684e",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9e58e2ae-825b-456a-956e-1fd7fb872bef"
        },
        "item": {
          "id": "f177a31e-525a-4f77-bc11-f6d85478a595",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5a8d1444-6c2d-4670-8c7c-e3aceefbe6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88e735f-bef9-4c11-8997-c1d4620a70d7",
        "cursor": {
          "ref": "d8b12133-4657-4a63-8164-4843853024d6",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2970c8f9-016e-4f91-bdb3-35d27cbe7d3d"
        },
        "item": {
          "id": "a88e735f-bef9-4c11-8997-c1d4620a70d7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "eb8a08df-0362-4f83-8450-1bef5ddd0e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0646806-1d3c-4294-ad23-8c5032f554bd",
        "cursor": {
          "ref": "29d93507-e8fd-41d1-b08a-14e37765f75c",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "82e22567-4a10-488b-ab9e-2043df43d587"
        },
        "item": {
          "id": "b0646806-1d3c-4294-ad23-8c5032f554bd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1ace0e83-6b1b-4e0d-b39e-1022da853138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689fd508-ffda-4f35-9511-509b659a3108",
        "cursor": {
          "ref": "4cca0149-90ea-4159-bc4b-38f4ef21d59e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8f2ca7c6-b5d0-4cd7-80a1-9ce81bc1b862"
        },
        "item": {
          "id": "689fd508-ffda-4f35-9511-509b659a3108",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b4361fdf-c1fa-403e-a5e4-d9b6c75dd22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505a6867-5f20-4518-83ee-a6027ba449d2",
        "cursor": {
          "ref": "c63d9877-4dd8-4ecf-9af0-7a6b5293a71b",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0d71d2fa-d03d-4d31-ab14-ad94db160c0b"
        },
        "item": {
          "id": "505a6867-5f20-4518-83ee-a6027ba449d2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1d5e1e04-9d37-49f1-a749-4caea69d0e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935e5299-9f25-4a61-8432-cd562d8327f8",
        "cursor": {
          "ref": "7fa90f48-44bb-4158-a882-3aabb371e158",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5eb945e3-ad94-4a79-866c-5c93b83b1061"
        },
        "item": {
          "id": "935e5299-9f25-4a61-8432-cd562d8327f8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f01c6a2c-a66a-4713-882e-d7b0b01ce603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527ce4a7-ac92-4aa4-ba7c-3d66850f5e97",
        "cursor": {
          "ref": "0cd55c66-4151-45ad-b8e7-7335eff5eda2",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "66a03bdd-8e50-4d77-ae38-5c45778a0ddd"
        },
        "item": {
          "id": "527ce4a7-ac92-4aa4-ba7c-3d66850f5e97",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "82384fe6-fe9e-4724-972a-796083ae6d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9952e739-0d95-4f31-b211-77cacfff144c",
        "cursor": {
          "ref": "bd639ea8-2146-4075-b6eb-5a06e6220116",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c519c0b8-f678-46d4-84c9-f1ef6560eb77"
        },
        "item": {
          "id": "9952e739-0d95-4f31-b211-77cacfff144c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2c57d809-ba7f-47f7-b0c4-13519b125793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2b05d4-336f-4b79-a132-122037cb4a82",
        "cursor": {
          "ref": "fa1ddba9-f3da-4045-80b8-fc23bea213fb",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b70bd748-5a04-4119-abca-5c728f3f7184"
        },
        "item": {
          "id": "aa2b05d4-336f-4b79-a132-122037cb4a82",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c98191dd-df04-4faf-ae27-12009a25da06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c388b72-d91e-4c2c-8247-f7191f2c92b8",
        "cursor": {
          "ref": "1844fc22-e27b-4d31-ae98-31ba0dad1afe",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "dbc6907b-bb33-458d-aaa2-d99685fa68d9"
        },
        "item": {
          "id": "0c388b72-d91e-4c2c-8247-f7191f2c92b8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e4b76b2e-242f-4d13-8149-e3df68cc6b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b210934c-6dbd-4abf-9244-a93ec55ddae5",
        "cursor": {
          "ref": "145b4168-6f84-408e-892e-39eefe7f9b8c",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cd3538c2-78fc-4184-8971-a23ba06e7b45"
        },
        "item": {
          "id": "b210934c-6dbd-4abf-9244-a93ec55ddae5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0a2fe98f-7bf4-4e33-a1ae-3bf038b3cdc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4fafea-1e56-447f-89a3-75da3eb6b046",
        "cursor": {
          "ref": "125f7c3e-8ec3-4826-a4c7-73652e6897a1",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e2ae4a27-bf16-4e87-893b-e62bda551083"
        },
        "item": {
          "id": "6e4fafea-1e56-447f-89a3-75da3eb6b046",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "30ccc978-04a4-4e2a-814a-1b7f055eb386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52551589-eeb1-4117-ab94-1c7f44d6715d",
        "cursor": {
          "ref": "dc1aa75c-591a-409e-8af7-8024d9166cac",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3a449b0b-d391-4a54-b063-77b946fe299b"
        },
        "item": {
          "id": "52551589-eeb1-4117-ab94-1c7f44d6715d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "34a71c1d-235a-47f3-9c5f-e56e91a1a37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651d3660-19ab-413b-9cf9-cdb1b55b330e",
        "cursor": {
          "ref": "8e25decf-c015-418c-a859-3b861855644b",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "29dfcccc-6be0-4007-bbe6-fabac1920c40"
        },
        "item": {
          "id": "651d3660-19ab-413b-9cf9-cdb1b55b330e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c62a2a3a-8dea-4aa1-a300-c2335baa729a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b804c721-4d65-4f0b-adcb-85e229e07312",
        "cursor": {
          "ref": "29efa723-2af0-44c3-9dc3-2593bac44561",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6595c717-082d-4384-a3a3-2d7b2e9391e5"
        },
        "item": {
          "id": "b804c721-4d65-4f0b-adcb-85e229e07312",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c6c94d6a-eb98-4341-afe6-11fabf2f14d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75697f25-9d68-4d20-bd42-c0a8c730ab9a",
        "cursor": {
          "ref": "08902746-1663-4c2b-9945-88c489f22d88",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4dc5f3a5-bb6b-420a-a9e3-bd7ac6fb313a"
        },
        "item": {
          "id": "75697f25-9d68-4d20-bd42-c0a8c730ab9a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bf257ed7-4266-4903-a115-97a0beba5853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bb3fba-4053-47d3-863d-ff4e03a770ed",
        "cursor": {
          "ref": "3da41563-6d46-4249-96c4-353fc12f0dce",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "33fc809d-870c-4ed3-ae13-11463a6dd850"
        },
        "item": {
          "id": "a5bb3fba-4053-47d3-863d-ff4e03a770ed",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "08e834eb-e1b9-468b-ab76-497a4105a6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19196e83-8b34-4a18-97f6-6393b5033f90",
        "cursor": {
          "ref": "677d2dff-9026-4e37-aee3-2be438f2c595",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2c812ad2-e4b1-4c25-b73d-6ab038fde80f"
        },
        "item": {
          "id": "19196e83-8b34-4a18-97f6-6393b5033f90",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d12658bf-34d4-41e1-991f-8f24d2a45d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788aabe8-4b63-4622-86a9-3185a8aa4ce5",
        "cursor": {
          "ref": "06c13ec2-a1bd-468f-84f0-3b30e3eaacf1",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "353df446-b885-43e0-9179-fbb2aea6842e"
        },
        "item": {
          "id": "788aabe8-4b63-4622-86a9-3185a8aa4ce5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2c216afa-0c2a-40b2-95c9-29a072446ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0f84c8-dcad-41b1-8ae0-c0456f3d2227",
        "cursor": {
          "ref": "95a4eee4-e687-42f6-a6b6-3d80776c96d1",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3d47ea81-06fd-458f-9c7b-625eb5c82713"
        },
        "item": {
          "id": "ea0f84c8-dcad-41b1-8ae0-c0456f3d2227",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f1ebd0ce-b344-454b-9ca2-bfccb71a8f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ddf498-9ee8-402c-9c3d-db448eacca51",
        "cursor": {
          "ref": "8f1cb6a9-cbe6-43c8-8a81-51e730f3e054",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0ae833d8-d055-4c3f-b796-ce3d61ef255b"
        },
        "item": {
          "id": "c9ddf498-9ee8-402c-9c3d-db448eacca51",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "406bf7e5-e6b0-4dbb-b1f2-0b51fcab16db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e4ca9b-b1a0-40d3-95f4-38cea1ddfc11",
        "cursor": {
          "ref": "610b69fc-08d3-4cac-afd2-6a164840a1dc",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b8346524-a7bf-4e90-9329-e1b2c1fd0720"
        },
        "item": {
          "id": "87e4ca9b-b1a0-40d3-95f4-38cea1ddfc11",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "13b2fa4f-3f0f-4665-b6f8-1030eea4c07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95568959-cb27-40ee-93bb-49f91a9e6e3d",
        "cursor": {
          "ref": "5651b84d-6caa-4a11-9220-392d38054b95",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a128b2e3-9f31-4ed8-b1e6-f2174980d2ef"
        },
        "item": {
          "id": "95568959-cb27-40ee-93bb-49f91a9e6e3d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a9394e2b-f5a3-4213-9616-3a3fd7f097be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1388ce7d-653c-409b-8834-2b02d0c6a7bb",
        "cursor": {
          "ref": "dcd4f526-1353-4914-a5a7-1c06c4cc3d9b",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ed2f4264-d168-4fc5-8d0b-9cdb3b279d77"
        },
        "item": {
          "id": "1388ce7d-653c-409b-8834-2b02d0c6a7bb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bbd75855-4e66-427c-8835-44ad02e2646a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9d0ccb-c916-4e26-84c1-ad69326564f9",
        "cursor": {
          "ref": "f6a77440-0785-443a-a4a7-33d3fa463273",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bace863e-e242-453f-8c9f-9a79432edb68"
        },
        "item": {
          "id": "fb9d0ccb-c916-4e26-84c1-ad69326564f9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "aad51850-ba35-4fa2-a806-674e635f9737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40febac-e09a-47e9-af60-dea131214083",
        "cursor": {
          "ref": "e90c1c5f-9883-43d8-9c96-0e950c3c67ef",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9f867cfe-bd7a-4887-a1be-1c772539977e"
        },
        "item": {
          "id": "d40febac-e09a-47e9-af60-dea131214083",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "059f2019-041e-4797-943c-afe9ab7da52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6234ed02-1f18-41c3-9888-d66f4bda277a",
        "cursor": {
          "ref": "e8d884fe-0546-4566-b7f4-10f8a579b6d0",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cdc51151-4dab-49e1-a139-0a8aa0a6634d"
        },
        "item": {
          "id": "6234ed02-1f18-41c3-9888-d66f4bda277a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b4310ec0-6e8e-4c70-ae06-a401d13f2a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f023a8-c962-40bf-a55d-cf07c15df9e4",
        "cursor": {
          "ref": "84490235-3ee0-48e6-b94b-595f340b0747",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "960fdaba-151b-4b1f-8807-ebaade0e5128"
        },
        "item": {
          "id": "26f023a8-c962-40bf-a55d-cf07c15df9e4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "415f4e21-e5a9-423e-88fd-80d2137941f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0daba8b-aa11-4f78-9b5d-6784bb596ea9",
        "cursor": {
          "ref": "084bdd07-cd6f-4713-aa60-ea8c011037dd",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a312ee50-07b0-4583-b495-9ed77a75516d"
        },
        "item": {
          "id": "e0daba8b-aa11-4f78-9b5d-6784bb596ea9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4fd759bc-d137-424e-9ad3-5cf81adb2ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c694433-7a97-4dc6-9ec1-eba9c99f9c42",
        "cursor": {
          "ref": "266a9959-2fad-4102-988d-72b41b2828a6",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "880416e2-98b1-42db-8e00-f105eba64075"
        },
        "item": {
          "id": "8c694433-7a97-4dc6-9ec1-eba9c99f9c42",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6378897e-6036-4799-899b-3b379f81ab8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c242435f-0dcd-479a-961c-9052079ada97",
        "cursor": {
          "ref": "6c54a229-9000-41c5-98b8-de251a4d8589",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2d6000e5-eaf2-400a-89f2-c217f8d7ee67"
        },
        "item": {
          "id": "c242435f-0dcd-479a-961c-9052079ada97",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5f04a335-4382-4671-8add-7ddba96ffe2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af1a73f-330a-477c-89af-9ddd52ab6b97",
        "cursor": {
          "ref": "7b086cf8-36d0-45a4-a6e2-f293bbecb7a1",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fe0951b5-4b44-47cc-a0cd-95dd0200b09e"
        },
        "item": {
          "id": "2af1a73f-330a-477c-89af-9ddd52ab6b97",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2b05e855-2017-4b05-a9c9-34c88867fc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41ac191-cc09-4bee-b117-36ecbf96a11d",
        "cursor": {
          "ref": "8a7f6e38-9b7b-4ac3-b207-0e6d61b536bb",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e8df81ba-8427-4712-b058-eb9bbe186550"
        },
        "item": {
          "id": "b41ac191-cc09-4bee-b117-36ecbf96a11d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bbd2bb68-8bf8-49e7-ac10-330576942541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de44b3a3-c924-445f-aa88-15f093b64457",
        "cursor": {
          "ref": "2d726505-efac-459f-8450-46123e9285d6",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e8544f3a-e9fd-4bb0-9fdc-b4061cd662aa"
        },
        "item": {
          "id": "de44b3a3-c924-445f-aa88-15f093b64457",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b97514ae-7616-4088-a690-82076e08df8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5594be36-f288-4e29-a535-3d99ffe08987",
        "cursor": {
          "ref": "e488f279-221f-4e60-bc75-e470d102ab09",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "438b31f3-17e5-460c-859a-aa0184af7ea7"
        },
        "item": {
          "id": "5594be36-f288-4e29-a535-3d99ffe08987",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6c405383-dd35-4566-9d16-eba9096f15af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042d5931-2f89-4fae-a0cc-7d8c88119a69",
        "cursor": {
          "ref": "a05c6554-15d6-4106-b0ca-b9750eb11f93",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7ac17c02-009c-4dc0-87c2-6f208ef55a7f"
        },
        "item": {
          "id": "042d5931-2f89-4fae-a0cc-7d8c88119a69",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "230c8142-8838-4d9b-9415-bc458bb2f23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17e2733-0e01-4e65-88cd-815c33d8269c",
        "cursor": {
          "ref": "3e3af2a3-7a2d-4a9e-aaca-988bc8c774a9",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ca03a4c0-eb2d-4fb7-8bb6-760a69fd9caa"
        },
        "item": {
          "id": "d17e2733-0e01-4e65-88cd-815c33d8269c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5f0195b0-e055-4c94-9a11-9c0195761c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1778e725-011b-451b-adde-6f0639bada46",
        "cursor": {
          "ref": "de5dee1e-27ee-4895-93b5-0f64bcf943ce",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ae3ef1e4-c851-4413-9f5e-f061be0dd5a2"
        },
        "item": {
          "id": "1778e725-011b-451b-adde-6f0639bada46",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "02366a16-754d-41a4-aa0c-631757c9aedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6859641-7af4-42d7-84ce-cd34056fed76",
        "cursor": {
          "ref": "7e7d1174-c85c-48b9-9338-7bba2d44505e",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0bc0b405-81e0-4fa3-a71c-267c2a204111"
        },
        "item": {
          "id": "b6859641-7af4-42d7-84ce-cd34056fed76",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d0edfe66-a63c-4e57-aa8c-98f27a0a00be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02edf587-cd03-42ff-aeee-8ff8bc3bc09a",
        "cursor": {
          "ref": "375b1819-17a5-48c0-8785-be040ae2ffd8",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2be7714f-356f-446d-ac45-b98880978520"
        },
        "item": {
          "id": "02edf587-cd03-42ff-aeee-8ff8bc3bc09a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c4a260c6-f363-409b-b96c-2d25c4118674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bea1307-9596-4f3c-be08-841d9ea9c338",
        "cursor": {
          "ref": "b8e2c3d6-130d-4842-abbb-b6e97b548d4e",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3275327f-f026-43c5-b529-00fb80bced0f"
        },
        "item": {
          "id": "1bea1307-9596-4f3c-be08-841d9ea9c338",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e7141ba0-f487-495c-9ae1-105c15503d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc9b661-54e5-44e4-bb52-bb8e4d4ba5c5",
        "cursor": {
          "ref": "57ce1621-f1bf-4ffe-a089-9881de0df840",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "079fcd21-5e70-4bbf-bd1a-4b9777e4a2ac"
        },
        "item": {
          "id": "5cc9b661-54e5-44e4-bb52-bb8e4d4ba5c5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ae234bbe-4d82-4bd2-b8c1-5d4ea4e59ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ff32b3-6d13-41e8-8677-5a2251c22115",
        "cursor": {
          "ref": "e44d6dfb-7fcb-4f26-9fc8-350d075b56ff",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a3e00b50-a21c-4533-a5b7-0f057a38fa40"
        },
        "item": {
          "id": "d5ff32b3-6d13-41e8-8677-5a2251c22115",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "71494e73-f1a2-41fd-a826-9f080f1518c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b647e85-e040-4f74-a644-4e64d5f91aeb",
        "cursor": {
          "ref": "6f6d6a36-684d-4eae-9a91-b4c9fef47db3",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4ceb9f0a-df9e-4ed1-9f66-73b9d7799700"
        },
        "item": {
          "id": "3b647e85-e040-4f74-a644-4e64d5f91aeb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "96072717-22c3-475a-8e12-4e90b85a8a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1145fdb7-58eb-49eb-80dc-8fc8928b0efd",
        "cursor": {
          "ref": "aad02e39-dd2a-422b-9014-6bcf9884c9b7",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "daa058e2-9dac-43e2-ad74-66b53540fdb6"
        },
        "item": {
          "id": "1145fdb7-58eb-49eb-80dc-8fc8928b0efd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cdf3f598-de9e-40bd-8278-b11766ce415c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9c246a-d714-4a65-a434-fac7fefb264d",
        "cursor": {
          "ref": "186f7d19-a4e3-42ff-a220-4379fd972a44",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f1447b98-5b92-4890-be3f-5511d2da8ea1"
        },
        "item": {
          "id": "6b9c246a-d714-4a65-a434-fac7fefb264d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bd522ab6-9339-4a39-95fb-0aa4aeadb4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6690da8-e810-4a72-9cf6-dfefe38e4048",
        "cursor": {
          "ref": "50eaa5e6-272b-4024-9fc8-758fe7f0377c",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0360dd54-445f-4ec1-a861-0087d9fa752f"
        },
        "item": {
          "id": "f6690da8-e810-4a72-9cf6-dfefe38e4048",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1b9980a9-4bca-4eee-9025-48a81d010ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179e89fc-138c-4d13-9d69-d7c441248a9a",
        "cursor": {
          "ref": "a6d7ccff-75d7-4cb5-9ffc-e7904e7a744c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ad644a3f-ef99-4ce7-a9a3-00d0d5bb0009"
        },
        "item": {
          "id": "179e89fc-138c-4d13-9d69-d7c441248a9a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a242096a-288a-4ffc-bdaf-3c51b3089065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cfe0b8-7429-471f-85f3-c34cb55c9b17",
        "cursor": {
          "ref": "da0f49d7-21e4-4283-882f-b40a1a39a202",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "107ab4b6-9754-44e1-9e4d-b171c42d1c87"
        },
        "item": {
          "id": "e4cfe0b8-7429-471f-85f3-c34cb55c9b17",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4a1b1150-5b75-4e74-8766-9571ca61405b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eab0c3e-dbd9-4a48-a9a2-3be4cd7b3205",
        "cursor": {
          "ref": "cfddd7e6-cf9e-4124-bc88-8cba54572988",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5c742665-ba6b-4f23-bd49-7dcd2c13bbc0"
        },
        "item": {
          "id": "1eab0c3e-dbd9-4a48-a9a2-3be4cd7b3205",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "38921aa4-5c8b-4910-ba39-a97f77f939ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cf8f81-2392-4774-8eba-0dda08d254e3",
        "cursor": {
          "ref": "5a480723-56bf-41f1-9ffe-a4275cbe3c2a",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "118be44d-6632-447a-880f-3939397fc6ea"
        },
        "item": {
          "id": "f6cf8f81-2392-4774-8eba-0dda08d254e3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9c5ac663-a576-4b55-9c4a-3498deb8a681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abd3fd6-09ef-41ff-9e0c-68ea911b4447",
        "cursor": {
          "ref": "bed7597e-0a61-4b94-a0e6-a5fcb4acee58",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5c321643-003b-4220-8364-78af37d31882"
        },
        "item": {
          "id": "5abd3fd6-09ef-41ff-9e0c-68ea911b4447",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a5bacb72-bc49-49d4-8ab2-fa3e91e29f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be47c758-3585-456c-80db-24089afac430",
        "cursor": {
          "ref": "c8fffb28-c2ec-460d-8499-3a44b1315c60",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "48b80aa4-1e4d-4404-b45f-f1564514c8fc"
        },
        "item": {
          "id": "be47c758-3585-456c-80db-24089afac430",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "67673939-b20e-48a6-8491-1166266fad71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31709aa-1cf6-4835-afea-649d24e5baea",
        "cursor": {
          "ref": "560eacf2-7d71-4115-9c1b-5c0b107cbde1",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3c97af87-593c-4180-b4a5-1d80b89cfd21"
        },
        "item": {
          "id": "f31709aa-1cf6-4835-afea-649d24e5baea",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cff23668-11bd-4e43-b94e-cc7ebb8894ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920581b1-1d1d-45a6-8e61-9cf11a19e5ab",
        "cursor": {
          "ref": "2b2c701e-23fb-4319-868d-d4322df9f9c0",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "01fb75f4-b61b-46c1-862e-563a39187446"
        },
        "item": {
          "id": "920581b1-1d1d-45a6-8e61-9cf11a19e5ab",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2ef9d8a3-7178-4c55-a988-7ee93fd50f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c50f70-7bd9-4014-9099-b07323d11b85",
        "cursor": {
          "ref": "d809661c-d4ab-455f-b56e-ea48ef86fb72",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "befb2ff9-7802-4cac-8bb8-d854b7011c0c"
        },
        "item": {
          "id": "89c50f70-7bd9-4014-9099-b07323d11b85",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7af0532e-3e14-43e5-991a-94d018f0e69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30ea482-2e53-4ef2-aa2f-ac603415f304",
        "cursor": {
          "ref": "1eb121bd-a797-4bbe-bec9-f2386139840e",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "273685a8-e1ab-4ede-a0cc-258a1897233b"
        },
        "item": {
          "id": "f30ea482-2e53-4ef2-aa2f-ac603415f304",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "eb0cdf13-962a-42c8-9e3e-60edbd519859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c237a09-4911-4a83-84e9-af2e3515ba57",
        "cursor": {
          "ref": "b11c6555-f5b7-4b3a-b6b6-ab08b5963818",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "50c8c5ae-1f4e-4953-9987-5630a895bfaa"
        },
        "item": {
          "id": "5c237a09-4911-4a83-84e9-af2e3515ba57",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "98a771b4-89b3-49bd-b5fb-565c5a058b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52d04cc-2521-4e42-8877-0c412132c0f7",
        "cursor": {
          "ref": "d2a39d95-405c-4b72-b20a-8a8e5787b43c",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3524cdcb-64e8-4e18-8807-a8992c3d382d"
        },
        "item": {
          "id": "e52d04cc-2521-4e42-8877-0c412132c0f7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b179da33-66e7-418d-a02f-f60888898e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54831a15-34ec-4475-abed-eabf6f14a506",
        "cursor": {
          "ref": "67109469-bdbc-4868-9233-b362d3fa5919",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "eb362575-df89-47f4-8bb6-cf055759ba06"
        },
        "item": {
          "id": "54831a15-34ec-4475-abed-eabf6f14a506",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "96b487fa-b3e2-4f85-a5ef-5a13cbe6634a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea1c5ee-98db-4464-b97a-674d0c1c4ab0",
        "cursor": {
          "ref": "63448fc0-6161-4919-b2c9-48f8877befe7",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "48c76af7-0a30-4be4-aa58-a581051b37ae"
        },
        "item": {
          "id": "fea1c5ee-98db-4464-b97a-674d0c1c4ab0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "75841248-1185-4019-9a90-3f97ced3ba1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1d2197-8b2d-44c0-847b-90586e5d0833",
        "cursor": {
          "ref": "32133e8d-a601-4fd7-8a13-28e44634984b",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ff47a988-7161-49cc-bb96-51cb844e288c"
        },
        "item": {
          "id": "3f1d2197-8b2d-44c0-847b-90586e5d0833",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9fb7707c-5738-4982-8c79-cbed45744c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6472441-f160-408b-b6f2-8b78fda5da8e",
        "cursor": {
          "ref": "781af1c8-ca82-4afc-b4be-a77b07e8ff58",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0848e943-f5ed-4eb5-86df-27f4e06c4fc9"
        },
        "item": {
          "id": "c6472441-f160-408b-b6f2-8b78fda5da8e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6b0804e4-37d1-488c-9c93-12266f754345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff9fa3b-772b-44d5-bedb-709fc1b25686",
        "cursor": {
          "ref": "205ab7f8-75fe-4b5c-9e2b-6c750dfc448e",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5b6bdf99-c626-4f01-bcbc-48aa3e51bc75"
        },
        "item": {
          "id": "0ff9fa3b-772b-44d5-bedb-709fc1b25686",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "89621c76-6cea-4c44-bb1c-b239f947f04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e569aac3-2c11-47bd-bb8a-b505e14dcca0",
        "cursor": {
          "ref": "314c437c-5bde-41ef-a15b-4b6e933a7f43",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "2666187e-77ec-47de-91d3-e12122ef00b3"
        },
        "item": {
          "id": "e569aac3-2c11-47bd-bb8a-b505e14dcca0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "860f3c60-f6eb-4dba-8e51-04bed6965083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45914f98-cea4-4f1d-a623-a0c1a95194db",
        "cursor": {
          "ref": "6686c45e-2247-4235-aeae-911c15ed047b",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "717dba7f-9575-47ab-9a82-052148cdfe54"
        },
        "item": {
          "id": "45914f98-cea4-4f1d-a623-a0c1a95194db",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "37e8a75b-89c1-427f-9cf9-8d69e81ff0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e291b2d-720c-46f5-b011-9f7ee74c593c",
        "cursor": {
          "ref": "6c6567df-4ef8-483c-aa12-5caa04219ddd",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "dedf6cfb-c618-4890-82d4-7bcf8613e96f"
        },
        "item": {
          "id": "2e291b2d-720c-46f5-b011-9f7ee74c593c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0fd1a9cf-92bf-4a84-8d54-a454bacbe968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7ead2b-9951-474f-a861-bfdff0b8ac61",
        "cursor": {
          "ref": "12562ae9-0dfa-41f2-bab9-5499041bd29d",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9b7b17b8-3a3d-4c41-9d88-bcd249d06ef5"
        },
        "item": {
          "id": "7d7ead2b-9951-474f-a861-bfdff0b8ac61",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "57f2ddcd-1932-44bf-a98e-bf45018de047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc2bc7e-ada1-461f-be3b-e34581a3cb17",
        "cursor": {
          "ref": "4701075b-180b-4b0d-8281-844cdac48276",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9bfe1fdd-74b3-45c4-be88-7a7f8728a61f"
        },
        "item": {
          "id": "1cc2bc7e-ada1-461f-be3b-e34581a3cb17",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d9c88952-091e-4fcb-b611-8b54ad3430bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffaf7afa-bdbd-4a4b-90d6-556f9d4317b8",
        "cursor": {
          "ref": "f5245e98-3d41-4c59-8286-fe5dc94cfc5b",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "15e223b9-f5e4-4734-bd80-63c9fed79e73"
        },
        "item": {
          "id": "ffaf7afa-bdbd-4a4b-90d6-556f9d4317b8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b44b77ef-bc7c-4553-a2f6-c15ff70f7c4e",
          "status": "OK",
          "code": 200,
          "responseTime": 120,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "841088a7-dc42-47f5-9be7-a250056b8bc1",
        "cursor": {
          "ref": "025bed19-d333-478b-844e-5cd9714daddf",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8ca50e76-0816-4f24-b45e-c96272972158"
        },
        "item": {
          "id": "841088a7-dc42-47f5-9be7-a250056b8bc1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "53c6292a-d57d-4fde-8b1a-693addd26c3a",
          "status": "OK",
          "code": 200,
          "responseTime": 1681,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7608257-7986-4e33-9034-eb122ff80d3f",
        "cursor": {
          "ref": "80a13b66-95bd-43eb-97d5-545ecd5a7fb9",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "606d6bc9-77d8-4b22-b166-50aa895685de"
        },
        "item": {
          "id": "b7608257-7986-4e33-9034-eb122ff80d3f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9cc60ee9-ef6e-4d42-bcd7-83758a33d0ad",
          "status": "OK",
          "code": 200,
          "responseTime": 1515,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "80944c6f-d85b-486f-8940-36b92057fe85",
        "cursor": {
          "ref": "b0448e32-a585-4063-b7d9-b46b220873dd",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1c41bda1-7ddc-4eff-abfe-2babd104960b"
        },
        "item": {
          "id": "80944c6f-d85b-486f-8940-36b92057fe85",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5998311e-456b-4e73-a5b3-c8b1cfd79e1f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80944c6f-d85b-486f-8940-36b92057fe85",
        "cursor": {
          "ref": "b0448e32-a585-4063-b7d9-b46b220873dd",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1c41bda1-7ddc-4eff-abfe-2babd104960b"
        },
        "item": {
          "id": "80944c6f-d85b-486f-8940-36b92057fe85",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5998311e-456b-4e73-a5b3-c8b1cfd79e1f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6e1925-1ead-463a-a355-fa57ff29199a",
        "cursor": {
          "ref": "a95fc998-8bd4-4f44-939b-609a210e4359",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "93524473-0f93-4c1e-b976-08eaffeadae9"
        },
        "item": {
          "id": "8b6e1925-1ead-463a-a355-fa57ff29199a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "960c6977-11cf-4220-bf4a-37f94fa1c5b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e20b79-c745-4c00-9e59-9290421fe1c5",
        "cursor": {
          "ref": "ef96cdc4-5bac-4bd1-8bb1-e102c3a3576b",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ff6ab646-aebb-435d-aa44-9b2195125741"
        },
        "item": {
          "id": "c5e20b79-c745-4c00-9e59-9290421fe1c5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "173d4478-4cde-45ab-be29-be17bf307617",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}