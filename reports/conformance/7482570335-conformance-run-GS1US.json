{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ce968f9d-8482-4084-9b89-e56c631c2a2c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bbce5660-2bfa-4ed5-92c5-1f8a3620ee78",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eb894fc6-d89f-46f5-9dfe-ef1e9df90c5e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b302e40d-302b-4cda-85ef-17b5677d3909"
                }
              }
            ]
          },
          {
            "id": "9f3a29d5-4b34-4d30-a920-7e7ed415c731",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "99b212e1-f70b-478f-9b35-44f4846b796a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "13781cd6-566a-445a-8500-35044db38629"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1bfecd84-61ff-48fd-a9b9-5c4a333ca9d9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "66fb197b-aa0b-4b94-94e8-0ead71f1bb7c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7e7f32e3-4cc4-4d8c-a15b-87fec4bafcda",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92132d0d-210d-4b0d-831e-5e5c0f5ca0a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9294e0d6-21c6-4e2c-aaf2-590aec70dbb1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d31859f-d405-44bb-b096-6885090d62e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c19f997b-0fc3-4aff-98ab-3606e6f5e637"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5403d6fa-cc72-40d4-9078-bc4dcc802662",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bef2f850-50d3-4e70-a568-8cbef95153ff"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c6a14c4-6e10-400c-ab43-8cbfb5510a0e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f4e767db-5a2c-47a3-be68-79371759a55d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1d783f5-4f77-481f-a8d0-537cc807d680",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09f05095-dac4-4cf6-b975-bdd07e08712e"
            }
          }
        ]
      },
      {
        "id": "da795384-5d49-421d-a984-1a7004deb246",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8375c018-cb21-4a40-95c6-438223e4e291",
            "name": "Negative Testing",
            "item": [
              {
                "id": "694b855b-13a1-4110-b5aa-87edd51c551e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0e8375e6-2a39-4b25-98bd-7f0643844b7d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ce5fe0-6afb-4c84-9a1f-9291480c1427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e2567db-d624-4747-b6ac-da0491a6acc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575fcc5c-7aaf-43de-b39a-e065d42530b2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8371aac3-6443-4766-a9c6-3ddfa0a2c74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fc73ebf-9831-43b0-8a7b-89a97bb0347b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97fe6b2-0f60-49f9-8a6c-14649d00e866",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbab3b2-2c60-4b93-a980-20023a0ad0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98d41056-a344-41c8-83c0-7442167a3d05"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0a19abd9-07fd-431b-ae49-3f7cac429176",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c87dbeb-851e-42b0-901f-77638aa246d6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc004b1c-854d-436e-824f-16e5c694b3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbbbcd6a-1f9d-46ed-89d6-424c0d9cb963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4f62d3-8122-46a8-a372-1326fd88eeab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f6ca52-688c-4ce5-9b38-f8431b130788"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d5087620-5dd4-43bb-a238-e6d431b6134b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "119459ad-62c0-46d8-bc10-b78a438d9af1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec75e372-95bb-4ce8-8a78-778a152d4c16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "859e57a5-16f8-4cef-9b73-a3dde9932b89"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "545ac72d-23af-49ae-a7da-48992ace3864",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d7aa5019-05b3-4812-9a02-0d7d6b97c157"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "175c377e-87e8-47da-9f0b-62c9c8381e8a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e62656c-d66d-4224-a39c-07f98f227acd"
            }
          }
        ]
      },
      {
        "id": "b82a9d2a-18b2-48b3-9f69-88a543332824",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "90e0a51a-104f-4de8-ab6b-e831e2364421",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee857835-3cec-4986-ae6e-f70fda0d595d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "04623675-3a62-4805-a837-6d61cfb27f1a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e089e6-bc6f-4fe2-9a5a-aec28d21b498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "968ad349-494c-4789-b349-334324b390bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad923c0-1f1c-48a1-86db-a6c28f3305cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fee3f83-afe9-495b-ba2c-9f1796f259ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ba78e5-d6c5-48ac-a37d-c0a7fb94c5bd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5b2e62-4c39-47bd-b26a-3ffb1e55b50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6fd13a-5495-4e52-a5ff-70e18299a320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5887f891-2940-442e-a745-84282497b03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59cc97f0-7e3a-4ddc-acf9-cf77cf37d02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e168f4cd-0a7a-4b28-8835-854072213eda",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ddb919-dbd8-46aa-bcd4-59b692ec7e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5afd33d-41c4-4ddc-a74f-35c0469bd25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed9fbb9-3b86-4c47-95fb-87a4b1d26bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1cbb9ce-1838-4e52-8d47-9cb102ed260d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69ee713-70b9-4f3a-b510-85c116e5b650",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d012204c-e4f8-41df-86ee-4648437cc890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263a919f-9017-4db7-917a-bb2427eeb3ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bba77c-765e-47ff-aa47-c80fb9dc19ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d1d2026-e0ed-4eba-8d69-74070092b7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb661487-7899-4642-ab45-c46b7fb8b40a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af3682c-61b3-468f-8527-b6ac0be54ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82a58ad-31dd-4d2a-b6a4-bd07c48b452b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84788ca3-9793-4273-b5e9-b901749a0439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27bb43fd-c348-4461-a61a-9ba416df398b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ee220b-02dc-43d7-9f23-2e2089d395ef",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c58ec4-8129-4fcd-b17b-c27a3ea3e92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35bdd2ed-bdb7-4433-ba84-79dd793bd9e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2293e8a-2c2d-43e9-81c6-a41f146cc3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4766aa19-ed6c-46b3-b8a9-6cfae15a1c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffdd5b8-edd4-40a9-a553-d4ef2f0ea6cd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536b1a1f-48b1-4044-a239-21a332ab3cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2b77d7-b32d-4831-8453-4ed7d626e874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9a1f16-dbdf-46a6-ab2e-f360db9231da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c401f77-5128-4bb9-944a-45721d388d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da65477-b156-4580-ae7d-163067f60884",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd2f803-b081-49c7-be02-ef3f0ea0961f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65660f6d-a3cf-48a6-b2c9-1f4e437b6fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bafdaa-0c5a-4d3b-a44e-50b0f1843e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd081f1e-5774-4610-9a38-77a2804875c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e552c2f9-907f-47b4-87ac-b22859c36361",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d287633-697a-4a8c-a13f-a526e584dee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a614b4-bc7d-42ec-b79d-a6fd031314b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66640771-41a3-42f1-a127-9b4b672ebfc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44136b19-073f-4c66-abda-57523a060eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fce4ed-f0db-4c06-b80a-e765eca129fc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca9b2e4-e9e9-4b3f-af38-8a3d5a00a1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00816b13-68d8-455c-9315-d9d6cb72eba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f2dbb1-a2ff-48f6-aa88-f5f0e5f18c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61f85ba2-6fa3-482d-9def-0ad0f52f336d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c013d24c-1c28-41c6-8c2e-b4de4ab0d1d6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "704f1562-d1ac-4ce3-8f87-c1ef74e4d91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5b8758-d2da-437f-8809-c864115a5739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1701a43e-c2a3-4680-a5d8-d8af7281ade1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b3aa189-de75-4386-9db2-09fa35cab455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55b77f2-854b-4964-9d9e-0923816ec15c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155b4ee1-1c07-4d54-84a0-c78e3fb5b13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bef4e86-de1f-4ab2-94c2-ccf8192e0593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051ea220-e924-4b76-8710-bd7c6e12863d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68b3e5c6-f19a-495b-8808-d4bb7171c498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d642f3a2-fd9e-49f3-9c65-5df5f04e0551",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279d33f1-00ff-49df-9224-98abc8f760dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb5ac91-b73f-44fa-babe-1213bd2c95d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03ee60c-ed01-4676-bd8c-afd3d67f5e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44165322-4344-42b4-a715-9e403e360391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2a767c-d0e0-4f03-b86f-e4d99db4ef1e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf57dec-566d-4bcb-b854-b167e5d5dab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc61c7a8-55ef-4932-b0e4-d51d92a6ada4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb54fb2-ad66-4c03-bb62-afa05687c9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88db8caa-0b85-4294-9c1f-6eead3b3bb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66adf045-3b65-42f7-8b94-8a1f716fda3c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ea2dd0-ad64-49d2-aed3-2ad4ee05dc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c955d78d-89a7-44a0-8333-88dee2d5c6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5615f757-603b-4043-95bc-f9f23afcb333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5059a98-a95c-4d5a-a10e-ba307ede61e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abec9561-fbe0-46ea-8386-2722632a8332",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7852dbf8-751b-442e-84d0-5f665bf7c99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6786a0a-428c-4448-9cf4-04d64ba289ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b68379c-9559-4532-8316-f4c71589944d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "889f467e-6aaf-4abd-8a33-aa3b53c298cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb782df7-e783-41bf-8616-81dd64dfbb88",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21dda713-c0ad-4820-993f-f31428e7b569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f498ed54-5639-4475-886d-6f172582b285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358aa142-5980-490d-b860-bd9ca3d85805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e6d048b-fb46-425e-9b82-9364a0f74366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc10788-02dd-43f8-b74b-5a765f6a1451",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe0ff3a-04e2-4da6-8ddd-ba4dcfeacf19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb3631ec-9a6f-481f-a5f9-77fecae0fe3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5361572c-83f3-4ddc-ab8d-1236d3a3be37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "716a1940-1248-4237-a218-fac49f6572d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9f235e-63e1-4eda-af72-94b69a17b630",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4940c6-a896-4f42-bc24-f7f70d394e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184d277f-3114-42ca-b976-99915db94d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb250c6-6757-450f-9e68-bf5d4b779a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f28717a4-e25e-4139-b5db-ee59555137c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d845da9-7de4-425b-a4f4-c90b2b596a2d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d1a68e-1754-4948-a55d-cf67cccd01b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769ff82f-da4e-4ee2-9bbb-cd2d1d73f23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3a42c5-5a73-4334-bcaa-aaacdfbad8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c31a4bc4-e67a-4efb-a8b7-4623a625df65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba1b8a9-f5c2-49be-a17a-5cb2e9ac0a63",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20a5860-87e4-410a-9161-40f24319a877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5219c673-514c-4853-81f1-c6484c2bf341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5024b688-334d-4524-b9e0-a7283cfde950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "369c3959-2bba-4608-aad3-7242f7908da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb2d913-68f3-41a9-abe4-e71963a66dc8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860e5452-5b88-4039-8185-bb9700e67755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f935969c-95e0-4995-b2de-5cfd1f9da7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1845bc-3379-4c9d-9732-40d220a764de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcac0a99-b4a6-47e8-a748-8447502d0c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff95980b-6cdf-4cf7-97c2-acd69070d814",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b57290-11f0-42d2-b838-adcc0a3c3ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ed545e-2057-4337-b841-0774c17134dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20af9713-0f01-4ad3-982a-0696c5961466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d31a8035-2da2-4bf7-8586-ca17a5d9ca58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b02a87-8ea4-4762-97b7-1c07ce3e23d4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a11cca9-ddb7-409d-99af-2f2fe896133b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8057aaf2-dd82-4035-bfe1-daa5077080bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e2f442-158f-49f4-83a6-b90072a33a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "590e7acb-9594-4978-8c0e-8de844b79ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ad6deb-e004-4091-838e-65161aa344a7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108b9582-f092-46e5-92ff-99f872b47ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a47c14c-f19e-4bef-907e-60a82017d221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eff91e4-f5a7-4199-a684-bd2b552d66c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c76ca43-60ac-43cc-abf6-82d152a9ec0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd40da0a-41c1-4956-bcc5-7d32b73cbbee",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dab0a27-3e89-47a7-8ec7-a9a395c30654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d771ca1-9cfd-494b-b027-eb0efcb54e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3f4e1d-1dfc-416f-a89f-2bc0f7d3c593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1be6a49a-68fc-4573-a947-ed0f28951a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85196fe-5551-4c97-8aff-36dd43c68145",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2034a1-f1a6-4828-bf3c-102d6a04e604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd74080f-0c10-441c-868e-df23426475fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3d22cd-012a-4ce9-9a1b-07a1a9119f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9159ac5-982f-40a7-bf9f-e60df4507193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748aeeb8-705e-4f9b-8dae-6159662d3eec",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1ae27f-9c65-41aa-af4a-fc46780fa4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab70f68-8d85-4553-9495-61947661fdf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e0cec2-5dcb-4807-a206-c1127404c07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5507587d-b342-469e-a3f0-1d9a8c325651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a3f221-ad4a-43c9-82e6-420c6f8dde35",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd582b2-f7a4-4bed-98c1-57df2470ecfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cf078b-0af2-47e7-96a4-e7470f2bc812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66c71d9-246e-4e0d-af72-2ef932dcfdbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcbfc2b7-2ad1-4e2d-a678-c1a6041265bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065ba35d-75bf-4958-87cc-9d345c030e28",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7215fe-cc71-492d-9dc6-10d281629650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a581b58d-473b-4f04-b1aa-18ad2072d5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0078721-9bf0-4ddf-a1d4-a1a37401cbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aedc2d6-3cce-4a05-92e7-fa80c191b4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad2012b-195b-473e-8b41-fb9508ac7bb2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffe6ca5-d6a7-4820-87c9-dd991940e323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d36cf7d-538f-4415-9e8e-90512e394b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cd9f7b-6850-4901-a656-70f934ff0d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b78b0228-1bb5-48f3-bdfd-0f13b61aad8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84b99dd-e0df-4e12-986d-f56e45b789d0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95d579f-27c4-4691-8dfe-fb392ce17c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3beb0994-9490-4a86-9ce5-077b5c6b8174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5510c15d-d3f0-401d-9136-b6e4edbd7a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74254bf4-e9bd-4b40-a863-6af5f572cd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef63ecd-6862-4a8a-b81d-9dcd3f89abc8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55680ca3-c5fc-49df-9814-6736a8f48767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36955221-87ca-4edb-b5a3-89df0f174e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5811734-ee48-439f-a4ec-5eed26057f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "844d32ad-4808-4084-9345-cd646e105b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d5dc1a-5572-4fea-bcb1-5ded41b3cfeb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c13e365-1a34-4481-aced-8cf769d88994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5077df-04bb-4eed-9401-294f6f2371fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080242f9-e7ba-4fa0-82b4-4d11894667ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d18506-dc21-4080-97af-e5e21f90c1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8131bfef-62b7-453b-b6c3-85f1b55cc5cb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180b3d07-bca5-4c93-b879-cca9e6f2f82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd510ab-9ad0-4e84-a593-c1877c79cb15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c166f1f9-b61c-484e-a880-892d65866d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b85c0a53-e5fa-4ae3-8404-546aa892cf03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45743915-a76a-412f-b6a1-8222cdc74e7e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c870b46-aa6c-4fa4-ba5a-8d0b53b00e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1a89508-3a3e-4a97-809e-c1c6a86f5911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a46876e-e923-4904-956d-25100e5b83aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "652aab0c-104c-499d-bf0c-0288ac48aac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae9ab69-06b7-4e77-bdc8-f6adf8165431",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4cf338-8b8d-4e58-90a6-ac5217016e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f17011f-648c-459d-b50b-695ffaae57c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614aab02-a641-4d4b-9b7c-d74ed4f0b67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cba0a48f-a8c3-49f1-b27d-a68e6182d06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a6e2fa-9555-4704-87ee-b0b0dc414671",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0c969f-8623-42d0-8598-4888c70ccfe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9ebc5b-3a75-417c-b350-735571363105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562fe22b-cd32-4137-8ca3-ac3c8a9ecb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "286cf405-befe-4e40-8939-f1489e0bce17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7d58f8-a8a5-46d0-8ea1-f4f5f6e0c8f3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91b14b8-7461-482f-8b98-ecb830e6e201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6efe794-7c87-435b-8f96-834e7f0b9bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8ae1d5-eafa-4e6d-9ee0-1ef735856f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd56ce6-5126-4db1-a92b-17e79b948607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e37e5f9-7d3a-45f1-8d3b-7a1cc17e6101",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799a0e8f-be10-498f-8ef1-2737e9cd84eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77f93e7-946f-4430-8f75-fc26049ffdff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ed0e9f-24bd-4664-8a07-10220d772aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "01ba2193-dd95-4e88-bf6f-671f64303068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2e007f-8811-41c7-b1b0-db6665f4afe4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df239e86-eb15-430c-9225-ce509a64f683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb7f8fc-2a31-46c6-8f1e-ea869989e42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f993a15f-121a-44c8-a6e4-5046485a4209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d83ef816-91dd-4630-acc2-bd8feef2ea02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d252894d-9de7-4b1e-a8e8-95ab141aeaa0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d08ae48-340d-48a9-afd0-5bcecfe11f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b62711-8839-4322-8da3-ce25ace536e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3060cd3c-bd9b-4533-bea0-49444630b6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ce4c8c-d4ee-44ef-8606-eac11eff2149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2c73c5-e8fd-41d4-90eb-9d4a976c292e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bddb474-eb87-454e-9fe1-661c89a19e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9108c96-6393-40a3-a3e0-55db34645644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b94f29-c429-43b5-af90-e8d619ca90d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "50077946-1980-4be1-bfa1-bf2a002b6be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a412352c-a19b-4d44-b993-8d79a94e3541",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4215ea0-dcff-410e-9722-0388fd83b2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60eba00-3896-44db-9691-b552b3bbc7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdecff9-0590-4aaa-a671-a30ae1d8ee68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c962a99d-9c8a-4e06-8379-4ede0f75cc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a71e11-0b8f-424b-a98f-6f14467a5e3b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d069ff-74c7-476e-ba6c-c9b5899b0be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3098d216-3ef9-44bb-9d7a-5910ee0716a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6487856b-e90c-4df1-88eb-b60ee33d9743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac1e2c0-669e-4b7c-8825-25cdc7fe7c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8580c9d9-b3c7-4374-b5f9-40e368dc64ca",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f23f2f6-5a20-4bf5-b381-1fd3e709bef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1f9de5-d333-4518-9f17-140fb8ec7b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76a4032-4d94-42cc-94d2-feb6e76727c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10b808dc-1111-4472-9b3a-51b52d0defa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33ac131-9d1e-4e39-853f-96a4fde0d369",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a2d00b-94bf-439d-ae6f-a9753cf46041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd252794-d094-4744-83e7-93b6490a3ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0f3d8e-936c-4d4a-996a-ee6d95f07f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5060ace6-5254-46a1-a40b-df4adc288562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f8a755-6cff-4467-8dab-f14b55af9eca",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9520b32-29dd-4290-8a35-a9ed8c0d27d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f8f5c0-0851-4157-99cf-f4f2e73435dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2265e489-43eb-4c3e-9493-dd6768c36bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd2f3c9-213f-4c83-b242-fd529850260a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ae5465-2a47-4ae0-9c52-15dd8b021493",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f280f89-7085-4b07-a170-1e90b2bda5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f2fa9b-b844-420b-b726-540b1ce75f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069678ca-74f3-48e7-97de-460d9dbbe947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c466c998-4423-4637-9da3-7360d45f07a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f158257e-752c-43e2-8637-70264647e2e3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95054f6b-97ce-47a7-a4a2-819fb4e36976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b020ad-36e0-43a2-84bf-7c5440f24804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8b3690-6d1d-42b0-bd12-a920435ab00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e17bbf2-c9af-45a7-98ae-deee6cb5c634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd748368-fa8b-4253-af79-6f4a61ffd0c8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c579fa-657e-4a52-9803-6f96da6bec7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e00611-dcbe-4c63-baee-75576f49a286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7027699-607c-4417-8e26-2863fd92b783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa29dbe-4b56-4f48-839e-b11704746246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f25d9b-66b2-4d8d-be96-5faa172aa599",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d184b11d-34ba-4494-893a-eb677b521478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d318a46-da30-43d9-9f80-4fadba17fc3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4464271a-9656-4703-83b3-9f66de5b0eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "77a9e2d4-002d-4e29-b7e3-9dbe84380175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40e6559-b601-46d7-92a9-bd511074c649",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587ffa9c-82f0-4518-a503-59292a30e4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddeee620-c24a-4f4f-8bcb-2c8c676556b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a055b809-8a26-4855-88d8-3906295bfbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29795668-2544-48fd-b692-80f9a176869a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cb91eb-89f6-4f7a-888c-4f76c64dd3b4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01eb3665-00f6-45bb-bdd5-598e963661b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6464ea-ad1a-4802-bb27-f6e0cd32bfab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba6432d-5058-4615-a26d-c16a3109505f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae08a8cc-0969-4a9e-9047-a155a85f45b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f490c058-c4c1-4c54-8af3-39f678b270f0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273ede46-9a75-4976-83a4-7c20bccc147a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44061600-fe02-40c0-9c5a-b01ab14354f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78243a20-2b38-44fa-ab6f-8ff302ae143d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81e4cb49-8d29-4f28-9187-518184c05dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5635e65-6f47-40c3-87a2-996a797586c9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614057d4-8499-49ef-8f4d-d136d2d93a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ebc21aa-4222-4276-95ab-ad568599aea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b5aacb-2460-4efb-8230-c3989bf3e4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4008931b-1f40-42a6-84cb-9edea98d6fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e84de1-4f9d-49a8-895d-082324229d96",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaac8875-7f5d-4fcf-b6a2-07c76c882b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a721529-f3b1-446a-9a34-2d0facd6fe36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8777ae9c-83f8-4ebe-ab3f-a3c2487a95a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "54289d3c-9c3a-47a7-b83d-42970ffab3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34c397f-f25f-441a-92b1-d71f8e0915d7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0b5710-c47e-4b00-831c-28a931cec993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64eb02a8-bdce-4cb3-84f9-b49a3b214539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c91111c-1e81-4001-b117-1294d8ee3560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b11b35a4-a80f-46cc-9a05-0fcd79724aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ac1238-852f-4f11-b599-edf570d00560",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6e40f1-a2ce-4ad3-a8c2-79ced0691ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9756f62-0c9a-4fde-85fb-c58aca7498b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2351d3d8-ff2b-4a58-92b9-a6bcc63feec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e12f9e66-9e84-45b2-ba72-3e28dc56b041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028bd527-df24-47fc-a024-ae4d5db0ef57",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85de574e-4e00-4e9a-a033-b4b4e2d8a909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861a6959-0faa-4155-bda9-d9f39bd6e44f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949d243d-b885-4778-8bf6-f52b76479ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "013f4796-1889-41ef-9596-8fbf6659130e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d31082-5498-436e-85d3-91afc3d73f6f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe60429-4eb9-44fa-92a4-f5aae5983abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe03334-01cf-4029-8aec-f3b8f243447c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792b639c-7420-4575-8a9e-bb74515ed321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "061b8851-3a4b-4aee-bd6d-a57294ecb4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e2e764-43a1-4ca0-81c6-87f7ce3c4eb8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9636ae2a-e05a-4399-a264-c3c6fa5ef0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a2d24a-9a9d-4e6e-92d5-9edc6b687f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06836ae5-a6ef-4d0a-9d80-27a9f696d677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "16ee26f6-4c1b-4829-a02c-a1c65cbeba7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9755ee39-d9bf-4d11-acbd-30419f697f68",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c37bb0c-8ca8-433d-b6d3-230eb5f8b006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90b71d0-2fba-45ad-bdaa-ab94461166b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71fe094-82b7-42b5-8e99-ef56acbc3a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "30e64ba3-c165-4889-8932-6f1e23f966f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06a68e8-2251-4e60-8c47-43aa3f3c394e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "977d7773-4eeb-427c-8a48-df0c0eb73687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b715369-f52b-4e52-84ca-d6e65f552685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b7c1aa-f8a2-4dd6-be28-3c3578a6f3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e13134e7-f958-49e9-8453-beda3ab1324e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d90ff9-4854-4949-9908-cb6bbbf604cc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b22046-6229-4704-afcd-cb3a41f74a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ed47c8-44ed-4c9e-b385-19d943dee030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc47165-b07e-4983-b9f8-e94a27fef54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1366d7bd-b0ff-47fb-8055-5171b3cf8df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44897449-ecc5-48bd-bca3-587c697464fd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716c2ba6-9fa0-4e36-b400-fb4defc10776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca781ce8-db68-4670-9633-f67db1c6d8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6502cb8f-c17b-446a-82a9-36d6a3b3dc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39180307-932d-40a3-a955-2f79f7d0acf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058302e3-4f76-4fc9-8aaf-5f087fe9f94a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955cde28-54be-4de9-a11e-188b20818d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5063c833-420a-4fe7-afdc-300255d96bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0e4a92-885e-44f1-93f9-3230107b445e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7eba098-4706-4a79-9679-7640ae60b3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2071a6e-7423-4553-924c-a46e0c52af59",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7249285-700a-4e0b-9fa7-2b3528377f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b584bb8-4b58-41ac-b2ca-c46200eb90df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab5b6e7-40b8-4eb4-af5d-c72d0826e79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e85fa81c-9ab4-4df4-a95b-00c42d4ad5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcacb46-378a-4dfd-9662-a8fa5bce6726",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3390c4b5-a0ca-4ecb-850c-10598a0db2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d393b3ac-dd4b-472a-a9f8-dbb23fa90b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01ee175-4972-42db-859d-6664235aa38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef84c5cd-b434-4124-9ec5-be9b28a4efcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c079c6f8-1acb-4dc3-90f3-719944cbe404",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a16c2f6-d116-4597-aae0-048c60c11881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167b5662-3cbd-4b55-98e8-c11cbac9d90a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3414b08-51d4-4752-96b2-1fc35f1f24cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dde69df0-4d1c-4376-a2ba-bc8751bb5e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bd59f1-cc03-487f-9d1a-663b8271ad4b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f558cb-9ba4-45db-b5e6-9efadcee8430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1784fb5f-8e69-4529-bd95-cfba656c8297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fa2ef1-595d-4216-93f9-ef3efc6957e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c36cd11-22a8-4a38-bb3f-f67f4c9be0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6da23f-5734-4fb2-b105-c9e4f2b01297",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954c208d-ef3c-4f91-9c21-a80af3854f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40d25e2-584f-4ee5-839e-4b97b727b87c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884bcb5e-c13d-49a9-950e-38f7f6966def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee517ef-303f-4fc4-8b26-0119f3c5e55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21bd493-8052-40e6-8dad-3dc69ca8e6d9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1f3b32-2596-4cca-8d48-801d7fab82d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba25f747-eacd-47f8-a749-3a93b1b28b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfd2316-dc97-485d-8000-995c416bceec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c556fc92-acad-4ecc-9d7c-e96ed0dffe0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2a3506-c4d9-4db6-a0f2-432674807972",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46460996-b954-4449-91c8-c19e1d8110ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12fffe31-b2d3-473e-b472-8a6f0824e54e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6282c21a-801a-48eb-9ec0-1d60f9d67a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e66acdd-2d6b-498e-b36c-349d01c5a5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c138aa9b-c0e8-440c-b952-da2e0db15a97",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62db6105-343a-4f79-974e-4fb1852d6804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793734c1-e33c-4295-aa4c-a248909a27c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68464b4e-9d37-4a39-9204-762c6adb6579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1b4f30-ea0f-4c58-9caf-271abc6737e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d7a702-4875-4b5e-a486-2cd32789f9b3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e8d9e0-d798-4085-a668-0d00fda30bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e905d5e-0407-4c1a-b75e-3198ccc5c3e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202c3c24-86d5-4666-bc67-33ce94b701e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf4936b-d3a7-4a1e-bf32-23292313e081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa8071b-b7ca-4f57-a327-86bc1e896814",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf5bc43-c71e-4d2c-89f3-1902207ba86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085964b4-fcb6-4d93-9cc5-ed77647ef2bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333a882d-12c4-4556-8632-e927730aed40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95ba2fc2-e916-41b7-93bc-d7b02bc20a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98830e9b-39ca-45ee-99a5-1d6de1d3534d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb885be2-12b9-4cbd-90ab-974f8b4cb87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f81e856-75c0-4f7e-a26a-7347ed234445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c76013-8130-42de-98f2-bb914c01c611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b91621b-53f0-469e-9184-c15346cc4ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e117857-5c2d-49c2-9e93-00957702fa34",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3da6dc3-7e53-4966-98f5-f6646032d00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ebae805-3dc6-421a-bc07-1ff4eb1a4f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b985a1c-f0ee-4823-813c-84a299c3ea84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40ec5847-7c41-4598-bac7-9506883775da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567347ff-8ff3-4e88-86fc-d47d0cca5d7f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9fe9e2-4807-4a42-95cf-882e0028019d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a9a59d-673a-47c8-b529-ecadf03ebb32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b321f186-42f3-4cd2-8bc8-2d5a19fc615e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72020038-6568-4c01-b159-46215a0c7a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64e77b8-92f6-4223-8e3d-a2e1ec86c967",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16faf67-eaf0-448d-98fc-9ab1c138493c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd09c696-8ce8-41ec-b0f7-a066ae7ade63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fff426a-be6a-4172-8b01-25d22edabeca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c637ffb8-fae9-4260-9c94-bfd9a7395411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c06845-0d91-44d3-8438-dab6cdbf6507",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c9f83a-7236-4f4f-802e-987a48714906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfdffeb2-ba2d-4050-af31-23c4b44dc23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdaa14e8-e3c6-4a29-a28a-d88f8612ff1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32d95196-c06b-4ed9-afe3-bda0c52a9d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378182a1-0ce7-40cf-a710-ed465761abbd",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1fbc79-8fe9-4a71-8939-ee89508c2d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de96dc12-513e-4de4-bcfd-bb6f0e95fe61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea893e9-4b25-402c-a489-48bc32887095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e20a6a-fbc7-44e5-8717-9794a68bddf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720add44-c5ac-4558-8848-98dca06a02c6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d6e503-eeb7-4a2e-8995-12b092bfddc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a684572a-d094-45ff-96e9-a6353323e803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bc7d66-52bd-4c5a-8c12-b852a392a3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f138a587-7e1e-42e0-a64c-a0c6c027ccae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a39bde1-18cb-4c95-b1b3-90910b6822e2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf336e0c-80a9-4891-b5e2-0652073f05f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d6b25a-6337-47d8-8827-1a8dcc213578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7880aa45-cbc9-47ee-bcea-579e2e3126c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4cbd5ae9-8e8b-4e87-bdf8-3e8f6a2ca063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac10791d-755f-427c-91cc-a4103c4b4b4e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cd0a0e-2173-4753-8caa-5c8aa7740d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b79eb1f-4fd2-4716-8925-c6d983a52525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda5dc27-9a06-4120-9566-26fcbc79ac1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a543414-10bc-47a5-a4de-4ebf484108d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6cd03e-094b-4e82-a007-b46bff248aae",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e19390-f1c1-42f9-a16d-4d0e1993d9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78568876-cc53-45c8-badc-68e3e9ca50b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fa688d-df8c-44cc-b26a-1e0d48739436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "95a3ada9-7862-4d3e-9a92-b18268f6a41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802d1d87-007e-4346-be38-e42f7dae9712",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2351db4a-26b4-4bec-8fbb-49c1e023bd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5ac68b-423d-449a-9b18-8eefe4b46444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ea82f6-7aa2-4187-8399-bf19758cadba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4b0811-026d-4ba6-a0ac-d35ce9a19892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b953f91-356c-4d3e-bc2b-8caa107db3b8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac32597-521d-433d-aabc-da3c8d17ec58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb3cdf5-b485-4f96-b414-56fe20246ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eeb4f6a-f684-4c5b-9166-b50e70cd35a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe0d5e9-71ea-4c88-914d-3fa5fbcdb89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412f5247-7cc4-47b4-9c53-bfea1a9df179",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a22bfd5-6c57-4578-b85e-7953903488a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2426cffa-2cc9-4538-8a6d-f105ab674558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771216f9-8e5a-48f1-9f42-0eb83625cdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb97592-a44f-4b08-aea5-aba183c7241b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e935c1-d527-455a-8011-1cc7dd49e050",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f241be-1106-4df8-9b4f-3fdb450d91a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8042f9a2-5d47-4efd-946f-cec0ada3e273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd432039-bbbe-468e-a46e-0ea339483656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f892de8-e021-44d1-a7a8-f64f394c4d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d86dd4e-17fb-4120-bcdb-2ed8fae42c96",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8300230-88dc-493b-86dc-c2690d8c87c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fc09068d-dcb0-48d8-9159-0a0d5cc27f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a883ba9-7aea-4713-9532-057a45173d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7464780-6f18-4acd-b930-a1890d5947ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "abef770d-d87c-4d72-a049-04cdce59ea96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22b765be-7851-45e6-888e-cff29e62c4cd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a9a1ff-3cd2-4a92-8733-c946f6d4c01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59d2b4a6-ddb1-451e-9f11-8fbd2447f331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75fbf40-c7db-4b0b-8a8c-10161b0fba9a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d6eb2d2-4157-49e2-988a-05738ec53817"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40738b1c-bf15-48a8-bd2a-2dd74cb88d6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eab12b89-0a77-4308-8d12-9ddf91acf24b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "380679fd-e734-4fd5-a924-6aacfdcc0234",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "283f7276-df06-4997-a7de-535793936b03"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b808858-bcec-405b-959a-1b4d4620f5a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af4e47c5-4d8c-41e7-8912-18c47e20520f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "baaa03ab-9129-4d7b-991b-b0c4c21c7355",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72c3955b-7b2e-4533-abec-f87e7d273a5c"
                }
              }
            ]
          },
          {
            "id": "fa04e7bb-f394-412a-a48f-2e2d4615aaec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9342bbd7-4637-44f7-8a4e-298cf1996bb6",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4bd5cbdd-465e-4c9f-9ae9-c08d01a8fc02",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635c8b84-f25e-456c-bab4-ae93446c20d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "15e76b07-1c7f-4e9f-89bb-fbffe26de6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa84a541-37e2-4875-8724-25f2fc6f596d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e53f8f5-4bd0-4b5a-ada8-332642a6ac66"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b185a3b8-72b7-4af9-89e9-c12ad56e19f1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40076b0d-6f31-4aab-a421-e5fd78d22576",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f9774a0-c941-4e84-8b69-d6d8a4332fe3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99470516-b0f2-49c0-b0e9-eb23849ea90b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6f6fcdbc-70f9-4473-ac60-c7da0e3f9200"
                    }
                  }
                ]
              },
              {
                "id": "cc73975a-c0ed-46f6-a6df-a9ca0cfe0073",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06b93729-e302-4704-ae3c-81a651fbe12e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51c0bf58-7d53-4d82-985a-c26d3c008a6b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f52910ca-7b78-4aa4-b305-fcdd139068f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "90b51577-a48e-4183-8a27-5eea28f41e38"
                    }
                  }
                ]
              },
              {
                "id": "586b4fdf-5603-4bae-9221-217659c53a08",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe55a8a2-c25a-43b5-b595-0e9a78722623",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f191ffd-1c90-40d3-94d9-470ea1a52547"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "742c5b13-0a61-42f9-9083-fb3e762f2e9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a707e3f2-bf97-4471-b175-6c96b0533090"
                    }
                  }
                ]
              },
              {
                "id": "f7af9cca-0beb-4d30-a241-7e1cf168cd69",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e84e4303-9b10-4ee0-89ee-2f39df441f8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d74c641-553d-43b4-9a08-9d7d1d712603"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1262470f-7c80-4b03-bde7-d99a1747081d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d7fdc884-8dd7-440d-b127-2a321e96833c"
                    }
                  }
                ]
              },
              {
                "id": "480fdf4d-efa7-4075-9b41-6307195e735a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc9e6b20-d77a-443b-8eaf-1db3b9235b0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "925dc8cd-1a3a-4135-8979-0b95df482454"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a750374b-fe11-4e01-baa4-ceae80cb5384",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0733e8c1-51c5-403a-bfae-e179df536005"
                    }
                  }
                ]
              },
              {
                "id": "9bdc2f41-9a22-44d3-948e-d891177420f2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df076124-732f-42ee-9ffa-4c2873655244",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c1e676f-dcab-4b08-a19e-80ca5ace9884"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d710ff90-e9f5-4c58-a373-2936a8ece51b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6cd5b22d-deac-404d-9169-2b86c9603b32"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "46ce3be7-d967-4149-ac68-bb05af0f7d8b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a62f815e-1667-4c72-ab65-01ba2118ac7a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "43b453d6-cca8-4f56-9921-5e147585a15b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b97cde19-3b40-4b31-bfb5-feb98fb20c73"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a90cb0c-d1d6-4722-aa2c-ce99ed932896",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "78209b94-bb60-4e3e-a0c0-c67181480af0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00030006-ec27-4940-b617-55ef3332d123",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63c6e069-5563-4223-a47d-c6bedb618569"
            }
          }
        ]
      },
      {
        "id": "1a17c560-a302-4004-bc8c-c6d3fa2aa050",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bd572a50-de86-430c-b607-357cfda33c28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7af2b3f-77d5-4541-8584-3b34a0eaf5b3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2001517d-edca-49d9-9f2a-22373d33230c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76023f9f-171b-4d15-8efd-a308a10b5d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da9a9a3-7a4c-4588-8e2f-0ae7737d97c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c62a8ce-b420-4bda-9793-d5e42c906f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b59290f9-53e1-42df-a431-8c97be100c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0011aa1d-56b6-4f51-98d2-a356618e0e36",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc17fd8-a662-45e7-8358-c1baa853b865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a949b064-eb72-4b76-b027-f188514b3bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f591c027-4971-4433-b07f-f8769fe53117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b002746-12f9-4f19-abdc-9de5ed631786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bef2ce3-bb5f-4ec0-bc55-46a8fb9a63ed",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023075c6-1baa-4f3a-ab61-290bfb04c5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64e2e2d-2fa9-4b83-a02d-da42ee3aee88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ab143b-2c3f-4742-9b3f-28a7d921765b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc3b125-3adc-4e7f-8f61-065d0d0cb625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc94ac1e-18d8-4ea1-93e7-793349b9d4cd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426482bf-57ad-4d9d-812d-b68d8fb71f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae8d584-2120-43ec-8a00-1878f6e5a203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763987fc-5933-4a3b-b02b-facf9109e28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e555662-c919-4bce-ad8e-bedbbad264a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1831e6-1efa-46e5-985e-cd5c7977b4da",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde5cf70-c4ad-480d-8e25-575f047391c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8696b50c-e50b-4b9b-962b-6d4799e25198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb66870-fae7-432f-bfc3-b6182ad00712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6327d81d-97e0-42d8-85e0-fbc22a261ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0773b6-f092-4d2a-a1f1-b4f8d5e61394",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ee9215-0923-4897-9707-923913b5dbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f506b0-f955-443a-bbc1-e961ecd75913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ce1048-3f6a-4c44-8494-ad604c33fb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "27a118f7-0775-4aa8-a54b-6c0e1df1f4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659834d8-6fe9-4d67-ac79-7c2da9a224cc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1891756-6653-43f6-822e-14f340ed3b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab56a595-4ff6-4b6e-b8f4-ca0e55c4e92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8f5936-de2c-4b11-8d65-6f376c8cd8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "57f4bb43-ffaf-4366-8efb-3e9f529c3fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799c369f-17e3-4a33-a355-ed9f5898736b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae55866a-d3c1-4452-86b9-9f06b6f2bef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6af456-fb0f-49a7-aeeb-be6502d7c1bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e8f90d-75ab-4a80-98c5-45b8ce07ca01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c11690c8-182f-4d3d-a369-ce9004fe9180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc51550-d502-4c50-baa9-17bfbda27888",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc0a018-982c-41ed-a1be-d586e1942a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73d65ee-3c1d-43c7-a5e3-5c9cc831295b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aeecb9c-cd10-4356-8a36-cd9890f4bbfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9be610e-a439-4f12-b107-82264c7fdbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604679bb-0295-41af-9308-b706a7dce0b0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493337d5-e86f-4a60-8c1b-0308aebb6052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0ab7bb-9afd-4ca6-b25b-5e51d0d070e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b552e7e-5ce5-4774-8334-64bee1f679d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "befa2321-eed8-4356-9d38-93b5bf89ac94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13588998-795e-479e-9999-ebcdf7ea39ee",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0d13c0-55a9-45ba-a722-5af59ea5c36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5390a1-d082-4e77-9d0b-9d1a2d727d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5366691c-a5b7-407a-9b37-f39af4b1b57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9a02d973-cd73-4606-9b2b-cf315d6b44ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7364226-9dec-4f56-890b-d2c70c03c79e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104a6931-8778-46dd-931d-6d31c05ab07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fddf5ab-a699-443a-b4db-96754cdcd54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117cabb9-3c76-4f2f-9dd4-d4b8a38bc9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7866b5d8-961c-48f7-a652-0735115923ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce1fede-a792-4778-84b3-734f800aec66",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd92270d-02e5-44f2-a7aa-de326b729355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c3c479-3eb8-4978-918b-e71605f21524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2b413b-2709-4502-aad8-65a2ed8d78d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc7c899-bf6c-4085-b063-bbef27e06927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b142bf9c-0506-4949-8402-6f85d2bcc920",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe7a902-2a7c-49f0-a103-a53090244e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e643ac-0260-4a97-8a0e-676268440752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0c3d41-1f70-46e6-b0e4-f186d3afdcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad24dfa-4b00-4809-b6a7-8b901f8906a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a12228-e087-4464-a6fd-0c8c1f608e1c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3697eeb-8bee-4b2c-8024-c1f91f860f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48779284-635a-44cf-b172-bc89bf9f1f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6dc0dfd-1f73-4c2b-b015-d608f2fa6ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "47ae4bcd-c9d4-4f4a-9a08-7c053970a555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1b7a97-b62b-4d6f-b0de-e823de00d030",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc635e61-1a3f-45de-ae82-757c9ec2c49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2895a2a9-8b76-4218-aba5-754bee91d1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a530819-4aac-46b6-b542-bfdced4b4d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0defe794-68c3-4879-a5ca-6cee11202d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e62aa1-5b78-43df-a798-746a27c63b11",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cb1ae3-4cf6-42c1-9e31-95ea3a75cf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf00672-766a-4e79-9b09-f9e5123049a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c98a5c4-3bd8-49c6-a8ef-cb866caaca6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "88585def-e84d-459e-ab8e-fa7a074016b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7b6716-7707-4ab1-8cbc-a64f7b8f91d8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4732e9f2-2fad-40ae-8406-f6aa51a714be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c867e20e-73cf-4528-8ec2-49daec2d8d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9f5add-f546-42a6-8758-e27885940620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "04afce76-fbbc-49d9-8bce-346d0393a79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef6d0d8-f38d-4ffd-b6e2-20d764552daf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9f3dab-ca1d-42db-b38c-2c27081baa7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7cdd0b7-b5d2-49ab-bd1d-348f1fc3c347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454a846b-ec81-40fb-99bc-b85a88d446e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88c85edf-1f95-422b-b422-7543e3a50cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a0de9b-5580-4028-801e-f23f6e06c078",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727d7771-f1d1-4418-af36-41e64518e25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca07be60-19cd-46f9-b887-175d05457e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd779de5-71d4-4d90-8826-55498bdcfce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de33119d-a5fe-41e5-b58e-e044d67e6c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3ca6d3-efc4-45a2-bd88-d6d461bac9ca",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26cda5d-d00a-4620-bc67-61ce7359b429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1adf8d45-abb6-45d5-aa24-18ea59beabc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09676ff-6734-411d-b98b-07a472d00512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22ad1d0b-6354-46e9-b85d-2c161b06f402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9025305-6ad3-4fc6-9158-99feec8bdcae",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e5c8cf-e3bd-4e27-98a6-8a46ab2e71e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44dce7f-34c9-49b0-af82-0a117e0990bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fb4600-1c2f-402b-97d8-a49536dc56ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b76153b-1faa-4323-8979-96270ea60ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024be567-a8cb-49a0-a8fe-47b23e32da3c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6f1590-94f9-4ba4-87e4-2fa44c0dbab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767390bf-abb8-4d09-bca2-602652666ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aedc416-22a4-489b-bc93-7149058e5e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f19b87-0f62-48e2-af75-5d719df44030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac6a54b-e527-4967-9145-272e7067ed99",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2ef4d4-f98d-481e-995c-88a19af39d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f59477-9d72-4c2d-84ef-31c03b9dccd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43480d0-1392-4ced-aa6e-9028900079ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5fa671-f8ca-4940-90d5-5e3a1de2eb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf567bd-c6b8-4b1c-9a89-6311b9323f9e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da1f303-6f06-433d-b83b-7514a7d58932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9d2b98-04c6-48e9-9c05-c1af3654192a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36aec39a-4696-4699-97d3-31d9f7b46253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3670456-ceca-40b0-b515-a631eed99376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638186af-364f-4fda-83f0-289e8c0fa947",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82d2901-b443-418a-863b-b39b4d9d49b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0876d8-19a9-409e-9a92-ace3880f6ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a79dbd1-0e92-4ca6-a4e9-84dc523cb2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90890e02-447c-4896-94b5-075bb77bd4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f9671b-1004-4e52-b2f7-55b1c709d052",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236b2965-42b2-409a-ad15-befc328bf736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e9dc55-c0d9-4734-86f7-a53ab262be01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a890d41-17b9-4d0f-96b7-ea533b2fa3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8be4d4cc-be7b-4be7-b2cd-79e1810010c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b002638b-fcd2-45e1-abad-aac631411358",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f7b610-8058-4941-be09-100cfd3ec310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed2b700-ccba-46b5-911b-87036f7df99c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e42b98-a8cc-4b1e-b983-d9c3e03801f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8eb4ca-eee7-4462-b94a-c45124228f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d43934-1aaa-43a0-b5d3-8b2e92daeaa9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a006335-48a4-4009-9fb2-3619f92b7a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dca2f66-22f4-4699-8b9f-dde7583fa1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d23c49-a6a9-4fd5-a235-5e7f713cf2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26736bb7-0615-4766-9a60-8e54d651f57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f106609-ff0a-4b11-90e7-d8a898ae0844",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db14034-c51b-4e6a-9f9d-4688bdbc8c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f81fd46-0f54-4968-a003-8e9b876b3d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbb1c1b-47b6-4f22-af2e-4f905f61433f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa467e7b-0d95-480e-9ce0-bd937402fbff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a970fe2-910a-4791-8327-c9ce94c8c384",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a10bcbc-f09a-47b5-825b-c0b475deb403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f1f561-fc6e-483b-8e9f-9c3e101d2ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0004f5ab-6d2c-4641-8f30-685b1159f353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a311e1da-1c85-490c-ab09-de7b1f315058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604d9f59-41ad-4414-9efe-bb5746a0afec",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b0a283-127e-4b05-b91a-cae645cea8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1039109-47bf-44a2-ae17-42d312042d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763bfe34-3381-4499-8408-63d4762024ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d7004c-f47c-4476-b60a-552b4eea390d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d5ece6d1-128c-4b19-b47f-95bfc6841af3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b1e53117-58de-425f-ba63-07443d396b9c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6dd2704-c741-4357-a2e8-b13c6d33c176",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cc3307c8-809d-40f8-bcd5-0e1abe70d683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5090e6e5-6d1a-4b77-ad7f-3eed6e0fbca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "deeaead0-662a-46d9-8fde-01c5ada1bfb8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55bd0e47-d409-4ebc-8f68-0f202e583fd0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "352892f8-a8d1-4f0f-9563-5b9c51e430bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc47c6ba-a667-4a8d-bbf2-10a7f05048bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e465d1bb-7988-4f52-9edd-e5557837c710"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da561787-2001-457a-9594-fbdb1d54805d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "46cb6c56-cebe-40e9-9243-ca2a52accd64"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5076903b-3e57-4e32-8111-e3fd43275d7a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35592813-65e2-4435-9298-a3f245b5f89e"
            }
          }
        ]
      },
      {
        "id": "aae419aa-0865-475b-8cfd-f053c2355747",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "902f4cc8-02d6-4bb9-be28-e6b657d708c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90cdb2e9-cea9-4e75-9d72-5bbe62cc5511",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a080d962-6cdf-4e73-96f0-c83ff6dfb8d9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bca6e36-8654-48c4-a7ce-2766626ef0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4cfb03c-1aa1-4f8c-be28-9e0594e0652e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee647cf-a81d-4674-9288-b88066d6c928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "69cb2bd9-04e5-4d1d-bd47-6c08a7ef4940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabbc013-35b5-4784-b5e7-b08e209fa207",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a930df1a-48d4-4ebd-8b38-2bfc0bde13b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cffde28-5f0b-4943-872b-b57344836578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39749df-63a7-4309-95eb-2ab775dad26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb81e494-686f-4476-83e0-8f9740b90f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1083869-33d5-4308-a3f8-e4e8cee6303f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c8710c-7a1a-4fb9-a67d-c7807738b641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869ed34b-dd0f-4d1f-ae6b-38cd4fa9eae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fbf908-f1c6-40f6-b626-09e5220f7c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6366e69-0539-4184-ae9a-c07d8f33a20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3907e2a5-2e2b-4fe5-81f8-c0cd0584cfea",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de7caa0-8041-423e-97ff-e22f4ea94087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8467956-c115-47c8-8f42-85431adb7745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b09d48-82e9-432b-90e7-4105c8e47204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e3fc0f-9420-4d50-8e5e-c318074c04b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9398d86b-bcc8-467d-ac48-bbace4ef7157",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131cd5c8-151f-4d71-a719-7ec38b6ee8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270b5b38-6888-447d-8efd-1758b61084f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70130b74-14f9-454f-bec1-81b0494cfe7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c195a5e2-5a2f-49fe-ab84-59c4e4db3886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35788d16-009f-4ee4-9595-6465a18e44a7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4771f6f6-6368-4afe-bf10-95ac2cd04c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7c91d5-7231-4bdd-a282-5198db58cbda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a87458-ace6-446f-a0f8-826733fe8967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7e789b-4541-47af-b967-f9f76d732a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b331c178-2e38-4e7d-95e8-0876ce818cbb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17942542-98e7-4445-88af-020e256a7af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6830c33f-e231-454c-a0b8-41c4db8b2fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f3a3ef-14b0-406e-bc98-a2c794e09f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "51b33292-8386-4b29-b572-cfb5c2534519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b128781-e2f5-4ab8-a368-0d7c93260afa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad096f5d-a14a-4c36-8a13-744407442997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53dd55e-26ee-47f4-a6d5-9926089dd5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7710aeb-c61e-4653-b024-2d203b941b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7423c30-01c8-4caf-b59b-386b60018f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf95b35-ddc3-42f6-87de-be1fb71d6a35",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad39780-d1df-4792-92c6-a39fea767eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbc707e-f495-4935-872d-a25d616e7770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9297f100-39d8-4a4a-9797-a0ce48b248be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d516118b-010f-4028-95a8-c423061e439b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c3fe6b-ae7f-4b73-96fb-feeb87458f0e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8300b97-7a8e-4a01-915a-f8b4ba7e0b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13504e3-92d5-43ef-9991-bcf4b77f5dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a294834-f1eb-4dac-9813-a5070b2b4b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb2d2ee8-5e5a-4641-bba9-adbca8636b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faaee6d4-a4dd-4cd0-8701-22f8fe855598",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8062ea1b-3352-4634-a83e-1201f33e8f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99d8740-9b2b-4a72-a847-3157a7ead64c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a1262b-c4a5-4dea-97f6-20b7506b785a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb7008e-d956-4da1-bf35-1681df664363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d5d3bb-3bd1-4f8f-b972-f33780617883",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97db03a5-eb53-4463-9336-ec9bed35587f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b641d1-8e6c-46c8-826d-6389b2e112ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3e19f8-51ad-4399-bd91-548cde8d903c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d76b5841-65f9-49b5-96be-7343a10edfb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d87bd40-5406-4db8-97bc-5ebc7e315039",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a8ecf4-79b3-449f-9519-92b1fd31f6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28485e29-80b7-4911-bb38-9965007160ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855d87cb-5f70-466f-b0d6-80ae9d58a56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc30862-6a9d-434b-acf0-871770e83740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f093e8-f8fc-4582-8646-0dd366a5f5ed",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add4728f-a51d-4d45-80ad-ec315087787c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b180f72-6aac-49d1-86c7-e522d335a2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05dbca1-cffc-4912-a766-cf84463272e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "266b8d66-e584-42c4-bb38-0d336ae7d9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cc7078-2653-49fd-beb3-2a2e938527c5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb4ab5b-18a5-47dd-9fa6-f0d01d52ed48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc24c38b-3b90-4618-9959-eb4cfd3b619a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f625c4-20fb-45c4-a8cf-66af05795b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "593868ea-ba21-41b2-b6fc-72de5af643e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a798375f-4ffb-4ea6-b774-8a6884521b50",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445d437f-5b56-4bf6-9e48-9e4c977548c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75d5bdf-67a7-4eba-b7f5-389475822baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1330ea-eb98-44a8-9b63-92eda39e7a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce28110e-4157-4c3d-a7ca-bcf706d25f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c1578f-dd1d-4ee3-97d4-ba1fe8d89e2e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657823a9-cce1-4eb4-a4ee-84100fe7de97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fb11f0-2ff8-4f59-a699-75f859522e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe0e64f-ca76-4a8f-a28d-2d06ecc961c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "22367fdb-2d1c-4e09-b0a9-a6e6504ce336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b2d647-8a30-43df-bae5-8d60fc819e03",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47221108-e83a-4cf2-aa12-98f5e7583657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36f4209-3c12-4bb3-b484-2f96765693d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1114846d-cc3b-43b5-8ea4-bc042e357510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c80c5ea9-773b-411a-81cd-385fa87d049b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1653cde-6993-4ae7-89d4-c472b897bf61",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b323ca-1f86-4b61-8dcc-675a3b7b4ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402fd7d1-70f7-4ae4-97df-42e0a1f0902f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f1f2c0-5cff-4761-ba67-e0b8b1fc882f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bedf0e9-2afc-4eae-9561-4e825346f6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09310869-1b03-433c-84a7-4ff935d24e2b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169ab991-a23e-455d-840f-914efdebda8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ebeb3c8-e155-4151-bf11-144802e9d184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4529ef-b5fa-4441-a24f-ca509ad06878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d148a47d-fabf-476c-8d2b-19241cfc916c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c486c2e9-7a3b-4a6c-8d19-6f559d968811",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778e8e1b-59aa-44e8-bd99-5016bbf1c9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5991f9a4-9a41-48ee-9b32-2c3e1a3f266f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0652d9a4-8550-47f7-b4a9-17f6f3a2fe16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06af8282-19d6-4e4d-b8ff-3241d0e82c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc04b99d-f6da-4c40-8dbe-20bd34a41bcf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d470549a-b7b8-4865-9480-ceade624928c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7d849c-c591-4b81-9f97-94954ef10eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a354e9-d581-4764-81e6-017fac76d6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdebfb73-027d-428f-8b86-b26acb8dbe90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1bad6b-c359-4057-86ae-da7f475f61e5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f105ea-7d24-4df3-a3dc-e9ca45ed8f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae75724-0ebf-4b32-a4a0-ff5a5cba281e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5663ae4-ee19-485e-a724-fedb282cb896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43b4fcbb-4033-4115-a770-836744f5f234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c353d953-57d4-4ecd-bcab-f1c843ff33d4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0abe32d-33ae-4005-ab1d-2ba3275b04ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ad49da-a1ce-48e1-9adb-71e975d0dce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b95ea6-0a9c-4ce2-893b-5160b53a4592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5817f8-cd24-4d7f-b8d1-3173734c986f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7df1263-0a60-4e13-b2e5-627a74646c53",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aea4c7c-b882-490c-9b9c-40fd0f30859a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba340adb-3e17-44d5-aade-41eda6ffa70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44165dc-78ea-461f-8c12-cc37f5d26b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49fd749a-f652-4aed-bc67-b6a359d83762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5143b1-bf63-4ff5-9620-269ce2838933",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135f10bb-4a30-4aeb-abb8-20286bac881b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73808a1e-c164-43c0-ac79-040d13f36509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611a41ac-b866-4743-92b2-fd8d8458fa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0219c0c-986c-481c-938b-4896e98358d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d57c1d-3ff5-4534-862d-4a206229dbcb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481ca9ec-35fb-4202-9467-a4a44569a9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f42fb543-7d67-4ea0-a4d4-7485a27561d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4e7f0f-5b7d-4189-9319-5750a0538cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eeb32b2-f78b-473f-b07d-899201ddecfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0754e67-1d92-4082-b159-8bf97b047c01",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43b85ff-1d6d-42af-8704-a00cc788ea5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53628832-0c4d-48df-8993-994577023d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1feadc-cc49-4ce3-b3d9-6e9459c6785f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3f7df3-d9b4-40cd-8617-299697fb9a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1d5ffb-b216-4bcb-a351-7ba421f2d9a0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cd045f-4d47-47d8-a67e-8ea8e76a43f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d42097d-7b81-4d6a-80b3-7566e143b4e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31fadcd-7da0-4de6-9631-0718e45e32f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8835497f-9cf7-4224-85cc-aa2e522f65e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33925e0-bec5-4bf5-8c88-6fcef34a2a14",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c317d07-5f15-4de2-a8be-e5c45a3468b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485dd6a7-52da-4a7b-a87a-d0ae23ad348b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252b668e-df29-4cd0-abb0-92a1df8b2797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d0206be-3634-4329-adc0-34ec7befd968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbcc219-8d81-4201-b659-965c4670b972",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38411acd-e8fc-43b7-abe5-665d1360c29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f80360-c659-4663-bb6b-95ecbc8d98c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e7d77b-8b0b-44c7-90a3-ebc8386b62b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "841d5d66-0444-4324-ad3a-da1c137286de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4e1c07-a87c-4b28-9be9-d98892ecdbfc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ff0edd-68df-45ff-98a0-76f35730c0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4f3d26-96a4-47b6-9f7c-95a754df6a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d771c9-cbfb-4a85-a2b8-089fadb19049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73dbf379-7809-4f2b-990c-e0eed424c126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6f0c4c-db8e-4951-ab9f-4e9facdc0c97",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838d6bf5-32ae-4b12-804b-70333c8180b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f10d0289-93fc-4a4d-a480-e82040bd6fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600649ce-dbee-4187-9c83-362c7d36f8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f04cf5-2a85-47c0-b389-b93798f2d220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbe2b94-e31f-4d99-9a15-f36361863c22",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5398b0-c5dc-464e-92d9-3e51e6d0cc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b5b7fd-53fc-4527-9d38-60ec81234710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a105b7-3479-4b48-86d2-39932400f89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e3c5cba-bfa9-4885-8c1c-ad69af6ef91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e277bf7-2b2e-41a1-8c0e-f2504d2c67f8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6338573c-9597-4dcc-ad2e-30c98b9806fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa218c6b-bcd9-4631-b7b2-0f6683870de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559c4a32-9e22-4b17-869e-9ef3f7a7e435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a80c4bf-e2d2-4578-9574-bf48cd1ca92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca902073-f4fd-42e9-a5d3-c0e5ced6b6ab",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf565f23-2ffc-4b88-96e7-75ff14f4c4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f250d8e6-be9c-4228-8bbb-f237459a464e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edce46e-4095-41d2-b891-801ffc69099a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0cc34bf-fccf-4cac-a323-2d7e796d64d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef07042-62cb-4f81-92b8-0851ff61a8be",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3363d2-724d-466e-b8eb-fdef4a11df45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8a8cad-050f-4938-8b33-f45a37cf253b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bfaa49-62bd-4bae-981c-ea18db6aa2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06c11273-b147-4809-9bda-46d52bcf6ca6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "81ed06e2-285e-407f-bb63-ed1fe0cad91f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca284839-c8b7-474b-8a0b-e1e6009b3729",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c51c14-0f90-4fc4-b2fa-1b0f898f389e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8ecab82c-2adf-411c-a0a8-bc18e1b7ac11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "611bccc1-9887-4094-8693-465a4a11e172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cab8de82-de28-446e-8464-67a02e0937a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a708f39a-1b95-411c-84ea-415dceae12b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "480acdbe-20d8-44d3-8f17-abd1ac248b5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1383fc23-bef5-42be-baa3-8abe89e95048",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c02e9a21-f32f-4e83-9e9c-559b0f9130e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af581c86-f3e3-4bbb-b6f9-c9baa8cb4b23",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "74f9c0bd-49fd-490f-b859-348fd69916de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed8d2cf9-5e0b-4857-8242-598bbddff58f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87689275-71bd-4088-8ee4-0e792241acdf"
            }
          }
        ]
      },
      {
        "id": "04c5c61e-443b-47aa-9031-f07a15d94c4c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b57c5fa6-d10a-4823-bf3f-3b7d8d2500b2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65be9892-c391-4f47-a1af-702e2b74f731",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3ffa37ef-1475-4b0d-9506-39ab717ff9fb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1608c9c4-74c0-4f52-9d3e-a163d34ff84e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b67175-efa9-472e-aad2-dadfa3607c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aeb864b-c73c-4003-9e07-d553bf8d2e8b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5276756-ae9e-4234-bd34-77c5b4901cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af669da2-1674-4489-a1c2-256d825d4ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1106ca-4938-487d-8c63-499b3b64ed18",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961c88dd-49e7-48a9-9dad-3774f06e07d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33bbd107-72db-4d42-9eb0-38cbc9c9beb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d923f959-237b-423d-a4c5-d48c045e91ca",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09827853-524a-4f50-8988-f0963c06a74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd72753-e4d4-4b6b-b4e1-0882937e7f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2e8768-8a42-48f5-9cb8-4157d38b6c90",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7f4d40-8e7d-48d9-9ced-d8b53de9a32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c9189f-1f6f-4a2f-8b46-643c4ed2e551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afacef8b-2fb1-4522-b892-d52fa873ddec",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3288011-c53d-4eb2-b6ab-cc709111c43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0400a0-8aa2-47d2-9b2a-ab1622753ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8417629f-5653-4357-9ce0-8f6aa802427e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa6036e-2bad-41f2-bee5-2f866c0aefdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cecab5c2-1d65-4cbc-b306-361131115889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "551ba86b-5dbf-40b1-b951-ad0576b4d06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50931f17-b85d-4998-b2f6-957d3c9f1d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b24abc3-8396-4d01-b61a-3ff231c7f517",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37709457-2fd8-4c08-a4d1-1eab15ebffbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6cc038e-689e-4a93-b021-172b5120222d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c980ebd-420c-42fc-98fa-88bf57c78bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3fa8a0d-278a-4463-af43-bf30d2cf1b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58ea4e3-9a42-4d8b-9f21-202e4841e992",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5a6b41-87c4-47eb-94c8-2479cf0e2223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "907619ae-b382-4d03-a81d-899438a93a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3b251b-784e-4a00-922a-b224433123dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede1bece-140a-43cd-8ef0-7dd72d8b8130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883ef377-df11-47d0-8e57-bb797b22278b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669f2f55-f298-4ae2-90ff-16f7a3f5a8a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e32a98e-ff05-4d73-9e30-1523e782ac8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b45be4d-7e98-43f3-b04e-1f21bb76369e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80597c76-af82-484e-8313-4ec0ca85b574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8858ce5c-308c-4664-9098-4982ac57025d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d30fbc-c1e7-4734-ad7a-f1a119ebb1ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9594153-ad63-4ebd-b445-64192daaeeee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "123c0664-f27d-404a-9eb2-d9a0f73b6f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce32aa40-3190-4ebd-b7d2-d56b860e0e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c404aa87-2f1a-487c-aa46-eb560d846cc5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038f5652-9a98-474a-a7b1-cd2f2f1f03e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643d4ecd-43dc-4427-9ce9-fddf5f6a1a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "245d2b92-557a-48b5-9108-ed4e1f56f944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad8f928-4668-4d9f-84e6-a3d2d5a48b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c2c628-dba5-439f-a794-a2d9a4857e17",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae514e25-8d4d-4d43-8580-50e89f6434e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "697b8c58-9a9a-4292-8c44-60a21ae2ca1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "668a4ee9-0956-4038-80ad-2ce44edd6098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f03523-f577-44bd-b76f-9c6164d29924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ae40f3-36e5-4433-8ca3-6b249ce27adf",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37580e7f-650c-4b41-ab69-31a2037e7658",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9066e672-5e72-4bb5-9a4c-3616aa7bf8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cebf9de-f466-474e-92a4-d3c708da3a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc36e53-9107-4379-8e0d-18ed11b56db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc768895-bf28-44c5-8a4b-4da1ad8c22ab",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c69499-0990-4b27-b8ee-0c212c104289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3d88824-2813-4d63-bd8b-a33da44d0a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7ed243-e909-4de2-b38c-ebf6163b14b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa459741-4129-4db8-b5e6-fc43f01b00e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e891f6d5-a407-4225-a917-00b84c6b5672",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58f72e6-0a38-435c-90cc-6de646216185",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2035aeb8-9e51-46d5-981a-91da34feddbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "070a00e0-159f-4d14-a00b-dc9e7b162d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37cdec94-9a85-4a1c-8fd9-2decdc25c036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfb85bd-d710-45d2-9ca8-6b6fadf032fb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8edd411-9e89-4424-9461-f666a1c22734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2cef265-b46f-4f98-992b-ed55f2634804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08953e4f-81a4-4d79-9c2d-28e5a337eca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95746af-515a-447e-ac20-af29346957c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccff6d0-b07a-4287-ad31-05e9fad7760c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0faf9fa6-ad9a-4ae5-ac1c-72394c76ea9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b133d177-0852-4df9-95d3-1e1dfbc2f53b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef21a04-4701-4aa1-b872-df0737af8588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61231c7-79d0-412c-bf48-b5fde278b4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cad71df-7ddf-4084-8c81-40b23ca8e7f9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4179fd-609f-499b-a5b5-56847de09e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839eeb64-b558-4972-9e98-a152f65a2b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e96e6b1-6a4e-429f-be18-800f5b41b944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "077ea433-6e28-4840-bef1-964ac7d96ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b94e71-4269-419f-9115-178d3c4614e7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660daa71-372e-4b4e-bc26-6cf63ab4c9ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc84d788-243e-4e07-a66d-cd7500e8dbec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8684cbb-92a5-4ce4-9405-8929d918cf8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991a1798-1570-434e-aa1d-b66ad5020b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a6a4e1-255e-4c8c-be5f-d46627824a97",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b102f563-8135-4447-89f7-b5fd08d1279e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3471de-2ee2-4cec-9846-782379a6e0f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9122a9dd-23cc-4886-86ff-55bbd1890db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25759d78-a225-40c9-ab60-b077e563370e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6dac40-7735-4996-9f78-1817bc16689c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94532c1-ca17-48b9-bb77-d72f6223dea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d773ad-f5da-4743-a2ba-4a7ba497677a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f0d434-6e52-475c-b9c2-cea4ee4bdb5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48077bc5-1a83-4d11-8a9b-dc17912dc6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8774b1af-f450-464f-acbe-d5c8d3f6c5b1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ff1249-912a-4ffa-a797-6ea65137e74c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaef3e9c-444a-40d4-9588-a87c4bc34fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a30675-f22e-46b9-a7c1-acfcd39812ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ec652a-3f9b-4cb6-ac21-093a262c1c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d35de20-96ba-4fc8-a5e5-e3fba3205c11",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8dc621-4f16-4adb-981a-6c3ff1d3bfc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bfbc09f-ea9e-4cbd-8c9c-022927bf3c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5df379-ace2-44ef-8ca2-aad148538c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f03e76-d7a0-428b-883f-bc7c7a3af569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbbd800-adb5-476d-8746-f8300c57afd6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9caea4d-e9dd-4814-ae0e-5579dccec1cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "866a9f6c-4f3d-4009-87c7-1bdb3a5377d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a6b042-8efa-4d06-b868-7a725c3500ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96cb493-d412-45f0-a274-d6b866028c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729ef523-4263-495f-ada2-369a8e96ca1a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7119b4b-4cc9-4932-b140-11b494188d17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0b10009-32b6-42c5-a6c8-0c063ef10225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df89ed85-3550-400e-83c4-f7003a480ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d8a224-0048-4392-8b7f-37b56f7ddb28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e2e5d8-97a5-4b82-af03-1e8b9a271965",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324b77a0-4fd6-4b67-8ef5-cccd8621526c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51fdc0cf-fee6-4c81-a0d8-f41a5bed8a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "806a3e3e-634a-4dbd-8e47-c216e6a814db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bdec417-5bbf-4118-a838-e5224fe33ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f1c1fa-4c22-4191-8c34-feb6e0bc3c4a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8db0bcd-c419-40cb-ba76-607b535f5cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515cbb65-1bd0-4a6e-95b8-81d9524f9f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "714e4cb9-e765-48be-8a8d-014fedf7823d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a8081f-ce34-4fe3-9ebf-b0164ccea109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e26d06c-8588-4a02-9b85-52b122248842",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6baf8f1f-572f-4bd4-8d57-1a61fb0a8ff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cc1203e-324b-430a-a7d3-d6f8db5f556b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e30f46d-357d-485c-84ac-5418f9ba82e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f3aaba-225f-4c3e-9ee3-fb4d24ff2289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5169b5-fe89-4020-ad11-443296c69274",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f02b7d-a503-4a2f-9ec8-6fe3a8514624",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f4310fe-4410-4985-83d1-51c97986556f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85acaea3-6c7e-4219-9a82-c926d4d79f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85400583-795a-4e20-9f07-4325825bae32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ca31b7-fc5e-45f6-b6e0-b61026485fe9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250ba68f-3bf2-4a43-b4d1-92ff5bbe1db3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf3a6db8-6172-444a-8d8d-dc7dc910c0df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58be0011-4898-4f63-9fdb-5fc430d3db53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2038eda8-e376-4e02-98d1-47c493c92e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0b498e-e8a4-4948-8678-b59c6608f668",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b5ec22-e3d4-486a-af2d-d1b3abb4f493",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48eb9adc-f779-4928-9681-ebce17b7157e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f668a01f-9cf3-4814-b839-4f878661d337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56afa47-58d0-49e9-affb-738942d9b42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6c0131-e56a-4cd9-aa3d-a0421cbad7e3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2320ffff-7186-4bd0-9159-0904e53387c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a0d2d86-a7e0-4d29-a651-6c864ef21221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bafc8d-78d9-413c-9ef3-d6b748dec84b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a28831d1-0411-4cf4-9db7-615964386e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd327dd-3567-402f-b6b8-7715d93cadfa",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f9c5b1-9816-4480-a203-42b5cdf5a54d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a794cfed-7630-4d69-8acf-62531a36ccc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "252c7481-6386-490e-875e-1127314bc1bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2def792-1855-4185-8836-bd684e95c4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a54848-fc8c-4150-8d01-0889601a3e27",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91482d32-6eb0-495a-b0c6-19731c05f5c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3233079-c1d6-4f17-ba18-a3d7b3cef03d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0e7b8d-01b9-4820-b078-37ec98241f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41fccc96-b055-4a2e-8e1e-c0359aa9c5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d314335-86b0-43b2-986e-68093e5f56fd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bdd8627-ae3a-4487-a808-eeab30225197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2416cb38-4e38-43fd-9755-3a1661aec22d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c00a05-6b5e-4a31-927f-e8fb6dc8d408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ad22e0-55b2-4980-9fa7-1a2aaa7dcebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addf857f-f75f-439c-a9f4-d864eab91ec4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250544d1-a97a-4482-817f-94f4c70c4804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb21456-a03f-43f9-8f89-90c04582993b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f32624-b971-44b2-a01f-c07c8abf7034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190e0a71-c9f8-4b78-a454-675f1f55cdc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c814b2c-8e95-4f97-8821-5eeb1dde6af6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5885c9bd-4567-4e41-98d4-152b344558c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86304f82-6ed0-459c-8443-10540edcf981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa624767-ce2a-4cae-92a9-4f51eb591243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d65129f-332f-4165-be00-4c5939ab27e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97c932b-f771-42aa-940c-e59fa4f34cbd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce229e3-005e-4f0d-aee3-667f131a9e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1413c63e-a841-4b2f-8905-b83a2a8f6e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450b8ed7-9d71-4d39-abd6-524ca083ea69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1993b48b-a4ec-4ae5-a3c4-1d5b3d0259af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b608d6-0839-4ce2-994b-7f271fd07ae6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07edfde-9f80-4e0e-a121-ed89f66274b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af5ac5e-da17-4c5b-b22d-f96fb76ebce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc82e02-f528-47a1-9e30-9e38db6d9b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6eb97db-5354-4357-b160-7223d281f814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64b342b-04fb-40a7-9320-95f98a85ecd5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442474f0-5019-4be4-a252-54113fd4a621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1583c81f-e69f-48f3-8775-157c88b164b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7e46e7-d9ed-4488-b61e-aa398f064fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e83c436-5a02-4e10-a906-dee78d75337e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f86928b-f04b-4cc6-8ac7-ef46a44c13fe",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3eedd8f-48cd-44ba-b0b5-992496e89c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "106e0185-4511-4108-8e17-495032e0b1e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f84129c-cf9b-4b96-9da2-ff2bfff16c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb0ca85-74a8-4501-97d7-5ebb94849b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705e6c8b-1f58-475a-b4af-729671881f10",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b9cd4f-afa9-4517-b773-6afd8f97d47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75166785-c40a-47c0-b761-13319ddadcbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5376d2-f82b-4b5c-966f-549f1476c7ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c35be95-764a-4ff4-9136-db1cfdc25145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28adb133-1008-453b-97ef-1e4a99d64f22",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b71483-e09c-4f75-8142-dedfdc5ed666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac149c0-4766-4440-b205-91b8d2e977ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa77b29-8edf-4deb-81ee-ea1ef5fb6ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7aae83-7f65-404a-bcce-a0ba6916b60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6ce5e7-46d2-4892-abe6-1db1392c60aa",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e831a3-e72c-4826-ab10-85f5603aa0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "882fa9e6-10eb-477b-a7e4-f1c9b957ac22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc89a511-7e4c-43db-b0b8-bf68e3283854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e059d03-bcff-43b9-a250-6afc8f774179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c334302-1e3a-42b1-9bee-aa773b06a6f6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd842919-e116-418e-a566-2e64bbec6276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49fd0e06-a245-42a4-bd8f-dfff52798889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85c4537-267e-43d9-83be-29bfc16a746d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b3082b-9d84-462a-aad2-e0753f3627eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae3322f-e18a-4822-a350-f7e9e898b714",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203e583c-1d81-4a5d-9c5e-6cee36c2fa91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f225bd-03e1-4ec5-9fe7-9d8181dfd948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1e042c-b16d-4625-a5f5-b0a8ae5f89ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc9e5d7-32a4-4cd5-a970-f96a5ac4032e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4ed9c2-5d89-4af6-8f24-e568f4d5974d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1156fe-968b-4b83-8077-6541debdfb1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa394bfa-7924-4341-a414-70941d11bbe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93c22c1-446b-4a0e-8005-a412626d9fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c05f4b3-8bcc-44a7-8ef0-c179943f762b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17204a55-b880-468f-87ab-3d6e4601fe06",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb7689b-ef35-455d-9207-355d5b17fe79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18cf1c7-9b67-4076-afe2-fb29ce7dbfa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba108c4-58e0-457f-8ff6-78e63c5f547c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea423e6-9ebc-431b-922b-23fb4cc95259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70185480-bd8c-4c08-a353-93418e1db2fc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa39c08c-7278-44ae-bc03-dc6d360166e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32cd8606-9597-4bba-b9d8-c9c1909f10d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0585622a-0a44-40e2-977c-e84107e5d45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92eb1d28-1a8c-4f02-ac9b-40f2626134ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e71b94-c110-495c-aaae-433a17e50a0b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab0f506-752b-4009-b9ba-8f7b7217d234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deaf9e16-f9fa-4b6e-b1c8-d4071398804f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427d7b03-6680-4f93-8599-df40a098bfec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a32dc4a-ce74-4a53-90ef-3c396a87dbaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0827b6-a74c-4533-abed-26cf5916e79e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db336bd0-d621-45d0-961c-5c5d030611de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5467456-7fde-4311-bff4-a5a53b5f1ef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d78c28-0a28-47fa-ac38-9011d83aa04b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa509ee8-56e4-459c-9060-e2420b39a5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34d8d1c-7372-4bae-881a-2e8f2cf60b25",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d338f767-5ea9-4e46-bc21-c4a9762b0a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f6fd418-cb3a-4ce4-8a9a-44cd19314cc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8016ed-1c89-4fe9-8aac-9c0fd8e91ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b281017-25fa-4907-9439-79de203f46c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d128b2-f50f-4681-b76b-dbdf1b17b1db",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40c4a64-ea5a-4202-b255-cabdd165b372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1bc522-0f5c-4d5f-9cbe-7675f8cecabb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3877fcdf-1573-4366-9e20-63c803c65517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0349e10d-6fea-4974-9248-a36028c7b8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86709dbe-e84e-4c7c-9027-3a9f96b1b170",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ca8100-7a7c-4b32-806f-2431dff416c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3971bf-48d9-4683-8406-bb9c8b94987e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40561962-6899-4ef0-a02e-096092a1de21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4d37d9-abaa-4d59-a2cb-e8858c6affb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aeb91c7-e731-47f7-b821-07785704c7dd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6515b0d6-5f93-4ea4-b7c3-43ef96324744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4afc96d2-68ff-4c96-8550-8a9370b2658d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c439a8ec-03e7-4b02-9529-0b8b7749329e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b661f301-2d28-43ae-ab7d-0111effc07b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab47b7b6-decc-4552-bb51-c31faba85d8f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c62564-bfa7-4568-9c48-271dc137ea30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68050ba-5ef3-4a8c-a30f-81e5bac6548f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167f021b-09bd-4e40-8ff4-33da85578e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f264aa56-12f8-40ee-a35a-ecace2dbb4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ad1f68-39d5-42e1-ba0c-4b3373614f35",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345e9a55-b9dc-4323-8609-c287f674193a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f558a66b-dca8-46be-9a53-f7c40f752f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5e45d9-1f6e-4f6b-b073-6791255712e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f68e9c8-ab4a-45a0-aed1-cfd9ef7f9aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e6b875-74df-4715-9687-ed43418c1a18",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d06ea6-fb98-433e-b3d8-4b14536d2822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46aae9a-ca07-4273-9c50-c57148ccc77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3e0a0e-ba6f-451a-90c4-748eba54d313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb3b7dd1-f459-43ea-bdff-32ecbc03f079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9553110-1e37-4a7b-b4b2-08f3135f76d0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34b7a1a-ef5d-4835-8d6e-2457cb49882c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a4bbcc-ef5c-4984-907c-e1313ecb2b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9534e4-2f85-47de-b2e8-437b7477565a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531eb060-d724-4df5-82cb-9f062288d0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc30b0db-478c-4c4f-867c-7dc9ba1e3f13",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9ffe2e-4762-4aac-88e2-745df534ca6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081498f7-1fc9-42a3-b5d3-cba984915d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee824f9-2aec-46e7-9382-91a7fe557eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f28e09a-c275-42fa-bf8e-ca246ba787da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac67d2e-ab8f-455b-bca7-9263d0964ecb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5cad1c-8884-432a-8ae8-82f738d810c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26d33f7-7b3c-4796-8b28-2437bbc48ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43efbda0-168c-47f8-b104-af19174468d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a8e692-d1ca-4673-acc3-e5ad66e72375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfc8a87-e8b9-4096-89d8-8666d0352d9a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f119dde8-97da-456b-a005-ed5a28afaf44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546d8782-4569-4233-af34-cac1473f61f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5a5c12-b5b8-47e5-9697-b2b8dfea5386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2813ece4-2928-4854-ab86-7b943ed9496a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d61ba52-5dfd-4983-b6b7-a4a728d891b2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b7e168-7b6d-4991-8457-5b5fa24c0950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "009e5b50-e0b7-4d76-8db4-7774493a36cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b8582d-c8a4-4b8f-b7fd-fff453dee4ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4624ff2e-df88-47a3-8e11-6e9f4fde7bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1643e0-2ab5-47bd-843f-b81b1bb420de",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886698f4-7e64-4cc1-a7e0-97448921c87b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2c61189-2eaa-488e-a520-16c89a0c45ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4489f5b-ddc1-482f-9b1d-fc37361267f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a49a59e-faae-4c13-af18-f03987fc7e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e500630c-30b1-4689-91a2-e0c90b6f9f31",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a93e33-9761-4a8c-b54c-5174e75e2998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7e5981a-70ef-470a-a596-0239fb0544d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a1c415-e4ed-4fe0-b1b5-30620d107b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8cc97a5-a3a1-470e-b371-6f2ed36893c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b3d1fd-501f-4f71-afdd-f431c771fe25",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596530db-846b-4ddc-94a1-0ab5953ecf6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27631785-9198-4e3e-a79d-7eb26518ddb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540cd7c5-cfd4-4191-b018-f9fb2bb11023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607af009-152f-4f9e-93d3-0478d6ee786e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f312c3-526d-4f87-9658-bd94394511b4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ff68ca-3ebe-4811-8ca7-ba8147d3cd32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bdd4868-6287-46c3-95da-3183af9aea59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "855d9f81-5634-44ee-b449-0d3754f1534c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4ccb5d-997a-40b8-8701-dad174478ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb51d1d-ac20-47a4-a2de-69878d16cef5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea1c4f7-60e7-4e22-9738-f6666419df49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7a99e23-18aa-41d2-be43-3c667dd2f735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf988dd-c185-4fac-9ff6-2e87f08e42d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd561ffd-0e43-431c-9697-c9226e8c1e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4a6b45-7f59-4a21-b9d5-e9c70ca6e24a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5da060c-284c-427f-afba-e63ba00b2528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a6c8851-55c3-4280-b062-17d7c5ec4c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40765d81-56ae-4c66-88e5-778ca9911613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6305d890-2240-4f8f-977f-cfab1f4e9062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9351be24-4030-47da-b293-20ee0f762d8f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc59c760-4d3b-4b1d-b24d-07aa8712553f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "260816ca-e3b5-4134-91c0-aeb1ae3c28f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1c6afc-6293-4059-9d69-53973271774d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e047641-1bd1-409c-9ade-46d5c2bf237f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c81e8a-df69-4e12-9af0-ca8dd327bd7c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26069aa1-2fe5-4811-8a24-3ecf3479e0fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9fe24b5-9b78-497c-bbc8-fbed4d88f28b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "180808b8-b21b-418b-ae66-c4854e6b3659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26873be-2ba1-46ae-8c25-3966b3012987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab711d8-4b9c-4084-a871-5623d229d7e1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c5b331-9c60-4930-94bc-c74654257e19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c0f3ba0-7e3f-4551-9d12-d194308aa452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9719350-da43-4077-be34-5cc60d0f52ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c3e737-c807-43ee-b9c2-b75aec719b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8b2e0a-ed6a-46d4-93ff-8014c96a7a38",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75620efb-843b-494d-8975-c2e389f3efe3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f71f61e-7ac9-4e61-adf5-14fccc9f66da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18ce0f9-5b08-4d06-bd7d-0a5095ad73ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14de9a31-4ab3-41c5-8d88-95e9eb685510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e207bd5-7a91-4c58-bd21-ed07e854969c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc38849-ef65-4e05-84a3-ebc6c80d4ab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41322a80-6db0-4c3c-8102-a790394378ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "532b61c7-d87f-4330-8b6e-be138e14dfc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c14489-13f6-425e-9ad3-b9e72fc5c6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498256c4-0c40-404b-920b-32317da588a5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010ba149-7153-4d16-bdd5-3415c8131d5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d3fc3fd-5247-495c-a4c7-f82e890eea97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc73d0e-e1ac-430e-8d1f-6d0bdf141158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a384e26f-f25b-444c-81ba-0dc219bc206e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9097c1f1-f9be-431c-8c1a-527ac65feac7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b51fe70-ac90-45aa-8d6a-71ad3cd8b84a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b857d3af-3e64-46fa-a12f-44fe13e5b9b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ce6f5f-fa71-4b6f-bdc8-969e90443a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71d6e4c8-7788-47ca-9817-a01756ded2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac948fe0-51b7-4af6-b538-26e9e2ff9fec",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927f3ea2-e3f3-4d64-b01d-93520593c7eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b12c82-64b8-4332-8557-8af3cd80e8ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed39db2c-84e5-44ed-8bd9-ba3a6d442b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374c3395-460a-4562-ac65-e44da24dec08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f8ce49-d601-4cc2-9447-eb48427a147a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821edeb2-fc3b-4925-bdf8-fbeeb091dcbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37dc02f1-2d8c-419d-837d-3c66c2c3b7de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70dee5a0-5cee-4a94-b17d-fe42e4a1a506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9ad320-42d5-44cf-a832-0f54797fed02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27cdc906-6f97-4ae3-97d6-f47a6d57ec9e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658f4fd8-f435-4c2a-bcf6-2273559d0f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccee0bd7-25cc-4007-b32e-d9965bbc837b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92952239-d7c4-4e80-8b09-a7e158e779ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f57311-14c6-4370-8f29-a51477146686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bb38ed-88df-4d64-aeec-d70e1d59be09",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762cc5d2-b3c9-4d2a-8e35-9a52259e9560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11a8e9b5-34c7-4d4f-9608-33bd5196e8b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f0ac50-57cc-46c6-8b49-f607eae51143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8cb722c-c71d-4adf-8d20-7f7569e3a9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9c163f-d41c-42d4-b79c-3ac078a5cbbb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2ce7ee-f2a9-47ab-bda0-642f447c1d3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a254c1ba-7c34-44d4-aa96-825874e1915b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b359194e-1b14-4c54-b8fe-38ed9c2beca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34d4971-66dc-4cea-b215-56c42638fe5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89374255-f51e-443e-acae-15cb2ecedef0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca39dfb-7d8f-483b-a660-843530c28878",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "324d8668-7fe1-425a-98db-349dc4348509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17479e05-038d-40c7-a323-38d6ffcc28e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d390638d-24d0-40fe-ae06-174522fd8c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a67a5fe-6390-4179-9958-a573c515bcc6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ea5a6a-04e5-4b89-925f-c0862d60218c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94f5246e-6cc3-46a7-8da4-0e5e79851eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cb2ddf-050e-4b1c-b885-45aae501baa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06c57b5-1c2d-457b-bb77-9414807be3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816947da-fb48-4973-a2da-ab484f822772",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8d07f9-a7b9-40c7-9c54-33632ec49dcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "453feec0-ad7e-4d51-b317-550088b920b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb76ffa1-eeb5-4c9e-9519-7617a21c23c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f57782-5edd-486f-9da2-82e8acbecc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b9f347-fb26-4bc1-a9b9-5ae0485f75a3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb711610-9391-4f91-889f-f00855f421cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9105d90b-4c6f-4998-bc80-3d748b02b76f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d9b1c2-3a71-4fe4-8ebe-ac789ac35b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d63d14-a345-4527-be5b-8db079c69f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cc00fd-4f9c-49fe-878d-b7189256f3f4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8278ca81-a5ba-4753-b0dc-3bcdeccf2168",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6576fe7-f5e3-400b-b157-05581cedd982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd06d86-421e-4f52-a1ae-419446bbb0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee654f3a-f827-4031-b5a2-41adcde0b92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c909759-8ec0-4d35-9e1b-9f6693815b0f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53932c73-2bf4-408a-8e35-99b280dd78fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f4e0c4f-4315-4d8c-ba40-7d576e014804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8d54ec-b00c-4bf3-8512-3ba11a14e4a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8826a37-4dbe-49c5-bc79-63622cad35c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9240b6b5-ffd5-4723-8485-4c7703a9ae65",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58315971-850e-4856-b038-915d0fccda64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a53c666a-07d8-4623-9e2d-d87ec91c056b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "818d6b42-eb35-4353-8d14-feecdb673404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8b5a3f-58f7-4f5b-99f5-7a94f1d6b4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f2d9f9-36ac-4e28-870d-9534d1e47e4f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788f899c-1deb-401b-8408-f71df3deaa67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da9e4a27-63cb-4665-b004-e7a59c23d2a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce8dc32-2135-4a27-809c-865514ad3057",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c307625-576f-4d60-b1c5-246c023b42f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc5d34a-0354-4080-988b-79ed95e6eb40",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615ddf2a-7bcf-4d27-b2a7-7c72667e6c7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a966aea-db71-48c6-aeba-fc431e07200b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21912cb3-b987-4e47-8ac1-dbb2ed15ed98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05a6cd30-4bfb-4872-afc7-6f2bdeeee7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9620104d-30fc-4675-8321-f2972073f518",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedf829e-c91b-4e55-93fa-bce90b890d0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa5a8e31-3f40-4f3a-96b5-98452b90e387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af80c79-fee9-4a60-8acf-a6104bdac0c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a01fec3-4e82-4eda-9a50-7ca2629ecb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b061c1de-d36c-4a9d-b845-da8373eab4dd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7233095c-dfbf-473b-938d-dc7fdbe4bcbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd2278d9-310a-4921-90ad-ae339df1a5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f599e1d0-2197-4e43-a440-ded2d083c066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ff11dd-ca2b-40cb-b877-0fe18191ce2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699bb79b-f8d8-4035-83e4-df856dcb92a2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb2a0fc-1dea-4515-b78a-9978c188185f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3104ef36-302d-426f-a346-7f0224bde350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0d6f36-2a85-41f9-9c2d-7ba47a52f2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0778e357-08b0-4003-a3e7-061e601c277c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5debeae8-9a2f-47e0-8943-76576605588b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f30c9ce-dbe1-4da0-8985-8c04e0204389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c84ef46f-5801-4ab6-a46e-121906ff0d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4885558f-a078-47d3-8861-331bf505a3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80db051a-0189-4fbf-9a88-ac32828ece6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d105fb5f-d848-431e-9c20-397382854a60",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2f64ca-cf75-41c4-bacb-ad4cbca53b51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52f7b737-2335-478b-838a-1107d12f381d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a684a14d-46cf-4cd2-95c8-d27de196e026",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eafaf22-48b6-4ca2-bf12-0a60ef379073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214c48c3-07e6-4578-9027-175cbb3df821",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050077af-019a-4d91-b56b-13204f641f39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c63f273-56f2-4277-9adf-0791b23b07e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d014d884-abae-4ea0-ae5f-6cf932ab48e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610bbebd-9818-454b-9aa7-29e4c49f44e5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c68036ba-c65f-44f8-895c-945885ac1f49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16f98807-71cc-4452-a829-249d0d035f4e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26f99117-c4cf-43df-b0f6-1129258552be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "949b0709-8181-4376-b318-b362bd09bae4"
                    }
                  }
                ]
              },
              {
                "id": "686b63bb-e39f-4d0a-8276-2ce1668e2396",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "123256d3-b0b6-4ee5-8559-9575293a2c83",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9528838f-cb6a-47eb-9908-6a691ee66c98",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "729e8a10-349a-482c-93c4-04c4917291a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1feb6771-e268-4999-8a3e-857704145c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28c50417-f1ab-48c8-9e5e-c6b50e11c695"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71ab30e8-13e2-4f08-b3e6-4e38fb315870",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "581ba14a-fab2-4b14-9723-dd73db55faf3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b5ad9fe-4aa9-46e5-8c9d-c565561774b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f47600ce-1fd9-442a-a4ac-f33502257c6d"
                    }
                  }
                ]
              },
              {
                "id": "f5d11e58-8f0f-459f-b7ee-e5ee63f128e9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "366586e7-ae02-4ddf-bb63-3c768abc1f0e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45173ec-bb75-47fa-946f-6e30954dd6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "724835b3-be91-4ed6-920f-9144584a2004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4f7382-2def-4713-a530-e1968196d83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a82cc65-f531-4e23-bedd-fe132eb2b3d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d8c6072e-9448-43eb-bfe7-298fb67c769f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b911dd81-96aa-4048-a3e3-114874a8548f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "592d5121-f935-42a3-b4bb-1a2b75c269c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d8063cd2-62fe-4ecb-906d-40293b104e59"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0155912-9be8-46d7-811d-1858e1f9faef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ba70cc8-604c-4d08-bc82-c21104288d53"
                    }
                  }
                ]
              },
              {
                "id": "481668c3-d471-4454-9ec9-254a1235b9ca",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7d5fec9-ee5b-422f-ab9c-c3681388c0f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "adfbffbe-000e-40f2-b48a-b5d90ce6e0ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74a4119c-4d97-4015-9ed0-38f5a7c8f816",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2eebfff-fe74-4d2c-8fb2-debce2437b5f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45a8bd2d-18c3-4932-b64b-ecf3682e2f87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "356d7062-0ff1-49c7-afd6-d5a26eedf581"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "388965e0-f655-40a4-a130-6c35306516e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "faf1a5da-ff42-4f81-b99f-37c7161925c1"
            }
          }
        ]
      },
      {
        "id": "9dcdf679-7fca-49c4-ba90-5eb826129f5c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ebfd3974-7004-4b25-a370-102d94e51131",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6bb45937-8f3b-48c2-acbd-bd89f3fd02b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c676110d-5738-42e3-a220-9608f7114be3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7eeab7d-e70d-4775-affe-65104ea7e12a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4b065c6b-103c-4afb-aeeb-e5d5c68c27d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212a3941-d0e4-42bf-aef6-3413c9b58c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45788e83-b51e-4822-8f13-304222b29778"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d79fbaa2-d7ea-429f-8649-bee9b235dabe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20334f85-fd44-4537-afdb-62353d4f421a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1387f2b-d980-4383-a164-2203882afcd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4ee6b46-2cb5-4994-98a0-a85a7f5b1e24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f16de4d6-ddac-4860-a11c-c022f8ce6385",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "279a5976-bcb1-446d-b076-c174e6eb15a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5181e72-5575-4ede-8d2e-3618a66b52af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd3f886d-c1c5-4e78-9f6f-c4bdb89d5724"
            }
          }
        ]
      },
      {
        "id": "15a77d03-03d7-4f93-96cc-b91e98957cb3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6654cd98-3c23-43ec-9255-9f1faeaad5e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b12a4c8-3342-4aef-8db9-6c325ca2841b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b6252f91-e88b-45b7-b4f4-7f43c0fc5d0b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f032e9-2837-4960-8a12-e53ed6e844ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e36b84c2-f324-43b1-9eab-e6456beafd53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "588276ae-8977-4a12-8cb2-701b1e845c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80660a2a-9d49-49a7-ba8e-1b0ace02f4d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4a3a71f-495e-4f1a-b4fd-adb985aa2c97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab82a97f-1183-4e42-8dfe-df604c59e6ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d52fc2a-768c-4541-9bdc-55d70169daf1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a8d0ff4-3e12-4037-a3e7-216661a49857"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a91a6c7b-cb5f-44d7-aab0-040c28b807b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1ccb554d-8cdc-4783-8c7d-d27910aa356b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4cb62ee7-345b-4878-b782-dee892825f1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "208a8611-c4f1-43e8-9bf7-07262318f192"
            }
          }
        ]
      },
      {
        "id": "16c890ca-350a-46e8-a34f-5253e45c20df",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ee792b0f-453b-4c93-83b3-da3a815c0bff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4dd534c-bbb8-49ac-94cc-132c3dc58f2e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c44b88dd-c029-4446-98eb-4081b84f032e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad30f23-4dfe-4f4d-8afa-0dccab473868",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d9490ed-980a-4d23-8788-d660653444df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "373d7968-ec85-4545-8a52-d55c61adfacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "444b7654-27a3-4307-908e-06d66492c54f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d8487a5-3922-4ead-b0f3-969e8cee61be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe06f00c-b981-4a8b-acc6-88d7d59786c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0dd3332d-4879-4d37-b50c-6c500055e329",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51b1d0ae-7559-46b0-a230-3653b1538862"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ef84da9-543e-4a8a-a150-3596e7d22f8a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "548585e1-8111-4934-a9b2-bbdcc94e43f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc705e06-3c4e-44e8-91d3-33b1899e9cdb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "282b2d11-9ed8-436e-92b5-f5a08fb1af3c"
            }
          }
        ]
      },
      {
        "id": "feefc4c0-a7ba-4e37-9d73-9f053bc43489",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d024299-6889-457e-aa56-4b3cec908c43",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94b9042a-7c46-47a9-8c89-9b606c592b09",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c0096784-593d-42f4-a209-68594d12df50",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f008f224-30bd-4e8c-914f-2ed59edc9442",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e639681-c0f6-4e46-913e-d351759038f9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 143.89473684210526,
      "responseMin": 11,
      "responseMax": 10430,
      "responseSd": 742.3762294905804,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704933397662,
      "completed": 1704933447736
    },
    "executions": [
      {
        "id": "bbce5660-2bfa-4ed5-92c5-1f8a3620ee78",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "304c524d-b2e2-47d8-b668-6843acac0df7",
          "httpRequestId": "b70c5518-47a5-49b6-a9a8-b8ae80751aa7"
        },
        "item": {
          "id": "bbce5660-2bfa-4ed5-92c5-1f8a3620ee78",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "10b92719-9e6c-49e0-8a20-d111ca97f3a4",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "9f3a29d5-4b34-4d30-a920-7e7ed415c731",
        "cursor": {
          "ref": "c3d5245e-9e85-4b1d-b704-63a7b5f8efea",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f1adad86-3352-447d-9d81-a4e0c342eb66"
        },
        "item": {
          "id": "9f3a29d5-4b34-4d30-a920-7e7ed415c731",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "20f8fa6f-9853-4527-b138-b160275ece62",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "7e7f32e3-4cc4-4d8c-a15b-87fec4bafcda",
        "cursor": {
          "ref": "33e447a9-44cd-4b36-94e7-82b7a731bd5d",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6302e100-118b-4c30-bb64-3b0b5b176455"
        },
        "item": {
          "id": "7e7f32e3-4cc4-4d8c-a15b-87fec4bafcda",
          "name": "did_json"
        },
        "response": {
          "id": "8117a075-c3b5-45ed-a5d6-c6a8c325c57b",
          "status": "OK",
          "code": 200,
          "responseTime": 340,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8375e6-2a39-4b25-98bd-7f0643844b7d",
        "cursor": {
          "ref": "ae916259-3cc7-4629-a00d-f0f0e26aa593",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0af65bcf-468a-4c47-8e0c-51c629d2fbf3"
        },
        "item": {
          "id": "0e8375e6-2a39-4b25-98bd-7f0643844b7d",
          "name": "did:invalid"
        },
        "response": {
          "id": "ee01e051-0633-4bf1-96d1-964d6d2c2d81",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2266,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8375e6-2a39-4b25-98bd-7f0643844b7d",
        "cursor": {
          "ref": "ae916259-3cc7-4629-a00d-f0f0e26aa593",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0af65bcf-468a-4c47-8e0c-51c629d2fbf3"
        },
        "item": {
          "id": "0e8375e6-2a39-4b25-98bd-7f0643844b7d",
          "name": "did:invalid"
        },
        "response": {
          "id": "ee01e051-0633-4bf1-96d1-964d6d2c2d81",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2266,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575fcc5c-7aaf-43de-b39a-e065d42530b2",
        "cursor": {
          "ref": "7f2bf844-1433-484d-ab5c-67c4dd61660c",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a2c95b4d-4449-40c4-b0b0-2fe3e06ceccb"
        },
        "item": {
          "id": "575fcc5c-7aaf-43de-b39a-e065d42530b2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0d53e5f5-393b-44f5-b691-dbd0eb631c74",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97fe6b2-0f60-49f9-8a6c-14649d00e866",
        "cursor": {
          "ref": "d221afaf-8ed3-4c2b-9895-e29367d8bfba",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "21e5a1a4-cb23-43a5-b497-e610888913ef"
        },
        "item": {
          "id": "f97fe6b2-0f60-49f9-8a6c-14649d00e866",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d25dc69a-f45a-460c-adaa-98eff2bcfd22",
          "status": "Not Found",
          "code": 404,
          "responseTime": 177,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c87dbeb-851e-42b0-901f-77638aa246d6",
        "cursor": {
          "ref": "da2ba4b8-b273-4390-acb1-aebc9d95b7de",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6818cc20-6c1e-4ebf-9111-d7b8aa6e93a0"
        },
        "item": {
          "id": "8c87dbeb-851e-42b0-901f-77638aa246d6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c338f611-b11c-4452-a13f-8eff578ce5ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119459ad-62c0-46d8-bc10-b78a438d9af1",
        "cursor": {
          "ref": "9c0f8c3a-80cb-4d2f-9eea-6c3e1572256b",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "dabf2ab2-2c1f-4973-b655-3f40a305ba8f"
        },
        "item": {
          "id": "119459ad-62c0-46d8-bc10-b78a438d9af1",
          "name": "identifiers"
        },
        "response": {
          "id": "07026c62-697b-4161-bc69-264d272455e9",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04623675-3a62-4805-a837-6d61cfb27f1a",
        "cursor": {
          "ref": "5011ac4c-364a-416a-9701-b39674d0bef3",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "99a35bc7-d8b3-47cb-8015-481787ed0e50"
        },
        "item": {
          "id": "04623675-3a62-4805-a837-6d61cfb27f1a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "27c55bc3-3a81-4c6c-bd16-3f14b2870a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ba78e5-d6c5-48ac-a37d-c0a7fb94c5bd",
        "cursor": {
          "ref": "5e69baf3-779f-4e13-8109-2942844be6c0",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b2439345-2267-4bd5-9ae2-6364a0159e10"
        },
        "item": {
          "id": "a6ba78e5-d6c5-48ac-a37d-c0a7fb94c5bd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a4322c54-171d-4f52-9ed5-37a2a6858774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e168f4cd-0a7a-4b28-8835-854072213eda",
        "cursor": {
          "ref": "252d1760-f4fd-4833-8bf6-bf844252bfcc",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7e974a26-9126-479e-9c56-23a86b2f1661"
        },
        "item": {
          "id": "e168f4cd-0a7a-4b28-8835-854072213eda",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a074c92c-6797-429e-820c-1eeb6db83ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69ee713-70b9-4f3a-b510-85c116e5b650",
        "cursor": {
          "ref": "28de8b03-0f30-4154-a618-d4921dd0d716",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8612fd2c-e7b2-401e-bd19-e99f12875a17"
        },
        "item": {
          "id": "f69ee713-70b9-4f3a-b510-85c116e5b650",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b1b6a4c4-db70-42ce-9ef6-150f3dc325d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb661487-7899-4642-ab45-c46b7fb8b40a",
        "cursor": {
          "ref": "c7983fd2-7253-418a-b1ea-6498d91390fa",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d33bbd48-a3b8-4d68-93b6-e073911508dc"
        },
        "item": {
          "id": "eb661487-7899-4642-ab45-c46b7fb8b40a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0f98ad75-62f8-441a-ad71-e58b4f5d3d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ee220b-02dc-43d7-9f23-2e2089d395ef",
        "cursor": {
          "ref": "cf63a6eb-9444-4f75-819d-4cf925332eb3",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e0a50cd5-53a3-4c27-b649-943d5a8016fa"
        },
        "item": {
          "id": "f5ee220b-02dc-43d7-9f23-2e2089d395ef",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "15d4eabb-d163-4b06-aa53-1138e04c8500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffdd5b8-edd4-40a9-a553-d4ef2f0ea6cd",
        "cursor": {
          "ref": "bfd7a8bf-da9a-49ed-bec4-c47f0cbd2ed9",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8531ea00-baf2-4254-bac1-b4e976c037c7"
        },
        "item": {
          "id": "7ffdd5b8-edd4-40a9-a553-d4ef2f0ea6cd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a9e62ea7-a19f-4b05-bb0a-6e59be5897a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da65477-b156-4580-ae7d-163067f60884",
        "cursor": {
          "ref": "79faa500-b1bc-4407-8f48-508bff0bf30a",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "886a3aa6-baed-46f1-8bee-9c6e07f80120"
        },
        "item": {
          "id": "7da65477-b156-4580-ae7d-163067f60884",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "23b0dad0-c630-4ccb-91b8-83948c229219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e552c2f9-907f-47b4-87ac-b22859c36361",
        "cursor": {
          "ref": "8661aea0-5570-4d37-b351-1b7fe4eaa032",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a6f82a59-35f5-471b-8fee-1a6b7966dc70"
        },
        "item": {
          "id": "e552c2f9-907f-47b4-87ac-b22859c36361",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3e186dc8-40d0-42fc-b5b5-a59c72fd6c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fce4ed-f0db-4c06-b80a-e765eca129fc",
        "cursor": {
          "ref": "b64d2d14-6bcb-4c48-b706-7af33f99e020",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1c3c880d-9246-4a02-8210-fc23b1c64297"
        },
        "item": {
          "id": "54fce4ed-f0db-4c06-b80a-e765eca129fc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "91cb5a79-b0db-4547-8726-104c840fd556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c013d24c-1c28-41c6-8c2e-b4de4ab0d1d6",
        "cursor": {
          "ref": "f81333a6-d6bd-4241-9aa7-adc6d8b5d7f6",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a4b56d89-d353-4367-b0fc-684963065db5"
        },
        "item": {
          "id": "c013d24c-1c28-41c6-8c2e-b4de4ab0d1d6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d54d51c0-e70d-403e-a0b6-b8945fa8d90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55b77f2-854b-4964-9d9e-0923816ec15c",
        "cursor": {
          "ref": "b3eac309-5d14-4cfc-81ad-ca40d418cd1e",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ef46988c-1444-4fd9-b648-ad2b661caf93"
        },
        "item": {
          "id": "f55b77f2-854b-4964-9d9e-0923816ec15c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bbcd67ff-b68b-4d4d-b434-9c9074b30262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d642f3a2-fd9e-49f3-9c65-5df5f04e0551",
        "cursor": {
          "ref": "995b86fe-8aac-4b76-a474-e99f23b6abeb",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6a697bc4-78b4-49ec-9a3e-db48677e2830"
        },
        "item": {
          "id": "d642f3a2-fd9e-49f3-9c65-5df5f04e0551",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b637cc70-ea6a-4f93-8a9e-6ad70d2af158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2a767c-d0e0-4f03-b86f-e4d99db4ef1e",
        "cursor": {
          "ref": "6cd382b1-2509-48a2-aa47-514268585e48",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "653f301d-4110-4a40-8221-c62bfe22f4ca"
        },
        "item": {
          "id": "0c2a767c-d0e0-4f03-b86f-e4d99db4ef1e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5175123b-7cde-4164-b22a-d5c5193caf76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66adf045-3b65-42f7-8b94-8a1f716fda3c",
        "cursor": {
          "ref": "33bfd956-9582-4612-b093-0432a6bc63e1",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "39d834ef-0dab-467e-88ff-c994034d279a"
        },
        "item": {
          "id": "66adf045-3b65-42f7-8b94-8a1f716fda3c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c2238b0d-f07c-4d46-a1dd-cd9b55abf9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abec9561-fbe0-46ea-8386-2722632a8332",
        "cursor": {
          "ref": "a8e9dc8c-c286-47d2-a1ca-ffdcb6437cad",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8f9b5b8c-f99e-47c5-9c6a-d19c50bb7c78"
        },
        "item": {
          "id": "abec9561-fbe0-46ea-8386-2722632a8332",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "35175bd1-2c0f-4ba8-a172-2282da8366e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb782df7-e783-41bf-8616-81dd64dfbb88",
        "cursor": {
          "ref": "6a5d1c5c-047e-4c71-b923-c14e945010cd",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e2c2c1e1-fa4b-41f1-928a-60e0222c7dc7"
        },
        "item": {
          "id": "fb782df7-e783-41bf-8616-81dd64dfbb88",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "04dfa0c7-d633-4c37-aa13-476c67295899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc10788-02dd-43f8-b74b-5a765f6a1451",
        "cursor": {
          "ref": "38b1fb2b-3531-46ce-b045-fe6aaffb7201",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d49a8592-32cc-42df-9216-7a6735fd9d64"
        },
        "item": {
          "id": "ffc10788-02dd-43f8-b74b-5a765f6a1451",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c8f3114d-5c80-4131-9a16-11a0aa2d0d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9f235e-63e1-4eda-af72-94b69a17b630",
        "cursor": {
          "ref": "07f95f18-b50d-4f2e-9a0c-3b2e07d490a5",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7b125189-89d8-48ed-8bd6-3254d96ff4dd"
        },
        "item": {
          "id": "7a9f235e-63e1-4eda-af72-94b69a17b630",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "35ec66c6-af71-40d9-9d24-3057a918e7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d845da9-7de4-425b-a4f4-c90b2b596a2d",
        "cursor": {
          "ref": "99b17c52-bd4a-432f-95b1-196ee7e9f4e8",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "db627072-dac8-415b-b264-b419a963130d"
        },
        "item": {
          "id": "1d845da9-7de4-425b-a4f4-c90b2b596a2d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "09f47c09-6f4a-4371-ac63-9bca1abe82ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba1b8a9-f5c2-49be-a17a-5cb2e9ac0a63",
        "cursor": {
          "ref": "e90e0a73-d755-4a0f-9879-f78c827c9a1c",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "65b98021-1b62-44ee-85ee-720e9787faad"
        },
        "item": {
          "id": "8ba1b8a9-f5c2-49be-a17a-5cb2e9ac0a63",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6abe2953-a614-44b2-8928-952fb3dcfb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb2d913-68f3-41a9-abe4-e71963a66dc8",
        "cursor": {
          "ref": "b5dfcb6d-5101-4f7a-b953-edad27b00d94",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b132eeda-9557-4c94-989a-b5a988f40817"
        },
        "item": {
          "id": "beb2d913-68f3-41a9-abe4-e71963a66dc8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "85890c4d-abe5-4455-978a-55291222f87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff95980b-6cdf-4cf7-97c2-acd69070d814",
        "cursor": {
          "ref": "bdb42d67-7361-4bfa-b3f4-4adf71278d25",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8f0e1973-e58f-43df-8916-66d808d0f813"
        },
        "item": {
          "id": "ff95980b-6cdf-4cf7-97c2-acd69070d814",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "36ea8b9e-3f85-4eac-b184-814ad6ab94ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b02a87-8ea4-4762-97b7-1c07ce3e23d4",
        "cursor": {
          "ref": "09f7912c-9c33-4c7f-a41c-617a2344456f",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "82a2f9ca-7172-4071-905d-54a57cd887dc"
        },
        "item": {
          "id": "74b02a87-8ea4-4762-97b7-1c07ce3e23d4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "28a5928a-cf61-4d28-a72a-73240fc9ea2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ad6deb-e004-4091-838e-65161aa344a7",
        "cursor": {
          "ref": "c5f5f28c-b89b-4de4-ab33-dcb7807d5f91",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "870060c7-2b0d-4a39-9aef-05d168bd9cc8"
        },
        "item": {
          "id": "12ad6deb-e004-4091-838e-65161aa344a7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "383a6e65-4bdc-4a45-8be3-a3d5f153c0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd40da0a-41c1-4956-bcc5-7d32b73cbbee",
        "cursor": {
          "ref": "ba5aeba9-b737-4cac-9329-255df2f261e4",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f89ab34d-c269-4624-958c-acbbc49e5c8f"
        },
        "item": {
          "id": "bd40da0a-41c1-4956-bcc5-7d32b73cbbee",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8fed7f57-84c3-4f01-8ecf-1b75fd563ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85196fe-5551-4c97-8aff-36dd43c68145",
        "cursor": {
          "ref": "89c1f055-29ef-47eb-9fc9-48d759ba8074",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e1520d8f-1340-455d-b8d8-a6671f221b75"
        },
        "item": {
          "id": "c85196fe-5551-4c97-8aff-36dd43c68145",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "90b2d7f5-388a-4153-9ef1-90b4792e3aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748aeeb8-705e-4f9b-8dae-6159662d3eec",
        "cursor": {
          "ref": "d54a9e6b-4737-42d2-a861-abf65356adec",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e8bdedbc-5f76-4620-b868-43f230d275da"
        },
        "item": {
          "id": "748aeeb8-705e-4f9b-8dae-6159662d3eec",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8554c329-f08e-4e53-a0ad-a8dbe6266a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a3f221-ad4a-43c9-82e6-420c6f8dde35",
        "cursor": {
          "ref": "c2e5752e-d4bb-468e-97d4-d39d995266a6",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "852fbbdc-f07e-4d23-8052-0de07cb587eb"
        },
        "item": {
          "id": "94a3f221-ad4a-43c9-82e6-420c6f8dde35",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "265e5726-f33e-477e-a460-fcb812855b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065ba35d-75bf-4958-87cc-9d345c030e28",
        "cursor": {
          "ref": "c6977cd3-0e36-40b5-baaf-bd2dd4634906",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c7edac1f-65f3-47ac-b2f2-d494e35010b3"
        },
        "item": {
          "id": "065ba35d-75bf-4958-87cc-9d345c030e28",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "71f82c00-fec9-4b76-b2bb-3d7432458a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad2012b-195b-473e-8b41-fb9508ac7bb2",
        "cursor": {
          "ref": "65e5eae4-d983-4031-a301-581fe92c60c3",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "604e8398-a74d-44c5-ba5c-0dee5862a160"
        },
        "item": {
          "id": "fad2012b-195b-473e-8b41-fb9508ac7bb2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "01175728-2479-424c-b517-8bc9e76e3e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84b99dd-e0df-4e12-986d-f56e45b789d0",
        "cursor": {
          "ref": "cfdcb6b6-21f7-48e8-b296-c9aa92f59dac",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7f88a1e4-a845-43ae-b806-f261e72b1d7a"
        },
        "item": {
          "id": "d84b99dd-e0df-4e12-986d-f56e45b789d0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "221ac7e6-7f26-4c9b-8ccf-60d35181647c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef63ecd-6862-4a8a-b81d-9dcd3f89abc8",
        "cursor": {
          "ref": "1e9e2691-6b70-4dc2-a934-d3094b0fe9d9",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5431fae7-d07d-45e1-af55-1df90710f136"
        },
        "item": {
          "id": "aef63ecd-6862-4a8a-b81d-9dcd3f89abc8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f8cd7acd-a0c4-4956-aef5-f34a52cfe4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d5dc1a-5572-4fea-bcb1-5ded41b3cfeb",
        "cursor": {
          "ref": "052aac35-8d0b-4639-8666-04c7f4a423f3",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "32477366-cfed-43c5-a7b9-baf3c44a4a49"
        },
        "item": {
          "id": "66d5dc1a-5572-4fea-bcb1-5ded41b3cfeb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f0d0ed9d-f799-402a-9f98-36c6a7d83f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8131bfef-62b7-453b-b6c3-85f1b55cc5cb",
        "cursor": {
          "ref": "184bacf5-1b23-48ce-8cbf-f74487cf44c1",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b300df3c-2286-4beb-8ca8-5cc4a45ee788"
        },
        "item": {
          "id": "8131bfef-62b7-453b-b6c3-85f1b55cc5cb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c280033e-94eb-446c-97f1-b641dced04c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45743915-a76a-412f-b6a1-8222cdc74e7e",
        "cursor": {
          "ref": "58d46c7d-3647-45c6-b3ac-b102317ef95e",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7b62109d-a045-4d39-898b-99f7ad74ac4f"
        },
        "item": {
          "id": "45743915-a76a-412f-b6a1-8222cdc74e7e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0662b7f7-4935-4018-bdc4-c2d22d386c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae9ab69-06b7-4e77-bdc8-f6adf8165431",
        "cursor": {
          "ref": "835aa5a7-f8db-4b29-b2b6-4f1c46675ca8",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "74bcf45a-8620-4d82-adc1-cefba0092f5e"
        },
        "item": {
          "id": "eae9ab69-06b7-4e77-bdc8-f6adf8165431",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9b85268f-9771-48b2-bdd4-0d4dd4685a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a6e2fa-9555-4704-87ee-b0b0dc414671",
        "cursor": {
          "ref": "2bd67073-7783-40b9-8f9e-637a9353c822",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3c556689-ee23-4750-98ce-a6a4c2bf1898"
        },
        "item": {
          "id": "28a6e2fa-9555-4704-87ee-b0b0dc414671",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0a067ed2-a1fb-4eb1-af3f-dfc1f16b2e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7d58f8-a8a5-46d0-8ea1-f4f5f6e0c8f3",
        "cursor": {
          "ref": "d7a70a3f-08ea-4126-b22b-d37339f42a81",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "24121578-bf6d-4648-8c41-38553a01bb14"
        },
        "item": {
          "id": "5a7d58f8-a8a5-46d0-8ea1-f4f5f6e0c8f3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "65ae5863-c652-493a-b9d8-4308b528c3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e37e5f9-7d3a-45f1-8d3b-7a1cc17e6101",
        "cursor": {
          "ref": "0c97115b-ddd2-4778-b880-e555876e982c",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "65c09d91-c791-4c68-b9d3-ddbadf895c72"
        },
        "item": {
          "id": "5e37e5f9-7d3a-45f1-8d3b-7a1cc17e6101",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "abab5bb1-a016-45e7-a4c7-8988fe168cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2e007f-8811-41c7-b1b0-db6665f4afe4",
        "cursor": {
          "ref": "e1e72384-85f0-4a48-9936-e7f3f22e2259",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5d217266-e5e3-4dfd-98c2-b42c004d105e"
        },
        "item": {
          "id": "fe2e007f-8811-41c7-b1b0-db6665f4afe4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "aa979c7a-ff40-4dd9-9552-3490f093651b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d252894d-9de7-4b1e-a8e8-95ab141aeaa0",
        "cursor": {
          "ref": "2f3686bd-0db5-4a2a-80ea-b1fed812ad3e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8961dc0a-ac57-44b6-9665-fbc9bce6668a"
        },
        "item": {
          "id": "d252894d-9de7-4b1e-a8e8-95ab141aeaa0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "91428796-bb47-428f-8925-64645a182174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2c73c5-e8fd-41d4-90eb-9d4a976c292e",
        "cursor": {
          "ref": "e258895c-512b-4b0c-a822-89012d0478a0",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2fd69c3d-538f-428f-947c-7202b846c229"
        },
        "item": {
          "id": "1f2c73c5-e8fd-41d4-90eb-9d4a976c292e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7c497821-2769-4c4c-98db-d5fa8e1fa99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a412352c-a19b-4d44-b993-8d79a94e3541",
        "cursor": {
          "ref": "141cac1a-44b7-4cd6-afae-28f14461a703",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c62e38f1-e362-4bf2-b345-996bf83727cf"
        },
        "item": {
          "id": "a412352c-a19b-4d44-b993-8d79a94e3541",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ab7909b0-7313-4e2a-bf16-586b4c19dba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a71e11-0b8f-424b-a98f-6f14467a5e3b",
        "cursor": {
          "ref": "3c5686bd-a878-48e4-90d5-a0c574ffd85b",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "32b82d10-f3c1-4e74-af62-3758a9dbedb3"
        },
        "item": {
          "id": "c2a71e11-0b8f-424b-a98f-6f14467a5e3b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "469b276f-f098-49ad-a1ed-b271bc14c7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8580c9d9-b3c7-4374-b5f9-40e368dc64ca",
        "cursor": {
          "ref": "67c3b934-ae15-44dc-aabf-d6e12a5690f4",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a1ed7a88-03e8-4e62-8079-3d153757b3a1"
        },
        "item": {
          "id": "8580c9d9-b3c7-4374-b5f9-40e368dc64ca",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8b30caa3-8b19-438a-a9a3-8a31ec468c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33ac131-9d1e-4e39-853f-96a4fde0d369",
        "cursor": {
          "ref": "676eba0d-bfbe-4c66-bbe1-7de1adae269a",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "79eb692b-6224-4e3e-9f37-d4f7133afd8b"
        },
        "item": {
          "id": "f33ac131-9d1e-4e39-853f-96a4fde0d369",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d7630229-5310-4a50-ae4e-2fe9aa29be7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f8a755-6cff-4467-8dab-f14b55af9eca",
        "cursor": {
          "ref": "c9f5efce-e801-4ad3-be69-e52e12784c28",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b6164aba-4547-4e00-8b29-8f45a73f28b2"
        },
        "item": {
          "id": "90f8a755-6cff-4467-8dab-f14b55af9eca",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1f936e12-ed08-4321-acbd-3dd5af195802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ae5465-2a47-4ae0-9c52-15dd8b021493",
        "cursor": {
          "ref": "ebef113f-0e50-4768-b91d-52095ca586f0",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9759b136-8f96-422e-b7c7-c06a9388793f"
        },
        "item": {
          "id": "72ae5465-2a47-4ae0-9c52-15dd8b021493",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "35fa0d60-526a-4e0e-bdbe-d94b5e85bd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f158257e-752c-43e2-8637-70264647e2e3",
        "cursor": {
          "ref": "0779c369-a4cd-4562-8d56-affba40164b6",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "58a197e4-691e-45a4-8ef8-d38338c2b76f"
        },
        "item": {
          "id": "f158257e-752c-43e2-8637-70264647e2e3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2c52da15-b497-44e0-9fa3-9484acf9ad14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd748368-fa8b-4253-af79-6f4a61ffd0c8",
        "cursor": {
          "ref": "04e83129-1497-43bd-9845-03cdd471ef27",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6e6cb6e8-f547-4c3e-bad1-b1ecb4e83067"
        },
        "item": {
          "id": "cd748368-fa8b-4253-af79-6f4a61ffd0c8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b6ddac40-228f-48fa-929e-0c5b7a2cfc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f25d9b-66b2-4d8d-be96-5faa172aa599",
        "cursor": {
          "ref": "e555c49f-436c-4272-86d1-ca761c590a3f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d4c788bc-2a55-48ea-9102-5841002b4a5f"
        },
        "item": {
          "id": "31f25d9b-66b2-4d8d-be96-5faa172aa599",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "73d3489f-83f4-4aa1-a322-e8eb452955c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40e6559-b601-46d7-92a9-bd511074c649",
        "cursor": {
          "ref": "38903d95-3a4a-487b-b21c-9c1a3796ea21",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d548aca1-8bd8-435e-8fde-160f511212fd"
        },
        "item": {
          "id": "e40e6559-b601-46d7-92a9-bd511074c649",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6d129a35-050b-4bd0-99e7-7c526d759cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cb91eb-89f6-4f7a-888c-4f76c64dd3b4",
        "cursor": {
          "ref": "7d876a23-3c7c-495f-8332-a88a18f57d42",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0cc8c6fc-7791-4e5e-afd1-cd91209a9775"
        },
        "item": {
          "id": "88cb91eb-89f6-4f7a-888c-4f76c64dd3b4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8387b595-16ac-4307-9960-c89fe82e12c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f490c058-c4c1-4c54-8af3-39f678b270f0",
        "cursor": {
          "ref": "c1f65453-ed98-4322-b278-c4c8f79cce2f",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b4f863bc-19e7-4805-8074-2f56ad263f37"
        },
        "item": {
          "id": "f490c058-c4c1-4c54-8af3-39f678b270f0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "397c9cc3-5e60-44b3-8131-897871b1b1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5635e65-6f47-40c3-87a2-996a797586c9",
        "cursor": {
          "ref": "6dec1798-1d9a-4073-a055-b46da5af9f55",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "36eb5b2e-f9e1-4d22-b04d-41c837740604"
        },
        "item": {
          "id": "a5635e65-6f47-40c3-87a2-996a797586c9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e9071c8b-f694-4c48-a902-30fd59985b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e84de1-4f9d-49a8-895d-082324229d96",
        "cursor": {
          "ref": "20560175-172a-4386-b404-4039a6923b00",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "85f28c25-9611-48d9-865d-1706a220c976"
        },
        "item": {
          "id": "a1e84de1-4f9d-49a8-895d-082324229d96",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7dd06373-a584-4a7e-84f7-52e71726d7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34c397f-f25f-441a-92b1-d71f8e0915d7",
        "cursor": {
          "ref": "ab8b98db-f114-4aea-b9fe-c429c7d2afdb",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "64f33929-d758-4d79-b77a-e751a335010b"
        },
        "item": {
          "id": "e34c397f-f25f-441a-92b1-d71f8e0915d7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6e6e7a6d-cc68-4137-84d5-6859393d96de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ac1238-852f-4f11-b599-edf570d00560",
        "cursor": {
          "ref": "b77c5ee5-ee48-4761-964b-62474a0e5c18",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2c7508e8-d649-481b-8f41-95eaaa9df988"
        },
        "item": {
          "id": "86ac1238-852f-4f11-b599-edf570d00560",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e4b3382f-28f6-48b5-981c-52bdf606ee34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028bd527-df24-47fc-a024-ae4d5db0ef57",
        "cursor": {
          "ref": "0d5f42bf-e32e-4a77-b9be-cc999010008d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "65b05972-08c9-4e3c-8c50-9b0939fdbc56"
        },
        "item": {
          "id": "028bd527-df24-47fc-a024-ae4d5db0ef57",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "66998ad6-1898-4d19-945f-6501aea99965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d31082-5498-436e-85d3-91afc3d73f6f",
        "cursor": {
          "ref": "28bd2db2-8e0d-4244-aed3-b94b9580bee5",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0330a669-973b-4ce1-a81b-8b6e1746a2bb"
        },
        "item": {
          "id": "b7d31082-5498-436e-85d3-91afc3d73f6f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "45d116b1-99a0-4222-a7ed-589d70bb8267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e2e764-43a1-4ca0-81c6-87f7ce3c4eb8",
        "cursor": {
          "ref": "9e6f8969-bfe1-4bcc-bd1a-033ae6af4a19",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bcb44872-0747-447b-ad82-4e877a7fa0b6"
        },
        "item": {
          "id": "04e2e764-43a1-4ca0-81c6-87f7ce3c4eb8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9ed47bd8-a273-41c6-823d-6bd562e1a8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9755ee39-d9bf-4d11-acbd-30419f697f68",
        "cursor": {
          "ref": "4ef3634f-a10b-443f-87da-493ea9d60d2f",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "81fd2bdb-e2a8-49e4-abdb-3f81f1a7a20e"
        },
        "item": {
          "id": "9755ee39-d9bf-4d11-acbd-30419f697f68",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6e04fee2-693f-49f4-8598-b2d0544a7425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06a68e8-2251-4e60-8c47-43aa3f3c394e",
        "cursor": {
          "ref": "bf832c6d-6b0a-476d-9c59-7fa2da520e50",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "eb335299-9e29-4cbe-a5a9-b929709806b6"
        },
        "item": {
          "id": "a06a68e8-2251-4e60-8c47-43aa3f3c394e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8403433d-cf9d-46d9-bfe0-ba4a14e98af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d90ff9-4854-4949-9908-cb6bbbf604cc",
        "cursor": {
          "ref": "87325998-0474-4815-a9b2-8a4d604ce5cd",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2db5ae77-2e20-4e7d-af41-645f7fd4ec59"
        },
        "item": {
          "id": "69d90ff9-4854-4949-9908-cb6bbbf604cc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7a06b098-aa26-4216-b566-fbb099cd3693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44897449-ecc5-48bd-bca3-587c697464fd",
        "cursor": {
          "ref": "1e891241-00ee-407b-9a0f-0f6e1124baf9",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4089b1b8-f706-4372-b3df-8506dc470ac8"
        },
        "item": {
          "id": "44897449-ecc5-48bd-bca3-587c697464fd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "256f64ec-686c-48ce-83eb-58f16a4a6ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058302e3-4f76-4fc9-8aaf-5f087fe9f94a",
        "cursor": {
          "ref": "dd4029ce-30b2-44a0-8128-04a4f6a992ea",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1555f441-a1f3-4521-97a7-5fa554391069"
        },
        "item": {
          "id": "058302e3-4f76-4fc9-8aaf-5f087fe9f94a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "78bdeba8-310b-4577-9806-67af59d57ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2071a6e-7423-4553-924c-a46e0c52af59",
        "cursor": {
          "ref": "3619307c-99d7-4f93-81c4-dba078cbea8b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "698a7f0b-5a8d-4712-a04a-a2fc67b117a7"
        },
        "item": {
          "id": "d2071a6e-7423-4553-924c-a46e0c52af59",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5b5da63d-5ca3-4bab-98a4-293e8211dba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcacb46-378a-4dfd-9662-a8fa5bce6726",
        "cursor": {
          "ref": "2f48f773-b85c-434f-a02a-96fade31f957",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1acc7914-cc07-4869-a18e-a2b2655f47e7"
        },
        "item": {
          "id": "6bcacb46-378a-4dfd-9662-a8fa5bce6726",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c1fa7d74-beca-4400-85e1-82c87f2b29d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c079c6f8-1acb-4dc3-90f3-719944cbe404",
        "cursor": {
          "ref": "ed6cace6-b2ac-419c-a79b-19bdfb826226",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f45d8281-1f4b-4f20-b3ad-c88f98e2040b"
        },
        "item": {
          "id": "c079c6f8-1acb-4dc3-90f3-719944cbe404",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "58d01e06-c53d-4aac-86d4-78ada425ff3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bd59f1-cc03-487f-9d1a-663b8271ad4b",
        "cursor": {
          "ref": "d34e13d6-5ffb-4081-bed7-678040b56b0b",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "be9a94bd-1523-4530-a0b4-0704ea1ea213"
        },
        "item": {
          "id": "f0bd59f1-cc03-487f-9d1a-663b8271ad4b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "56a55ff2-5593-46ad-a977-4b0fd8573c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6da23f-5734-4fb2-b105-c9e4f2b01297",
        "cursor": {
          "ref": "a21dad3f-a846-4f74-ab02-5f39049ab7c2",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "94cb2ce1-3df3-4c2f-9224-a13d1c4a89a9"
        },
        "item": {
          "id": "3f6da23f-5734-4fb2-b105-c9e4f2b01297",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f7732b68-6c59-4609-a384-5d2d135813bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21bd493-8052-40e6-8dad-3dc69ca8e6d9",
        "cursor": {
          "ref": "1b6d4f57-4922-43d0-92f0-740f672adbfc",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6b2b200d-08c9-4d03-a549-194e1f34d66c"
        },
        "item": {
          "id": "c21bd493-8052-40e6-8dad-3dc69ca8e6d9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "630434c2-60dc-44d0-9188-a2e7fc5a2550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2a3506-c4d9-4db6-a0f2-432674807972",
        "cursor": {
          "ref": "80643b34-3df9-4471-bd28-77cb16931727",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f667004a-ecff-4b3a-8047-e3650f01bdee"
        },
        "item": {
          "id": "fe2a3506-c4d9-4db6-a0f2-432674807972",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2e57ba42-1981-482d-aa28-d3ddcddc560d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c138aa9b-c0e8-440c-b952-da2e0db15a97",
        "cursor": {
          "ref": "823eea4f-ec58-4db4-840e-0599310fdf2e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "eeec3799-1068-436d-ad31-6c3b457cd91c"
        },
        "item": {
          "id": "c138aa9b-c0e8-440c-b952-da2e0db15a97",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9bb79fd9-33c4-4a2e-9957-097a731084b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d7a702-4875-4b5e-a486-2cd32789f9b3",
        "cursor": {
          "ref": "4ae650e1-8d92-47e4-acf0-59524101892a",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0d224db8-cee9-42c8-b92f-cb7ac7f671a7"
        },
        "item": {
          "id": "21d7a702-4875-4b5e-a486-2cd32789f9b3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "58f108c1-c404-40fd-8a28-8f3ce986fc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa8071b-b7ca-4f57-a327-86bc1e896814",
        "cursor": {
          "ref": "49cfe800-3202-4175-a829-ad8de335f2cd",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "acbe612c-5d73-424c-b726-4fecde48d147"
        },
        "item": {
          "id": "afa8071b-b7ca-4f57-a327-86bc1e896814",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8022c725-04ae-40c9-8aaa-eee3ed413a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98830e9b-39ca-45ee-99a5-1d6de1d3534d",
        "cursor": {
          "ref": "b64530bf-f7b3-4b8a-b5bf-72c42ced8f91",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ae71d72c-20a8-488e-ab91-a8180b9ca6f2"
        },
        "item": {
          "id": "98830e9b-39ca-45ee-99a5-1d6de1d3534d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "821b1051-91c3-4cf7-b2de-d1fdca820c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e117857-5c2d-49c2-9e93-00957702fa34",
        "cursor": {
          "ref": "477a1a25-0301-49fb-a3c7-1199ffefea90",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f7c64452-deae-4b7b-b562-ea0944ce8ff5"
        },
        "item": {
          "id": "2e117857-5c2d-49c2-9e93-00957702fa34",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "88fa9b6d-cbef-43e1-80b4-1d998d7b1149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567347ff-8ff3-4e88-86fc-d47d0cca5d7f",
        "cursor": {
          "ref": "0a09c2c8-ca64-47f3-af7f-4e39c8217b51",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c4e9a8ee-dc52-41a5-9e01-5b1d258dbea7"
        },
        "item": {
          "id": "567347ff-8ff3-4e88-86fc-d47d0cca5d7f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "559e134a-ae1f-462a-8f29-e89a2ab778aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64e77b8-92f6-4223-8e3d-a2e1ec86c967",
        "cursor": {
          "ref": "5b69a32f-8905-4aee-a316-6a5735cdd9a8",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "16c4aa29-60a6-470a-ad4c-9893ff852a32"
        },
        "item": {
          "id": "e64e77b8-92f6-4223-8e3d-a2e1ec86c967",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "40013d30-82a6-4cbf-8fbb-e7e99ff1d045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c06845-0d91-44d3-8438-dab6cdbf6507",
        "cursor": {
          "ref": "d3c28787-fe31-4550-9987-c8a1e08620e1",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5c67b682-edd6-41a2-807b-a0247a604ad8"
        },
        "item": {
          "id": "c0c06845-0d91-44d3-8438-dab6cdbf6507",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f3ecfe17-36e0-4f77-805b-923e743538b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378182a1-0ce7-40cf-a710-ed465761abbd",
        "cursor": {
          "ref": "566000b0-7148-4c7e-b8e2-c5778abac433",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "eb8549c5-0c7e-49d8-a7c4-c6ddf27563dc"
        },
        "item": {
          "id": "378182a1-0ce7-40cf-a710-ed465761abbd",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "38470d9e-14f0-41cd-b0d9-1faa871a8ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720add44-c5ac-4558-8848-98dca06a02c6",
        "cursor": {
          "ref": "7aa5e046-9ef1-4f6a-b175-e6a20fb338ef",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9aae9ea0-4c70-4d65-a45e-5e161b5e795c"
        },
        "item": {
          "id": "720add44-c5ac-4558-8848-98dca06a02c6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "965d84e4-67b9-4155-bd89-173cef1594c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a39bde1-18cb-4c95-b1b3-90910b6822e2",
        "cursor": {
          "ref": "91842203-a54f-43dd-b12a-00fde6d26ac0",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1b85e3fc-46d9-4e21-8f8e-ae9602e32a7a"
        },
        "item": {
          "id": "0a39bde1-18cb-4c95-b1b3-90910b6822e2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c6d3c20a-f77f-4579-b6ff-72bc965d1697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac10791d-755f-427c-91cc-a4103c4b4b4e",
        "cursor": {
          "ref": "b2e98c48-0cd3-4e70-8e08-17138cb42007",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e698d629-ae46-4701-9b0a-c06b3f5d6e83"
        },
        "item": {
          "id": "ac10791d-755f-427c-91cc-a4103c4b4b4e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5b2245d8-3d0d-4f50-baed-6f926b95c6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6cd03e-094b-4e82-a007-b46bff248aae",
        "cursor": {
          "ref": "a358fdd0-d641-455e-bed5-8d8f39668b79",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "793e5000-0359-4e17-bdae-d7b92af9a8bc"
        },
        "item": {
          "id": "cf6cd03e-094b-4e82-a007-b46bff248aae",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "46c414ae-6463-4d13-8218-a0593eba4d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802d1d87-007e-4346-be38-e42f7dae9712",
        "cursor": {
          "ref": "e9b3f126-6cba-4263-be35-e9445f81b65c",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "438c2813-f8bf-4dbd-be16-6197e7c67230"
        },
        "item": {
          "id": "802d1d87-007e-4346-be38-e42f7dae9712",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4e7495b9-f900-4a42-8e20-3d8067a29c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b953f91-356c-4d3e-bc2b-8caa107db3b8",
        "cursor": {
          "ref": "da267df0-7f2f-4c13-b854-d55651e9205b",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c86d7a75-d540-4fb9-8f53-9f38ada02a51"
        },
        "item": {
          "id": "9b953f91-356c-4d3e-bc2b-8caa107db3b8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "86e3d920-7aed-40e3-9190-e65ccff515bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412f5247-7cc4-47b4-9c53-bfea1a9df179",
        "cursor": {
          "ref": "896f9723-6c81-48aa-95bb-9050f4a48564",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "cb0ea8b3-ba16-44d5-ab51-f40c72d80382"
        },
        "item": {
          "id": "412f5247-7cc4-47b4-9c53-bfea1a9df179",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1662cd12-baac-4e34-9bff-be1a74f5c4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e935c1-d527-455a-8011-1cc7dd49e050",
        "cursor": {
          "ref": "af5d0ab2-4ddf-4d6d-972a-17b4243a61f4",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "41ac2a2f-b76c-4577-a0d0-658e6908b05e"
        },
        "item": {
          "id": "d7e935c1-d527-455a-8011-1cc7dd49e050",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "105572e2-131d-424f-88f1-33f6b8b6bfb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d86dd4e-17fb-4120-bcdb-2ed8fae42c96",
        "cursor": {
          "ref": "51017b53-fb22-491e-abee-03f25d886774",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a7039a95-e770-402d-9ee3-51798a01ac39"
        },
        "item": {
          "id": "5d86dd4e-17fb-4120-bcdb-2ed8fae42c96",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6e75af2f-5b23-4c1a-bc46-769477dd67f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b765be-7851-45e6-888e-cff29e62c4cd",
        "cursor": {
          "ref": "520aea7e-c4ab-44a2-af00-dd4e7252a7f3",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4b7ef79c-54db-4799-9d01-0061c340e498"
        },
        "item": {
          "id": "22b765be-7851-45e6-888e-cff29e62c4cd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "29fe282e-ecda-4633-9ae2-3d1cf3da90c2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd5cbdd-465e-4c9f-9ae9-c08d01a8fc02",
        "cursor": {
          "ref": "52e0b967-a3ad-43e2-9df4-a5dc5967dad6",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8a790f4d-f5a6-4e71-b923-8fcde0feef13"
        },
        "item": {
          "id": "4bd5cbdd-465e-4c9f-9ae9-c08d01a8fc02",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c4d0de3b-caee-4b04-85ff-dac5819bed76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b185a3b8-72b7-4af9-89e9-c12ad56e19f1",
        "cursor": {
          "ref": "0cc11b90-8de4-4abb-adb8-d2667d7ea7df",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5ec9155a-7b9c-43b4-a087-894a566028f7"
        },
        "item": {
          "id": "b185a3b8-72b7-4af9-89e9-c12ad56e19f1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4357dcac-dfa4-4931-a1fe-4145958706d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "cc73975a-c0ed-46f6-a6df-a9ca0cfe0073",
        "cursor": {
          "ref": "944405e3-c6e5-4bed-a91d-df55656e7238",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "74429d2d-f0a3-4847-b3a6-445bc02f07ed"
        },
        "item": {
          "id": "cc73975a-c0ed-46f6-a6df-a9ca0cfe0073",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "81f21179-7eaa-47fc-9430-fdab45b766e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "586b4fdf-5603-4bae-9221-217659c53a08",
        "cursor": {
          "ref": "42f99ee7-97a7-4d87-abd1-826733f8c2ee",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fae1df52-ab4e-4581-b0e6-dca2bbf5669a"
        },
        "item": {
          "id": "586b4fdf-5603-4bae-9221-217659c53a08",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0558fbac-3bf5-4fcf-8077-0e6c778cde8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f7af9cca-0beb-4d30-a241-7e1cf168cd69",
        "cursor": {
          "ref": "8b558ef9-68e8-4ed2-902a-2ab5b18b8823",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d3e4bc07-6c58-491c-87ed-8350a6695e55"
        },
        "item": {
          "id": "f7af9cca-0beb-4d30-a241-7e1cf168cd69",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2462f5d2-6282-4714-a69d-0b6a6f2db7cc",
          "status": "Created",
          "code": 201,
          "responseTime": 10430,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "480fdf4d-efa7-4075-9b41-6307195e735a",
        "cursor": {
          "ref": "14c38d96-7182-4dce-abca-0285254f9348",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d910d661-4505-438f-a374-6225130ed8ec"
        },
        "item": {
          "id": "480fdf4d-efa7-4075-9b41-6307195e735a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e41ec586-e669-4603-8848-77de98e5b3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "9bdc2f41-9a22-44d3-948e-d891177420f2",
        "cursor": {
          "ref": "aee283a2-ba98-4029-b685-3c1394076a3c",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "006f18fc-0746-47d5-bdae-a170744e98df"
        },
        "item": {
          "id": "9bdc2f41-9a22-44d3-948e-d891177420f2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f0cc7156-0cc2-4b4f-87ee-53dcea4d8b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "2001517d-edca-49d9-9f2a-22373d33230c",
        "cursor": {
          "ref": "b2c04f75-72ee-4a94-a555-ec5da7ca78ce",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "50d0c903-9351-4520-a3c2-e9dd48cf4dc1"
        },
        "item": {
          "id": "2001517d-edca-49d9-9f2a-22373d33230c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6b7b8daa-9129-48ad-82b8-5a2c66a6746e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0011aa1d-56b6-4f51-98d2-a356618e0e36",
        "cursor": {
          "ref": "995a3ef7-aca8-467a-a225-872f84c185b8",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "261a570d-78eb-410b-8f91-f7bbb3cdbfaa"
        },
        "item": {
          "id": "0011aa1d-56b6-4f51-98d2-a356618e0e36",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d95bb0fa-8c88-4910-973f-76f0e63b9927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bef2ce3-bb5f-4ec0-bc55-46a8fb9a63ed",
        "cursor": {
          "ref": "683b42d3-a033-4f3e-8f71-a6304051d05e",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "adfbaa61-c3a1-4b9d-8dee-3663af8eaaba"
        },
        "item": {
          "id": "3bef2ce3-bb5f-4ec0-bc55-46a8fb9a63ed",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3c5200fc-a319-494a-918a-4c8b6c91ede3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc94ac1e-18d8-4ea1-93e7-793349b9d4cd",
        "cursor": {
          "ref": "d267c03d-0374-4c0e-b2d2-0a4cf7f5b075",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "02f2cf66-719b-4705-8d2c-db4decedd958"
        },
        "item": {
          "id": "fc94ac1e-18d8-4ea1-93e7-793349b9d4cd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fc56cf51-1d36-473a-911b-0b39ba025cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1831e6-1efa-46e5-985e-cd5c7977b4da",
        "cursor": {
          "ref": "00610cdd-2697-4027-87f2-8afb41abd6b9",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "641849e4-efdf-4555-be76-cf6723fdc5f1"
        },
        "item": {
          "id": "6f1831e6-1efa-46e5-985e-cd5c7977b4da",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f6c55647-a12f-4f26-be0e-22609cd8e643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0773b6-f092-4d2a-a1f1-b4f8d5e61394",
        "cursor": {
          "ref": "c48603e8-57e7-4504-9449-f5abbda34313",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "10626272-ad41-42c6-be4a-b07811ff72aa"
        },
        "item": {
          "id": "cf0773b6-f092-4d2a-a1f1-b4f8d5e61394",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3724e576-2458-4651-a5ef-844e98e63da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659834d8-6fe9-4d67-ac79-7c2da9a224cc",
        "cursor": {
          "ref": "a1f9164c-e086-494c-9373-a226bdf7a873",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "11823918-5e99-4417-8cd5-b851854d2d8c"
        },
        "item": {
          "id": "659834d8-6fe9-4d67-ac79-7c2da9a224cc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fbf7dc12-8f6f-4820-8318-aaac257da425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799c369f-17e3-4a33-a355-ed9f5898736b",
        "cursor": {
          "ref": "6afe6942-f634-42b9-a03d-2eb1fb193ea0",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2387e038-5d89-47c7-a1a8-0b65461e42a0"
        },
        "item": {
          "id": "799c369f-17e3-4a33-a355-ed9f5898736b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "22b7e462-6e06-447e-b9cf-bd98f4ef13c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc51550-d502-4c50-baa9-17bfbda27888",
        "cursor": {
          "ref": "2c0743d7-ad3d-4e8c-8115-0d0b719958e0",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a3241b03-1c05-4ca0-9d60-a45182eed918"
        },
        "item": {
          "id": "6cc51550-d502-4c50-baa9-17bfbda27888",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "82a5713a-a1a8-4627-8e2f-e720e224fe6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604679bb-0295-41af-9308-b706a7dce0b0",
        "cursor": {
          "ref": "f753117a-ba19-4bdc-b9d0-03a1b6babc9b",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c99b1c09-a489-4c2c-8af8-76d4440811d4"
        },
        "item": {
          "id": "604679bb-0295-41af-9308-b706a7dce0b0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bfdf3857-ac10-48c5-9c51-2f6f2b14f098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13588998-795e-479e-9999-ebcdf7ea39ee",
        "cursor": {
          "ref": "04a98e37-091f-4f0c-974e-9c588d18868b",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9987a42f-0579-4944-8bb8-a0584aa1d00b"
        },
        "item": {
          "id": "13588998-795e-479e-9999-ebcdf7ea39ee",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9104b68b-cbd8-4b33-a866-e2df766603f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7364226-9dec-4f56-890b-d2c70c03c79e",
        "cursor": {
          "ref": "61e43878-1b6c-4050-a70c-4b7ddd2c32e1",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ff70d377-e43b-4a86-9e45-2f06ceb8bbbf"
        },
        "item": {
          "id": "e7364226-9dec-4f56-890b-d2c70c03c79e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e8033261-2473-4f2c-8a89-8568d94c1d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce1fede-a792-4778-84b3-734f800aec66",
        "cursor": {
          "ref": "b36f6080-f285-4068-96ec-9562379153fe",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "098101fe-bd13-42cd-8031-606617f3ab8e"
        },
        "item": {
          "id": "8ce1fede-a792-4778-84b3-734f800aec66",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "81c1def3-a494-43b4-9e87-e3374f640ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b142bf9c-0506-4949-8402-6f85d2bcc920",
        "cursor": {
          "ref": "c89530e4-32a9-4a8f-ba60-cda4310c8ace",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "482276e7-abf8-46a5-917d-9da7ddb0d9d2"
        },
        "item": {
          "id": "b142bf9c-0506-4949-8402-6f85d2bcc920",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "237f2802-7a5f-412a-b137-80dda08bc7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a12228-e087-4464-a6fd-0c8c1f608e1c",
        "cursor": {
          "ref": "6e5886f3-bb72-449e-8eb9-5ea192dab26e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "63bcef9f-aac4-49f3-befd-a57ca82e5d0a"
        },
        "item": {
          "id": "91a12228-e087-4464-a6fd-0c8c1f608e1c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dbfa3cc7-848c-4998-9819-e9e6141047b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1b7a97-b62b-4d6f-b0de-e823de00d030",
        "cursor": {
          "ref": "ea742780-2e3b-46bd-af2f-6e0c458f38f2",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0f392c9d-4cfb-4718-997c-44c83eb12b0e"
        },
        "item": {
          "id": "9c1b7a97-b62b-4d6f-b0de-e823de00d030",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "193364e3-07df-4e57-b973-c208a0dd3682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e62aa1-5b78-43df-a798-746a27c63b11",
        "cursor": {
          "ref": "35b90299-81ea-4d34-816e-33fe4ea660cd",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "83cc0dd4-7d49-4484-b7e9-15891d940df0"
        },
        "item": {
          "id": "93e62aa1-5b78-43df-a798-746a27c63b11",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2da68ab7-07ca-4e4e-9936-ca212d9cea62",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 88,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "7a7b6716-7707-4ab1-8cbc-a64f7b8f91d8",
        "cursor": {
          "ref": "e9393887-b848-4c7c-b041-989a65201fb8",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "244b7df9-f076-45e8-9c07-4e1b5c3f34c1"
        },
        "item": {
          "id": "7a7b6716-7707-4ab1-8cbc-a64f7b8f91d8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d646e72b-24ff-4406-924a-28c967902a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef6d0d8-f38d-4ffd-b6e2-20d764552daf",
        "cursor": {
          "ref": "e60b45bd-6f39-4bfe-9ceb-63f335ec3d5f",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6f4488ca-d8c0-4475-8fe3-5b6dcb0c439c"
        },
        "item": {
          "id": "2ef6d0d8-f38d-4ffd-b6e2-20d764552daf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a0e9051b-eaa1-431d-a98e-feec457fa9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a0de9b-5580-4028-801e-f23f6e06c078",
        "cursor": {
          "ref": "c00d4625-e47b-4955-919b-8b67dba18cc3",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a95e8709-a68d-4abe-866a-ae9eb310b7cf"
        },
        "item": {
          "id": "30a0de9b-5580-4028-801e-f23f6e06c078",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "afbc92f6-704c-43b0-9097-8da4d3b83e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3ca6d3-efc4-45a2-bd88-d6d461bac9ca",
        "cursor": {
          "ref": "c2204b0b-89f8-4401-bd63-a8e4c0c00b39",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2e59b953-1f36-4d25-a4f7-e33aa2a7e988"
        },
        "item": {
          "id": "5f3ca6d3-efc4-45a2-bd88-d6d461bac9ca",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7f5f0dd3-0809-43e8-8a43-a5fef0d4053c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9025305-6ad3-4fc6-9158-99feec8bdcae",
        "cursor": {
          "ref": "d014fddd-ba90-43b0-ae6f-e79fddcf37f7",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4ad4e4a7-f05f-4f6f-8028-a5b270293cdf"
        },
        "item": {
          "id": "e9025305-6ad3-4fc6-9158-99feec8bdcae",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e93f11cf-aa75-4300-b13d-408cd94a9859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024be567-a8cb-49a0-a8fe-47b23e32da3c",
        "cursor": {
          "ref": "bdf00923-26e9-4a90-a638-c3bbae92dfad",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6cd57a8c-79d3-43aa-89fd-86511fcbf206"
        },
        "item": {
          "id": "024be567-a8cb-49a0-a8fe-47b23e32da3c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "14572d05-59b7-4cd2-baf5-535e0a2b62d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac6a54b-e527-4967-9145-272e7067ed99",
        "cursor": {
          "ref": "c9ef6a12-ccdf-4e81-967b-c00531b56b86",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4c8cb31e-8d5f-4351-a205-015048930165"
        },
        "item": {
          "id": "bac6a54b-e527-4967-9145-272e7067ed99",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f6fc2b31-1c65-4c22-8614-e62d28e9b0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf567bd-c6b8-4b1c-9a89-6311b9323f9e",
        "cursor": {
          "ref": "854465d4-8481-48ad-9466-d4c1040c721d",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6f0ebd94-5655-4abe-98ed-107c83747892"
        },
        "item": {
          "id": "ecf567bd-c6b8-4b1c-9a89-6311b9323f9e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8542a390-4943-4326-b29c-033cc6619716",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "638186af-364f-4fda-83f0-289e8c0fa947",
        "cursor": {
          "ref": "a3728f94-d96b-4f65-9ccc-73e479537b44",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "43ac1464-521c-44d7-98de-5fd5998d14f0"
        },
        "item": {
          "id": "638186af-364f-4fda-83f0-289e8c0fa947",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8f6dd86e-ba2e-4b93-8e93-55e33e271f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f9671b-1004-4e52-b2f7-55b1c709d052",
        "cursor": {
          "ref": "831774b8-7186-481e-aa4a-69471875e69e",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cb39f890-e367-4943-9ec2-f8ba5b8da2ff"
        },
        "item": {
          "id": "a9f9671b-1004-4e52-b2f7-55b1c709d052",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a1b94b05-0b23-45db-ba73-e30feb3b8f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b002638b-fcd2-45e1-abad-aac631411358",
        "cursor": {
          "ref": "4016de13-ad66-45b6-85a5-72432f0b58a7",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b8e84b93-dcc1-4fd2-ae28-f3a455e60d43"
        },
        "item": {
          "id": "b002638b-fcd2-45e1-abad-aac631411358",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "eb471ec1-6240-430b-9748-17ee84705afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d43934-1aaa-43a0-b5d3-8b2e92daeaa9",
        "cursor": {
          "ref": "01b21c4f-997d-4074-96b7-af091f00b1c2",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1f9f41d4-c857-464b-bc9b-f5c71f8ec3a8"
        },
        "item": {
          "id": "19d43934-1aaa-43a0-b5d3-8b2e92daeaa9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1de0b134-3023-4f79-84d8-cee10f4d7f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f106609-ff0a-4b11-90e7-d8a898ae0844",
        "cursor": {
          "ref": "757a42a6-698b-4706-8d66-bef6fa3ffcdb",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a09b0c7f-019e-4d4a-9672-6905f07bc6cf"
        },
        "item": {
          "id": "1f106609-ff0a-4b11-90e7-d8a898ae0844",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9450d592-ca9f-4797-9962-045d3b57f763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a970fe2-910a-4791-8327-c9ce94c8c384",
        "cursor": {
          "ref": "6a5e9c6b-e06a-4928-8d3c-7af8d654d21e",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e807d2f9-2203-4feb-a286-8ac0f0655098"
        },
        "item": {
          "id": "3a970fe2-910a-4791-8327-c9ce94c8c384",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ae4dd845-df04-408d-a667-1e9cb951554c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604d9f59-41ad-4414-9efe-bb5746a0afec",
        "cursor": {
          "ref": "ce922ff1-4ec4-471d-a3e3-a5357c9e713d",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1932b537-1782-49bd-b242-6870f081a52e"
        },
        "item": {
          "id": "604d9f59-41ad-4414-9efe-bb5746a0afec",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8fbc2cb3-b564-4b1c-a3ab-dda27ce9f7f1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2814,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "b1e53117-58de-425f-ba63-07443d396b9c",
        "cursor": {
          "ref": "cb9a690b-4c34-4cb6-8bfb-d7a6ee215908",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bdc330ee-93d5-4b7b-8dc3-a9f73c0fcade"
        },
        "item": {
          "id": "b1e53117-58de-425f-ba63-07443d396b9c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f2437b17-5bef-4897-be35-d6e10b97ae11",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a080d962-6cdf-4e73-96f0-c83ff6dfb8d9",
        "cursor": {
          "ref": "d03d62a1-cff1-426f-a9cc-9c7417198e30",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a6288431-96ce-41a8-9bed-aee9e1487b7a"
        },
        "item": {
          "id": "a080d962-6cdf-4e73-96f0-c83ff6dfb8d9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "367251ef-e55b-4b0a-a525-779ae381c05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabbc013-35b5-4784-b5e7-b08e209fa207",
        "cursor": {
          "ref": "0899561f-a2e5-4ad2-8c21-0e0b8ae900cf",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "70a9f46c-0c3f-4bea-bc99-e6b7cc9afa88"
        },
        "item": {
          "id": "eabbc013-35b5-4784-b5e7-b08e209fa207",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "89c003ed-0420-42ad-a995-600a8c84b4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1083869-33d5-4308-a3f8-e4e8cee6303f",
        "cursor": {
          "ref": "672fa74f-8212-4e60-bd99-ad6c223e56b9",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fccc3698-919c-4ecb-bf09-f1566094bff4"
        },
        "item": {
          "id": "b1083869-33d5-4308-a3f8-e4e8cee6303f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dc821723-c63f-4aab-9800-50e5f23070a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3907e2a5-2e2b-4fe5-81f8-c0cd0584cfea",
        "cursor": {
          "ref": "d78ec772-a12d-4b01-8522-99bf793b5ff4",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a2ba5e43-a52b-4a5d-a787-861b000bbfaf"
        },
        "item": {
          "id": "3907e2a5-2e2b-4fe5-81f8-c0cd0584cfea",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5f129a40-5886-4a96-ab8a-62a65c2393de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9398d86b-bcc8-467d-ac48-bbace4ef7157",
        "cursor": {
          "ref": "cec598fe-a657-40c0-8d71-94804209bd96",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "89151fdc-c868-4110-b11e-77ba0362c05e"
        },
        "item": {
          "id": "9398d86b-bcc8-467d-ac48-bbace4ef7157",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "56432adf-5cd2-438d-b616-0f09b5f4b5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35788d16-009f-4ee4-9595-6465a18e44a7",
        "cursor": {
          "ref": "7dd83efc-96e0-4d23-b476-dfe19bf46cf8",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "30ba2081-503c-489d-89da-85ca73beb111"
        },
        "item": {
          "id": "35788d16-009f-4ee4-9595-6465a18e44a7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ed912c6e-bef8-4a3a-872e-450f518dd8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b331c178-2e38-4e7d-95e8-0876ce818cbb",
        "cursor": {
          "ref": "5474b418-de94-4125-8360-7377538b0961",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2b06ee9e-cf23-4df5-8e4c-e027b5c99194"
        },
        "item": {
          "id": "b331c178-2e38-4e7d-95e8-0876ce818cbb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d1deaed9-7b1f-4631-9ed9-93094363c187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b128781-e2f5-4ab8-a368-0d7c93260afa",
        "cursor": {
          "ref": "22ad1e8b-27ee-4b0b-9b82-c7930785fd06",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e5f1695b-f393-46d2-94b8-88b1b477e5ff"
        },
        "item": {
          "id": "0b128781-e2f5-4ab8-a368-0d7c93260afa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9ffc43d9-bfbc-4bf6-be9e-04e5db51b540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf95b35-ddc3-42f6-87de-be1fb71d6a35",
        "cursor": {
          "ref": "b3fdb689-fc51-4579-b2fd-bb1c25723f12",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "224bf79a-2a3b-4788-8e7d-a4cde2ceb9d9"
        },
        "item": {
          "id": "1cf95b35-ddc3-42f6-87de-be1fb71d6a35",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b63e5008-ac0a-40e6-962c-e2404d290960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c3fe6b-ae7f-4b73-96fb-feeb87458f0e",
        "cursor": {
          "ref": "eecad2d2-6355-4a89-a5c0-eec555386619",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "513158a8-d49b-4096-9f38-eced43cef16b"
        },
        "item": {
          "id": "50c3fe6b-ae7f-4b73-96fb-feeb87458f0e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6dcb89a2-509a-45c6-badb-6b1251f7a86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faaee6d4-a4dd-4cd0-8701-22f8fe855598",
        "cursor": {
          "ref": "bd060c17-e10e-4f05-ab0b-503027ddf29a",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ea864da1-68ab-4efe-9e74-e54c99ad0bb5"
        },
        "item": {
          "id": "faaee6d4-a4dd-4cd0-8701-22f8fe855598",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7f36cc51-5a17-4b15-a576-5e17bcd3cbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d5d3bb-3bd1-4f8f-b972-f33780617883",
        "cursor": {
          "ref": "4d83e6cd-312e-4ea6-8c12-3cbaa58757d7",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "06604048-53f2-42fd-adac-37b3ef6dfe04"
        },
        "item": {
          "id": "e2d5d3bb-3bd1-4f8f-b972-f33780617883",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "100b2e5b-f5e3-4ac2-8c27-d1a86e6b0668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d87bd40-5406-4db8-97bc-5ebc7e315039",
        "cursor": {
          "ref": "dced9d3d-bb60-4699-b787-f7773df5c657",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "81d1bcbd-131e-40a1-8e82-9661a1a8560c"
        },
        "item": {
          "id": "5d87bd40-5406-4db8-97bc-5ebc7e315039",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d49debea-a125-42cf-9a33-d7ba18baf83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f093e8-f8fc-4582-8646-0dd366a5f5ed",
        "cursor": {
          "ref": "55411e77-d0f3-4ee6-a7ce-a8cc9dea07af",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4b9bd2d3-a900-403d-ba5c-6a32a47a4aeb"
        },
        "item": {
          "id": "e6f093e8-f8fc-4582-8646-0dd366a5f5ed",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5a93c87f-c923-4a45-bddf-f1854c2e70b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cc7078-2653-49fd-beb3-2a2e938527c5",
        "cursor": {
          "ref": "dbc65d15-70d5-4c9d-974d-f413c3bf9264",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a67d325a-4446-4bc2-90fe-bd09805a79f8"
        },
        "item": {
          "id": "a2cc7078-2653-49fd-beb3-2a2e938527c5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9c01dd35-62b8-4cbd-ac6c-28c100b93d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a798375f-4ffb-4ea6-b774-8a6884521b50",
        "cursor": {
          "ref": "6aaab7de-86c9-4788-9de4-a987395723d5",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "beb2da17-90c8-48cd-b250-2544861e00e9"
        },
        "item": {
          "id": "a798375f-4ffb-4ea6-b774-8a6884521b50",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e5a9b986-c570-4b6c-9892-5700e2ce614d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c1578f-dd1d-4ee3-97d4-ba1fe8d89e2e",
        "cursor": {
          "ref": "3bd8911a-8530-4cd3-8514-633615bf113c",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fdba3c82-3ac7-48d9-8fe5-cb51c0d74c59"
        },
        "item": {
          "id": "b1c1578f-dd1d-4ee3-97d4-ba1fe8d89e2e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2335c539-d070-4806-bbf6-ee4a69084338",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "d4b2d647-8a30-43df-bae5-8d60fc819e03",
        "cursor": {
          "ref": "73d4f70e-9495-4626-8b98-a082a8dd7ee6",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e8062f81-b360-4042-bf25-8eb75fe215d0"
        },
        "item": {
          "id": "d4b2d647-8a30-43df-bae5-8d60fc819e03",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5003618d-0a8f-4248-b5a2-9567e667feeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1653cde-6993-4ae7-89d4-c472b897bf61",
        "cursor": {
          "ref": "8e5656ff-469d-466e-8d5e-a4b99efe0050",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "24f0d237-2d66-409d-8e8e-8a145fc31c4b"
        },
        "item": {
          "id": "f1653cde-6993-4ae7-89d4-c472b897bf61",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ebc0435c-3026-4177-8c62-d8514f905193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09310869-1b03-433c-84a7-4ff935d24e2b",
        "cursor": {
          "ref": "348d74b9-8c71-4e47-a037-d48e36a3b250",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1243df30-dfee-4e1f-9996-1ade186248aa"
        },
        "item": {
          "id": "09310869-1b03-433c-84a7-4ff935d24e2b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fb1adcb9-9ec0-4a87-b78e-2288c4527632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c486c2e9-7a3b-4a6c-8d19-6f559d968811",
        "cursor": {
          "ref": "3618839e-548f-4505-b18c-84e86ef10450",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b390307c-f603-4d44-82c9-041b347dfc20"
        },
        "item": {
          "id": "c486c2e9-7a3b-4a6c-8d19-6f559d968811",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3f361067-5957-46c4-bd2e-43165798f17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc04b99d-f6da-4c40-8dbe-20bd34a41bcf",
        "cursor": {
          "ref": "521d1543-5c4d-43f2-b4fd-b421fcdd8c25",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2066598c-405c-4c12-bf2a-329974deedd2"
        },
        "item": {
          "id": "cc04b99d-f6da-4c40-8dbe-20bd34a41bcf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9c7c67db-2cea-4a44-a868-382e4ed41ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1bad6b-c359-4057-86ae-da7f475f61e5",
        "cursor": {
          "ref": "774fec05-eec6-4919-849f-781cc7035749",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "68dfcbc2-cc1c-4a55-85b9-bdd4dab4aa16"
        },
        "item": {
          "id": "ad1bad6b-c359-4057-86ae-da7f475f61e5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6d72a3f8-9fba-4ad0-9f83-9eb544ca0c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c353d953-57d4-4ecd-bcab-f1c843ff33d4",
        "cursor": {
          "ref": "5c328303-ce9f-44fa-92a8-841f4581fee7",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "24332008-3d9f-40e1-8c08-fbb7d37be9bf"
        },
        "item": {
          "id": "c353d953-57d4-4ecd-bcab-f1c843ff33d4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cd38bca1-eb84-4901-9f56-b55451acdf5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7df1263-0a60-4e13-b2e5-627a74646c53",
        "cursor": {
          "ref": "cf0878dd-6349-4c33-ab8f-3ecc71ee1cff",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "dbc5211c-cfb3-4cda-9231-57d95987ccbf"
        },
        "item": {
          "id": "d7df1263-0a60-4e13-b2e5-627a74646c53",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b03252cb-59e4-4929-85a1-8bbef2f9357d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "7a5143b1-bf63-4ff5-9620-269ce2838933",
        "cursor": {
          "ref": "56bf1668-b7c9-4b05-94fc-ce5f50745b48",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "eac623ee-0735-45f0-bcff-6ef5f304144e"
        },
        "item": {
          "id": "7a5143b1-bf63-4ff5-9620-269ce2838933",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b5bdd84f-e00e-42f5-a62b-f7cb9cf00e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d57c1d-3ff5-4534-862d-4a206229dbcb",
        "cursor": {
          "ref": "99851111-8ce8-4497-a368-99128e059fec",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8f8fa4d7-ec15-4363-ab7b-6b487c06918b"
        },
        "item": {
          "id": "b7d57c1d-3ff5-4534-862d-4a206229dbcb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a83a3813-d75a-452c-9ad1-8b2bcf7850bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0754e67-1d92-4082-b159-8bf97b047c01",
        "cursor": {
          "ref": "e3c73ccc-fadf-4beb-b5c2-0cdc6dbcd73e",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f336de7d-6560-42ca-82b5-c5039b831735"
        },
        "item": {
          "id": "b0754e67-1d92-4082-b159-8bf97b047c01",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a83f7970-9cc9-4dba-b288-74f212c8087c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1d5ffb-b216-4bcb-a351-7ba421f2d9a0",
        "cursor": {
          "ref": "f99513cf-b83a-4b0e-b7c1-008c271db797",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "509aa129-be5b-47c1-8fec-e369e6240521"
        },
        "item": {
          "id": "3a1d5ffb-b216-4bcb-a351-7ba421f2d9a0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a0165cdc-6363-447b-8530-e475cfcbeeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33925e0-bec5-4bf5-8c88-6fcef34a2a14",
        "cursor": {
          "ref": "f76810fb-2cce-4c77-84cf-419e80373554",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ee06af4e-3a62-431d-b5c9-936d0b67e03f"
        },
        "item": {
          "id": "b33925e0-bec5-4bf5-8c88-6fcef34a2a14",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7a9df49d-33de-405b-9249-014ae4516a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbcc219-8d81-4201-b659-965c4670b972",
        "cursor": {
          "ref": "6129278c-ca12-4c86-ae91-3a941e82837b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "be1de882-2e2e-49ed-b078-5c29892b426a"
        },
        "item": {
          "id": "4cbcc219-8d81-4201-b659-965c4670b972",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e736e654-8f73-4016-af23-85a91eed1805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4e1c07-a87c-4b28-9be9-d98892ecdbfc",
        "cursor": {
          "ref": "cb623107-ae60-4ee6-ac66-b82b3830706b",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b303e13f-d2d8-4cdf-ab86-e78eb66c1e7b"
        },
        "item": {
          "id": "cd4e1c07-a87c-4b28-9be9-d98892ecdbfc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "87107f6d-9d30-4892-aa75-98948210744e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "7e6f0c4c-db8e-4951-ab9f-4e9facdc0c97",
        "cursor": {
          "ref": "9daba123-f063-4e8c-9eb2-d4b47ba1d54d",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f23a20c9-7b71-433b-a052-bd14ad8aa0ba"
        },
        "item": {
          "id": "7e6f0c4c-db8e-4951-ab9f-4e9facdc0c97",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8b347777-810c-4753-9bba-0625f4549d91",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "adbe2b94-e31f-4d99-9a15-f36361863c22",
        "cursor": {
          "ref": "b41f3a31-afad-48a5-a26c-480cf231a871",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "017574a6-4168-4d4e-80c1-ab74e0c63cdb"
        },
        "item": {
          "id": "adbe2b94-e31f-4d99-9a15-f36361863c22",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "310c5d99-da46-4af1-a2f9-9b891f06d7fc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "2e277bf7-2b2e-41a1-8c0e-f2504d2c67f8",
        "cursor": {
          "ref": "ed853d85-3952-4b49-9665-7d8418b0a38c",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fbc5dbb6-0567-4646-b219-e2b8c631d40f"
        },
        "item": {
          "id": "2e277bf7-2b2e-41a1-8c0e-f2504d2c67f8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ea6cb216-2535-4a6b-8525-bd8851335d3e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 148,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "ca902073-f4fd-42e9-a5d3-c0e5ced6b6ab",
        "cursor": {
          "ref": "cb5f50f8-ffa3-48f8-bb28-3523bf4ce41c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a6c20df5-7a75-4292-bf4a-88a1d2f69195"
        },
        "item": {
          "id": "ca902073-f4fd-42e9-a5d3-c0e5ced6b6ab",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2774a203-167b-459d-aafa-ed8b97bf693c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 71,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "8ef07042-62cb-4f81-92b8-0851ff61a8be",
        "cursor": {
          "ref": "4cfe93e9-f855-4666-8162-91061803b53c",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c6b15721-7ce8-49a4-9e8c-27eac9373aea"
        },
        "item": {
          "id": "8ef07042-62cb-4f81-92b8-0851ff61a8be",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fdbd7d37-cd6b-4447-b693-f7569a9cc338",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "ca284839-c8b7-474b-8a0b-e1e6009b3729",
        "cursor": {
          "ref": "7766c45b-05ac-4fa3-8501-35a598621485",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "badc8921-3118-487d-9638-fa30c6c21041"
        },
        "item": {
          "id": "ca284839-c8b7-474b-8a0b-e1e6009b3729",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c3a8e380-0650-4e87-b30b-2df498187209",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffa37ef-1475-4b0d-9506-39ab717ff9fb",
        "cursor": {
          "ref": "4644bbee-368f-45b3-895c-5f7670740b1f",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8a8c85e2-a045-4e79-ac17-5d9f0ad387ab"
        },
        "item": {
          "id": "3ffa37ef-1475-4b0d-9506-39ab717ff9fb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6606af2f-4232-4719-89ec-d96bf6d2a518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aeb864b-c73c-4003-9e07-d553bf8d2e8b",
        "cursor": {
          "ref": "8e2f94f5-ebac-498e-8b31-6cdcec69da34",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "836df4b7-7040-4961-9ba6-e16c770abb15"
        },
        "item": {
          "id": "2aeb864b-c73c-4003-9e07-d553bf8d2e8b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ac6b8f61-179b-4598-80f9-8b89b7735a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1106ca-4938-487d-8c63-499b3b64ed18",
        "cursor": {
          "ref": "d90aee13-d807-40d5-a43e-8859998c796d",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "252e350a-3403-48ed-b738-4b4ab4c6c582"
        },
        "item": {
          "id": "ac1106ca-4938-487d-8c63-499b3b64ed18",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2de68245-504e-44c0-88c2-0294492db41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d923f959-237b-423d-a4c5-d48c045e91ca",
        "cursor": {
          "ref": "c69454a2-0bb4-40e1-b749-39c68e3ad650",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8c6b8774-1666-4960-b048-feba64d5826a"
        },
        "item": {
          "id": "d923f959-237b-423d-a4c5-d48c045e91ca",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a9e68f2d-4a78-4694-b4a0-eabf27f8337e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2e8768-8a42-48f5-9cb8-4157d38b6c90",
        "cursor": {
          "ref": "482cdeb3-1aa4-45f6-9f66-1319d07fba88",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "403e2e0f-aa2a-40e8-ac5c-ce76c671b337"
        },
        "item": {
          "id": "cd2e8768-8a42-48f5-9cb8-4157d38b6c90",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2fde37a2-be7d-4944-8fc4-0610c0ca5086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afacef8b-2fb1-4522-b892-d52fa873ddec",
        "cursor": {
          "ref": "d3157afc-1306-445c-8252-98ce84d4b898",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "64cdcecb-4cce-4e9c-b8c6-ff0367b62b51"
        },
        "item": {
          "id": "afacef8b-2fb1-4522-b892-d52fa873ddec",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cb2805fc-ec94-4d62-8188-bc3e9f46efb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 978,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8417629f-5653-4357-9ce0-8f6aa802427e",
        "cursor": {
          "ref": "320d0c0d-a9e3-4116-b098-529025c62171",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fa8beb2e-5006-4769-915d-ae45acd6c568"
        },
        "item": {
          "id": "8417629f-5653-4357-9ce0-8f6aa802427e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "14bd5547-8f14-4370-b8b7-39eb62382c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b24abc3-8396-4d01-b61a-3ff231c7f517",
        "cursor": {
          "ref": "1d9e3e61-fe4d-441d-b332-0e431c4bf24a",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "918cd20c-2a33-4fad-846c-527a5a120ba0"
        },
        "item": {
          "id": "0b24abc3-8396-4d01-b61a-3ff231c7f517",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8fe2bf6e-28d7-4b32-a56e-bcf7eca66373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58ea4e3-9a42-4d8b-9f21-202e4841e992",
        "cursor": {
          "ref": "c4ac682a-a54b-45cd-9c23-e2803ccf397c",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d9b47fd9-825c-4785-a2ef-cba708fc81d2"
        },
        "item": {
          "id": "a58ea4e3-9a42-4d8b-9f21-202e4841e992",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a22e313b-1f0e-4d21-996c-12ecc69e39cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883ef377-df11-47d0-8e57-bb797b22278b",
        "cursor": {
          "ref": "40c6d6e4-8183-4365-930f-d1e9287bc503",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8d2a1a12-94ea-4760-9bab-26cb502ad0e3"
        },
        "item": {
          "id": "883ef377-df11-47d0-8e57-bb797b22278b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "77745284-b7ea-41fe-a23d-9243b10d9e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8858ce5c-308c-4664-9098-4982ac57025d",
        "cursor": {
          "ref": "ea3ea1d5-6811-4307-89e7-e64ba8326f33",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "91efe822-a1af-47f9-9c52-5bf733e7afc6"
        },
        "item": {
          "id": "8858ce5c-308c-4664-9098-4982ac57025d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7c0319e0-49d1-447f-803c-abe90dd5ed16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c404aa87-2f1a-487c-aa46-eb560d846cc5",
        "cursor": {
          "ref": "438888be-9420-4d7b-9e97-38955385f8f5",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "191a3127-ae3e-4b89-998c-ff77d32d3096"
        },
        "item": {
          "id": "c404aa87-2f1a-487c-aa46-eb560d846cc5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d7fa1d9a-004a-4bdd-8361-775af1fccd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c2c628-dba5-439f-a794-a2d9a4857e17",
        "cursor": {
          "ref": "54f195c1-cc72-4dc5-b7cb-aae367f78522",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1fda7f71-dd46-428c-8c6e-cccb7f8d52c6"
        },
        "item": {
          "id": "09c2c628-dba5-439f-a794-a2d9a4857e17",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d97e3862-3edf-44a8-9bd1-67533ab4c7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ae40f3-36e5-4433-8ca3-6b249ce27adf",
        "cursor": {
          "ref": "982647ec-eb4f-4e95-ba3a-5b853969b284",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1822400a-9723-414a-b4c0-f0bad7c92559"
        },
        "item": {
          "id": "d5ae40f3-36e5-4433-8ca3-6b249ce27adf",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "234a5170-6806-4ee8-9be0-cd10f6b42cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc768895-bf28-44c5-8a4b-4da1ad8c22ab",
        "cursor": {
          "ref": "f06c2c96-5372-4f2b-869b-2807dcb6fdf3",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8212d167-8af0-41aa-8d18-f9b2f8857235"
        },
        "item": {
          "id": "dc768895-bf28-44c5-8a4b-4da1ad8c22ab",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b1b30e7a-7729-4894-ab0a-345359c869f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e891f6d5-a407-4225-a917-00b84c6b5672",
        "cursor": {
          "ref": "ff9fb9d7-85d3-47be-b027-34d9fc9d8cd1",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "804341d0-d3e0-4c82-9c42-b6fb73bb5bb0"
        },
        "item": {
          "id": "e891f6d5-a407-4225-a917-00b84c6b5672",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "12ad56e8-08ab-4bba-80b5-3de8ea3e41d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfb85bd-d710-45d2-9ca8-6b6fadf032fb",
        "cursor": {
          "ref": "868084a5-6510-412e-a45e-797ec075eae8",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0a18182a-dc17-464f-8eb1-7429bb8e59da"
        },
        "item": {
          "id": "bdfb85bd-d710-45d2-9ca8-6b6fadf032fb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "207c6c4b-756a-40f7-9372-804019b62e82",
          "status": "OK",
          "code": 200,
          "responseTime": 203,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "eccff6d0-b07a-4287-ad31-05e9fad7760c",
        "cursor": {
          "ref": "b6345f6c-fde2-43ac-98e9-783891367366",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8fdd98f7-dad9-4f93-b780-7a4e8933b32c"
        },
        "item": {
          "id": "eccff6d0-b07a-4287-ad31-05e9fad7760c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "64bf5814-c67c-43a2-9dc0-1e9e4e7bf929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cad71df-7ddf-4084-8c81-40b23ca8e7f9",
        "cursor": {
          "ref": "e1db207a-e299-491f-aa47-4b78defc5222",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "410e4e34-1f97-407a-a913-ccf78e52de07"
        },
        "item": {
          "id": "6cad71df-7ddf-4084-8c81-40b23ca8e7f9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c4521862-f996-4bbd-9058-085987a41ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b94e71-4269-419f-9115-178d3c4614e7",
        "cursor": {
          "ref": "d1e294e5-e294-461f-80ff-3979bb05f181",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e84ba952-b65d-428b-bb1e-1c666e9095be"
        },
        "item": {
          "id": "77b94e71-4269-419f-9115-178d3c4614e7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "172b4995-795e-4471-9328-0d96e0ca1ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a6a4e1-255e-4c8c-be5f-d46627824a97",
        "cursor": {
          "ref": "8b1cf6dd-9f5e-4a28-b2ae-dce3c96ca92d",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0854f51c-7406-4f42-b64b-cd91a1af844e"
        },
        "item": {
          "id": "83a6a4e1-255e-4c8c-be5f-d46627824a97",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bdfd2c74-f669-4a39-97e5-3f94d143c061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6dac40-7735-4996-9f78-1817bc16689c",
        "cursor": {
          "ref": "826c2a55-e150-4008-ba37-4023fe1a0153",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "813572cc-6d37-406c-9e4d-998b0873a816"
        },
        "item": {
          "id": "7d6dac40-7735-4996-9f78-1817bc16689c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "592b6426-7cdd-4e8f-b72a-1593b3d76683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8774b1af-f450-464f-acbe-d5c8d3f6c5b1",
        "cursor": {
          "ref": "6e68a046-8d9e-4b5a-8e53-6f40f46c3fc3",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9be90da9-359e-4632-ba4a-47f88b39b49c"
        },
        "item": {
          "id": "8774b1af-f450-464f-acbe-d5c8d3f6c5b1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fb6e298f-d119-4722-bf17-d8c35d0245a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d35de20-96ba-4fc8-a5e5-e3fba3205c11",
        "cursor": {
          "ref": "9cf45ec0-124d-46bd-847e-983e9744c20b",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2e2ebbcf-c008-426e-ac7a-fafe23386452"
        },
        "item": {
          "id": "0d35de20-96ba-4fc8-a5e5-e3fba3205c11",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a112de6a-b1af-4471-ac27-c3b4b7dbe2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbbd800-adb5-476d-8746-f8300c57afd6",
        "cursor": {
          "ref": "fdecc3a0-121b-424e-ae0b-d828c9eaaec6",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b9d426cf-3c01-4a6f-92d8-c003c41854dc"
        },
        "item": {
          "id": "4cbbd800-adb5-476d-8746-f8300c57afd6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "64bb9a96-6ea2-4862-97a9-7bb9c9c8e9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729ef523-4263-495f-ada2-369a8e96ca1a",
        "cursor": {
          "ref": "8f08d48d-7a60-4887-9a4c-be66503567a4",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4bb4a3b1-8260-430c-bb24-0b505ea74fb9"
        },
        "item": {
          "id": "729ef523-4263-495f-ada2-369a8e96ca1a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5f81090a-4c75-4b4b-b08f-e5388e34f11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e2e5d8-97a5-4b82-af03-1e8b9a271965",
        "cursor": {
          "ref": "9f9cbf14-5149-4e8d-af42-78a7d8431537",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f54f5a8d-1289-4fda-807f-fb73eedd76f6"
        },
        "item": {
          "id": "01e2e5d8-97a5-4b82-af03-1e8b9a271965",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "526d568a-9357-4f4d-a5c3-f2c5c6c9d4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f1c1fa-4c22-4191-8c34-feb6e0bc3c4a",
        "cursor": {
          "ref": "09e404a4-4941-48b4-b09f-57d09b5db278",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0b8674bb-96b6-4ce0-a3a1-efdd3021401d"
        },
        "item": {
          "id": "43f1c1fa-4c22-4191-8c34-feb6e0bc3c4a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "42659ffe-3f49-478a-b40f-d7fc1b5d3a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e26d06c-8588-4a02-9b85-52b122248842",
        "cursor": {
          "ref": "8d58dd4d-d28f-45f8-a762-72114568961b",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "40358dc1-a1c9-4159-b764-828ec1654fd1"
        },
        "item": {
          "id": "6e26d06c-8588-4a02-9b85-52b122248842",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "afd0175c-5931-4361-958a-c6883f570900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5169b5-fe89-4020-ad11-443296c69274",
        "cursor": {
          "ref": "fab29cd4-a7fc-40de-b9b5-a9e5ac3c48fc",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c1946851-172f-45f6-aa5d-85007c56710d"
        },
        "item": {
          "id": "aa5169b5-fe89-4020-ad11-443296c69274",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bf402eb0-ec48-4e5b-8446-52cf8106b77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ca31b7-fc5e-45f6-b6e0-b61026485fe9",
        "cursor": {
          "ref": "6ab00744-627a-4922-adb2-77e1407dcd98",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ac07985f-7cf6-4a68-a465-ac6b6b442edd"
        },
        "item": {
          "id": "91ca31b7-fc5e-45f6-b6e0-b61026485fe9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c93c11f0-d001-4198-a9af-cc2532e463b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0b498e-e8a4-4948-8678-b59c6608f668",
        "cursor": {
          "ref": "fce3c75e-bc37-43e7-8d16-5d2120270888",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "db3cf334-4b47-4fcd-97a7-ff57529f49f7"
        },
        "item": {
          "id": "5e0b498e-e8a4-4948-8678-b59c6608f668",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "259ffab1-3ec4-4ea8-9ae5-f04a667d738c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6c0131-e56a-4cd9-aa3d-a0421cbad7e3",
        "cursor": {
          "ref": "84fa7626-9aee-4b82-939a-60297c94a40c",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0150c445-c895-453c-8f3f-219fe7e5c3fe"
        },
        "item": {
          "id": "3d6c0131-e56a-4cd9-aa3d-a0421cbad7e3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "221fe830-e491-42f7-8617-a08b4faeed31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd327dd-3567-402f-b6b8-7715d93cadfa",
        "cursor": {
          "ref": "baf94778-dbb8-4962-b7e1-fe0115671789",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "05089381-1a1d-4442-97d4-d50e7a6fc976"
        },
        "item": {
          "id": "ffd327dd-3567-402f-b6b8-7715d93cadfa",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f621b709-ccb4-467e-a846-eb4b163f62a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a54848-fc8c-4150-8d01-0889601a3e27",
        "cursor": {
          "ref": "320f64ec-9744-4391-8425-ec0cc8dfdf20",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6908bd75-dc83-43e8-bb61-092c8c95af98"
        },
        "item": {
          "id": "d6a54848-fc8c-4150-8d01-0889601a3e27",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6f8ced4b-0329-4573-b0a4-3a2f7337d644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d314335-86b0-43b2-986e-68093e5f56fd",
        "cursor": {
          "ref": "25f69301-5c3d-4d61-be59-2cce6396abb5",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7f77b3b9-ef08-4e43-89f4-b5404ec609ab"
        },
        "item": {
          "id": "6d314335-86b0-43b2-986e-68093e5f56fd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "52d5512b-be51-454f-b64f-6c55a54608cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addf857f-f75f-439c-a9f4-d864eab91ec4",
        "cursor": {
          "ref": "5267eb04-ce32-4b88-909f-6a92eea94f9a",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d4cea546-debd-41f1-87fb-4f8b87107ae1"
        },
        "item": {
          "id": "addf857f-f75f-439c-a9f4-d864eab91ec4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e36a2c00-a8ba-4add-8bfa-f4e2532760fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c814b2c-8e95-4f97-8821-5eeb1dde6af6",
        "cursor": {
          "ref": "f3cdefd7-6fe2-4b66-9ac3-7a48157de15e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "826bc665-9135-4b48-8d3d-0191961d0d27"
        },
        "item": {
          "id": "0c814b2c-8e95-4f97-8821-5eeb1dde6af6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c93ac85d-54cb-4f35-b839-92b52653d964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97c932b-f771-42aa-940c-e59fa4f34cbd",
        "cursor": {
          "ref": "c8d84cb7-3f02-4c25-acc8-9a1f650af6a5",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c479bb64-462b-4129-b24b-cb449bd6fca5"
        },
        "item": {
          "id": "f97c932b-f771-42aa-940c-e59fa4f34cbd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2bd2bdae-2473-4879-804d-7eff117f0228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b608d6-0839-4ce2-994b-7f271fd07ae6",
        "cursor": {
          "ref": "50e1722b-360a-4e74-b1cc-f8613bf50d4b",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7761ac69-7a1b-4b52-a5f9-2cc5de2a5bb7"
        },
        "item": {
          "id": "32b608d6-0839-4ce2-994b-7f271fd07ae6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2eb82d45-3d4b-4a2a-9ac9-f6269c98513f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64b342b-04fb-40a7-9320-95f98a85ecd5",
        "cursor": {
          "ref": "d0e1b4eb-24a3-45ec-92a5-b8cd193c0143",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b1aa46d1-682f-437d-836e-9b22c8343f68"
        },
        "item": {
          "id": "d64b342b-04fb-40a7-9320-95f98a85ecd5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8ac5d84f-912e-4d80-ba7c-7c5dca44d20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f86928b-f04b-4cc6-8ac7-ef46a44c13fe",
        "cursor": {
          "ref": "0a30ec27-b3f1-4da4-8e01-8c03c2ab91a6",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "270379fa-28fc-4cf4-9dd8-c6a88a09e19b"
        },
        "item": {
          "id": "8f86928b-f04b-4cc6-8ac7-ef46a44c13fe",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "892edf01-1a07-4ed1-8960-6afbc83b2bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705e6c8b-1f58-475a-b4af-729671881f10",
        "cursor": {
          "ref": "32f2ece2-03e3-48b3-a3f2-4b6465883e28",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "74d9cafd-0202-4b50-905a-477684e5179e"
        },
        "item": {
          "id": "705e6c8b-1f58-475a-b4af-729671881f10",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f59c48d2-2622-45cb-b963-9c3919adb6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28adb133-1008-453b-97ef-1e4a99d64f22",
        "cursor": {
          "ref": "5bd53de7-d9fc-40cb-b611-61254d1e5b15",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "901edfa0-da77-471c-86e0-122cf7f7eccb"
        },
        "item": {
          "id": "28adb133-1008-453b-97ef-1e4a99d64f22",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4bf87649-d7eb-4e84-ad3f-abb01961cdeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6ce5e7-46d2-4892-abe6-1db1392c60aa",
        "cursor": {
          "ref": "254e82f0-bf48-42a6-8669-64d5d7aa11d7",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "896f9fd2-aff2-47a8-a597-bf83b3c2a618"
        },
        "item": {
          "id": "3e6ce5e7-46d2-4892-abe6-1db1392c60aa",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "deab89c5-20f3-4a2b-b817-2620e90f62f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c334302-1e3a-42b1-9bee-aa773b06a6f6",
        "cursor": {
          "ref": "b91bae65-2b03-4290-9671-c0fbae2f7ef8",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "eb7605b8-248f-4ebb-b036-d60f20797b35"
        },
        "item": {
          "id": "0c334302-1e3a-42b1-9bee-aa773b06a6f6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "833cbada-5af3-4913-b69c-d2f93903930e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae3322f-e18a-4822-a350-f7e9e898b714",
        "cursor": {
          "ref": "265ec8be-4108-49fe-82cb-b5cf7fdf03a9",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "42a83881-cc71-4278-9d16-1f16ca51264d"
        },
        "item": {
          "id": "9ae3322f-e18a-4822-a350-f7e9e898b714",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "69f3f4ba-8971-40ac-b5f1-6e568a45be9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4ed9c2-5d89-4af6-8f24-e568f4d5974d",
        "cursor": {
          "ref": "5950dac3-052f-43af-ae25-d6fc606c4a5c",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3f710045-b200-454a-a2d1-0c7be7bfb519"
        },
        "item": {
          "id": "2d4ed9c2-5d89-4af6-8f24-e568f4d5974d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3ae3339b-9531-4eb8-bc35-6420debfef3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17204a55-b880-468f-87ab-3d6e4601fe06",
        "cursor": {
          "ref": "83019d34-3981-4702-a5ae-6a1c747c6d44",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a94394ea-8abe-4a50-8041-7c480d3d5d09"
        },
        "item": {
          "id": "17204a55-b880-468f-87ab-3d6e4601fe06",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3b6b14f4-ccf2-493d-bcdc-15ffe40b716a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70185480-bd8c-4c08-a353-93418e1db2fc",
        "cursor": {
          "ref": "521c9da5-16aa-4ecf-a741-3893a1e73b67",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "29524feb-2cba-4698-83c6-78f2adebb060"
        },
        "item": {
          "id": "70185480-bd8c-4c08-a353-93418e1db2fc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9302398b-decb-4bf7-a242-5d7059327987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e71b94-c110-495c-aaae-433a17e50a0b",
        "cursor": {
          "ref": "3d0380f9-4cba-4a58-931d-df516db5efce",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2004b504-f157-451a-bd93-a8b25946813b"
        },
        "item": {
          "id": "f5e71b94-c110-495c-aaae-433a17e50a0b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8686a805-000f-4870-996d-f244fac9b318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0827b6-a74c-4533-abed-26cf5916e79e",
        "cursor": {
          "ref": "1b64524a-471b-4daf-bec7-fcc035c02c4b",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b8fefebd-fffe-425c-b6c9-5691de6ee338"
        },
        "item": {
          "id": "9d0827b6-a74c-4533-abed-26cf5916e79e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "291e30ff-170a-4337-be59-09ce93559753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34d8d1c-7372-4bae-881a-2e8f2cf60b25",
        "cursor": {
          "ref": "ad7f723e-6384-4c82-b2b3-5e64d17d7075",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "739cd270-921c-4ab3-a7a6-6d32d200ec94"
        },
        "item": {
          "id": "c34d8d1c-7372-4bae-881a-2e8f2cf60b25",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "655de2b7-f27b-4009-86d2-25d94a107a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d128b2-f50f-4681-b76b-dbdf1b17b1db",
        "cursor": {
          "ref": "9ad5e929-831e-4ce2-bc57-ac64622a9aea",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b837049a-e7d6-42ae-868b-21b7df7783ff"
        },
        "item": {
          "id": "92d128b2-f50f-4681-b76b-dbdf1b17b1db",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fa5bc46e-9731-43c9-921b-9af39a573bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86709dbe-e84e-4c7c-9027-3a9f96b1b170",
        "cursor": {
          "ref": "3b578a15-7fc9-4904-b06e-6300eb59ae1d",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a45f2f80-8782-463f-8d5b-205e2f5b20f4"
        },
        "item": {
          "id": "86709dbe-e84e-4c7c-9027-3a9f96b1b170",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3d22ea50-4237-4e09-a570-cdd3e0a19e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aeb91c7-e731-47f7-b821-07785704c7dd",
        "cursor": {
          "ref": "7ccb8d03-1926-44a7-a4ce-c60eeb738d0d",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2aaab93b-98ac-41ba-bb9e-61a872cc73e6"
        },
        "item": {
          "id": "6aeb91c7-e731-47f7-b821-07785704c7dd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "988f4619-9b10-47e8-bed3-94bed0e70f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab47b7b6-decc-4552-bb51-c31faba85d8f",
        "cursor": {
          "ref": "6f5012fc-929f-47cc-a233-bc1e90cbb1fd",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f579c574-f260-436d-94b5-830f0cce20f9"
        },
        "item": {
          "id": "ab47b7b6-decc-4552-bb51-c31faba85d8f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "aed9524d-fad4-4c42-af7b-d8caf3372d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ad1f68-39d5-42e1-ba0c-4b3373614f35",
        "cursor": {
          "ref": "c86a2dc6-fc51-4385-98e3-1c13a3f34a24",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8a0df726-fbe8-4d3d-b0c7-6d09cb1263d8"
        },
        "item": {
          "id": "f7ad1f68-39d5-42e1-ba0c-4b3373614f35",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3bbbaa2b-d0bd-4948-83c4-abf3a1789ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e6b875-74df-4715-9687-ed43418c1a18",
        "cursor": {
          "ref": "f9d20978-4df9-4836-94cc-41c8896ed8bb",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7cfb4321-92c9-4468-a358-7eecf1c26ca7"
        },
        "item": {
          "id": "72e6b875-74df-4715-9687-ed43418c1a18",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9dcc86ba-fcfa-4eee-b17a-57b8eca23de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9553110-1e37-4a7b-b4b2-08f3135f76d0",
        "cursor": {
          "ref": "0619e56e-85f9-43c8-aadf-fa7b31e7152e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a119cdc2-a350-47b3-b378-7f10f1620da8"
        },
        "item": {
          "id": "b9553110-1e37-4a7b-b4b2-08f3135f76d0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ad1167ff-5770-4d6c-a336-18f33585bf7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc30b0db-478c-4c4f-867c-7dc9ba1e3f13",
        "cursor": {
          "ref": "dc415367-5434-4c39-aa44-2d04dd2e2236",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "881fd390-14b2-441a-954d-55ce70a14179"
        },
        "item": {
          "id": "bc30b0db-478c-4c4f-867c-7dc9ba1e3f13",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1d4927bd-6c4a-40a4-8e83-7f932b188fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac67d2e-ab8f-455b-bca7-9263d0964ecb",
        "cursor": {
          "ref": "444a524c-1fee-4875-8ac3-e1eb7806fc26",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8434327b-7213-47fb-83b2-bc837965ce92"
        },
        "item": {
          "id": "4ac67d2e-ab8f-455b-bca7-9263d0964ecb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c3fe0672-14b7-4d9b-9db7-00cc0973822c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfc8a87-e8b9-4096-89d8-8666d0352d9a",
        "cursor": {
          "ref": "06d144f7-9023-45c0-a374-32336b3eb1f4",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7341ce7c-3e0d-4f01-bd99-ff02406eee02"
        },
        "item": {
          "id": "9dfc8a87-e8b9-4096-89d8-8666d0352d9a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "638ef294-c87e-426c-a588-1bfe97681a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d61ba52-5dfd-4983-b6b7-a4a728d891b2",
        "cursor": {
          "ref": "bcee28d7-1268-493b-b227-2d692c2cd5e6",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "38bf7523-fb2d-442f-bf19-7c59986f3947"
        },
        "item": {
          "id": "8d61ba52-5dfd-4983-b6b7-a4a728d891b2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a3a6bda7-7dd6-4b92-b14f-0b29d6d84462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1643e0-2ab5-47bd-843f-b81b1bb420de",
        "cursor": {
          "ref": "982484a4-b95e-4a4e-adde-0eabc04ab1f1",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "25c96c2b-bcc5-4ae0-ab86-2e21456e9beb"
        },
        "item": {
          "id": "5f1643e0-2ab5-47bd-843f-b81b1bb420de",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bf90ec43-0c18-41d0-a12e-dc77c64b00bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e500630c-30b1-4689-91a2-e0c90b6f9f31",
        "cursor": {
          "ref": "a24d30bd-8847-49cc-9448-7d00fac9c4b5",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fdf50cfb-772d-402b-8481-b4d88e2bde68"
        },
        "item": {
          "id": "e500630c-30b1-4689-91a2-e0c90b6f9f31",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9d113ea8-0a23-4ac9-9b17-124ea6eaaee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b3d1fd-501f-4f71-afdd-f431c771fe25",
        "cursor": {
          "ref": "fb9dfb1f-3f92-4eaa-8677-98c8cdad96e0",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "02642d8c-b64c-4d2d-8e63-d213e093f24c"
        },
        "item": {
          "id": "16b3d1fd-501f-4f71-afdd-f431c771fe25",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b2730f98-8af5-42c2-9783-8cf6815715d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f312c3-526d-4f87-9658-bd94394511b4",
        "cursor": {
          "ref": "77e2aae8-5cf9-4973-afe3-eab2076bebd3",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "07d834df-78c3-4eaf-ac77-dfc254742a12"
        },
        "item": {
          "id": "33f312c3-526d-4f87-9658-bd94394511b4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8b0148a0-62ff-4048-90d7-5407ac3ba2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb51d1d-ac20-47a4-a2de-69878d16cef5",
        "cursor": {
          "ref": "f57633b8-fb43-4c59-b2c1-bea4d1e06fd8",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fed69dcd-de27-43a8-9698-f35fb7659b16"
        },
        "item": {
          "id": "0fb51d1d-ac20-47a4-a2de-69878d16cef5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3c1f842d-d048-44ec-b0ad-559aad0bde97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4a6b45-7f59-4a21-b9d5-e9c70ca6e24a",
        "cursor": {
          "ref": "9d9ac8a5-c195-4689-8181-eea8e2526e27",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "77475413-0bf8-4fe2-802c-573e90329b9d"
        },
        "item": {
          "id": "3b4a6b45-7f59-4a21-b9d5-e9c70ca6e24a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e54b54fe-abdd-4972-86ba-17106b427ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9351be24-4030-47da-b293-20ee0f762d8f",
        "cursor": {
          "ref": "409d8e65-5f49-4b44-9750-f8efd879c558",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "468642e0-1c3e-46fb-b8b1-e6c8b5e8994c"
        },
        "item": {
          "id": "9351be24-4030-47da-b293-20ee0f762d8f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0c5566e6-082f-4b6b-abe6-5308675f573e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c81e8a-df69-4e12-9af0-ca8dd327bd7c",
        "cursor": {
          "ref": "caca9077-b5ec-45b9-8be9-53accd976a93",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7f1e5ae1-2891-4f53-83b0-00bf143b297d"
        },
        "item": {
          "id": "a1c81e8a-df69-4e12-9af0-ca8dd327bd7c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "81cf35c8-8010-4b34-b95e-8318b2c222db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab711d8-4b9c-4084-a871-5623d229d7e1",
        "cursor": {
          "ref": "2b7fc4ec-0c88-49de-8ffa-cac61f55b2e8",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "686e4940-f96c-4276-a969-9cc627469ea8"
        },
        "item": {
          "id": "8ab711d8-4b9c-4084-a871-5623d229d7e1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a482a6ad-6188-43bb-8920-f594312af2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8b2e0a-ed6a-46d4-93ff-8014c96a7a38",
        "cursor": {
          "ref": "64aae5b5-bc4a-417a-bacd-73f1a7564b52",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "83b4476c-e05e-4ce4-9506-d4dbcec11ecc"
        },
        "item": {
          "id": "4f8b2e0a-ed6a-46d4-93ff-8014c96a7a38",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f5c67092-d5e8-46ce-8148-e2350a936519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e207bd5-7a91-4c58-bd21-ed07e854969c",
        "cursor": {
          "ref": "faadb33d-ebd6-40dc-a3b6-0036726cdb87",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "77958427-87e5-41d7-b0c8-45479d713d2c"
        },
        "item": {
          "id": "0e207bd5-7a91-4c58-bd21-ed07e854969c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e1417794-ac0f-47bd-b05f-67e4d9779b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498256c4-0c40-404b-920b-32317da588a5",
        "cursor": {
          "ref": "1f7b18db-d90c-4a03-a3a6-d19f3335337f",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c51c51c8-afea-4c1a-9df8-7137cbb5d806"
        },
        "item": {
          "id": "498256c4-0c40-404b-920b-32317da588a5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a0cf365a-e88a-4f81-a808-258862ca500d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9097c1f1-f9be-431c-8c1a-527ac65feac7",
        "cursor": {
          "ref": "68b995dc-0dea-4a4b-9b86-f541a4d948c1",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "83c0fd64-9671-42b4-970f-5d8f86ca5114"
        },
        "item": {
          "id": "9097c1f1-f9be-431c-8c1a-527ac65feac7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "46da4386-ceee-4c40-86ab-ab7557f78fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac948fe0-51b7-4af6-b538-26e9e2ff9fec",
        "cursor": {
          "ref": "59d8e735-0a81-445a-bc69-bbca83d3a445",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "00ab8e83-da6d-4b60-a0bd-bba40e55d910"
        },
        "item": {
          "id": "ac948fe0-51b7-4af6-b538-26e9e2ff9fec",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0fbef068-c052-4ce6-bfd5-6d9a56fefa28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f8ce49-d601-4cc2-9447-eb48427a147a",
        "cursor": {
          "ref": "d96ae419-ad71-4013-8f01-ad498306a434",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "dd0dd23c-3399-4685-abc9-6059e99b4a7a"
        },
        "item": {
          "id": "c9f8ce49-d601-4cc2-9447-eb48427a147a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "bfdf4b02-080a-405a-ad2f-e01498642eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cdc906-6f97-4ae3-97d6-f47a6d57ec9e",
        "cursor": {
          "ref": "7193147f-4840-4e6c-afc1-176b3ad40d1d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "228fec61-56d1-4293-8dee-def6456f292e"
        },
        "item": {
          "id": "27cdc906-6f97-4ae3-97d6-f47a6d57ec9e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ede23786-972b-46cb-ad2e-bbda98e5252a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bb38ed-88df-4d64-aeec-d70e1d59be09",
        "cursor": {
          "ref": "b2645c9c-10a0-4137-936b-b7be04efb7f4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b4e71467-92e0-40ad-9b0a-90118cbfc8d0"
        },
        "item": {
          "id": "14bb38ed-88df-4d64-aeec-d70e1d59be09",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "16dfa60f-745a-45df-89a7-c9545571ace3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9c163f-d41c-42d4-b79c-3ac078a5cbbb",
        "cursor": {
          "ref": "53f40be4-a484-4dba-b4e2-2bc2dcf4e733",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1298c790-a6b9-4487-9be4-b971cd76720b"
        },
        "item": {
          "id": "1f9c163f-d41c-42d4-b79c-3ac078a5cbbb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a2d3e5f4-8fd8-433f-8f59-67e9b5aed9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89374255-f51e-443e-acae-15cb2ecedef0",
        "cursor": {
          "ref": "839d2a00-3223-4dae-a512-81544e292657",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "708efaae-9348-4b85-9ac8-ec71c8a0d4c1"
        },
        "item": {
          "id": "89374255-f51e-443e-acae-15cb2ecedef0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3085003a-ca69-40a3-83b1-225bebefc5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a67a5fe-6390-4179-9958-a573c515bcc6",
        "cursor": {
          "ref": "7e87026e-a7d7-4d53-b848-908b5ea0c99f",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c7e3e886-e0c4-492e-82a5-716a409468b9"
        },
        "item": {
          "id": "8a67a5fe-6390-4179-9958-a573c515bcc6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f05e4293-1962-4172-8fef-294b4b9b81d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816947da-fb48-4973-a2da-ab484f822772",
        "cursor": {
          "ref": "469abead-eaa1-4072-a81a-ccf59306c670",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e7e5cb0b-da9c-45f0-8c86-6103c99be6e4"
        },
        "item": {
          "id": "816947da-fb48-4973-a2da-ab484f822772",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c2bbcb97-f2db-46bc-b10c-1cbcbfd28c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b9f347-fb26-4bc1-a9b9-5ae0485f75a3",
        "cursor": {
          "ref": "65eed50a-48f3-47b9-a7da-5de312fc9da8",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "83d28891-3040-462d-a5d4-256bc157d5d3"
        },
        "item": {
          "id": "25b9f347-fb26-4bc1-a9b9-5ae0485f75a3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "29681f1f-b543-4521-a4ee-c63827e9c644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cc00fd-4f9c-49fe-878d-b7189256f3f4",
        "cursor": {
          "ref": "641e3393-cde7-4b21-a0e6-b9c6e8e1b68f",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f81b0340-5f79-46bc-afbd-ce387459298d"
        },
        "item": {
          "id": "e2cc00fd-4f9c-49fe-878d-b7189256f3f4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2d841fab-05c3-4e7b-9e56-26e29279f3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c909759-8ec0-4d35-9e1b-9f6693815b0f",
        "cursor": {
          "ref": "95c84277-7e17-49b8-b1e0-333e06b34635",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f9016502-0a42-40a6-ae25-eec1a4c13aae"
        },
        "item": {
          "id": "6c909759-8ec0-4d35-9e1b-9f6693815b0f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "adec6acc-0f0a-4cd8-8b90-178e42d20c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9240b6b5-ffd5-4723-8485-4c7703a9ae65",
        "cursor": {
          "ref": "2eb997eb-3489-4172-ac6d-ceead3734048",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6bceeb68-73bc-4e5b-a901-b3802dcb1b68"
        },
        "item": {
          "id": "9240b6b5-ffd5-4723-8485-4c7703a9ae65",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d70dff23-043b-4ac2-835f-df341a67aba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f2d9f9-36ac-4e28-870d-9534d1e47e4f",
        "cursor": {
          "ref": "f9cdb55e-7cbe-428c-a6a0-1f4831f554fb",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a5389b72-7323-4982-97c4-9efb3f3f2298"
        },
        "item": {
          "id": "e1f2d9f9-36ac-4e28-870d-9534d1e47e4f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9ab31c1d-1eae-4632-a60b-8e06ef262905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc5d34a-0354-4080-988b-79ed95e6eb40",
        "cursor": {
          "ref": "ec0af5ad-d66a-4027-873a-4f2a4449c239",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "5fdfe6a1-2cb7-493e-83bf-3291154555db"
        },
        "item": {
          "id": "bbc5d34a-0354-4080-988b-79ed95e6eb40",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "67e5e714-24cd-4635-8d8f-3fa5a0f239c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9620104d-30fc-4675-8321-f2972073f518",
        "cursor": {
          "ref": "61d399fc-6eb1-431e-bb50-737ad91595ba",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "16b4cfa2-648d-4627-ad13-b96066199551"
        },
        "item": {
          "id": "9620104d-30fc-4675-8321-f2972073f518",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "10a29c47-f36a-43c5-a151-99fa987f3d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b061c1de-d36c-4a9d-b845-da8373eab4dd",
        "cursor": {
          "ref": "eda93391-c5ea-4ecb-a3c8-26a728aa1241",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "37a42914-d635-49f7-9f6d-479ace35859f"
        },
        "item": {
          "id": "b061c1de-d36c-4a9d-b845-da8373eab4dd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7d8851d8-56c9-4b7f-9e46-bbba824df1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699bb79b-f8d8-4035-83e4-df856dcb92a2",
        "cursor": {
          "ref": "9b3799e6-5f37-4286-b804-6f0b9ebf0df0",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "406cdc4f-032f-42db-a3d6-c2e5f0c4901a"
        },
        "item": {
          "id": "699bb79b-f8d8-4035-83e4-df856dcb92a2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fb9a3035-b29e-4ff7-a758-61c866b025bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5debeae8-9a2f-47e0-8943-76576605588b",
        "cursor": {
          "ref": "f10cea55-adf6-485a-b8ba-48bf8dbafd28",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "553b0550-5074-44a7-9e60-bf022616bfcc"
        },
        "item": {
          "id": "5debeae8-9a2f-47e0-8943-76576605588b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3d13c5be-95a0-4954-8ce3-e4efa1496ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d105fb5f-d848-431e-9c20-397382854a60",
        "cursor": {
          "ref": "3a18efd6-70ab-47f8-8a8c-b3ff2bf26d74",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "7cce74c4-8e94-4717-a523-ca7462e87c31"
        },
        "item": {
          "id": "d105fb5f-d848-431e-9c20-397382854a60",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e15ba165-314b-490b-9bdc-e740c5c8f35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214c48c3-07e6-4578-9027-175cbb3df821",
        "cursor": {
          "ref": "86a1a105-cb64-4b6b-b13e-be08ed31c7d8",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "8e88ff76-b80e-48a6-86cb-86cb36331593"
        },
        "item": {
          "id": "214c48c3-07e6-4578-9027-175cbb3df821",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "da63f4f5-6236-4acf-a771-715e5ab6a8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123256d3-b0b6-4ee5-8559-9575293a2c83",
        "cursor": {
          "ref": "6b184198-0d35-4ed3-b80d-da2d18489eb1",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "48ee7b60-250d-4f71-9000-e3441fc08fff"
        },
        "item": {
          "id": "123256d3-b0b6-4ee5-8559-9575293a2c83",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a10f3256-f2ed-46e9-a17a-5b5f91a8cd76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366586e7-ae02-4ddf-bb63-3c768abc1f0e",
        "cursor": {
          "ref": "dbd6700d-568e-4b4b-8736-3f457960b371",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b7bf67fe-888a-4086-bd05-24cbd68fc20b"
        },
        "item": {
          "id": "366586e7-ae02-4ddf-bb63-3c768abc1f0e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "86d723b2-543c-4cdb-9454-b8dc0b35bbd0",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b911dd81-96aa-4048-a3e3-114874a8548f",
        "cursor": {
          "ref": "12999a99-e395-417b-97eb-4959e3c8e279",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "de7d6a07-944b-4bfd-a453-1f9fd561133a"
        },
        "item": {
          "id": "b911dd81-96aa-4048-a3e3-114874a8548f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c13fdbf9-e985-4ad2-bd96-520508f1be60",
          "status": "OK",
          "code": 200,
          "responseTime": 3158,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "481668c3-d471-4454-9ec9-254a1235b9ca",
        "cursor": {
          "ref": "2390acf1-703b-48ec-81fc-d64f5a605e26",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "bf9ef263-dd2f-41ef-9418-efea2df48131"
        },
        "item": {
          "id": "481668c3-d471-4454-9ec9-254a1235b9ca",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cfe6e434-fbb0-48a4-8415-d3eab9c4057f",
          "status": "OK",
          "code": 200,
          "responseTime": 2681,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c676110d-5738-42e3-a220-9608f7114be3",
        "cursor": {
          "ref": "0af60171-bebd-4408-8e59-51a2482c86f5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "44d14a8e-3532-448c-ac60-59c4a88f5a09"
        },
        "item": {
          "id": "c676110d-5738-42e3-a220-9608f7114be3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0b6f4441-5a17-4c91-ba8f-73d7722a8210",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c676110d-5738-42e3-a220-9608f7114be3",
        "cursor": {
          "ref": "0af60171-bebd-4408-8e59-51a2482c86f5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "44d14a8e-3532-448c-ac60-59c4a88f5a09"
        },
        "item": {
          "id": "c676110d-5738-42e3-a220-9608f7114be3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0b6f4441-5a17-4c91-ba8f-73d7722a8210",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6252f91-e88b-45b7-b4f4-7f43c0fc5d0b",
        "cursor": {
          "ref": "f1cd034b-b388-4c01-815f-c79ed050dc83",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "fbc6347e-55c9-4053-8ad0-be7160a28b52"
        },
        "item": {
          "id": "b6252f91-e88b-45b7-b4f4-7f43c0fc5d0b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "97fb6445-0f17-47c7-a2b6-41f0599b35c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44b88dd-c029-4446-98eb-4081b84f032e",
        "cursor": {
          "ref": "98d36c58-1fe8-4697-9475-71a23b37c176",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "2243ce70-8af7-4bf4-bcfd-b3b00bee54c2"
        },
        "item": {
          "id": "c44b88dd-c029-4446-98eb-4081b84f032e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d964352d-1d62-4cac-80a0-90ba550b0453",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}