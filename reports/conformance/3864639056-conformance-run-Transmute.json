{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6ec9a6dd-05eb-418e-a926-59871355248c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3a827a17-ea51-4736-ab8c-fa970b4d0291",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "575c8a61-6563-4177-b49f-b05bc3117765",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "211b6d4d-f309-4124-ac26-bd9f16a596d0"
                }
              }
            ]
          },
          {
            "id": "18d67fc3-7464-42bb-8e87-bace3a7ded51",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "47c337a2-acde-4c56-ae0c-eef5a26aa4ee",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f5202bed-497a-49ac-ad7e-122216002149"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e9069d79-51c2-40a7-a6bd-7bb8f8abd6e2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2df675e9-87fc-4209-9c78-8bdf6c786f49",
            "name": "Positive Testing",
            "item": [
              {
                "id": "88b9dc0d-712b-46ab-aeeb-5331e099f170",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01826954-57d6-4a3a-bfd6-e05cc8da43de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34016711-5fba-4c98-8270-bd3aa786ee08"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c0852973-3a91-421b-b5e0-0d828c34431a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5f427cc5-b094-42ba-b9d9-e5f35ae87ef1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b0a7bae5-498c-40a9-a1d8-1264cc5a1d34",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08446f63-6a90-4b1d-bda1-682d82e814f8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "693d5969-6429-4be0-9e0e-20dfb909b12d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f3d978fd-0113-4912-b68f-e1e7eb7a3a49"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61b0e7d1-03bd-4843-aefc-1593539696d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4d47e47-ab3e-48c6-bedf-10979fab0788"
            }
          }
        ]
      },
      {
        "id": "e2462991-a31d-4d96-97f0-4bd44dae30c3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3f2a0d93-7ef0-40e0-950c-c0bbc7341362",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d4cc1e0-7dcb-4e41-a41e-6f897c52f38f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b7e74e99-c7cb-4e58-81c7-f3e941914a76",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b92b0e-4c76-4650-8bcc-81ffbaa6dc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72a72cbc-b2df-4417-8cd1-a3d9798bf676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d74fbcc-a4fa-46d7-acbf-f52e2dcf5f94",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47817fcd-4564-4513-8e70-d1cbab8fa7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "146d0048-0bf5-466e-872c-9482e351991c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3846874-5a20-4f26-a2bd-7ea2b0295b5e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5953bb0-13fa-447d-aabc-4ce7ac66c6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c9b8493-0f55-476d-98e5-01f0aac36f2f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "03b83bcf-4239-47ae-b204-24dcfe9178ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f6831bbb-6c88-44f3-8e13-21f3a5e47b71",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4f00df-60be-41f2-88d5-36e5c615a8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b84c99fd-7476-4dbf-8665-aa073da3715c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f8067c-da97-41e9-afae-5b75a02eb030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b379154-0040-4bbb-be22-1a75c87b47a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bce1e2-2d1f-4f87-b3bf-f6ca969b533c",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee69314-4cc5-4a35-af24-bc6b6e85111f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6579bc26-b9f7-4bbc-b3f2-386c4f56bc13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4b70fa-9ab4-4909-aa22-efa13f1e8eb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "a7af80f3-1f4c-4cf9-aa69-0498acd9cc55"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f430baae-e972-4d04-8e64-d026a609f7de",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7a8bbd9-2a61-46ef-8e1c-6c6ebf8e1bbc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c278a714-1aac-4ee4-8d8c-fb3812e8bb91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "22c5fca9-e9b8-4c13-ae36-8b5a254ead60"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5aaccf59-eb7d-4ee8-9537-3beb6850b5e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "e4aba640-6103-494e-9791-012fc915ded4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ffc9dc2-e8c3-43a1-ba1b-abc11034f847",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "750a347f-89ee-404a-ac23-f77bf540545d"
            }
          }
        ]
      },
      {
        "id": "4e59c22f-9575-4a66-9251-1cdd1aaab902",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "560055c8-c2af-4029-a06e-2f8ce49f237b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a98088bd-203f-4f50-82e1-fdfc77570af4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "151028cf-c7da-4faf-98f2-45f6fb57c118",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a084b4-8fe3-4643-b86a-f54ffc8123f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92df03e-850b-457b-8383-0e982f9ea2b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5472aca4-3261-4ee6-8c32-1eddc7917d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "105c50e7-9714-4f77-bc77-2b9d2d432f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d52613-0bc4-418f-b257-0b3ef6bfe72c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2349082-82bb-4528-af3e-97aa11f662a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d9c592-3b05-4981-8c14-50ec09b54b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa4bf66-6a86-40c0-a1d2-c3e1ad1457b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0db9ae3-8d83-485a-a194-8f1c947f2c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb0fe01-0a73-490a-ba40-6a58c0eb202e",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3289c1ec-a676-41eb-9a1f-b4545b2f0669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7739a9c2-7dcd-4d35-8ccc-dc81825d3ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f754af27-c790-42bc-950d-d978336df27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6409f6ad-da19-46ff-80fc-23bcf9a4da03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641988f7-3f88-4283-aaaf-e59b0f2ee52f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a64bb6-d114-4899-86a7-1eff368039f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a99c5b9-02a9-4411-be16-0790cd941f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f1a48c-e3a6-402d-bcad-3dad19f75175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c6a7f56-6588-43dd-8cd8-c740f13f5d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2f6ca0-ed24-4efd-8320-141a47c0cd45",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b2bf13-6f33-459b-9540-3f0a5b555693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffcb0c71-0218-45b0-b1ea-16a0315ac09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae2789c-c916-4881-a85b-4ed8fd296293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "478fef51-001b-4b33-96ff-95fac785222b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1897ce04-30dc-4c34-944a-a48e51be1fdf",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d20b3da-658b-4b0a-949f-ffa48c7546b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f26e0f-3099-43b6-b9ab-a3f3413499dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c3aa19-c0a3-4743-aad4-4e99b0a3d790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3301dcce-923f-4572-9053-3513015ec989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f5bbb5-9638-45aa-a51c-a0376581eb19",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a8cc61-3c11-4419-a38d-2a38b67937eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636841b1-55c9-4259-9ce4-d39849cf63b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd120d27-8b2c-4a20-91a9-60d92c52b68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "269bb7ce-85bb-411b-a959-c52e83e23ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5770e0d9-f525-4894-aa49-fc24ac161c2f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f757cdd7-c6b0-4a43-b850-f3def688ad48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33e69cc-445e-4acd-9436-3ff4b4d4af3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353e7f12-cbeb-44ef-b6d0-b3a3535c8656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccb538ca-1a89-4a20-b165-dbdafcc359b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f186ef4-26ce-423d-b783-56d185b7ed7e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2639345-e1c7-4cf6-8aa5-cd2b92af3154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c88c1d63-e2a5-4897-b339-ca6cfe6ff99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bfc30a-b7a9-43ae-9675-54840a1c7053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9eabc1f4-3b1a-43f8-ab0d-19fa359bbc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49613b02-5f4f-41d3-81f3-c0448c80b379",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66609c58-6c2f-4447-a9d1-69f83abfc1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66eccbe7-cc13-4605-8af7-b6c7d18406a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a85e735-89c1-49ba-8926-11cbfd73bfad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "882cebf9-77e7-441d-b826-416d079e66fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b45215e-fe62-4f06-b605-e2153c6cbca6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c08b25-3847-4b25-8b47-ab08b326b974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea56719-4874-4967-b85f-2e8689af67a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f97ff6-1a23-429d-929d-f3e55d0e6fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cb8f5a1-6f81-4f95-9add-8a03830a1df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b9938e-95db-413f-9857-31c7904f01fa",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a209b096-35f0-4851-bb2a-6caae45089e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f51b62-be4d-451e-851a-97b81ba2b13d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c35c5f-c558-4c4a-8d90-d024b275bd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0625c08e-b680-4b60-8dd2-9bbaf08f2a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff062960-21d3-4d39-a97e-b23fa87f2a67",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ed7453-e0a7-444b-a5b6-4bd88bea7c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c750fd6-83fc-416d-87e6-30bd5b0b4188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37837cf1-56fd-4bab-a4c1-68f9c2ee7655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "195d5e08-955a-4af1-af98-18e78222a932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048a2af5-7f55-4442-a698-979af57968c0",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84936aed-c4ce-4e3c-b064-7c44d48ad7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aae1807-75ed-40b7-b5a8-9cd107de075f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7836eaf5-e2c5-4500-9c9a-b9bc04a78a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdba7dc7-d38c-4e58-abe4-2e766640eb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03bfb0f-4b62-4741-bf7d-c627f0037181",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff529e4-05e6-4838-a60e-219d146b148b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98bcf490-26fc-4813-8199-bd4fa23f444a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38b429a-ec8e-4a4b-806b-2fc1dcd403df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1b83f91-2e64-4f40-8dc5-db4d668c2942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5842300c-12e0-4a5f-94c0-c2a9cbfc1130",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a071a489-236d-45fd-ba6d-73efef82bd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd7c4a7-0ed7-4a36-b50a-5ccbe8f5e542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772aebfb-fe5c-4d63-b8a1-7611d7d84de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fc38bb5-1f4e-4b7b-9e6d-e727de0b8e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a20c73e-3af9-4d1d-b83c-00109ab22aba",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361bcf2b-eb75-47db-81ab-10dc5250eda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c181d5d-fc8c-4ae5-9c9a-ba5d68852090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689568cf-a1db-43ec-bd0a-c2d7befb16e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "303dffab-6728-4ac2-b182-8437189dd41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c6496f-5116-4a0b-b45f-45c57db17fa2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e3a04b-431d-4a7a-ad89-a5d17b67b2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649b4924-8e2c-461a-9687-23dcbed5dcca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61aa323-7b24-4181-b5a4-92f07f58760e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fef01cb5-f8fd-4df4-9945-8d2c7096565b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91471ccc-e4a9-4e26-a6d6-4b78598d46f6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1eef213-63ca-42ea-bc7b-284c23d8ebb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1e9e65-dde9-4dcb-abd3-787d4da0c1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8c93bb-92e3-46a5-964d-01c0dd2bc46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85b5808b-f405-424c-a2db-0854b5db4041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452d28f5-84b5-4184-a3c7-e8c687cafc65",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fb1776-285b-4480-a044-646ccfcc1aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc951e8-77dc-4c90-b944-d102ca2684f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fbed71-2995-4927-8e6e-70bf5b152f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "efd29607-29c5-42c4-be18-292f799fe0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad2509b-6ed3-405b-9d10-5d31a188030b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62347f52-4791-488f-9a97-db87b9c9ac22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef733d5-34c3-443c-9b30-b1acd085829a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c012c8-1015-4fe6-9a4b-a2af637f7276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdabeb62-b219-4ef7-8fc7-0883319b438c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8589694a-8530-4b8b-b763-920315f27b48",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d372dda5-81b6-47a9-aa69-7ebd853730da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a623f6a9-dd42-498d-89d1-40c700d94449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a036d7-63a3-4d13-add5-69184963ee82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3acb8b03-9112-46df-bd29-e333d09c2496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1e0771-247e-49ef-b627-b93f439c450a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb72579-9de2-44f8-aa8c-d521b87526a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b2f632-bb92-45be-8890-8f89f4ffaf0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a91d45-87a8-479c-b0b0-84d833ab1852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd078669-a75f-41b0-b7fb-365de95ef7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814743fd-bb8a-4627-ac9d-c6dfc88a37f4",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f081ca-e866-4d3c-aadc-b9aaca286313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1bed025-d858-45fe-81e1-8ea7ef684748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411602b0-d633-4650-a0fa-13f52a245fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1ae52e-fbd6-4cb5-b9fd-d6bc0689bbb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42302b5-09e6-413a-8e2b-02c873e33eb6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71303075-6e74-4918-8b59-8886a197f24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1af079-98db-4fe7-a503-5a1c15d6d911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc093955-81f7-499e-8137-ca543ff36c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1196d52b-6b72-4262-a67c-23c1d46ee31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3496ef38-46d9-4f93-a31c-7612daf58e2a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d933adca-b14e-4570-a3ab-80c624dcfda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7973373f-d975-4e0c-ae88-e5b6cd602bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7da2078-6fa5-46a1-b5ab-dfc5519bdde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e332ca-15f5-4e18-b18e-f25ad048ed6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e1c038-1712-4674-9114-a1c5a80cd679",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e62805b-0cec-4239-8efe-c8e5a2e87294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad78acb-2df5-4bc6-a3c6-868956fbf72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed601c7-7e02-43f7-adc0-6b48ff861187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a233ced-0e85-4eab-a81c-ba7611975af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c33c85-8c46-4327-96cb-e27467d3a992",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a1085c-c18d-46dd-8210-2aac0982d28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29d20cd-e86f-431b-875e-f80098442324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578f2485-bd4d-4e9f-b5d3-e55328181e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "837c36b9-6d07-4d65-9ff8-ac8b38cfd33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7827dcd-f1df-43bc-ad46-ff65a393a273",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2feecc-26cc-47b1-906f-69f6fa1b8457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaddc010-9a39-416e-9df7-6d2b0a996ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c7cb18-ba35-4921-8a61-671c16452ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "64980755-8138-45c9-b1b8-eefa8d544df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebbd29f-7487-4c93-b73a-4855ceb2d601",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed73894-8a20-4346-916f-6206e112cc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32299934-7631-48ab-9935-09f26b551663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a81e1d-c8fa-48c3-88b8-5084a1600ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86474957-a523-446d-b31f-1ac1968dc1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a351407-203c-4ecb-8291-248bb2897725",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7955fdc-38e5-4f24-9edf-7f90ed15028d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3977c3c6-77dd-4770-a51e-4e1ec55c127b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87043cd8-26cd-46e9-b840-9013188af6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e97a36-0fb2-43ad-8477-30ac01f69c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e02c972-6b79-41c0-a2e0-5178b9f47cfa",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3800de-353f-498a-b487-77690aebb370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1cb7557-8709-4c83-94a1-bc45fcf11115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be32c90-702b-4ed3-9941-a6e8b6e34fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "51d8ee23-1790-428b-bbf3-d1f57c40ee9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f571153-8696-4eee-9078-ae016ea1fa6d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc4f1d9-73fc-441a-9f7c-9dd08156a2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc63f39b-045b-49dd-b88a-3f4e6d6fb329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b542fc6-4cc4-4246-893e-8884d3045bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a00737d7-f714-4395-a17e-5d66fcb74a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa19084-a1ee-4e3f-b016-9385d45e55ce",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12583b48-5874-411c-9477-27b77e9ebb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ba64db-7751-4dec-bf76-38012344063e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58985a2e-545a-4c03-8d6b-3ca3a3e4a6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea85b39-34a7-4425-a2ad-fabaab78730d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdf6d11-aa7f-4877-85ef-ff472aa2b862",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f84655-47bc-41f5-935a-c4181fe9f708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb630c61-4e92-422d-b925-ad44d0906ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23e522a-2126-40e9-9972-2d2923097c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec52509e-954f-4787-ac6c-38e74073fcee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e435e00-888b-440f-bee9-2991e79d535f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5690976-4f45-41a4-913e-1fd122724721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4600067-9c9c-4e3a-84eb-736e5b74ec46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979b82b3-5a87-4269-a3c8-0ca617b0a9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cca1a55-75f2-4e58-b7ca-d1fc4316940a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc9b15d-7e1a-4de4-b0f5-3173a20f6aca",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30861e07-b13c-4faa-8be1-ee6595fa476d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3309db-2f34-4ad7-a853-658783cc3af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ef2b0c-9ca3-4928-8a0d-e01afc1b23f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3d17ef88-48c4-4e93-ad84-ff600908be03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5bda476-56f4-4662-b623-96bfa986c0a3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2086d4a3-6fdf-48f8-b1f0-f9f9d70b64b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f040afe-254e-432d-b59f-e879d3e35d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a558b49-664e-4765-870e-96dd14a5816a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c20875fd-5fe7-4929-a0a7-f66ad799372b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81150448-90d0-4442-aa21-24ad4a0b29b9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b41376-20bc-4d62-9703-9e4546a65d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11dd3113-b0b1-4921-acbe-1b89d1ce4b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6b10cc-f6ac-40c7-a04c-922f1fa84a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c859243c-1195-4304-970a-e27385486566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8541ef7-6bf9-43cd-8050-39b13b217eaf",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205ba267-07ce-477f-8870-9d1f7db6a8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71249c1-1409-43ab-b5bc-697ff7d8d90c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2917e342-7a7d-41e8-93f3-2e5da270a7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a19a3ad-1542-4c73-b025-209b94cd5db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28ab23a-198b-4a86-bf95-fab641bd63cc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a69319-35b6-45cd-a69a-c72f278345f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6c5506-942c-4a8e-9060-c377715b729b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5421e3a-1d21-49b6-9bcc-094b8a95cade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "04fb3071-1978-4a6c-85c5-67098b9757c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b289567-248e-43e1-9d65-c8f2f18a2913",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b60301-be2b-46f7-82b8-e5df7ca42d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75af4d2b-759c-485b-a150-75dc55ea2802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1709de-91fb-4723-99d1-752e8a4896d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1a8f86-b2af-4a44-9a7e-4a877d7df8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68da70e4-15fb-4682-901e-5e2fcc3c3a86",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d15771-8670-4c83-8bda-d208665ebbca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "061c3176-faba-4fad-abed-e169652d4d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8e3bad-77d9-4bdb-8206-7657945d67b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2673a7-3bb4-425e-bd3c-b3081edc6c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11665ffa-d495-4b1e-b547-3e8c70dc7b35",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8f930e-f2cd-425d-809f-be40f9bc1af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9f2c3a-a6f8-4c3b-aa0e-f239b21ce015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94423fc9-3b3d-49b4-b544-c06b6f3a1357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ade3f5ab-7920-4d25-9163-09b2bd1ed984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073449db-b8b7-43ff-a53c-a1da88acdbec",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a658ab9-1261-471e-b5e3-8a9aada67f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63fd5de3-2119-477e-86b8-1926bd1e7456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e43d9d3-48e6-421c-bf22-91c681722d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "792eb229-219a-4fb5-b704-353e62681bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb5b6f2-26ce-4c09-821f-ea0f51c086a5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b544a7b8-1174-46ef-b170-5f7bfa7cceda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9004b6f3-52eb-49b9-8003-ec3d62732ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e960e73-16a4-4b49-b40f-40e9d552374c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6bb3b8a-ea3d-46bc-bbe9-cfe27d82c95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bdfe57-4da5-4768-8009-9ba08578b4c5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49dc07ed-4991-41dc-bdd0-4d26f9524924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26aabecd-7a73-4532-81a2-24c93c64a66c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f346c02-f54f-4db4-b323-5abdc08ddd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37de48a2-1788-42d0-9f3a-392c603288e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175b68ea-204b-416c-83b2-74be64185e7e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21a0b40-7baa-426e-8285-3abbd60b40e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe1fd02-6925-4637-a1b4-38d5477e86f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8f2037-2fb8-4781-9250-9dcd885a6058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9135373-43b1-4c3d-b4f5-5ea11d803b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e22d474-fa77-41fa-b2b0-809ef115ce8e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f5220e-610d-4b2c-b138-c78cb06b32b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fffb354f-3503-4d1b-bf77-d554131f20c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ca3187-54b4-447c-80ae-249a0c79a30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56335fe1-f18e-46b8-9c6a-bd2fac405580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a49856-65eb-4798-9287-7c2005f8dbc6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b647be7d-66bc-4638-b36a-278925a90f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2585a84-e262-4841-831d-ecebdd590a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d91c368-cc1c-49e9-9e3d-f49bd2325255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0de54a82-b920-437a-b60c-f0b4f5d9ff2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffc0d57-c570-4036-8098-974b0e37f555",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e1d72d-514e-43bd-9266-d66127444b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac62404-adb7-4ed7-8e21-4598038a4a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3737b4-0870-4cb1-9d42-86e8f2fba2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef9c232b-a4e9-47ba-bebb-1012b5cf0179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a01620-d4e4-4617-9cce-05e331abb51b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c1dfe9-eb1b-4ea9-94e5-ad29fea5dc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900c0a8f-a8df-4582-820c-295ca0e2d9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2187f6cf-3c91-4900-adcd-cd0ee67251e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2365d8-e6ac-4bca-89cb-e53b14dc6e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602eeae2-7af5-4796-8c12-a8e0c7863d58",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5007fd30-0748-411d-a2d2-f61b45ac5c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b676456e-ffda-4b37-a4b0-cb5720d8e026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc071aec-e74d-47a0-b868-54c70044879f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d998b6-44f6-4fc9-87ae-451088fc6757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ade196-a45b-483a-ba4e-5484b0c2123e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abad1fd-6991-49b2-8d94-201bff6a67b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9519d456-e066-412f-94dc-48157c880c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0943e491-9c7a-43fd-8c9f-62f5c7bd1b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffad06bb-8f1f-4b73-845d-c2a9e3b455eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8716b10f-d270-4e4d-875d-82c79ac60e55",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135b08c9-7124-4a0a-a7a3-150474aebc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbab5598-7a08-410d-b784-e406553821b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e385d94-16d6-4663-8f12-1c417b7743d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79a06067-fca7-49bf-aa71-a829d8dff3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c48a1c-9954-4144-bba1-4731a4a585b2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20f7c76-79f4-45fe-9178-32ddfd0c69d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a328426-7dd1-4e44-a364-c9dd591cc428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88703ccf-920a-4132-9ca3-555a5abe0e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba62703-e7d0-497a-bc0a-005d98c24351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b156ba-eced-4020-b793-33d5447322a8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c92211-eef3-4f3e-90d7-f5b7a7673f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77201f91-0eae-4c96-b1c4-8e3a1735444d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748db522-f7a9-4298-b8c7-91a44ba4588c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca44ac03-c969-4718-b71c-861f2778eb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8026fd9d-f977-4b06-9579-60072799080a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ddd437-2062-4bec-911c-99343c6417c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0017bc9b-389e-4e2b-8132-4e263e310071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7927a2a-29d5-4ef4-8d85-d8a92b2ec720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b73b6d-ce40-4ea2-b167-b1e7b05f47c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f71fd6-793f-4305-a298-28e426b5cfa0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12051c06-2632-4201-bb80-3c83750feed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1717ca74-1ead-40d7-84a8-8ac64b57cf07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb46c61-d1f5-4912-b923-9c4dc15d8e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc5c0d3f-5841-464d-9422-9d39c7d71346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab4e3aa-e4f6-4495-8fff-796f310e01f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5661a1e-f72f-4bc3-a7c5-c406b3d863d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec2c170-8afe-4953-aba3-0037ec4276b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de71ec6f-edb8-4409-b2b4-aa5a253825b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b337441a-73c0-4110-bc13-ccf5d0c019f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f2b46f-e4ec-464b-9bd0-1f3392973b57",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80638db-a710-428d-9f3b-373cf705f502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf89684-e091-4d8c-871b-06e57035bfef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d675877-c063-42de-8459-a623f1d99e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b4fdd1-fe4c-4827-a685-7b595b59aa91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1935881d-a922-42a5-a81c-839cb7010eb8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8674f0-247f-4a2b-9e0a-a4634a4383ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea2b270-ed4b-4f13-902f-57f29381194d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1e6d32-e0c5-46bd-9651-cc6ad7f1bbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d85197c-16ad-4287-b7b5-b0dd6235b9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cf638e-338d-4339-bcb2-e7961396cf01",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8353da8c-eeb3-4f6c-be0d-124001df408d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ecc38c-26ca-486c-b4f4-46d0285d72a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af68164-4066-47ce-9b2b-6f24ede27069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3eacc1e8-ba9e-40c5-bb8a-2b74f5083483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27d8baf-51c7-48c6-8bd2-f8bd87bc81db",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108ab668-7d15-4a51-8968-13c48c7be296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eedfc44-7d59-4cc9-98a7-bde033d90eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e1e3fc-30b3-41f0-9a3d-dce9312af4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed26ae94-c29a-4d02-b54c-65897bb5e51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdee425-2a02-4bbb-ba70-6adc666dfd26",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5198c2b6-363f-4d36-bb27-0301d54cf2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a28af7-e7a8-41b5-9d0d-9a14e28187e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bccb6b9-5180-42a9-8d73-2ae9730208ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "86133976-204a-4b9b-8f6f-16b8776f4e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13904a21-ee0b-4c55-949c-576ace5a27aa",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b377d5-2146-4388-86e6-9b3ed2f95688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f84ac174-2bd9-4e99-a8e3-800bc42762f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f57ad84-2727-47f1-883e-e1d693b9f560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d7fce7-5069-44fb-a31a-d95ecc0de450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ee3ce7-f428-462e-a4d2-57432ae6c6e4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b256e3de-757f-4230-8268-485b69bcc900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a947d2d-f72a-4189-8059-a26c4f2c5506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f49215-8ab3-4425-abfb-b4f6b61c7031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2213d5af-e660-4ac2-983b-e90d67a5c266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e624eb24-4760-43e3-a745-a5dd887d1026",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d7a3a2-1209-4002-852f-c868db464ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3bfc307-b799-471b-b031-e7437326b515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3764d6-df9f-4199-a48d-06fa9176684a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa318ca3-b1de-4323-bcff-72b91f8287e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc65ee8-82ea-4608-a4b5-8d91690682e5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e651448d-3cc0-4b38-ba2b-d1057e2dd761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec46c19-405b-4189-9d0b-3f9505a68ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b50d11-8d22-4da6-b124-99518ba7275d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3bcb753-1d7a-48ec-afaa-266480404d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d910756d-eca1-48ea-84a0-660cf37e133b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db9123f-e3b7-48a3-9d25-201f655ca037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb57352-001a-4c90-a9b1-383fc3569c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a90f909-b19b-406e-af9e-207fccc8d9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "062ab926-1179-4eb4-87eb-0f66684e8496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96edfcb9-c950-4375-bcae-375c37796a8c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b92ffb-7abf-4c0c-80d1-47d091f8b909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2bdb35-1ad7-4352-8d44-e6a02e8fe08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69b6b79-88d8-427d-8a64-b8103f6b9b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b452cc53-7cdc-4d4f-9818-b1e0508ae769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc7f6a3-89f0-439d-9ac2-e757b8c01670",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c562497-d370-4152-b989-7fdb472612bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd607c9-eb91-4a93-b56c-ca4f4de15c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f16970-3318-4b44-a173-c0deafd71b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1fe02f0-cf45-4074-b89e-6bfc9eea2a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b38de7-aaab-4ff1-86fa-9767abc217d7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad8f9d8-7226-48e5-baba-70db4a8444e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b142746e-5a39-46d0-be23-9c50f4e477c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71ed666-fc9b-41cd-b968-da1def5c3768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38f62d6e-2784-4096-b9f9-5eab73d9e214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c74cc9-a0b2-4032-9a07-20001bb207f6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60c6b85-23ad-4695-925d-94f4e992bc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087255ec-4d19-4ff7-8abc-4c99459e9588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e21069-8abf-44ed-8917-f63f37584c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21fdb8bc-2ecc-454f-82ff-d6eed160a6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40e6426-6811-43dd-9ecd-04817254bcde",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee4c67a-d875-4285-850c-e1c12d3b5d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ed6de2-1062-41a8-9168-14797a74b20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e982ab-d35d-4e66-bf03-415ed948e366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c41b7bbc-2eac-4932-a3b0-0eaeac252f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fbdb29-01b0-47e8-9704-773f466cdffa",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799af475-39df-43b3-8d81-0839a8ec8300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b51851c-0537-4845-aa1f-5f5328822abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee26fad-9f62-42da-9817-1583a2a26bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6cf3d32-bce5-4102-8c62-ba75c2e15648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944101aa-181b-4533-a596-1727e667a4e4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362b7ff5-2e5b-4874-9faf-f47dfc9dfcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85e6364-4876-4c9f-ac45-85232235ee7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a30e699-955b-44cd-9476-cf5b72f47957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "65f8723c-daaa-44ba-b4f4-1b394f90dd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e7445d-3f41-4c48-a610-8ceb35974f70",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b51afb6-c817-4272-bc2e-07d7bdb9090b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997a1d5e-2e7b-43fe-b7a1-c5450e6c0948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8536b8-48cd-4286-8de0-836882195d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32b4105c-c199-4b61-9230-1b2b31353dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267ecb8d-ca1b-4585-8141-8bddc2d541e5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461446b7-102d-4761-b069-6065233ce910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712d5c27-883e-4285-b692-61a41b9f79cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69be0d10-c4b7-46a5-8372-7a8a766f7ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8de8ca7-801e-47f1-95b7-e2a12629ca00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8e5b99-cf1e-447b-bcc7-3c11944d2357",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9242f96-65f9-4316-a1c9-7a95842a1015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f2f875-44e4-4e27-8d88-38d6a81a26bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fa1deb-cf35-4d5d-a0e6-2109bedfbf17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3594abc5-7a9e-46f9-a8e8-dc5fd5b2a3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4718c0-8066-4acd-b2f4-0ecf02015ccf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c882590-bf26-4a17-8e47-95d1a85b6145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3aea20e-9f1f-4562-8574-532f1e2c0c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47106764-e38b-4020-a0a7-07eb5118bc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "108cfcd5-583a-42c2-9f78-56d92719ff0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d6099b-0ed0-44c9-ad1b-de497537f78b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edd7a2e-35d7-4103-8670-c1ec640a13c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02545c76-2653-489a-9695-a14105b174a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd8fb83-5142-454f-a741-37ab84bcc323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f144dc6b-015f-4d58-8af4-057a92a3b7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73587484-7ba6-4f4e-889e-dfbd30210205",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16322e0-4f93-4b84-957c-cc916f67f983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19c2ff6-ab58-42f5-99c5-a39911de7cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bc8c81-eb98-4736-ac88-d624f5bb143a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "19f7e7f2-d6dc-40a6-bec9-134e91183e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509febd1-af24-4c79-bcb5-ec0c82dab7bb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0320cf9d-033c-450c-a926-8120360c465b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121815e4-eaa5-4550-9419-1467e99d2b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8eb678-7bf1-4844-8570-65f3e31452c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98827a7f-a35d-4229-b283-82324222521a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144b79f5-6a46-4039-9c68-7ee21cafc773",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63eb60f0-ebc9-4cb2-97a0-3cc5a36f05e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4074a2-6441-49ea-9326-e40bbf8cae61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfc0d9e-7f9f-4e5c-b359-330e77b88523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c267ad41-fbf4-48af-aee1-9788f8e0b5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d7fae0-170f-4341-bee2-ae0042f1406d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d88a86-e6dc-4975-8789-cd76b20bebf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf91a7a-022c-49ce-b6e9-99d734f6a1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294cac2b-5ffd-45e4-902c-f543802e20af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69214cb0-cb06-4334-8e50-248ff0f526a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea02bdc-1e1c-4936-aa0c-45cafbd1fa35",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6ba5e8-e4fb-47f6-a1ad-badb3f26d68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b19f10-b2f4-4c54-902d-ef88a0f67d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee72705-ea81-4d3d-8df6-92e3c992f937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78e616bc-d4c2-4dd4-ba95-20b42d72e1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3997fc-c448-4ca0-9b1c-0f8e7d7d316a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2334ad37-7b29-4ff2-b997-116654889a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48091e1c-1979-4886-845d-d7144226d413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5b61bf-724b-42ac-b0f3-c2d73d2aed4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e56139b7-fa59-452f-b152-7a2c7c826e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3adc6f1-211e-4aaf-b01d-0a1abd29a25e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce6e7ef-6eff-4faa-8d8c-0db4696dae36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e900a9-0201-493c-9a42-dcf1d0526077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b40e349-f18b-4f0d-9732-d9c488b75edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "20c49498-75f4-42e6-be57-1b23188c0953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a9b6dc-b1bd-4fc1-b10b-703f1341d511",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638aa1cf-c00b-49ed-b72e-7ff88c7a375a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35996a20-c542-4978-8377-c1baeed46123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1b5caa-2f6e-4761-92a5-dfc08102ad38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aefa5d44-5bfe-479c-968e-2d692aa9eb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f061a0-1f1f-4ff6-9f20-828021f9d80f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0173b26f-4435-4a55-953d-d9a529fbc265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ab9d7b-8895-40c4-a402-43712830ff9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58fb50d-0ce0-4854-82db-5d0070643df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "91bf6f62-3d00-4515-9cc3-f771392e64a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9921def-7264-4794-9f58-795e445a7eb1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f655b621-957a-473d-b223-b0ee66e86129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bcf364a-3908-41e8-a5af-67c4b32ee624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275d38b3-2270-4487-9a20-b13ec4028320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8a936c-057d-4302-a647-8ca96c9dfa16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4a1e02-2312-4329-9f98-362d86cb73f1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8561b9c5-7bee-438b-87c0-e5f3c6e3a904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145c3e7c-0a4c-4a4a-8b70-6a570f3efdc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a502b23-1d41-48fc-90fc-57575686c4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "628d2ea8-e777-40c5-bfcd-8b8a21fbc31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c590e14-728c-49b1-8c20-a2e95736c32a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e968bed3-9e21-49b1-bf53-495fc74f6492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cc2f120f-a054-4499-81f1-14d82caf96e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991af49f-1b42-4bbc-b422-a65a4ed5023a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "89f54ea1-8b14-47b7-beed-6d0f916fceb8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ae361af8-cef6-476b-a3df-898656991c0a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc692235-7728-40ef-8e46-b277491ba9b0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2424f7-adbe-48ef-a2f4-1bc39e808516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85410c8b-2f69-4d06-a155-2b3ae6efd22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e153305-58c4-4dda-99ed-d10905460459",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "8d00ff9f-9ba0-4c0c-a36c-30c81d046176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3bd09e4-099c-4658-993d-9703ebe638ac",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ad14ce-4a46-479d-8548-e79a4ee0db9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d8ce2fd-4ab6-47d9-be8c-241004dc4544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd60099-565e-40ff-b6a5-77c71b1f7142",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "50cf8271-83e8-4487-9a4a-b2c5a03c6035"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7dee9b2a-9e22-4e88-8f0f-df7f18572736",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b243bcf2-e2d3-4f73-bea2-79b0365b95bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e8c4df7-888c-4508-9f6e-694fabb1e947",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9f7616c-d86d-498b-b2bf-5510fe867b60"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e62b1132-efc1-43bb-8429-775b64609293",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c170efb0-f38b-48b8-9696-bc5823e55eae"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "180b46cd-2f79-4018-863d-82512e2071db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e514f02-18bd-4c97-b200-dace2e2bd617"
                }
              }
            ]
          },
          {
            "id": "7c0b962f-9025-440d-9e51-7de81958cf48",
            "name": "Positive Testing",
            "item": [
              {
                "id": "76759e22-c88d-4c7a-81ca-ee8f3e3f7b82",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "edfb707e-cef2-4b56-a73d-249f3b144c85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b26d5ce5-874f-4069-8ee0-f995d77d2a08"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "784da04f-5120-4b65-8db0-7afa2b74f1c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e689aac6-c7f8-44d8-a14d-6594c1882503"
                    }
                  }
                ]
              },
              {
                "id": "15610021-d8ff-4e20-a185-194525ed190a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bb51657-7fc0-4788-a33a-352f8077b81e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48e3b107-cd05-467a-af2b-9be129e2c313"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bc07ca8-c20d-4cea-b5de-9afafdbf5d7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b86f0afa-5d41-45b2-92d2-8625c09ec913"
                    }
                  }
                ]
              },
              {
                "id": "40a92e75-2dc5-464c-b5ec-938b21f995ba",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93bdfbdb-96e3-4d0d-96ff-df5c88071f54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d05bd091-61e3-4d32-bca8-ceec4a59aa2a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd7ba444-9d72-483f-89ac-2e7b2e1ca6ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6a63b0a5-ecbc-49bf-8c4a-48bc1481d788"
                    }
                  }
                ]
              },
              {
                "id": "4eafe056-0cc0-4d39-901f-6c476874327a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01fc0198-a4eb-4b74-8377-d1df1a67d84f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed0564dc-11e7-4a9b-b87e-198f898a9f55"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c17948aa-e563-450c-ac49-d3301fa9ddad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3a2a6d07-a7d3-4604-94f2-d33481ad155f"
                    }
                  }
                ]
              },
              {
                "id": "f4eae95c-9b6c-4664-86d2-7eef80ac5da3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b14ef7c-b5b1-417c-aa35-69b2a6423374",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "748f65b2-3dfb-4325-aa22-0fc5961213fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1b7fa64-9ed1-460c-bc75-b4f0588b397a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "13227229-02d1-45d2-b69c-55d65cb381fd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f9564378-f5dd-4a6a-8866-b465214157fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b07dad10-d027-449f-935f-3f67996ef618"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c60724b8-6633-4188-ae3d-db9b303af6fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a639428f-4d57-463a-b320-1b00a123caba"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e299a59-66c9-423d-9c86-a27d1c3a296e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "376f5e0d-2e11-4c76-ab52-c05011ce6461"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "822bbc79-9358-45e7-850d-7b706b71dcb8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1a23c62-0aeb-40d1-92a7-6df38a83d560"
            }
          }
        ]
      },
      {
        "id": "c5f942ca-2207-4661-aa7e-c009e2a75e88",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f94a64a3-d659-4084-8dcd-f25f5a2a296a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ccac284e-49c2-4314-868e-5e4d707712cc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5e21597d-b397-4875-8ab2-5267375f9a8c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee0f528-05f2-47fe-88a6-83b3b4bb7ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64910ee6-140f-4080-bf12-12d07e42f478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d239a85-6c35-48aa-8ada-0feacfb36fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb8e08c-b663-47ac-8500-86e40f41d2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2aa9887-9448-4269-a4a6-c4363704d46d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d30adb-9949-4971-90d6-3d09954ee704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5010b0-f7ed-48e6-b1b3-638428cd545c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf9620b-a68a-46dc-9500-ff2aba79cd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e3587a-dec2-4e98-a474-16ddf9eac388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd3a8c3-0dd0-4529-bcbc-e82cc65560ff",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67043d33-105f-4a3c-9a51-5a0f26ca6b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d63d528-438c-422e-af15-6638b3341389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6185860d-c222-42e2-be98-b3220c0d1fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8489dc-63eb-41c9-9686-48c121ea08fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861b18c9-2329-4823-830a-6258a8f5ca21",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bd9b90-e9de-42aa-bac4-27399c35e3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5029dda-96cf-4577-a1b0-071c0fc972d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c523385-6e59-44ab-a118-fdd31852d61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e063169-8a72-45e1-bab0-c3f22ea17859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf061d8-1446-4635-8050-11ce1ec8982b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe0f626-8a44-4df7-8954-ac850072fb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04376d02-c24a-4889-ad48-0c7ec3f120e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88991eaa-a35a-4ae0-93de-fdcd57e77557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8feca2f-9855-4448-a395-4ea41e9e89f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4f0ab5-acf2-401c-863f-1b1bce92a292",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cc8fe3-bb63-44d5-bd20-57447d574ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00503e48-e36e-4e55-9464-8f3f5995638d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae376102-7e1e-474c-8d4c-7aaf0ccdc7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4a35bc-3827-4c62-a87e-e864e124267f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e04b61-936f-4a5a-a115-70145d410b46",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f160a0d6-a899-4f97-9feb-05cbb31191e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d038e004-cb1c-4969-9f22-c35750d0202b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9411de5-99e9-4f9c-80b2-f11d0f642199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd69ff0-4484-4c34-9ee0-2e4f6f24f71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefb53f8-359f-439c-84d0-61de531b54f0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7ce6f2-7a9b-4c4e-9e47-660b4179dcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcef566a-e954-4eb1-872f-e4a9b2812740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b12fc0-d2cf-47a0-be07-3af540eddd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "978b1a0f-5533-4668-9d86-7ee249bcc549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7331057f-a6d7-44e0-b5db-84d8bbc2ac6b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac026bc2-5ca1-438c-beff-3f5103ac1b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede728a6-0803-4cfa-af68-7efd6f2d469b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c71c5b8-88f5-489e-ae0d-8590ec2590d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dce49df-7bdc-48f6-8c82-750f479dab49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae6c44d-0cb3-4a4d-80a1-25cc36d4cf13",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c3fcaa-2c4d-4dc3-923b-635b556718e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37de77f-871f-4cc0-ba7e-7952135d8942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7209e590-ce4b-4882-ae01-9f1af5b36dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba89ea1-f563-4faa-be5e-5a56ca440726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b57188a-57a7-4abb-b09d-1f06d1d904f8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6eaf8b-2400-47b9-b60b-48e9e9b9ffc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c27ac5-b448-4391-9c99-f4304e0e2610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb039b8-c130-47d2-b047-2b4a715a71ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e1d0b2-064e-4a81-9a97-a48fd53f1f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7abb647-97c9-48f5-b56c-9107834df8e1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05556e72-e28b-43b0-8dec-963355680950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b015c75-f6e3-4e06-9b6b-6b814c1a90e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156e6d6e-ea31-471e-bf5c-44bf70727cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e714dba-d215-45e5-9670-cfd91a8532f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b93248c-fb88-4ec1-9283-bb04a59b3e21",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305e683f-08bd-4720-acc8-ba4d00b899bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b45fe29-6182-4b07-8669-ed33e1b1e8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5a1537-cd6b-42f2-8498-2a0d3c1b3067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "647064ea-e02c-4176-980d-4680f2504422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf15ea78-2734-4c54-9e3a-be1f73bc2857",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7d510d-efc5-462e-b612-50e0e0215ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b038dad-0dc8-45f3-8e2c-ce2a8024d6dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef31bcc-8ded-43c9-8848-f0ba6d497900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9fd5128-c743-48f5-9a54-a59d829c2164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf052b49-5982-46dd-83fe-ef906fca523f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd050c6f-53c3-4976-a138-0d339dc8e720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13505417-e7f0-4988-bae3-f18f302eae1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c3fe50-70d5-43db-9381-78770ec2966d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "207ef607-652f-4fa4-ab01-fc9969ed0d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cf752e-70a5-4a1f-9dce-0049717bc7a6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd64497-fd9b-4879-a8b3-5c413a67050b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5942ff0-e412-44d7-bd7e-94dd6446a912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182c1a05-ea6f-4ee0-9ab5-8247eea24cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf7fdf7-74d7-450c-939a-3aa1e101caa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff11a419-7037-4c93-b072-397cd9e91476",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de698d18-62cd-405d-990d-035a5bc553ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb2cb5b3-d533-4de7-8bf9-0d1466580214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26105802-e98a-43b6-9443-f9c0eb973c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5356328f-034f-4d29-9272-399c9dfbaa71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00db4c39-ff11-44c9-9b99-7b15b617e261",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e49010-a98e-4b2a-bcf1-f467d3a1dd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc07adf5-8ad6-43a8-83fe-4b769ccc03d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9c1a0f-a20c-4005-a9f7-b1ddefe768ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "14974f57-00d7-4466-8e0a-3343c2697f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da63939-ab80-4249-9dc6-a5463f98d1d3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac34de88-b756-461a-b26b-9f0137fa3d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4054eda6-70e3-4da7-b4a5-d7ebb8f3aa40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e10d3a-1e97-4ced-b64e-d1c43cda3b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57d4a2aa-66cd-4b7b-b093-954320b0ef0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339fb10c-2559-40c1-b485-7e7134bf8b18",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6aa75b-6f1f-479e-8df6-3427c62e8790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a377bcd-eb22-44ec-9638-bee56a879d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735c7231-b752-47ce-9187-f92274e4e2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23986a4a-a992-44ea-9a1d-7692a7246dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2017c412-18da-45fa-b56c-ffab9eb0e7c8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82b2aed-e737-4999-997e-4d781381f955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c73acd2-b42c-4473-9185-b08a04f72bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06398a5-2594-4cc8-84a5-cfeb63d259ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09b50ab0-73a2-43f4-83fa-e0ba61cacd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cce4f5b-e075-469f-a650-68e40d1467fa",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02194fa6-95f2-4755-a2ca-71de01d55ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952c881d-9e22-4257-9fae-608fc5637eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64ab2f8-e4d7-402a-b52e-831ded659b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6175b7d-f1eb-4235-9b30-6570f626072c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0183284-84e4-4c20-a56c-2525129e5a7e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6f88d8-9547-4116-96e3-fc74c74ce11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814ad560-0a31-4352-81bc-b18a7b4b7dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845b2c82-99c6-423f-b0a3-a58b9afefdfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d53374e2-1fc0-47d7-8350-c70b9ae10db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21e72ca-6951-4ee4-9a29-03869e4c2a93",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef82d77c-e085-44e7-96eb-64fc26f0d5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cd9b52-9ba5-4d6a-9e99-b93407e3b8c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75920f2-645b-4d49-a994-450b7a2b9e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d27c08d-1495-437f-a145-7b9b3116b49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e07479-fb81-42d3-8e20-c35e34503950",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236f813e-f1ee-42bc-adb9-1f6973d081f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda30836-fdf7-4222-9341-2a49f0b263d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446502af-e99d-47da-bf58-8e9f8e6c7164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87eb30ae-2878-453c-a9cf-34dc9575d63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f5c19e-e58b-4a06-8522-c40f91222f7f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6d8e9e-aa2a-46dd-9480-7ad6b8b006aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65d71c5-ad1c-492f-a690-6adf5f172061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286e2f85-e4b5-46e1-beef-9db7aa00af0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c58d40aa-af86-442b-8e8f-0837c04f1f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae3e6af-ef62-4c6b-84d0-05b9af25f0dc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79a361c-d245-4912-b293-5d05f0035f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d5506f-62be-42eb-bc0b-0f57c8e87873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57504c3e-59e6-4056-9edd-5464232cd3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31a4ab7a-7ae1-44c8-9ce4-17d7296030fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c74b309-a176-41bc-ada7-f4fe78f7db6a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7dab215-eda8-4fbc-bd32-f9952ce9558e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8fce49-032e-408f-9f88-5bef542b3809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1dc51a8-f165-4edb-9f02-6284b6788a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07cbeca6-8e9f-4686-9838-c7c2d113dfa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09306b8-37a4-4d61-ad4e-2453c939310a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e373ebdc-5d89-45a9-8b89-9c47f657bdcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317c63c6-ad5a-436a-81fc-25f5d5a2fd5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d50a1e-55ff-4b4a-a408-aa4f96515cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05494cdd-ee3d-4726-a4ba-4bdf4f9dc2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca4731e-4b0b-4183-9053-1aac0d0617a9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa74f22-6680-46a2-8186-67475523c4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330d0c94-94dd-4661-bc38-86f599f6f613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85f509d-1095-4968-8f17-4dcf792cd831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb77b501-5d91-4f3d-b296-bf3ad5a8218f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff706529-1a36-415e-8e42-f1bb02729f2b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1850fa3a-ecdd-4418-ab69-d79817b2c83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0fb6d64-6d32-4d18-af99-f39103ede8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c015dfcd-ef0b-4312-9ef1-f6529ef12693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "530f0f50-454c-49a1-a82f-106da08e29e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16573bb-5091-4a3f-ba24-6fad670be5bb",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9583d8ec-2931-4953-b556-4f5f0b604d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351fe65a-8564-40b6-86ef-e6b5fbdcb800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7cc2fc-103a-4224-8c03-b28a050049a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb89fc1-0f3a-477b-a0ec-17c699d7458e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8014f37f-5acb-4d1b-8657-258e1ce55d45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3d48edb9-2ac5-45ec-80cc-041149942902",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eba8a33-52cd-44de-88c9-45b1dd033f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "092acdab-6719-45cc-8ec8-9e8c8f1d6071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88d7bba-76e3-4a2c-a1ab-1e935cf75472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41e97224-2c5c-4bc8-a7fa-258f10d5afca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27ba6cd-8e34-4720-81dd-7bb738b7f63e",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3fea8c-b213-45b9-a9a9-5bc666ddf578",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "6aa9af9b-d851-402c-b6e0-28fdfbca040e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "416686b5-63c4-4259-8088-464e177ae0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df861c29-ca84-4f8d-a101-e876aa1a111e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53c5892a-c74c-4d41-b9f9-bffbbc81913e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6aeb8ed9-5855-449f-9504-611ca41d3b91"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a104a592-f622-4cb4-a347-e59655bafa2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d597bbe-941b-4938-aeae-547534c073c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d68839d-590f-4c7e-b536-8a6c9e09f2e6",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d8aa125c-d715-49d4-b959-5d0c50e5f7d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fce176ff-e919-4e97-9d6a-ff50ea4aadc6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6eccbe0-1c98-443a-8738-7e0b5d614d83"
            }
          }
        ]
      },
      {
        "id": "0c1b3bc2-a7b0-417a-9ca7-6c28365cda7c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3a05e490-1524-4488-b32d-ce2fde965d70",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1d635e3-f89c-4dbe-8450-ba82468a5aa8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8be4a976-9220-48e0-9440-c1b33739d3b7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd4f233-44e7-4139-9b23-d5fabc3efd1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb68342a-e66c-4add-98a0-21d411951711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed23f07-732d-44c9-9832-df421bbbfae1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d58351b-02fe-42cc-b4a2-eb114a3a1de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6c907f-87df-4994-b54c-0c44282eae41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e3a3e4-318b-4be6-897c-dfbc9f9ae3be",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea12adf-493c-4511-8d17-5534de532fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf9fe57-4dc7-44df-9d51-a9fde470f449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63aac8ce-e37b-4ac5-aaa4-173c5b5c32ab",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4e70c4-8e75-4cd7-885f-874018a02b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eef8ae6-fb00-4931-aff2-7f3f553deba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27c4a8e-587e-4b62-ba76-57e777e91b44",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e147ad04-1475-4bfb-bf8c-c209f7ce38cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a7025a-338e-4d12-b82a-9f17fff591d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fceb6b-b026-48b5-8272-3d9b2a958dc1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb42f31-6c3c-4dea-ac04-1f6adc782928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434594c9-c52d-4032-856f-e31f22fd0a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7444ba-58b2-48cc-ae95-34fd0cf121d0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7063af-f707-43a8-844d-5d5f9043ba6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0874e5a0-1fa1-491d-9a02-aa5e56fd75fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d792836f-e02f-41f0-8172-f30e3b662245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22353f4c-e003-48a6-adda-09f3b4ac3eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c01b29c-210a-4670-9189-b585166463c6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc3b9fd-be98-4edf-bc82-5c440ca55ee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bcddd02-b8fb-476b-b445-a7fef814c083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2eda10-271e-4609-a796-f2f81ad1a7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c16ae72-bfde-451f-879e-1b9f53596786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3954d6a7-d4fe-45e4-a72c-3aa868eaca38",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60c4cf3-0eab-481f-8356-bf218bcfc3ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c394b24-3003-451a-8400-8b703089eb94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade2772f-df66-48cc-a227-f5f752756208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04cf93a6-40e4-42f4-b7c4-e3b0d4e11d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a82c772-8888-4c61-a471-44582ae682e2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1affc12-4921-4b00-b279-34cb15090bd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e562a2ca-16df-46a7-baa3-cb445b5934ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae0fa59-297d-4f0d-abe2-7426d5ef6b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e1903e-b35f-4ac3-81fd-883d13df48e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e6c5bc-99b3-4646-a319-03d608d4bc45",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad0d0ae-e13f-4536-af3b-3e096e3e432a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "833e70e2-ca1d-46dd-a9eb-0a1a7728e39e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d37aac-94db-4120-b83c-1668e94f35d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0130d294-b666-4039-bd96-9bb1a0529adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5a57e4-29d4-45ca-a9ea-2d2b9de6beed",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1715b83c-991d-4316-af3e-bf5776650388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e831cb2-1fa8-4f15-a222-0d0e43bd88a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d27ef6-55df-49ff-b0d5-411b51d80a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a5f2a10-4b27-4bf3-93a2-f5cef48b88e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8dfa704-8a19-47fc-9321-4b0939a89184",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a57bc02-55fa-4a19-b285-9c146956ded1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "066ffa9b-7e15-43cd-9237-06576a0ff9ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "681db4a3-f029-4a5f-aa0f-882ddd4377e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166bf5bf-092e-4a7e-9d42-79db55656254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e38b80-4aa4-420f-96a1-6eeacbb47620",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b860f857-0b66-44f5-8ded-54921b90d3ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32cc1770-f05d-46a3-803e-7e7ebe5b24da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc697789-3481-409d-999e-d59a2002ee70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305a1118-827c-482f-bf0c-90cc4b099de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b18eb3b-0ab1-4c88-8e12-fdcee2bb59c5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4f626d-1898-4749-913c-ae78644d2394",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d66c0590-44f9-462f-8a30-2d247bd9d902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81316c51-83f2-4741-9222-4383ec0d2d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5bf5fe-2413-4924-a767-0dc4fdc9449b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c476dd9b-df2d-4ca3-8236-324955a95a0c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97f1a8a-1915-4da1-ab03-b6eae09b6384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd7ddc34-1746-47c8-b27c-2940ec2a874e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d52ce1-1b6e-4b01-8fec-94f8e7372131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d764760e-bef9-41bd-a8ff-681415fbe842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a880d4c1-3f4d-4fb6-823f-917e59f28127",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df53ac8a-5638-4f7b-9c20-56f76a98d569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9764d736-424b-4b43-8bca-16fe4881e37c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d7bdfa-78c4-4dcf-9c45-b321a79de190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70eae68d-f5b6-4439-ae2a-bf227f81e82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85b0e93-d0a0-4031-9e44-54f7133e677b",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8a0cd9-289d-4b70-ad68-c83c4b6d51e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c454c9-f247-4cac-920d-97a983bd6bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ab6452-efd4-4b1b-a3a2-0b712636d869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ace9fb-d27c-4d33-87d2-64f2dab3ba84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f178671c-377c-4772-915f-a3915c427da8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57eef7c-c07e-472a-8c8d-6ca713394da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1864d5a-7e7b-424d-8f56-057a4750ff37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a0cfd7-7220-4c04-a840-0d8bc2da6337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98302b8-8490-461f-9092-1a8c066438f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa64de78-a3a8-4b33-b31d-0d4506a2ba50",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542fa0f1-cea1-4caf-845c-46667e502f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e47914-053d-4cf6-8883-f5697aab8379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cf9b7f-18c0-4db8-9199-80bcf0e8ee9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e7f9d3-e4dd-45b6-8ca4-7991e933b32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3ebdec-56ee-4f3b-82cc-b25a80960d1c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8463e3f-6a01-43a6-ad3b-ca937d5e67f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37f612e-198a-4c43-9196-ad01b99aa102"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79f1d3e-b72e-44c5-b41b-86caa0c848c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeecee80-119e-47e6-809e-f45d2bb42ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f0b79c-3454-4b02-a1d4-f37a2912ff62",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba223f2-298d-4a60-990d-de2deb4fd224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4dbe48-072f-43d8-94ef-8518b42db5a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d019fff3-00a5-4234-9223-e613fa96bfa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ccc691-853a-49f9-b9d8-f055df6994df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40db4238-ddb6-4af6-97f3-f68da70a4339",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf385ef-ac72-4cbe-978b-0b7762863de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4796348-8f8a-43f8-8c4d-db7641075afe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91562596-9e05-4a6c-832b-1e90c48381c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31804faa-1fc9-4f39-a9f4-b2d83c996559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd496b87-d1d2-4df5-a381-0b136b3e7a45",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf8ca0d-81cd-4463-904f-463a908e862f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f3dd29-a50c-4f9b-8734-0dc9ab63811a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97293ce3-d6c4-45b8-bcfa-54cbc6ac51f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d4b3ccd-d426-484b-8458-e4b58236a3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abd3676-7e66-43cd-a440-d9c683bafbf1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeffee1d-6937-401c-b464-7227257bf8b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34f04ad7-4895-4422-ab85-d6578b987a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4dac479-8b74-495f-ab8c-e6c186b195d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19ab577-1e73-4a55-aae8-9a0d58d1cc88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee334793-f074-4705-af90-a1502f6eae21",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55b17cc-d6a3-448c-8627-ceb983bdecba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d2a8356-99b5-46b4-a6dc-afb99cd4a84a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3260cc9-a8e4-4d29-8b7e-f7da6247c949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71c3a49-7099-47ca-a123-db4c3aff8e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7346f1f6-bbed-4daa-ad1d-11e11c0f8b60",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d393df7-26a3-4dd9-b234-72c6fba08087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d584afc7-0054-418f-bbba-0bc07b30bf7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43432b71-659b-4aca-98bc-12066e3be90c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715da236-4f2d-4b90-b092-0fff3de5f1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20716184-beec-4548-a9ba-8def639d98f1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2b9029-3fb8-485a-a6e3-005fe240fcec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e66fea12-1e56-4b9d-bc43-a85cb0c3003d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed52aaa-d103-49ef-80d1-cae7c6748c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd99aec8-4a82-4efc-a7a6-3f409c1eb5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03da6598-8b3e-4320-ad6e-501ab45e4f48",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e571e0f2-4b13-448d-b642-66d1aab71165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641baaec-4b5c-45b1-ab0e-fec6ebb35950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd60bdd-4503-4207-9a38-87ae5dd7551d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c82aef-47d8-4ee2-9cb4-9f376f001558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5b25e8-9efe-4fca-a16a-75f18acfc3f5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df3024a-550c-4118-b293-df8d5be1e941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f95e9e3-0048-46bf-a2d6-e667e0093f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d956d7-f883-4d96-ba8c-c6dfde280c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018ba392-c948-4a25-b200-c87010dbecf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf24a76-af16-4c31-b28b-7f8334a5c81d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d220ce7-36a4-4f02-91e3-4a4586c71595",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bba84279-3f1b-4be2-9338-7a9a1477937a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c9d858-31cc-496f-91ff-38b7fa3027b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e67413-d967-4ac0-86e5-3391be3a911c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c900cbb9-8265-4cd3-9d72-213d0a9ce07c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857bd3a1-a4f4-425e-ad3f-044676aa8758",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccb34af6-62f9-4678-9d72-b0e4686b6b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2fd703-f061-462c-a077-852efe95d471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e029089-d9ba-496d-9611-346e21b0e860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46466055-b2aa-4a70-ba23-ce77cb6af502",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015f8a44-5ca5-40f4-8939-55739eefb8e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7f2d815-4d0d-4f4f-8ef2-589d10126ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4dec50f-20c6-4206-bd70-9fc58984bc9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c59b5e9-24a8-4e53-bfb4-157099bad2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7325830b-9522-43a7-9e4e-35ce6c254c8f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5eba94d-2322-44ae-a952-af79e5ca91c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "337c41ed-19b1-4415-95ca-46c49df17f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca91883-d449-4953-b64d-67410e109072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6eafdc6-ed61-46bd-82fc-ac2f96dea3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f6ea65-492d-4908-8cf1-e2a0a3a682f4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337123b1-a6f7-48d8-8f6b-df91e394889e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "058a9b60-19fb-4d96-b5a3-f06a9254bfed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfdb5d9-a519-452c-a007-78a3ff0451c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e50f0c6-b86d-4670-ba0a-f362534ab093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c94704-47c4-418c-aae2-ac6044b3ffed",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8916dfd1-166a-4136-9504-580a64e2ede8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9420db-6854-4d55-b483-f85f79499a09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce311a2-d7a6-4bcc-adf8-7d6f1a60070e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5f552f-c74e-4185-af87-cd12ce1b74e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b592337-1d2e-42cc-bbb3-efe93b2c5f49",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4a0c3e-abae-4ebf-afc4-3395b182ded9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b146f2-9900-45fe-b6bc-748a5eb7ec17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63757e3-1cad-4cfd-aad8-d9fc305f2854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a9c4d2-6d7f-4391-b706-45b77025b553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5c2211-7137-4610-8e3d-4670b2711b82",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db44b64e-4f50-478d-a239-9ce0856c4e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad85e502-b5c8-44bf-95dd-340ca62d4906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6af3c9f-5427-45e2-aabe-8b7bc84800d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318a8c78-5311-4276-a0a0-93da506f6e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c1f222-9aa0-4f29-9bf4-066f100bcec6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761be323-2a04-4683-a2a7-0c145a0fdd10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abb3b43-7e34-4f6b-b4f1-36e5f55075dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2844af62-d0fa-4072-847a-ab5dea6f5e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8eacd2f-4e93-4553-8c50-69e750912ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9adf331-eaff-4224-b468-4c17c0bc47d9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe78840b-86bc-4892-9c7f-f848fb6c24bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f357d5d5-c7c8-43b9-995f-8177ec82e6a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb43115e-921f-4fc4-b146-8896cbcec911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20cd9d3-baa7-42c7-a760-30dc13a5c2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c929a62-6df2-4502-9299-6fdd8531cd20",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af48178c-a20a-4c54-b2da-d6f2b02e53ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa864aa-e4c7-4e75-869e-017feb987b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff310bf-f240-4c35-ac51-ba9d9a51fbdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f18f0b2f-42ee-4f27-b6e4-98f8d059d0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c67a434-26ec-4f94-b9f5-3f9b6ecbe118",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7362cc-3c3c-4df6-b87e-f1db0499f493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f1b4e7-192d-4ce0-bea6-dfe4fc09e0d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07243930-8583-4552-8494-6b4a1d20a44d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08fc2be3-beef-4d5b-980d-c40dbe5e5114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4422bc-853c-4193-8b7e-13163331cd7a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd35eecc-2367-4836-9279-fe90d9c6bfca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f63e757-b88d-4f8f-8fa2-8b7f7432ff48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9299ed2f-b729-46ac-887d-23158ee6807c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e382b239-2980-45fb-a68b-b4fd81151e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70e41c8-098f-40e6-923a-8d76e69556d3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796f32ac-4b16-4cae-931c-73b4323347e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c8e44b-049a-4e1c-aafd-9059ff05c4af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "229a7ab5-ef47-4f46-9faa-42c0b6033e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30052fd9-cf1d-438f-b8dc-29e5cc9016ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4badde-cc85-4c94-8087-80e963712e36",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec372281-905c-4564-ac47-be0ed7063a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28edf847-78b2-4ebe-8f01-2db47e24c90d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "890e45a3-3e16-4d2f-aceb-24dc55415949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b19f5e3-8c29-4086-aca3-b47b0b2aadad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8ef022-22d2-4cbc-a61c-74b7c8fd1ba7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131c5a77-99e5-4d05-8387-4f417851623e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de9b32e-d8c4-40b5-9ea4-1868344726f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4282bfff-c197-4fef-8292-0a420ddb51ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08711c7-558d-4299-8aae-79486a73dbe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5597659-e19b-4f94-a444-031e6cad3adb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df49bd0c-eafc-430d-b5dc-b2af679d1bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd2e5f2-eec4-4631-8b6a-76bc9ba6d53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf8ea9c-4f1e-429c-a76f-6c5c1e323cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be26d665-5d14-4043-b2e0-71089aeb5367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e511683a-a2d1-46a7-81d0-2489f80ef7b3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34ed1bf-ef3b-44a1-9afd-2f939de462dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f5b710-4ff0-4428-a5b3-1b75407a686b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0718f53-5957-4cfd-b414-505c3d65f0e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43aa12f3-a8b1-493a-b1e9-ece32a95f91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ad04dc-515a-4a9c-afb7-31280b174c48",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ace85f-64e0-40d1-b154-17edeab1bc7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58946e02-d235-4be9-a353-9b4b340b3643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c515cf-59e5-4974-97eb-2f3d0017e577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8be6ad-5f4e-4ae5-839b-f52d96045578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11ca8c9-4026-43ae-93af-4856588eff85",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e022d9-0d7f-422b-8e33-2ccea48bf46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d613a3e-33ba-46c0-9e08-7ec1849e0f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836b194c-2714-4d6b-aa86-07d84897dd11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0037f16a-d218-479f-90e4-d2dfb8ea5296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a9fc66-731d-4db9-b979-2782f6629e5c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55696df1-40a9-431e-aba6-0525f7baa05c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1353d8-172b-4949-b4da-82c93c785a42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a88bf6-72bb-4816-ac00-ae5859ed7c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e258210c-9d74-49bc-8361-bf73fcf49713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899ccc63-a5f3-467a-b031-6f129145f44f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f7c282-a10e-4e8f-a25b-3a5b22726f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3708465b-964a-4981-828a-3f193a6350d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac8642d-f0ed-4b29-a4a6-bb43df4630e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436ecb90-fe71-43a2-9afa-9580f802cf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cb7498-490c-4592-b3f1-31848dba1b13",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3792441-8e83-4b7d-88af-599bbf336c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ddaa08-6c69-4dd7-9cb7-12da312f4909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef995cfe-09ea-4243-bdbc-33b8a7a7e061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe14a4e-6663-44c0-9d96-d3157768b3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e59ae7-799a-4bc8-a97e-68990e113403",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9077d3-4559-4d16-8fca-b99ea1f8185b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dee8f1c-9558-4d40-a73e-704f7d2c4278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3d2345-eba6-4d22-9066-b9ac45c254eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ddf500-6a8a-458f-a3ee-5d7a709026bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d60af1-186e-4c27-b545-17cdb7612744",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec5c8a7-addc-4ca3-b9a9-1520fafd6dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "601b6f1c-aa33-48a3-9bc6-c56e5e674181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b020983c-2058-4460-822b-5c4d2d2e7ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f186e14f-2983-47c5-b71e-e41f8cd1c7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae9114f-8d8a-458c-8827-d7498f2c10f7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04ee4ac-da4f-40fe-89bd-125e330cb439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c20c8f7-4381-4ed4-9573-6ae018156951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdef6d9-3a9f-4bfd-99de-9afb3a9604bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a110338-4546-4ba8-ac46-d8baee10eb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010d45af-feff-4ddd-89d6-9e22490316df",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f4851d-36ba-4718-a9a3-8667bc9e4eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95f6f66-b40c-4f68-8405-8993fab55c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99132739-b1ac-4c8f-a1f1-78e0fe5e2049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8450e7c-9474-40e3-8b8f-87c5d04fd4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df59f697-69f4-49dc-bf87-76f8d8c7f043",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e9efdc-4977-4577-81d5-f417e68d9c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f18ce145-64f5-4b30-8608-dd62042fd7dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56078a05-bad1-4a08-9b4a-1ab0f608b56d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a42e74e-7407-4a96-829f-c97b2715e7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cb3fdc-d78e-4972-87ad-b6b4956c8110",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadeed2d-6cf9-4a4a-883a-86169bfa9278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7094f0df-7a94-40c9-bf3b-4bd1738256e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8d1373-cd13-41e1-b656-5abc12614475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9fbc4b5-0fa2-4dbf-a515-2b1400af2e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b26ca07-482d-4d58-9e37-73f98371123d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad74536-5507-487b-a0b6-458018be8cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318d38c1-fec0-4af5-8980-67f48bf6f201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "772dcc75-3af8-4b9f-aec3-12fbdee60b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae2393c-b0ff-45ba-a883-bc1de960e9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1703a2-9770-4c2b-af4e-d303c0ce88fd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ef1d5e-2567-4904-9a0a-fe7d3e6a039d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ebc3b7-347c-4153-91b5-f13de4111639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7199e3cc-429b-48b7-a268-c31de2553b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4547d7-5071-441a-a8b0-f86cfe0008ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87137803-7918-45f6-88d8-30bd74419c76",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a426d14-fed1-4c2b-aca2-ac5166a36104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6d1e1d-a1df-4680-9e3d-a48ff9119f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe828ac-c5c7-4785-b21b-37bf501d9fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a07a86-da01-42cd-a7e0-2550ddf2f631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7b1b12-33c7-4ca8-b03a-f4058e248d1a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825b54fa-f8f3-4401-9b92-5e00e3717153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af18601e-d55b-4889-a7c2-deec18e31721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbc0fe8-d420-4b58-bad4-897740ea49f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb9a13e-3df4-4762-b339-69f79053f027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305c39b6-4704-4ec8-86ba-22be2c42fe22",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211d9fc7-0c8b-419c-b27d-fa493f8332ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa51298-ce1d-4760-aa30-09a6b5efa0fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64475a1-086b-430b-a2a9-13ae47c4fbba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80a40cd-840a-40e5-8976-becd6bda321b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4894e94-25be-48ba-9e18-29cc37f38b9f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd0f381-4335-4b43-8b15-5b19ab977164",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09125930-8b03-452b-aa52-2bb31bb31103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2367a7ca-0dce-4653-a2c6-383b79533277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ed034e-6908-4847-8a50-2a253348f712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf08177-f4b5-45fc-bc41-584ac0a75d2c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2822d9-19f3-4fd2-84ae-d320ef9794c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "559d21a6-2337-4d27-bdbf-dc8e1892bfa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bdd965-564e-491e-a3fe-2f469ee2ce74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef6d834c-f435-4afd-822a-accfb632791e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0065cf39-0bf5-4051-94ff-8838256f2bf6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab21393-411b-4119-993a-72a05dd4497d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d37e8cd-7e53-4312-820d-d92aee28f7de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc67c51-39be-4448-82d5-209abe35fa1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41002df6-a788-44d1-a81a-afbcd150cca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0472967-10d7-47bb-87a1-18ef59c8c7be",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bcfdd9-3a34-4e22-8099-0d6a6c5133eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0839f269-2392-44e4-bd9b-b76a8186f964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7b8ee9-f808-4d4c-a96a-d33ce5811233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49cff840-d961-4319-a6ab-56e17d5e497b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81831327-c26d-4472-8c53-7790e7ab660e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6902d2dd-8934-449d-9072-1d3147ac4add",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b7a8a43-69c2-431d-8fe6-ef71cc3a560d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eabb8eb-e45e-47c5-aac1-b6d3fd667f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94229254-c781-4faf-b3a5-e60b1c67b72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c419f20d-9635-41de-a203-8813f5463dbf",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa5b715-21a8-494d-8e2d-39dad12fa8fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eacb7e9-34ef-4b06-b915-94aa28456984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6fac04-92d8-4af6-a7a0-b6b66261a4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa508e41-55a9-423c-a83e-113f5fdce4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfedcb28-c083-4e9b-9e66-7194a6bcdd09",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21bd16c-5acf-42ce-b634-52b4522c2f97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f06a696-62dd-48f3-8ff8-d2d9cdd61749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "041f063d-259d-4c4d-8862-1e1dc6917f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86a7649a-16c4-413c-b280-fecf62ead37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e9fa6f-38a2-47a1-b6ac-84626f66fa70",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e3cadc-64aa-4ffd-ac5b-2d923bd3569f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2623d6c0-0d41-4a85-815d-96544be2235d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4f8a15-8a4b-4d54-8504-25e00dd5f3ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d71f21b-b860-430c-a995-29ffbe23a086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df20779-404a-423f-a4ad-62619218b1a3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9196643c-2b1b-45d4-bb44-aa34ba0b7d6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3b34321-d664-4b1a-8164-b3adf603d7da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef8c151-a3ca-4758-a159-8a5ee5b5fd26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ed6f30-c2c4-4ca4-8156-588f166b6e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1883dfb0-1aec-4071-9b61-28861dd33386",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399b982d-0835-4f70-abe1-2c4bc89e4496",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28655725-ae7c-4b8a-aede-acec921e8faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d431ae-1ea4-4abe-8c59-03c4a35fd4ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5154da04-0088-48ee-8562-9889daba2c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c937da-86a9-401a-a2fd-47838cd0b578",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fe0116-8f84-47d3-b857-a9f2d85706a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3869033c-abf9-4fb5-99f9-0e4cd12edf0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5dbb979-3d23-45b4-b06f-c9e439353445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a3a328e-508e-4369-98eb-96fdece8d3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebda25a3-a51a-4a13-8f42-25e3e0922222",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7682a29f-feb6-4347-b059-f4eefccd6732",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8a460c6-ffbc-4955-8051-5061ccc09b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea4a51c-589c-4d35-a136-5df40e593bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23db11b-39e0-44c5-a215-5ab7f40251a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfb420e-3aa8-4bae-aed2-7e43ca278d96",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3c6637-80d4-442e-b412-466b721a8c51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fc464d6-b009-448b-916d-c750c2792d2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcef922f-693e-498b-8d4a-fc6a2ac484a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd1eda8-44ea-4711-aaa7-bbe2ea00fa37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46667c97-0642-463f-951a-6a0d4d99a7f2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd73c33-3e64-4608-b7b4-f29dc58ffa40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a67262d2-a6a8-4381-bc6a-03fada302a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf05cd4-dccc-4ca1-b1e5-890c61fe76e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332cbc1f-71da-4c77-8395-952850fe36f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229fe891-393d-4eb0-b376-aeaeeb4ba6a1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10415fe6-5830-4697-bf01-b961d408e8a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff8aad1e-fe29-4624-9912-d42f0a3d2077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b30993-f689-4dd3-9477-c9719227d5d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e630d2-1920-4ca2-867e-7ecd71b9bd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215a60a1-7b55-4b94-9250-82d1c8fac3b3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6b3d7a-5f13-468a-9431-8fe9ece697df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee7fc83a-af55-425c-8f96-6887a3fa7654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2520e6-3693-4ed3-ae50-2cd08a1c6e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832d8fe4-5f01-42c2-8459-36d049134782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0784a67-ac1b-4b00-912b-dafafd1dd228",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38425a56-d83b-41c2-be59-323ff6fda383",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87831424-261f-4900-9321-a44de08c5f43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "440e9ec2-ad03-4171-9ffc-939a4f31fc39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21737d01-71e5-49a3-948e-8787d4d67fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a7f433-878d-45f9-909d-da26a5b25a58",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec51362c-52b4-4df1-9325-9d33c9a851ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c731375-91f0-4085-8b4f-1d5b70b52f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4301c706-20e6-42d8-bdf6-5341b9d42d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df62d1e2-2010-410c-8689-f291662be186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b6a06b-99ff-487f-b1e0-934138a101c7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e87c51e-c0c9-4a73-a61a-c5edbb436cbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "917424de-f54e-45b3-b256-db33d9cbbbe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079a7341-c41a-4bdb-bea1-23085be7f5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0978f1-7307-44f7-9f81-d5f50567acbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb4f056-7d4c-4020-a62b-652b27f776b2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efda1bbc-db59-475d-a767-3bdd37150947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2919b5c8-76de-43f9-8c6b-2cf6b85d3ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf42c4e-538c-4ac5-8be1-1dbe775d04c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a2f4ad3-11ab-41cd-9d24-8a4a22acf87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84dc169f-753b-4a51-8b7b-09c1f5d35c0b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc46c4e5-97f2-4c6a-9073-618031dfc114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b3b88d4-0469-4e83-ae56-e931240a1435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d92793f-0dae-4f5f-bf43-e228f574f280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a88b5a1-9926-4c19-bf8b-f3103ecc8773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a059cb3b-8d4e-4ee5-b376-f2c8cf90170f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967316e9-ff93-4fe9-a1e1-e224a26e5699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d5c96c2-9e59-456d-a504-5e3acdc3f783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd170e88-4c2c-4e36-b8bf-0186a3508ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ac6c6a-991a-467b-9cfd-afaacbe29c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7de7e2-f388-4e12-a7fb-90446ec6b7d6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35157789-cd98-4053-a2e2-3f5d8cd92a30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d22d756b-a1f9-4242-a842-6f7c8a4d35f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bfcb9a-887c-4b79-b338-fbc758a4c196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231c129c-9ec4-494d-b56a-0da389f668dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc965d2-dd13-4bcc-9929-6bc9499123cb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a55cf3-46b3-4148-8685-8cdc3f8525e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e4e2598-a209-47d7-b3b1-e8373665266d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bab30f9-2529-4978-8e84-ba6246600da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff9ff61-814c-4a52-8be3-3642d8e987c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3f5ba1-bcb2-4c37-877e-ff79a0a15000",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275ef0f1-8dd8-47bf-8545-01b0b2e2c674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "167fd650-f87a-461e-8e21-1daa784a7699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2389daaf-54dc-4f71-8c43-eb82d067147c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c9af4a-d622-4eeb-911a-df97b17eeaf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fbe7d2-536d-4874-9cef-026ff31b9a58",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d9aae7-673e-4f5b-b17a-8bbc1601acd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7578826-bf79-46b0-9479-00144702bb28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fa64b5-0d17-44d7-af5b-f9964d25010c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615172d3-0600-45cd-ab9d-8792e8785a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6e11ba-d7bb-491f-86dc-7e26c272529f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3872ca2-572f-4f99-925e-e092f51b1dd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4391850f-358b-40dc-9088-bb23573df616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd39e9db-9ac1-452d-aa98-9a634d43cd90",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8372d508-ba6a-4e26-848e-5bd67b8bf105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cf8007-9ab0-4b0a-b394-ee4d518583db",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ca0a21-e407-4353-beb9-c95251948d60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3a98f87-cd17-4597-ae04-2a98b77c90b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31078b71-b622-43c5-9afa-0049faa9bb07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c200efd-9143-4f65-8496-f698424f51dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65315aac-3685-4fd9-a120-dae904a84554",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b13aa19-baac-41ce-b4b5-437bb1553759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac5a4d4-c588-4145-b5f2-33aeb6bd7ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1277c990-5442-47e0-b29c-053acc94cee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941bce4e-8d81-429c-8c38-937eae4f5900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23327356-37ce-4bef-9c63-0a3f6a3d0f79",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87703ae4-5190-4ef1-80d0-a65aa17db897",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a019ce7-932c-4a6b-958a-122dcf6208da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad938f4d-4d9e-4f4b-b39a-3a957553f96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5107e817-33c7-48a4-8b6e-c6a059180044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d6db1f-ab51-453b-9338-07a769cad76f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f695cd-a769-4b36-8f07-5586c98cdbad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7483a10-67d1-4f51-aed4-88ad3864f111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac746f5-7715-4fc7-93f2-fb64fa889945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f1e635-a629-47bf-a26d-6748e94c14ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2001cf-3786-4105-b56e-63f0b92cc7b9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d955c01f-b694-46b8-af99-6f33a3554a29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c59e9105-7d85-437b-b107-93ae8f8221c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbf1a99-182a-49a9-b1bc-82b99f23d120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883b49bc-bbbe-4116-8bbb-7d5119a766b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad53c61-4673-4a69-901c-e126045dc3e0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5592b2f1-7cfd-4af8-a229-2a69e9209293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5985383-c780-440e-b9ea-c16534aea006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "528473ef-d53e-47e0-ab9b-19bbe9751ed5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd3e05f-d4db-4410-8041-cdb3f4fe5054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc73305-0530-4e46-8fc2-27efd86db0b4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d772461-54c3-4669-b46f-a471dcbbc792",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d58b1c8-92c7-4152-856a-7346243c7714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd77f43-2d5a-4855-8868-d9db04cf3cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4f31e0-9f72-4b80-96f0-fc8e74a57997"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc0f6287-298e-4866-b2c8-fe651f748916",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8202e47-a17b-43fc-9210-b82aaf65b717"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f490ab8-5514-474f-bb5e-1a3faf0f8162",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e351c30f-26ef-4d4b-afb8-219bd1d3c696"
                    }
                  }
                ]
              },
              {
                "id": "4f36d3a9-b872-4bcc-badd-39e32fe8cb72",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "47f6f95c-0439-4fa5-8e4d-8431ea292112",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ec1d6b-c15a-4c0d-a8fd-7080689a212f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "476d208f-2c2f-4ea7-819a-3296a1a0d390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8815de81-7da7-4c5b-b528-12802013687e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4488d7ae-878a-4061-be2b-af5f8ebfbd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c12612-89f1-43d3-8cb9-968a462cf0a7",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0535b175-160a-4aca-bf18-41da730c0e4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "60e37f14-b8d6-417f-a905-3f9ba43b2fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb8b6fe-2c8c-4408-b8ed-8fc77e992947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a27858f9-20eb-4ba8-919d-8d4aa8a18f0b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7049aa04-f5ea-47bf-adbb-47ea004b7028",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7366d23-33d0-40fe-96e3-c8e4eec92611"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f81f78ff-e1ff-402d-9344-832a5471176d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69e2b3fb-3762-40b9-9372-37672dc5c526"
                    }
                  }
                ]
              },
              {
                "id": "fbe31d3a-04eb-4b8e-8639-d977a40815ba",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f48dc5bd-c553-4d28-b661-4c0f939f73d9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450526a7-c510-40e9-bf95-117db5ce587b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "480644c4-a30c-42ba-bff6-5c13fd840ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37227e85-f0db-46e2-afb3-54d1fdf65945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e0f8ff-356c-4c34-9cb6-21114a928c1c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "95e9400c-351f-454c-86a0-3991d8024734",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f55ca6d6-5c7b-4ae4-9644-ee5442404c47",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47a3609e-dda2-4a01-87ab-3c35037de48e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "641cabfa-4d6c-4fab-8146-c4d01e0c270f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e0b70dc-570a-40d6-9704-10685c7429c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6ff9993-8414-4664-a2cc-91a9a0b589ee"
                    }
                  }
                ]
              },
              {
                "id": "4ff8f676-e9ac-4fa0-83bf-97b0777e222a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47e6701e-ceeb-4455-915d-7572abff6359",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c1951086-73e0-41c4-ae5f-7ee5317bf19f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34237670-7ba2-4e3b-87d8-005facb6a00b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cc21680-3de0-4f94-a950-24c58a9532fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1179caf-effa-4ba5-b23c-5964b84e45d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ac469c8d-3b22-4e9f-b8bb-156c684ea5da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4d8677b-6925-4e71-bd42-550e0322a0d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f25b46e-c418-4bb3-b03f-a295897836f8"
            }
          }
        ]
      },
      {
        "id": "4b07c73d-b498-4184-88a7-edde54c4d9b3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7e9b523f-f8a1-4d1e-a79d-f70b33578665",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6478f87f-1360-468b-b191-d279bba84c47",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a92d488-ceba-4bc1-826e-1c801fda4534",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4118174-9f85-4731-8d08-0368a41c14ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d758802d-4198-4577-997c-cfaea51f830b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9cc0e0-9bd6-40a6-ae29-c869f286cfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1248dddb-f3f7-4e31-9912-b3ae9f77db25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906acde5-061f-4f86-8fed-9a4ea4fa8ab9",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c8ca67-27ce-417b-bd55-314d98c6463f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "76247325-18e1-459d-b53f-b8c32657ce8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef069ea8-bdd2-4c94-aaf5-ed69cbaefacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "501aaa2f-4d5f-42e8-a676-475fad044445"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0554927a-988d-46ea-8472-9a8369e5765b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7bbac5b-ea63-4433-b866-fe2763c3ab70"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1523473-1f11-4100-a580-e6efc9365550",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fa85de4-7515-4171-b886-9c48b3b1a3e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a868d4f-c399-4636-8f28-3e3969ef6e43",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2aa4e7a9-89a2-44f5-9101-5e7e831cf746"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe18ac66-3800-498e-9982-10c713ebbb94",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c77a96be-3228-4d38-aa2c-0c75f0c7817b"
            }
          }
        ]
      },
      {
        "id": "64695d7b-366d-4ca5-a8f1-cc49f74083ee",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "55ec26fa-2e83-44f6-b29d-bde7319d579c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9099a327-f99d-46f6-a6a5-8d89eccf94e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "250b82b9-e581-4c1c-b83c-8c9b017ecf9c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d282f2-ee35-436d-beb9-6c3fecb8da66",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "54364b7b-d660-42d7-aaf2-fd10ef3a80f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ab859b-4a49-4f56-bbe8-3b95acf1f1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71b92809-73df-4ca2-a9d5-226c2147780a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbd7744-2f33-4e0c-9262-6287dc8b6f62",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8350dd2-311f-47f3-9568-b4debf635c23",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0b8d7126-f971-40ca-b8bc-d6bd2d727a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5645d2bf-7604-4fc6-a8ef-e1cea1148714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a812fba3-b246-4bbe-a6c0-84349db9397e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "095b1453-4265-4e13-8afa-3c972852c3e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b438876-4cf2-4cc8-b5b1-8ad40b8f7ac3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bff34ed1-8ca2-463c-827e-c563e18b8e20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60df81ec-0a42-4329-aec9-24351d9ad259"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90434510-b32a-493e-9e6e-dd18345527bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9e6fa625-889c-463c-bd39-82091e3c7d0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "031faecb-5cd1-4620-9143-64e740ce2258",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74e67d94-ca73-4b8f-b834-713ce052e16c"
            }
          }
        ]
      },
      {
        "id": "cddc8a31-c5d8-4fa5-ba70-fe61933c13db",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5c42a38e-d959-4e8a-bd9c-76a97cfa5c1b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8bf9211-26c7-4c1c-a89f-7970cfed0268",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e91587af-126a-4200-accd-04e043b428aa",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9b6616-b673-41f1-9c65-1d2ef95334a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b0469d0b-c12d-4597-b4c6-7a1ebbb0c148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8f905a-7cff-47ea-8200-6f93410c442b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52e8ecc7-6f55-4425-b4a3-153eb60402e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fadc09-edf5-4638-8cf5-c1198707dc0d",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2e5e44-4a2f-4a06-8d66-79cfec5816e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f6428e8a-3a79-49c0-bff6-82b1f08cb646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5838b0-6462-405e-8315-4811091f80e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5acfe2ab-129d-46c1-b8af-5036efbf9066"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1a3cc12-28db-4787-b113-1b197111f6d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0770ad4-f116-4833-86cb-2f2dbc571b1d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c806a858-2e4a-4670-ae81-1dea0955c198",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea913838-5657-4829-9855-dbf284661bbf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07718178-b1de-4286-9805-076364df9381",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fcd7be31-38f5-4d06-affd-fb4949a7e650"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8c93811-f9af-4ac0-995e-45efcbc73cf4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3c5b3cd-a4f7-4417-aa99-42b7f438c3a8"
            }
          }
        ]
      },
      {
        "id": "c056c7be-655b-4e9d-b784-6e34ef10a457",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00f4db88-2506-4f6f-92cf-a8cde274847e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aab5c185-f26d-4fed-b0ed-adada7bc2bc2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4b749aed-983d-482f-a173-783ff3211800",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d73e6f7-74fc-4ba7-8f20-5e268a6db76b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03fb9e44-9536-4dd9-bfdb-5c4affc277c9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 811.2290076335878,
      "responseMin": 10,
      "responseMax": 9703,
      "responseSd": 1120.8085962320076,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1673138434161,
      "completed": 1673138657668
    },
    "executions": [
      {
        "id": "3a827a17-ea51-4736-ab8c-fa970b4d0291",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "463fd671-0e78-4c3a-8538-c05855efb8a8",
          "httpRequestId": "1836989d-f1d1-4603-a385-a9b7cbeea1b0"
        },
        "item": {
          "id": "3a827a17-ea51-4736-ab8c-fa970b4d0291",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "73edf75c-6f95-4f1d-ac2b-2d8db36f4d79",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "18d67fc3-7464-42bb-8e87-bace3a7ded51",
        "cursor": {
          "ref": "d044fd57-818b-4c85-9020-963563dcca45",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8cb7329b-2e34-414f-babf-943241c41fe0"
        },
        "item": {
          "id": "18d67fc3-7464-42bb-8e87-bace3a7ded51",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2994b007-cd30-4478-b773-2d0f8e7506cd",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "88b9dc0d-712b-46ab-aeeb-5331e099f170",
        "cursor": {
          "ref": "a25e3e0f-c490-49bc-b001-c3731f2843eb",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ed71f656-ecf2-4683-8c3f-d2108f75db13"
        },
        "item": {
          "id": "88b9dc0d-712b-46ab-aeeb-5331e099f170",
          "name": "did_json"
        },
        "response": {
          "id": "a41989d0-e7db-4b9a-8e67-9809a816442d",
          "status": "OK",
          "code": 200,
          "responseTime": 1264,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e74e99-c7cb-4e58-81c7-f3e941914a76",
        "cursor": {
          "ref": "c4c26e63-f74c-4c30-811d-5484ec20db9c",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8ab9a313-dc11-4302-9d15-fd16b15a8ea5"
        },
        "item": {
          "id": "b7e74e99-c7cb-4e58-81c7-f3e941914a76",
          "name": "did:invalid"
        },
        "response": {
          "id": "b43792cd-209f-4c3e-896d-0dfbc186a1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1281,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e74e99-c7cb-4e58-81c7-f3e941914a76",
        "cursor": {
          "ref": "c4c26e63-f74c-4c30-811d-5484ec20db9c",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8ab9a313-dc11-4302-9d15-fd16b15a8ea5"
        },
        "item": {
          "id": "b7e74e99-c7cb-4e58-81c7-f3e941914a76",
          "name": "did:invalid"
        },
        "response": {
          "id": "b43792cd-209f-4c3e-896d-0dfbc186a1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1281,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d74fbcc-a4fa-46d7-acbf-f52e2dcf5f94",
        "cursor": {
          "ref": "ec2bac8c-915b-4eca-ae7a-8c7c8612097a",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "be1067f3-f337-4bf9-951e-32126e705ab7"
        },
        "item": {
          "id": "4d74fbcc-a4fa-46d7-acbf-f52e2dcf5f94",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f2e9e02d-0d94-447b-b209-78e673d9616a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 734,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3846874-5a20-4f26-a2bd-7ea2b0295b5e",
        "cursor": {
          "ref": "a599ba75-bdc6-4f4a-9f6c-d5c143e9eb8f",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "93d7de63-682c-4e06-afc3-99d4841b17c3"
        },
        "item": {
          "id": "d3846874-5a20-4f26-a2bd-7ea2b0295b5e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "36fada48-5d52-4f6b-98b8-211dd5691417",
          "status": "Not Found",
          "code": 404,
          "responseTime": 670,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6831bbb-6c88-44f3-8e13-21f3a5e47b71",
        "cursor": {
          "ref": "897994ce-90f6-4328-b319-4c55434db615",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5304cc23-3105-4d5e-9191-15b647a3c1c5"
        },
        "item": {
          "id": "f6831bbb-6c88-44f3-8e13-21f3a5e47b71",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8f44e82e-0c15-4f41-9dc2-dfcf1ef5aed1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bce1e2-2d1f-4f87-b3bf-f6ca969b533c",
        "cursor": {
          "ref": "279031f7-3931-45e8-96ca-666e00b3e3dc",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "37ff6f07-1c53-469a-a7d0-362497f07c21"
        },
        "item": {
          "id": "e0bce1e2-2d1f-4f87-b3bf-f6ca969b533c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "ea3c13ed-3316-42dd-b45e-6efe7b96f753",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 646,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bce1e2-2d1f-4f87-b3bf-f6ca969b533c",
        "cursor": {
          "ref": "279031f7-3931-45e8-96ca-666e00b3e3dc",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "37ff6f07-1c53-469a-a7d0-362497f07c21"
        },
        "item": {
          "id": "e0bce1e2-2d1f-4f87-b3bf-f6ca969b533c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "ea3c13ed-3316-42dd-b45e-6efe7b96f753",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 646,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a8bbd9-2a61-46ef-8e1c-6c6ebf8e1bbc",
        "cursor": {
          "ref": "262138bd-1246-4766-a953-4b2d4c7b7450",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2c4bff09-c632-44cc-be7f-ce61cc28a62d"
        },
        "item": {
          "id": "e7a8bbd9-2a61-46ef-8e1c-6c6ebf8e1bbc",
          "name": "identifiers"
        },
        "response": {
          "id": "b07c376d-a9ea-45f5-ae2d-9d041547cd44",
          "status": "OK",
          "code": 200,
          "responseTime": 971,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151028cf-c7da-4faf-98f2-45f6fb57c118",
        "cursor": {
          "ref": "c3a942f9-d027-4f99-bb03-18f0ef7ae38a",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "15f41c79-030d-41b5-a469-a1c483b91b69"
        },
        "item": {
          "id": "151028cf-c7da-4faf-98f2-45f6fb57c118",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "58b3b52b-2fff-47dc-b9fb-10f2f7bdc704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151028cf-c7da-4faf-98f2-45f6fb57c118",
        "cursor": {
          "ref": "c3a942f9-d027-4f99-bb03-18f0ef7ae38a",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "15f41c79-030d-41b5-a469-a1c483b91b69"
        },
        "item": {
          "id": "151028cf-c7da-4faf-98f2-45f6fb57c118",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "58b3b52b-2fff-47dc-b9fb-10f2f7bdc704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d52613-0bc4-418f-b257-0b3ef6bfe72c",
        "cursor": {
          "ref": "39f25197-7129-40eb-abcd-703a78c4060d",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c8e3369b-c25b-428a-8beb-3319640a1df5"
        },
        "item": {
          "id": "36d52613-0bc4-418f-b257-0b3ef6bfe72c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a2f2372a-4aad-4796-b180-eab82bad7481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb0fe01-0a73-490a-ba40-6a58c0eb202e",
        "cursor": {
          "ref": "e97d4b4d-29f3-4b1d-a447-7cb3a451967b",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0d3f0e4f-7ed0-4881-a894-8ef2ecaef5ea"
        },
        "item": {
          "id": "dbb0fe01-0a73-490a-ba40-6a58c0eb202e",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "563068fc-fbe3-4b15-b6a3-166b78cf97a1",
          "status": "Created",
          "code": 201,
          "responseTime": 3477,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "641988f7-3f88-4283-aaaf-e59b0f2ee52f",
        "cursor": {
          "ref": "0d7de4a1-fdfc-479b-8b80-f96e03941dbf",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c5757355-41ef-47a1-af8b-a918918889f3"
        },
        "item": {
          "id": "641988f7-3f88-4283-aaaf-e59b0f2ee52f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6b80afb1-6f44-474a-81a4-4f83f32a89c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2f6ca0-ed24-4efd-8320-141a47c0cd45",
        "cursor": {
          "ref": "cc75d4a0-d391-4909-9552-c4f9bdc033a8",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b58e5847-55cf-4948-bcd2-4ba432b6069d"
        },
        "item": {
          "id": "bb2f6ca0-ed24-4efd-8320-141a47c0cd45",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4cfc4cd1-6f94-4280-a1f1-754e2a045583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1897ce04-30dc-4c34-944a-a48e51be1fdf",
        "cursor": {
          "ref": "d7892808-f2b2-43dc-82e3-afd09a12fc93",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "aaedff5e-3e9f-4462-8ce5-b6c831b556fe"
        },
        "item": {
          "id": "1897ce04-30dc-4c34-944a-a48e51be1fdf",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0d34e5d0-54a6-4609-96d7-1e116dd08315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f5bbb5-9638-45aa-a51c-a0376581eb19",
        "cursor": {
          "ref": "1d04faf8-a35f-4572-bb3d-69bfbc5fe166",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "82a70b0e-c6e7-4ab2-9d9b-21666eb561ae"
        },
        "item": {
          "id": "85f5bbb5-9638-45aa-a51c-a0376581eb19",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b97a4b3d-1407-44b6-8af0-70b084d5e118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5770e0d9-f525-4894-aa49-fc24ac161c2f",
        "cursor": {
          "ref": "06593b38-f881-40be-8763-df5fb20ccab5",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "85a4aa23-41b6-46b8-9779-f647bbcc079c"
        },
        "item": {
          "id": "5770e0d9-f525-4894-aa49-fc24ac161c2f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4c2aa401-a70d-4add-b12f-e4ae5d02d242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f186ef4-26ce-423d-b783-56d185b7ed7e",
        "cursor": {
          "ref": "9ff57242-2021-4c80-9731-441113123f43",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "82e4319b-67b8-4aff-9845-bf9c21c74a06"
        },
        "item": {
          "id": "5f186ef4-26ce-423d-b783-56d185b7ed7e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ff0fe2ad-c818-4617-8401-81095e65e6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49613b02-5f4f-41d3-81f3-c0448c80b379",
        "cursor": {
          "ref": "7c749368-79de-4b67-9819-9a995e287234",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2ed41180-ac5f-4c64-99ca-06ded102a9f1"
        },
        "item": {
          "id": "49613b02-5f4f-41d3-81f3-c0448c80b379",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f6b5c2f9-e694-4839-8a4a-2daed5f35b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b45215e-fe62-4f06-b605-e2153c6cbca6",
        "cursor": {
          "ref": "ed56bb3e-22fd-4fb3-bc69-cc9a8579f389",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d910ccd9-f8ac-4e85-a035-ed7c14d05502"
        },
        "item": {
          "id": "7b45215e-fe62-4f06-b605-e2153c6cbca6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "09796907-089a-4656-bf57-770ac8f1249c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b9938e-95db-413f-9857-31c7904f01fa",
        "cursor": {
          "ref": "fef1d72e-a317-46da-bbb7-a03c1e25fb7e",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9689b4d4-c0b9-4368-a517-b438ff2d7900"
        },
        "item": {
          "id": "15b9938e-95db-413f-9857-31c7904f01fa",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c2f1233b-8fd5-4670-aeeb-dc939861b567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff062960-21d3-4d39-a97e-b23fa87f2a67",
        "cursor": {
          "ref": "aae9ff7b-4664-401e-a89c-1d75b32e7083",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "66401c56-a2e0-431e-87c2-24f450f97656"
        },
        "item": {
          "id": "ff062960-21d3-4d39-a97e-b23fa87f2a67",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f5ca7f7e-8ea1-41b6-ac3c-c343cfe2cc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 855,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048a2af5-7f55-4442-a698-979af57968c0",
        "cursor": {
          "ref": "ae16df36-feae-463a-9865-cd65071902ec",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fb2091b5-08fc-4210-aadc-ab1cedfd785e"
        },
        "item": {
          "id": "048a2af5-7f55-4442-a698-979af57968c0",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "271b4cfc-000f-445a-8d72-6b786055a900",
          "status": "Created",
          "code": 201,
          "responseTime": 5454,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "f03bfb0f-4b62-4741-bf7d-c627f0037181",
        "cursor": {
          "ref": "8937d860-ee97-4570-a096-9de7f831ce58",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "dddcc67f-7640-42e0-9dd1-7949466e8531"
        },
        "item": {
          "id": "f03bfb0f-4b62-4741-bf7d-c627f0037181",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6f7e4e09-9666-42c8-80b0-0e1a36705803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5842300c-12e0-4a5f-94c0-c2a9cbfc1130",
        "cursor": {
          "ref": "281369a7-c05a-4e89-8ccf-4c3306c82a65",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c84fc528-7cfd-41f8-82cb-217ff45c47e0"
        },
        "item": {
          "id": "5842300c-12e0-4a5f-94c0-c2a9cbfc1130",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "928ac20f-3e65-484a-a046-e2ead8228a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a20c73e-3af9-4d1d-b83c-00109ab22aba",
        "cursor": {
          "ref": "3b0e6848-e3ba-4af9-b90e-fffdd41651f0",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "70600d9d-4bd9-4bdb-964e-5a4deb98b8a9"
        },
        "item": {
          "id": "4a20c73e-3af9-4d1d-b83c-00109ab22aba",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "449e89d9-a77c-4e11-8914-86011a991dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c6496f-5116-4a0b-b45f-45c57db17fa2",
        "cursor": {
          "ref": "4d28b239-2350-408b-8098-8841c90a72d7",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "374ba9bd-1173-48b6-b24e-6125c6d97df0"
        },
        "item": {
          "id": "15c6496f-5116-4a0b-b45f-45c57db17fa2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f58d1b0c-db49-44af-bfa6-44596bcc9480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91471ccc-e4a9-4e26-a6d6-4b78598d46f6",
        "cursor": {
          "ref": "e9d95a18-68b2-4559-b03e-a2a5798a68e0",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a459e0f3-0544-40af-883c-cf6c02395d7e"
        },
        "item": {
          "id": "91471ccc-e4a9-4e26-a6d6-4b78598d46f6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b3f16b8b-47d0-465a-9ddf-0319e526fa83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452d28f5-84b5-4184-a3c7-e8c687cafc65",
        "cursor": {
          "ref": "acfcf318-a4ac-48be-b9a0-e2bfdbd0ec44",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "67be9cb5-0239-4575-933b-901e797a1780"
        },
        "item": {
          "id": "452d28f5-84b5-4184-a3c7-e8c687cafc65",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "de4b988b-5bdf-435d-9e10-01d2dbc24d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad2509b-6ed3-405b-9d10-5d31a188030b",
        "cursor": {
          "ref": "5dea223a-0fb4-43af-8704-05afe91230a0",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2d6b8c2e-b367-46dc-a443-2f055728cc46"
        },
        "item": {
          "id": "5ad2509b-6ed3-405b-9d10-5d31a188030b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "132f5adc-3997-41f7-8e89-f7b8881e3712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8589694a-8530-4b8b-b763-920315f27b48",
        "cursor": {
          "ref": "00f306ea-198e-4dbd-b11f-0d1dd07f8240",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "97cf3c3f-92e2-424a-a39f-ca224459d370"
        },
        "item": {
          "id": "8589694a-8530-4b8b-b763-920315f27b48",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6be983a9-4c26-4af2-9daf-bad334936386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1e0771-247e-49ef-b627-b93f439c450a",
        "cursor": {
          "ref": "26e00cf7-6210-41f5-b84e-c38bbd8c333b",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "166eedf6-f139-4736-b7be-e30bd5cf671f"
        },
        "item": {
          "id": "7f1e0771-247e-49ef-b627-b93f439c450a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b4d91e3d-9a0d-47af-99c1-7862946187e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814743fd-bb8a-4627-ac9d-c6dfc88a37f4",
        "cursor": {
          "ref": "d5404541-d781-458c-8324-36d00c91e93c",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c77553c3-9bb4-4e27-8b16-962700ae260a"
        },
        "item": {
          "id": "814743fd-bb8a-4627-ac9d-c6dfc88a37f4",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7b0a61e0-13c1-4ffc-9347-b7470b7b7f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1914,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42302b5-09e6-413a-8e2b-02c873e33eb6",
        "cursor": {
          "ref": "4466283f-f86b-4b86-a246-29531a99e21e",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9948d0b9-9a8d-40f0-ae43-0dc2f5cad288"
        },
        "item": {
          "id": "f42302b5-09e6-413a-8e2b-02c873e33eb6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a8eab2d0-28aa-4910-b9b0-0fe6fc5f77be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1828,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3496ef38-46d9-4f93-a31c-7612daf58e2a",
        "cursor": {
          "ref": "7a6e7921-7862-4b2b-81d1-c841bbdac7b4",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4a75faa1-ee90-48c9-b12b-cb550f46057f"
        },
        "item": {
          "id": "3496ef38-46d9-4f93-a31c-7612daf58e2a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0e9b3e47-d9f6-4047-8c87-02841ac649d7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 8612,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "62e1c038-1712-4674-9114-a1c5a80cd679",
        "cursor": {
          "ref": "6122bf65-aafe-4fc3-b43d-56587eb7e1a9",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "030ecee8-d6f4-4ad1-971b-3e00dbb6a4ed"
        },
        "item": {
          "id": "62e1c038-1712-4674-9114-a1c5a80cd679",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "384b1457-b200-4a3f-b972-b4433a6ab0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 932,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c33c85-8c46-4327-96cb-e27467d3a992",
        "cursor": {
          "ref": "33453ce5-8671-4589-bfba-afd78e4a32bb",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e3821860-be2f-438e-83c2-764ea9bcdb5a"
        },
        "item": {
          "id": "d1c33c85-8c46-4327-96cb-e27467d3a992",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "698e59c8-f07a-44b8-a918-49974ee78c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7827dcd-f1df-43bc-ad46-ff65a393a273",
        "cursor": {
          "ref": "8e62dd4c-e34a-4f7d-99bc-4d105a43652b",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1d2d0a7f-ec0f-494e-bfd6-0bb4c65094f1"
        },
        "item": {
          "id": "a7827dcd-f1df-43bc-ad46-ff65a393a273",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e529a789-213c-4c56-bf20-f2c6cc778942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebbd29f-7487-4c93-b73a-4855ceb2d601",
        "cursor": {
          "ref": "2d5b2f24-7ddf-4433-9cb7-375cf6bce2ca",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dc263d09-81b0-46fe-bf1a-c2fec4e645e4"
        },
        "item": {
          "id": "aebbd29f-7487-4c93-b73a-4855ceb2d601",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d497e7b6-2438-4885-bc83-ef4423731296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a351407-203c-4ecb-8291-248bb2897725",
        "cursor": {
          "ref": "384d085e-bb9d-4daa-a5b4-a55e75eda9e8",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "86e8fc37-9543-4e2f-b9f0-604b4883dedb"
        },
        "item": {
          "id": "7a351407-203c-4ecb-8291-248bb2897725",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "35905f03-3e38-43e4-ba56-e63d5fd72bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e02c972-6b79-41c0-a2e0-5178b9f47cfa",
        "cursor": {
          "ref": "7e98f60d-f03a-4fb7-af6f-d11f7169b105",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5f84cc86-07a0-4aab-b70d-a2004a96c98d"
        },
        "item": {
          "id": "0e02c972-6b79-41c0-a2e0-5178b9f47cfa",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "21e57953-830d-4b8e-b445-e47e798ca7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f571153-8696-4eee-9078-ae016ea1fa6d",
        "cursor": {
          "ref": "daed296a-0dc1-42a0-95f8-c3a520d512b7",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4a3b4469-4fd5-40ce-abac-a9ae5c1dd889"
        },
        "item": {
          "id": "3f571153-8696-4eee-9078-ae016ea1fa6d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b26769d7-4af7-4e14-b3fc-cb3ed31045bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa19084-a1ee-4e3f-b016-9385d45e55ce",
        "cursor": {
          "ref": "d0c4e88d-9758-48bf-be55-03645b12b6c1",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "68a7de67-3f8c-4693-82f5-052ce280c1a8"
        },
        "item": {
          "id": "afa19084-a1ee-4e3f-b016-9385d45e55ce",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "203efa6e-5f72-412d-8353-ce108ffccbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdf6d11-aa7f-4877-85ef-ff472aa2b862",
        "cursor": {
          "ref": "1416a136-1a1c-439f-b0bd-b5c195ec1b49",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "29ac3edd-c78d-4bb2-a2b1-a3861b7566a3"
        },
        "item": {
          "id": "cfdf6d11-aa7f-4877-85ef-ff472aa2b862",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9deb4470-32f4-4e39-a8d1-4688241a87ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e435e00-888b-440f-bee9-2991e79d535f",
        "cursor": {
          "ref": "c198b262-1e4b-4da8-906b-c236a117039f",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fc309324-998c-431d-bfe0-af99c72a346f"
        },
        "item": {
          "id": "4e435e00-888b-440f-bee9-2991e79d535f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7371f576-cf46-4318-8e43-50abb889c485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc9b15d-7e1a-4de4-b0f5-3173a20f6aca",
        "cursor": {
          "ref": "6d36ffb3-1669-4323-8fc4-d878fd82e7dc",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d8265bbd-5f6a-4bfb-8465-14ef36750e68"
        },
        "item": {
          "id": "abc9b15d-7e1a-4de4-b0f5-3173a20f6aca",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f37f4505-c6c0-4c7d-9208-55d687946d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5bda476-56f4-4662-b623-96bfa986c0a3",
        "cursor": {
          "ref": "c3afdae3-d84a-406b-a495-f22b7d457d9b",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d68a6e64-93b6-472b-bbb5-5664f816e68c"
        },
        "item": {
          "id": "f5bda476-56f4-4662-b623-96bfa986c0a3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bb86cc25-8689-4c6c-be1a-fb2a0c780e33",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 723,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81150448-90d0-4442-aa21-24ad4a0b29b9",
        "cursor": {
          "ref": "9d1dbd26-58ab-4a97-990d-34d6a265a359",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1abe179e-5bb8-4d75-9975-d8811c432808"
        },
        "item": {
          "id": "81150448-90d0-4442-aa21-24ad4a0b29b9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "06262351-fa2e-4a14-babe-6cf783bf1255",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 634,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "d8541ef7-6bf9-43cd-8050-39b13b217eaf",
        "cursor": {
          "ref": "e7694f5e-48da-4c1c-b65d-a032bd75ac3e",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8e31a4d9-33a0-4f2c-b298-07aa83fdf777"
        },
        "item": {
          "id": "d8541ef7-6bf9-43cd-8050-39b13b217eaf",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4c29ee86-db3b-48e1-bc35-8102ddab55ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28ab23a-198b-4a86-bf95-fab641bd63cc",
        "cursor": {
          "ref": "67a7fc17-b67f-485e-8225-906d25a03e84",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9fe61552-02c2-484a-b57c-8ce299b5aac7"
        },
        "item": {
          "id": "a28ab23a-198b-4a86-bf95-fab641bd63cc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0d51931e-7376-4343-b50d-77db3a2994c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b289567-248e-43e1-9d65-c8f2f18a2913",
        "cursor": {
          "ref": "fa438eb7-393a-4f68-93b6-c0a7f10988f1",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a451c80d-ecb2-4b49-8ed2-217c218e51e4"
        },
        "item": {
          "id": "6b289567-248e-43e1-9d65-c8f2f18a2913",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "003fe427-9aec-4748-81df-4233f32ec123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68da70e4-15fb-4682-901e-5e2fcc3c3a86",
        "cursor": {
          "ref": "41389ff5-16f0-493e-8797-940a224173f1",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d0f22646-69c0-42fc-8e63-033c0e6b6cfa"
        },
        "item": {
          "id": "68da70e4-15fb-4682-901e-5e2fcc3c3a86",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "01c98c07-f411-4915-9e6b-fd7505a4198a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11665ffa-d495-4b1e-b547-3e8c70dc7b35",
        "cursor": {
          "ref": "3bf68efc-0507-4cba-b561-188c5159157c",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0970bebd-9c86-44fa-a895-64c50b91cb20"
        },
        "item": {
          "id": "11665ffa-d495-4b1e-b547-3e8c70dc7b35",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e90f82cd-f053-404c-9a89-3320056ae38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073449db-b8b7-43ff-a53c-a1da88acdbec",
        "cursor": {
          "ref": "c913e2b9-8b60-4862-a488-7e3cd20bafc7",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a2f5187b-870e-4e55-842c-54302caee1ab"
        },
        "item": {
          "id": "073449db-b8b7-43ff-a53c-a1da88acdbec",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f3197d4a-b256-498c-b41e-3b07b347e032",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 711,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb5b6f2-26ce-4c09-821f-ea0f51c086a5",
        "cursor": {
          "ref": "b74a0c2e-f369-4578-88d8-e16fbc13fde3",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b3dabb4f-b4a2-4f5f-b879-4266e08b4397"
        },
        "item": {
          "id": "8fb5b6f2-26ce-4c09-821f-ea0f51c086a5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3730b247-8745-46ff-ae44-b06b4fec27ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bdfe57-4da5-4768-8009-9ba08578b4c5",
        "cursor": {
          "ref": "863ce150-99d1-470a-ab0a-a2f1bc50a6b3",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "86fadc8e-d200-4343-ba12-2ee6902cfa99"
        },
        "item": {
          "id": "e5bdfe57-4da5-4768-8009-9ba08578b4c5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bd7ebbb0-9226-43d0-b869-442196e2feae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175b68ea-204b-416c-83b2-74be64185e7e",
        "cursor": {
          "ref": "05d0ab73-7f8f-4733-bb98-510132f00b07",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6b858fa0-6329-430c-958b-1f9dc49fcd0b"
        },
        "item": {
          "id": "175b68ea-204b-416c-83b2-74be64185e7e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "60cdfdf6-dfeb-406a-ade0-208f1976eb00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e22d474-fa77-41fa-b2b0-809ef115ce8e",
        "cursor": {
          "ref": "07c6c7b9-23e9-4282-aa5e-ae5a77df773a",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7d84a959-3cba-40f6-81b3-8f01c1d9b1bf"
        },
        "item": {
          "id": "6e22d474-fa77-41fa-b2b0-809ef115ce8e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ffa65ceb-2ea4-46d7-8de1-976c69020eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a49856-65eb-4798-9287-7c2005f8dbc6",
        "cursor": {
          "ref": "bb3bd8b7-8244-491b-a2ac-8e4cae99b3cf",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6359b5b4-4849-4e18-b468-9ccad7d99e1a"
        },
        "item": {
          "id": "c1a49856-65eb-4798-9287-7c2005f8dbc6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "59a5c34c-60ec-4a5d-b10d-8eb78d34fece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffc0d57-c570-4036-8098-974b0e37f555",
        "cursor": {
          "ref": "a99679bc-5da7-4d66-8ca4-150acd28f08a",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ce65cef9-bbb7-4851-94e3-65d18b84eefa"
        },
        "item": {
          "id": "8ffc0d57-c570-4036-8098-974b0e37f555",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ed27df5a-65a7-4bf8-9c68-e435e8c1fd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a01620-d4e4-4617-9cce-05e331abb51b",
        "cursor": {
          "ref": "645be036-0b31-4fce-b0dd-c6b85c631375",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f4e72c31-beef-47f3-ba5a-fcff6b151f3c"
        },
        "item": {
          "id": "45a01620-d4e4-4617-9cce-05e331abb51b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "03bc8080-58e6-4f8d-b024-d4004f02627f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602eeae2-7af5-4796-8c12-a8e0c7863d58",
        "cursor": {
          "ref": "10a24961-ae0e-49e9-bf71-47210536f700",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6962b861-a921-4e8e-bb32-868aabceced9"
        },
        "item": {
          "id": "602eeae2-7af5-4796-8c12-a8e0c7863d58",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cfbd05a5-3f41-4480-9f16-cebfb2e69344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ade196-a45b-483a-ba4e-5484b0c2123e",
        "cursor": {
          "ref": "2cb743e4-480c-4b0f-9a5f-e22196250359",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "04e58b84-7055-4243-bec1-21a172dcc7e0"
        },
        "item": {
          "id": "85ade196-a45b-483a-ba4e-5484b0c2123e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3192f6b2-ced4-4793-8371-52e59e05cdfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8716b10f-d270-4e4d-875d-82c79ac60e55",
        "cursor": {
          "ref": "2acc8381-09d3-4a70-a31c-90744225fedc",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9b7431b6-c873-442d-8570-2ff27e5b1c1b"
        },
        "item": {
          "id": "8716b10f-d270-4e4d-875d-82c79ac60e55",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0f889efe-c560-4cd6-b84d-19d88dc81b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c48a1c-9954-4144-bba1-4731a4a585b2",
        "cursor": {
          "ref": "b8f99c2a-30a7-4daa-92a8-de46ea746755",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b962b9ac-d399-4bc4-91ee-6ea74d1666b0"
        },
        "item": {
          "id": "d8c48a1c-9954-4144-bba1-4731a4a585b2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "36dc017a-51b8-402e-9062-548fcf7da245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b156ba-eced-4020-b793-33d5447322a8",
        "cursor": {
          "ref": "617116d5-64e9-48e6-9d66-1c929d9999a5",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "708270c8-5d84-4df5-b9f1-b25cf5aa15de"
        },
        "item": {
          "id": "63b156ba-eced-4020-b793-33d5447322a8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d5ce49cb-461c-4cc5-8606-2555a6da2966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8026fd9d-f977-4b06-9579-60072799080a",
        "cursor": {
          "ref": "a1700f2a-1999-492e-9174-be1379f5a145",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5110671d-1193-4084-be1c-b9afb14da05c"
        },
        "item": {
          "id": "8026fd9d-f977-4b06-9579-60072799080a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ed37b809-15f9-4ddd-83b3-b305bba49111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f71fd6-793f-4305-a298-28e426b5cfa0",
        "cursor": {
          "ref": "d9829ff9-c5dc-4950-be45-40e9938658e8",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f795f47b-a9cd-4754-8aa7-0acd5356ec0a"
        },
        "item": {
          "id": "08f71fd6-793f-4305-a298-28e426b5cfa0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "120f5076-43eb-42b5-9d79-cf5ca0d26c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab4e3aa-e4f6-4495-8fff-796f310e01f0",
        "cursor": {
          "ref": "e5270887-f1eb-4d53-af3b-8cbb7c366a7d",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1348ea5c-941d-4770-9bce-ffa1d61bf9b3"
        },
        "item": {
          "id": "3ab4e3aa-e4f6-4495-8fff-796f310e01f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "045090c8-cd4d-4bb3-b907-bc5bba94827f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f2b46f-e4ec-464b-9bd0-1f3392973b57",
        "cursor": {
          "ref": "4214049e-8a9a-488b-a7d7-f050552a6085",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "30cbb107-0c40-4e05-9de3-270ffe763f09"
        },
        "item": {
          "id": "f5f2b46f-e4ec-464b-9bd0-1f3392973b57",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fcaae5b9-0dc1-4133-b759-3f23e6fba928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1935881d-a922-42a5-a81c-839cb7010eb8",
        "cursor": {
          "ref": "748e264c-33f1-4e9c-a79c-46bc6601babb",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8f422aa0-38e9-40b2-ae17-a276d2c22dfe"
        },
        "item": {
          "id": "1935881d-a922-42a5-a81c-839cb7010eb8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7a3c1c5f-941c-4b0e-87c1-6f0419663d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cf638e-338d-4339-bcb2-e7961396cf01",
        "cursor": {
          "ref": "7ad8d285-5467-4e92-931f-60c857eac2b6",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "dfbb292d-833f-42ff-bb42-ffd93c55fe1e"
        },
        "item": {
          "id": "40cf638e-338d-4339-bcb2-e7961396cf01",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b053cd99-e0ca-41c3-bc5c-6eb2d3d841b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27d8baf-51c7-48c6-8bd2-f8bd87bc81db",
        "cursor": {
          "ref": "d6000ec7-178a-4d70-af2d-447ad19e6b7a",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e569bb50-9737-48fe-b4db-3e711ccb728f"
        },
        "item": {
          "id": "e27d8baf-51c7-48c6-8bd2-f8bd87bc81db",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a4dc410c-e2bb-48fe-9d6a-657183a58629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdee425-2a02-4bbb-ba70-6adc666dfd26",
        "cursor": {
          "ref": "57a9cae8-8673-408c-b8a9-ba7c244e46e7",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7b6381a2-6799-457b-ba88-9bf8c8a1cadd"
        },
        "item": {
          "id": "dbdee425-2a02-4bbb-ba70-6adc666dfd26",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1f7a16b6-fdd0-4670-ac5b-c737294b1a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13904a21-ee0b-4c55-949c-576ace5a27aa",
        "cursor": {
          "ref": "93fcbd97-5699-4d0a-83c7-4e42de0c2339",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b31818c2-77ac-4df4-bd7c-7bb31b3ad48e"
        },
        "item": {
          "id": "13904a21-ee0b-4c55-949c-576ace5a27aa",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "adb2b332-f8cf-4f46-9d77-4f0f431d900f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ee3ce7-f428-462e-a4d2-57432ae6c6e4",
        "cursor": {
          "ref": "5522ffd5-5524-484f-b3da-be3528c1015a",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d060e348-2b21-4965-8db2-5476cc0ecb75"
        },
        "item": {
          "id": "49ee3ce7-f428-462e-a4d2-57432ae6c6e4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "84457bf7-b3f4-4d84-86c8-6685520b75d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e624eb24-4760-43e3-a745-a5dd887d1026",
        "cursor": {
          "ref": "9d7fe3ad-f766-40a4-90e4-415e5b6a0880",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0ed9e98e-2fcc-4bae-96a1-95880f9048d8"
        },
        "item": {
          "id": "e624eb24-4760-43e3-a745-a5dd887d1026",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "baebc460-aeca-44c0-8dce-ff42eabfc614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc65ee8-82ea-4608-a4b5-8d91690682e5",
        "cursor": {
          "ref": "8a448299-a6ed-4fc1-aa24-e31445034fb1",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4a0fc25a-ce13-4208-b6c5-4dc21dcfe9da"
        },
        "item": {
          "id": "4cc65ee8-82ea-4608-a4b5-8d91690682e5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6f149951-46c7-4c01-867f-ac6feedf6742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d910756d-eca1-48ea-84a0-660cf37e133b",
        "cursor": {
          "ref": "9b6f8914-e4ec-4f84-b710-388db7652871",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "722d1a2f-16af-47e3-96db-2191ddb5501a"
        },
        "item": {
          "id": "d910756d-eca1-48ea-84a0-660cf37e133b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fa0b7d0f-646e-4781-8b8e-5c655a2114a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96edfcb9-c950-4375-bcae-375c37796a8c",
        "cursor": {
          "ref": "1b36c1f3-4c64-4345-97f3-03251f8cd16e",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9c8c7838-974f-4609-97f0-309cfac83727"
        },
        "item": {
          "id": "96edfcb9-c950-4375-bcae-375c37796a8c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4a74d92f-03ee-47c0-9342-434374b92885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc7f6a3-89f0-439d-9ac2-e757b8c01670",
        "cursor": {
          "ref": "d18a419c-0e77-4657-b611-4457dff9c0c8",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1c70b8b8-baa8-41a6-86a6-c6222d97b718"
        },
        "item": {
          "id": "0fc7f6a3-89f0-439d-9ac2-e757b8c01670",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7ae9d44f-a3ec-4333-a4a6-8482a8e58bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b38de7-aaab-4ff1-86fa-9767abc217d7",
        "cursor": {
          "ref": "9ef31b8b-feb2-48b5-8135-4ad6f66e7d69",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "23d41ac2-5815-4e76-96f6-28a897d4f195"
        },
        "item": {
          "id": "82b38de7-aaab-4ff1-86fa-9767abc217d7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3518778c-a36d-4405-89b1-e65a45b51b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c74cc9-a0b2-4032-9a07-20001bb207f6",
        "cursor": {
          "ref": "5e0ecfe2-7e0e-49e0-af96-447e4829102e",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "28919570-9414-4e41-a074-e7cec52ab06c"
        },
        "item": {
          "id": "03c74cc9-a0b2-4032-9a07-20001bb207f6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8035ce8d-c650-48aa-9621-3052b4aa87ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40e6426-6811-43dd-9ecd-04817254bcde",
        "cursor": {
          "ref": "a53f50c9-c7f3-4cbf-a8a4-e85eec919dcf",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9dbee352-7a93-4653-be45-987da9246bcb"
        },
        "item": {
          "id": "d40e6426-6811-43dd-9ecd-04817254bcde",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "90634bc6-10e9-4e1c-9d08-c0e38e51fe63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fbdb29-01b0-47e8-9704-773f466cdffa",
        "cursor": {
          "ref": "bca6919f-4685-4fa6-a4a3-82a8022375af",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b3b21118-b041-49c4-ba15-46a5c1337211"
        },
        "item": {
          "id": "79fbdb29-01b0-47e8-9704-773f466cdffa",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "70034ae0-a0d2-4448-b1d8-0b3fdea22fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944101aa-181b-4533-a596-1727e667a4e4",
        "cursor": {
          "ref": "92c063b5-55f0-4ad3-9255-f16933b4d14c",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0cdf7a53-2bd6-4d49-97ca-43831538a153"
        },
        "item": {
          "id": "944101aa-181b-4533-a596-1727e667a4e4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5ba96e6a-498d-46da-af88-3d6058a6e047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e7445d-3f41-4c48-a610-8ceb35974f70",
        "cursor": {
          "ref": "eddc9bd9-7f7d-4e47-916e-ffc146e90272",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d0296066-19c8-48b0-8b41-3d7a6ca00793"
        },
        "item": {
          "id": "26e7445d-3f41-4c48-a610-8ceb35974f70",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8df3f9f9-d347-49e2-bc68-c0eb83abfb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267ecb8d-ca1b-4585-8141-8bddc2d541e5",
        "cursor": {
          "ref": "53cb60ee-52a8-4f51-8cfd-e88c8c8102d4",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "210c2581-894f-4c45-871d-b04dbdc1fa48"
        },
        "item": {
          "id": "267ecb8d-ca1b-4585-8141-8bddc2d541e5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7556b381-f3cf-4ea3-a831-cf84e62f382a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8e5b99-cf1e-447b-bcc7-3c11944d2357",
        "cursor": {
          "ref": "1de03ed3-1d62-446d-b047-db2fad5a513d",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4207d2c1-3d9b-49c3-b591-f1ae24dce98a"
        },
        "item": {
          "id": "4a8e5b99-cf1e-447b-bcc7-3c11944d2357",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "87e12c98-7501-415d-a0ec-6c9babd4e8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4718c0-8066-4acd-b2f4-0ecf02015ccf",
        "cursor": {
          "ref": "b51e1881-d7c4-4781-a11d-b30e669e31f5",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "71505323-1d08-4043-9208-60842f8e9b98"
        },
        "item": {
          "id": "7c4718c0-8066-4acd-b2f4-0ecf02015ccf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "71c1a5c9-c438-4354-b99a-c87d5d10d25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d6099b-0ed0-44c9-ad1b-de497537f78b",
        "cursor": {
          "ref": "b2fde907-4aa3-4820-ac02-689c02368094",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "91a68908-d8d5-4644-a36c-0a5b927441c5"
        },
        "item": {
          "id": "47d6099b-0ed0-44c9-ad1b-de497537f78b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6f30c36f-cab3-4ed8-9c14-d307cbaf5fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73587484-7ba6-4f4e-889e-dfbd30210205",
        "cursor": {
          "ref": "f92f4516-dd97-4043-962a-66a79b36f98b",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "182b7728-d24c-4a74-bef3-e4b21c973263"
        },
        "item": {
          "id": "73587484-7ba6-4f4e-889e-dfbd30210205",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "52843123-5c47-41af-a9e4-06c059400b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509febd1-af24-4c79-bcb5-ec0c82dab7bb",
        "cursor": {
          "ref": "e2b06b74-4ec5-4d35-b891-c17a91c1b7bc",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "72aa8186-d83b-4db7-970f-0cb480d661be"
        },
        "item": {
          "id": "509febd1-af24-4c79-bcb5-ec0c82dab7bb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e6a296a2-a378-4f9b-811e-2c3989ee5389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144b79f5-6a46-4039-9c68-7ee21cafc773",
        "cursor": {
          "ref": "b88e2b89-e288-4e0c-ae81-15f00b130313",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e351ea12-e68f-4d56-9ff9-08f60e340b47"
        },
        "item": {
          "id": "144b79f5-6a46-4039-9c68-7ee21cafc773",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d6189d4b-b2c3-4dff-b2bf-007ca1fd492f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d7fae0-170f-4341-bee2-ae0042f1406d",
        "cursor": {
          "ref": "94d383ea-ff3d-4152-9468-2d81942ceccb",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b80b7957-9775-4aea-9e93-ce404d0559d4"
        },
        "item": {
          "id": "e0d7fae0-170f-4341-bee2-ae0042f1406d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fd531906-9ef0-4b17-9f6d-04dd3fea85c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea02bdc-1e1c-4936-aa0c-45cafbd1fa35",
        "cursor": {
          "ref": "3a1892ca-c1b9-478f-9701-afdfe324e822",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "947fa763-b4c2-439d-8be9-54832c44f81a"
        },
        "item": {
          "id": "1ea02bdc-1e1c-4936-aa0c-45cafbd1fa35",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5db0163c-2230-4edc-8490-d97479a24516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3997fc-c448-4ca0-9b1c-0f8e7d7d316a",
        "cursor": {
          "ref": "6c523644-64cb-4b51-a4fc-f2401d5e1e29",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fe0b13de-0dff-4a3c-8e88-d25321bf1037"
        },
        "item": {
          "id": "6a3997fc-c448-4ca0-9b1c-0f8e7d7d316a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f14def3e-6ebf-4fa3-880d-f5bcf14244c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3adc6f1-211e-4aaf-b01d-0a1abd29a25e",
        "cursor": {
          "ref": "6d0be60c-7dbf-49b4-ab17-078b314a0f5a",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4ac2962c-17e0-41a8-ae6d-0241f3dbd35f"
        },
        "item": {
          "id": "c3adc6f1-211e-4aaf-b01d-0a1abd29a25e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0afaf41b-784e-46d0-8b77-bd6b447cea02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a9b6dc-b1bd-4fc1-b10b-703f1341d511",
        "cursor": {
          "ref": "2b28efea-8267-43cb-8465-76b3d57e94b3",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7acd896c-5593-4abe-b3d2-a9e99cd11d2b"
        },
        "item": {
          "id": "67a9b6dc-b1bd-4fc1-b10b-703f1341d511",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "11d7c43a-c5cc-4deb-ad24-78a37cb43483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f061a0-1f1f-4ff6-9f20-828021f9d80f",
        "cursor": {
          "ref": "47ef95e9-32da-45b0-bda0-5556d3edb7e4",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b9c78c04-460d-4a12-968c-debd480278ba"
        },
        "item": {
          "id": "68f061a0-1f1f-4ff6-9f20-828021f9d80f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f7aeb5e9-271f-4f2c-a314-37b0b3942293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9921def-7264-4794-9f58-795e445a7eb1",
        "cursor": {
          "ref": "fde13a94-15c5-41ae-8a7d-6345afb621f9",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fe89a6c0-d8ed-45e2-8ac8-deb6022137fd"
        },
        "item": {
          "id": "d9921def-7264-4794-9f58-795e445a7eb1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "38caa5da-4151-4f25-b1cc-2b959552a17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4a1e02-2312-4329-9f98-362d86cb73f1",
        "cursor": {
          "ref": "defb6b8f-c48c-41a6-94b1-c9d1d9ba281e",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "66e989f6-d12d-41b5-a353-0301715475bf"
        },
        "item": {
          "id": "5e4a1e02-2312-4329-9f98-362d86cb73f1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f1afba6a-297b-4a7c-b2b0-582c198d5019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1136,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c590e14-728c-49b1-8c20-a2e95736c32a",
        "cursor": {
          "ref": "4c8e55e8-509d-4f66-baad-15875ff60165",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b4d0a958-3615-4a0e-b1fe-3923fdf7e6ea"
        },
        "item": {
          "id": "5c590e14-728c-49b1-8c20-a2e95736c32a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "77f27e9a-5c85-4852-bd69-bce34834f688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1158,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc692235-7728-40ef-8e46-b277491ba9b0",
        "cursor": {
          "ref": "a270962c-049e-401a-8ec3-ab659fea66e2",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c4cbbb5b-9e08-4f24-9c89-4f6a0259d862"
        },
        "item": {
          "id": "fc692235-7728-40ef-8e46-b277491ba9b0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "da2e9c80-8d58-4bb9-95dc-209a55a6ba7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bd09e4-099c-4658-993d-9703ebe638ac",
        "cursor": {
          "ref": "b0f8d877-e4ae-403f-8df1-f6f81816cd23",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7a901b36-da76-402c-9d77-b4cebc240995"
        },
        "item": {
          "id": "f3bd09e4-099c-4658-993d-9703ebe638ac",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "15ca1bc8-7de0-4c00-a37a-73c2bbb94460",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 891,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76759e22-c88d-4c7a-81ca-ee8f3e3f7b82",
        "cursor": {
          "ref": "67a2371c-1f58-44e9-8358-84a9fd3ce455",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "087eb54c-0dd4-4f60-b7c6-a51b2fe808de"
        },
        "item": {
          "id": "76759e22-c88d-4c7a-81ca-ee8f3e3f7b82",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f6c6cb1b-070c-4e07-9a30-99e5d697efc0",
          "status": "Created",
          "code": 201,
          "responseTime": 6199,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "15610021-d8ff-4e20-a185-194525ed190a",
        "cursor": {
          "ref": "e9379748-e4bc-407f-a4cf-7c39f854b8b5",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5a223ba0-c104-448d-9e76-dfb1a025edfa"
        },
        "item": {
          "id": "15610021-d8ff-4e20-a185-194525ed190a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9d7b05b0-44e0-4e87-b6dd-b3ea782e7571",
          "status": "Created",
          "code": 201,
          "responseTime": 5226,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "40a92e75-2dc5-464c-b5ec-938b21f995ba",
        "cursor": {
          "ref": "685ffc9f-6aa7-4a37-88aa-3fb1200ed3ae",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f4d70c49-cae1-405c-a648-c009f045a8e6"
        },
        "item": {
          "id": "40a92e75-2dc5-464c-b5ec-938b21f995ba",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "938a6457-895b-426f-be14-ced74ca0ca01",
          "status": "Created",
          "code": 201,
          "responseTime": 7257,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "4eafe056-0cc0-4d39-901f-6c476874327a",
        "cursor": {
          "ref": "e2e53e1e-f56a-4b10-baad-26a777ac55f7",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "00c90265-4609-4723-b2d0-cb6200cfe7b5"
        },
        "item": {
          "id": "4eafe056-0cc0-4d39-901f-6c476874327a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "81c4c1e0-3d76-4c2e-8fc6-2d50e924b9a0",
          "status": "Created",
          "code": 201,
          "responseTime": 9703,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "f4eae95c-9b6c-4664-86d2-7eef80ac5da3",
        "cursor": {
          "ref": "2c009bac-de02-4f75-8412-fc0d24e2995d",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4821dc5c-802f-4536-9546-b4ca422867ee"
        },
        "item": {
          "id": "f4eae95c-9b6c-4664-86d2-7eef80ac5da3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "467d486a-77c9-4413-be4c-e60eb4d6a2a6",
          "status": "Created",
          "code": 201,
          "responseTime": 6465,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "5e21597d-b397-4875-8ab2-5267375f9a8c",
        "cursor": {
          "ref": "ebebcc74-8303-4c4e-b718-9db82a6f3c25",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "781a88c1-d485-48b9-bf80-fcb0e42d2bd4"
        },
        "item": {
          "id": "5e21597d-b397-4875-8ab2-5267375f9a8c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4e3ea527-4ac3-46fa-ba0c-ac9def807bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e21597d-b397-4875-8ab2-5267375f9a8c",
        "cursor": {
          "ref": "ebebcc74-8303-4c4e-b718-9db82a6f3c25",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "781a88c1-d485-48b9-bf80-fcb0e42d2bd4"
        },
        "item": {
          "id": "5e21597d-b397-4875-8ab2-5267375f9a8c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4e3ea527-4ac3-46fa-ba0c-ac9def807bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2aa9887-9448-4269-a4a6-c4363704d46d",
        "cursor": {
          "ref": "ad4567c3-b942-43ba-9570-34ec5c314258",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c832d013-b2b8-4eb1-9ed6-f237ad04b979"
        },
        "item": {
          "id": "f2aa9887-9448-4269-a4a6-c4363704d46d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "214e4129-9723-4d96-842b-85dd1c06fa4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd3a8c3-0dd0-4529-bcbc-e82cc65560ff",
        "cursor": {
          "ref": "75677004-d0da-4d92-80fb-e83e4de090cc",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "426155c0-e697-4916-b647-2490c5851a58"
        },
        "item": {
          "id": "5dd3a8c3-0dd0-4529-bcbc-e82cc65560ff",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a9c32711-f512-43e2-8c67-6fe58f9158f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861b18c9-2329-4823-830a-6258a8f5ca21",
        "cursor": {
          "ref": "efffbc9a-492c-42f8-8234-9bc502dc20eb",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "21c6df3e-b127-495b-85e4-7fb8e8c0be62"
        },
        "item": {
          "id": "861b18c9-2329-4823-830a-6258a8f5ca21",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "32dc8576-e398-4b82-ba03-3c608e951ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf061d8-1446-4635-8050-11ce1ec8982b",
        "cursor": {
          "ref": "706161ab-5489-4195-b46b-79c64b2c838c",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "065e59dc-caae-40af-92bd-fc778e889dae"
        },
        "item": {
          "id": "acf061d8-1446-4635-8050-11ce1ec8982b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8b87fc95-ae7b-4c0f-acd3-5551c5156988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4f0ab5-acf2-401c-863f-1b1bce92a292",
        "cursor": {
          "ref": "525ee953-a3bc-4dd5-adb0-9de07b66c339",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a012e522-1fe2-4ea2-8179-9de03b0cf4fc"
        },
        "item": {
          "id": "2f4f0ab5-acf2-401c-863f-1b1bce92a292",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "83b6f4cc-0524-477a-9a1d-3885c86e1de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e04b61-936f-4a5a-a115-70145d410b46",
        "cursor": {
          "ref": "973b4866-98fc-4a82-8e83-4c8bd8478f94",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0d59a30c-0477-4e99-9fe3-8af485798899"
        },
        "item": {
          "id": "b1e04b61-936f-4a5a-a115-70145d410b46",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b0ca8440-baae-4b6d-9f73-20796d9dbee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefb53f8-359f-439c-84d0-61de531b54f0",
        "cursor": {
          "ref": "5c6abf40-48bf-4da6-b0c4-527b1d20d183",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "046fe4a3-fc81-4efa-ac22-760c9e97cee7"
        },
        "item": {
          "id": "cefb53f8-359f-439c-84d0-61de531b54f0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f6878487-323e-4810-ae50-e3f27451e6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7331057f-a6d7-44e0-b5db-84d8bbc2ac6b",
        "cursor": {
          "ref": "f504f9c6-83a6-4b20-ad71-5f67a1220c67",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4fa7d864-bb26-4f1b-a32c-08173789c5be"
        },
        "item": {
          "id": "7331057f-a6d7-44e0-b5db-84d8bbc2ac6b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7524a902-6342-4d70-9ebf-d15692d660c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae6c44d-0cb3-4a4d-80a1-25cc36d4cf13",
        "cursor": {
          "ref": "6c3d21d2-c023-4cb4-9acd-8b29a8501c2f",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "42c94a35-eb0c-4227-af43-24125726c03b"
        },
        "item": {
          "id": "aae6c44d-0cb3-4a4d-80a1-25cc36d4cf13",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "11d12bab-c47f-4709-9126-1aea1504c913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b57188a-57a7-4abb-b09d-1f06d1d904f8",
        "cursor": {
          "ref": "0a5d30d5-c614-4098-b3ba-53356235787d",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "654f5cae-fc9e-47b6-8c81-490c25305478"
        },
        "item": {
          "id": "3b57188a-57a7-4abb-b09d-1f06d1d904f8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "08e07d82-c45e-492f-ac93-83fcbb749a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7abb647-97c9-48f5-b56c-9107834df8e1",
        "cursor": {
          "ref": "f48bfbd4-f733-4e3d-8b96-612088e4a87e",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b41cf764-fe63-41c5-ad97-b3acb5037334"
        },
        "item": {
          "id": "b7abb647-97c9-48f5-b56c-9107834df8e1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "49606d06-a5db-4481-8079-1526edf095a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b93248c-fb88-4ec1-9283-bb04a59b3e21",
        "cursor": {
          "ref": "82e515e7-a366-47e2-bb69-a5f15e3a8743",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "838fefe3-f2bb-48a5-9abf-4b1418a7393c"
        },
        "item": {
          "id": "1b93248c-fb88-4ec1-9283-bb04a59b3e21",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9c7a8689-7e7a-458b-9666-0b946ea9c7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf15ea78-2734-4c54-9e3a-be1f73bc2857",
        "cursor": {
          "ref": "88924832-8568-4a73-9d16-57ad15929e79",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "182c1dd3-45a8-4436-87ba-3c927c8ea284"
        },
        "item": {
          "id": "cf15ea78-2734-4c54-9e3a-be1f73bc2857",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d684d9cf-ad63-4578-bf0d-b85348aef834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 914,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf052b49-5982-46dd-83fe-ef906fca523f",
        "cursor": {
          "ref": "929b4999-5a62-41b5-b85f-e39a36d8c7cf",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0c3ab4af-6d7a-4589-8de2-93212bbc85f5"
        },
        "item": {
          "id": "bf052b49-5982-46dd-83fe-ef906fca523f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9556ad50-676d-4115-b1cc-3e5e1f865f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cf752e-70a5-4a1f-9dce-0049717bc7a6",
        "cursor": {
          "ref": "b13dfbb9-800b-4cb8-8d5b-bea64e964c17",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f9b7d962-b20b-4e1a-9d5f-fba539398ee2"
        },
        "item": {
          "id": "c1cf752e-70a5-4a1f-9dce-0049717bc7a6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "54b52fab-24ab-42ef-81f2-31fe6a057856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff11a419-7037-4c93-b072-397cd9e91476",
        "cursor": {
          "ref": "7951d9f7-4e60-4bf1-876a-654ae43f05c6",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0e897eb8-c29b-4a4b-947d-b05a91a65ad4"
        },
        "item": {
          "id": "ff11a419-7037-4c93-b072-397cd9e91476",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1cc3e5f5-dd1b-4d26-96a4-5413a3c9a39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00db4c39-ff11-44c9-9b99-7b15b617e261",
        "cursor": {
          "ref": "5723db22-587e-4964-a6f2-c7e3d22c808e",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3b734805-e9a0-4734-8ab4-489b381b59d9"
        },
        "item": {
          "id": "00db4c39-ff11-44c9-9b99-7b15b617e261",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "030630c9-7e66-4cfb-b704-79237235482a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da63939-ab80-4249-9dc6-a5463f98d1d3",
        "cursor": {
          "ref": "5070bfc1-62b9-471d-8b5f-3ac014c71a07",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "93f5a318-ca4a-4864-94f2-b594e461292f"
        },
        "item": {
          "id": "7da63939-ab80-4249-9dc6-a5463f98d1d3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d114a3a3-8aa6-4247-954a-e73b64a47c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339fb10c-2559-40c1-b485-7e7134bf8b18",
        "cursor": {
          "ref": "93dc36ef-a646-413d-8808-375060ae2765",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "873cfbab-cd3d-4e3d-9bb8-f0543d6cc9ea"
        },
        "item": {
          "id": "339fb10c-2559-40c1-b485-7e7134bf8b18",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f5479c60-9b5b-4ea3-942c-aa936dc4f60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2017c412-18da-45fa-b56c-ffab9eb0e7c8",
        "cursor": {
          "ref": "4cbcd65a-2d78-44f0-b67a-1605d7178da1",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a3211e82-5ded-4ca2-8741-c00aed705f3e"
        },
        "item": {
          "id": "2017c412-18da-45fa-b56c-ffab9eb0e7c8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cf77986b-a720-437b-a488-468b6df56d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cce4f5b-e075-469f-a650-68e40d1467fa",
        "cursor": {
          "ref": "97391ccb-6ce8-40eb-aba8-579a277b88a0",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "99e0ff55-b407-457f-85b3-ac48a38d0e2a"
        },
        "item": {
          "id": "9cce4f5b-e075-469f-a650-68e40d1467fa",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "61740348-0acd-4b55-a469-78fe6b66edab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0183284-84e4-4c20-a56c-2525129e5a7e",
        "cursor": {
          "ref": "d670b9e6-b41d-41fb-9c05-a6e30d98b7ad",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "71655727-5a09-4535-ad56-96c9b2dfdd46"
        },
        "item": {
          "id": "a0183284-84e4-4c20-a56c-2525129e5a7e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2c9cf362-23e2-4f37-85f1-9303df60b9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21e72ca-6951-4ee4-9a29-03869e4c2a93",
        "cursor": {
          "ref": "a828a25e-0471-41c6-8534-2a553bf0efa3",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5568bfbd-278b-45f4-b44b-23571ba7a20b"
        },
        "item": {
          "id": "c21e72ca-6951-4ee4-9a29-03869e4c2a93",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cad1560d-e30b-42ec-a132-888298c17d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e07479-fb81-42d3-8e20-c35e34503950",
        "cursor": {
          "ref": "3fc2f8c8-3610-42ee-84a4-e2bb57bc0e8c",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "77620111-20e1-43b3-883d-cdb7c58f2b9c"
        },
        "item": {
          "id": "17e07479-fb81-42d3-8e20-c35e34503950",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b2860856-0e88-4c12-b630-58f59a6a05ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f5c19e-e58b-4a06-8522-c40f91222f7f",
        "cursor": {
          "ref": "4499c93f-5335-4b8d-95d0-6382539f8c30",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ecc23365-d93d-4e51-8b8b-076b3183c9bb"
        },
        "item": {
          "id": "58f5c19e-e58b-4a06-8522-c40f91222f7f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4f5aa904-7779-45e3-a654-c71ce54665f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae3e6af-ef62-4c6b-84d0-05b9af25f0dc",
        "cursor": {
          "ref": "b136c02d-da03-410c-89f0-158d3e633e61",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ba4fd4c5-2d92-4668-be5e-d90814a9339a"
        },
        "item": {
          "id": "bae3e6af-ef62-4c6b-84d0-05b9af25f0dc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2f598463-1837-4342-ab6c-44cba584ddf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c74b309-a176-41bc-ada7-f4fe78f7db6a",
        "cursor": {
          "ref": "e0410e96-5106-492a-b199-a086026e465a",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "541fbe7b-a162-4724-8776-017c297e8513"
        },
        "item": {
          "id": "9c74b309-a176-41bc-ada7-f4fe78f7db6a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c116b051-f5b5-4acd-a692-2592752906fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09306b8-37a4-4d61-ad4e-2453c939310a",
        "cursor": {
          "ref": "e4c969e9-e6a6-492c-9d7d-326712716404",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "26e3433a-dbe2-445c-b1da-7c249976e204"
        },
        "item": {
          "id": "d09306b8-37a4-4d61-ad4e-2453c939310a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "486eceff-76a5-4b24-b032-20f5da8a9af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca4731e-4b0b-4183-9053-1aac0d0617a9",
        "cursor": {
          "ref": "28bd9053-7089-47d5-9708-f95597feae91",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0b418bd3-2e4c-4652-a9ce-a2bd7afd8a27"
        },
        "item": {
          "id": "fca4731e-4b0b-4183-9053-1aac0d0617a9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "62eb3c9d-9d15-4e7b-ae32-1b9055be038e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff706529-1a36-415e-8e42-f1bb02729f2b",
        "cursor": {
          "ref": "c4984ea8-8438-4ce6-855e-57872e174755",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f3ea6fcf-ad73-477d-afa6-a9dde5b41b35"
        },
        "item": {
          "id": "ff706529-1a36-415e-8e42-f1bb02729f2b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dd6850a4-f12a-4132-96ec-3f8737cad824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1154,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16573bb-5091-4a3f-ba24-6fad670be5bb",
        "cursor": {
          "ref": "e4353af6-c9f6-4d99-9a8b-ac57994637e8",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5f129907-8954-40de-bd54-c9d8b0709c62"
        },
        "item": {
          "id": "b16573bb-5091-4a3f-ba24-6fad670be5bb",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "58f0b49c-d517-4ac5-a449-fbb0212247fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 984,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d48edb9-2ac5-45ec-80cc-041149942902",
        "cursor": {
          "ref": "52fe4f01-2d86-4d61-9a64-e1e550ffeff6",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b8b08547-1226-4f23-be49-0a226cdf3eaa"
        },
        "item": {
          "id": "3d48edb9-2ac5-45ec-80cc-041149942902",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d0baf2a9-bbfc-4d2d-8b54-821129979b85",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27ba6cd-8e34-4720-81dd-7bb738b7f63e",
        "cursor": {
          "ref": "7b36a9cf-505e-4453-9dcc-53479a5dcf6c",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d7726733-5bc6-43c6-946a-0962af24ed3c"
        },
        "item": {
          "id": "e27ba6cd-8e34-4720-81dd-7bb738b7f63e",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "b84b7c1e-fdff-4c15-a2f2-5a5917d6dbb1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 903,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be4a976-9220-48e0-9440-c1b33739d3b7",
        "cursor": {
          "ref": "24961209-5446-426d-9676-878f0df6d9d9",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a0f307c5-36b7-4317-860c-68b8324d4917"
        },
        "item": {
          "id": "8be4a976-9220-48e0-9440-c1b33739d3b7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "92020a83-1a4b-426d-9300-4c865c4c657c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be4a976-9220-48e0-9440-c1b33739d3b7",
        "cursor": {
          "ref": "24961209-5446-426d-9676-878f0df6d9d9",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a0f307c5-36b7-4317-860c-68b8324d4917"
        },
        "item": {
          "id": "8be4a976-9220-48e0-9440-c1b33739d3b7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "92020a83-1a4b-426d-9300-4c865c4c657c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed23f07-732d-44c9-9832-df421bbbfae1",
        "cursor": {
          "ref": "a3e8f991-e7d3-4474-b503-ed8b2c24ecef",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e5192398-a386-4659-ba82-38436b94f33f"
        },
        "item": {
          "id": "4ed23f07-732d-44c9-9832-df421bbbfae1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c05736a4-8e88-42f7-a091-3c75c9635e5a",
          "status": "OK",
          "code": 200,
          "responseTime": 414,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "71e3a3e4-318b-4be6-897c-dfbc9f9ae3be",
        "cursor": {
          "ref": "229ee9a4-4f65-40cb-bb71-9069dcd88a31",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a7aab025-9ba6-44b3-9692-db46a0fd053c"
        },
        "item": {
          "id": "71e3a3e4-318b-4be6-897c-dfbc9f9ae3be",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c46a5d91-68aa-49b2-9092-6e8dcc88e18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63aac8ce-e37b-4ac5-aaa4-173c5b5c32ab",
        "cursor": {
          "ref": "2ac28a50-1c3a-4e40-9b56-f1857a49b0a3",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7f5c0af9-02b4-4f75-a324-fa543a1e9528"
        },
        "item": {
          "id": "63aac8ce-e37b-4ac5-aaa4-173c5b5c32ab",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "734f6f35-9324-4057-9eed-560cd031dace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27c4a8e-587e-4b62-ba76-57e777e91b44",
        "cursor": {
          "ref": "3538ea9b-85b3-4fa7-bcc1-a87679d825e3",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "02723d4e-6ebb-4396-b9d5-d722a0385f23"
        },
        "item": {
          "id": "b27c4a8e-587e-4b62-ba76-57e777e91b44",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0a9b1426-4813-4a0b-9dcf-284a9348b32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fceb6b-b026-48b5-8272-3d9b2a958dc1",
        "cursor": {
          "ref": "2fab570d-a4c1-4c5f-a549-838ea179470f",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "aed87240-8cd0-4221-98fe-f9c282894b93"
        },
        "item": {
          "id": "d1fceb6b-b026-48b5-8272-3d9b2a958dc1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6973b71e-6bf3-47cd-a472-ed3869c5a8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7444ba-58b2-48cc-ae95-34fd0cf121d0",
        "cursor": {
          "ref": "4def906b-f738-495e-b7a2-75c8311f3dd8",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b9885841-51a2-430b-9c38-67611c7397e1"
        },
        "item": {
          "id": "8d7444ba-58b2-48cc-ae95-34fd0cf121d0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ce9a3ff3-760e-4a8a-b046-56d1656dc258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c01b29c-210a-4670-9189-b585166463c6",
        "cursor": {
          "ref": "7f07d621-11bb-4500-81c6-f58aae3e25ea",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "61b35e36-5893-4550-90fc-dc5b55e35e7c"
        },
        "item": {
          "id": "3c01b29c-210a-4670-9189-b585166463c6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6252da2b-60bb-435b-8fbf-2840d4b6ac90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3954d6a7-d4fe-45e4-a72c-3aa868eaca38",
        "cursor": {
          "ref": "f2edc8f3-0840-4333-910a-4fc3b4e5f6dd",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ba4d5d3b-33cc-4c71-9751-046602d951f3"
        },
        "item": {
          "id": "3954d6a7-d4fe-45e4-a72c-3aa868eaca38",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e803f612-00a0-4e30-8cd3-3dbc3eeba0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a82c772-8888-4c61-a471-44582ae682e2",
        "cursor": {
          "ref": "86e6c594-c89c-473b-8857-82351022404b",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5720d9d0-bb88-4d94-961f-8f5cd937959e"
        },
        "item": {
          "id": "3a82c772-8888-4c61-a471-44582ae682e2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8455c55b-e3d4-4c33-aba9-c757dd77da6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e6c5bc-99b3-4646-a319-03d608d4bc45",
        "cursor": {
          "ref": "db8942d1-ea69-4831-aa7a-eeea933094b5",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a5bb8982-788a-4dd7-a214-bb0671aad31d"
        },
        "item": {
          "id": "03e6c5bc-99b3-4646-a319-03d608d4bc45",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ce3afc27-1ae5-436e-9737-447ed89dad35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5a57e4-29d4-45ca-a9ea-2d2b9de6beed",
        "cursor": {
          "ref": "6ef61237-7e48-4950-9688-72a25942c553",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e8dde01e-ecd6-4abc-af4b-354fcb1d205b"
        },
        "item": {
          "id": "5a5a57e4-29d4-45ca-a9ea-2d2b9de6beed",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d7d96980-a838-44b6-941b-9da2ce058c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8dfa704-8a19-47fc-9321-4b0939a89184",
        "cursor": {
          "ref": "b228b3f4-7a96-4730-829e-da915f56bf62",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c7c0a8b4-0332-4da7-bc7c-60a8ef5de0a5"
        },
        "item": {
          "id": "d8dfa704-8a19-47fc-9321-4b0939a89184",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2aab84a5-601f-4940-b5da-58ab94e47843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e38b80-4aa4-420f-96a1-6eeacbb47620",
        "cursor": {
          "ref": "5b8e2c85-0616-42a5-add4-93ef5359274a",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7b2fd547-17a3-47d7-ab1f-d91d9883d3fc"
        },
        "item": {
          "id": "66e38b80-4aa4-420f-96a1-6eeacbb47620",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "534e1fa3-ac7e-45aa-b4e8-8eb4b0bf08fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b18eb3b-0ab1-4c88-8e12-fdcee2bb59c5",
        "cursor": {
          "ref": "4858c760-d101-42f0-9caa-8713b550d608",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6070ebb9-2e20-4867-a673-933bc573098f"
        },
        "item": {
          "id": "1b18eb3b-0ab1-4c88-8e12-fdcee2bb59c5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a7bf7814-5ed6-4e98-84c2-013d677caf40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c476dd9b-df2d-4ca3-8236-324955a95a0c",
        "cursor": {
          "ref": "149785cb-b273-4a1b-b5ff-b8e4cfa2df79",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5579afc9-06f5-44db-abe6-d1b1ad22471f"
        },
        "item": {
          "id": "c476dd9b-df2d-4ca3-8236-324955a95a0c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5afcd40c-b73a-4b07-9be4-6b2fbe5791d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a880d4c1-3f4d-4fb6-823f-917e59f28127",
        "cursor": {
          "ref": "06fef34f-fa7c-4136-a95d-bc57decdcf05",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "11893749-a3d4-46cc-812e-4aa1ccb83894"
        },
        "item": {
          "id": "a880d4c1-3f4d-4fb6-823f-917e59f28127",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "57a4bbe8-ac22-4d4b-a16b-b8e298e990fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85b0e93-d0a0-4031-9e44-54f7133e677b",
        "cursor": {
          "ref": "27c75e9f-f584-4d3b-8775-e7a9cf23bf12",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4cf98240-ee3f-4f46-ac50-b0de074bdab6"
        },
        "item": {
          "id": "a85b0e93-d0a0-4031-9e44-54f7133e677b",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "476e7d2a-fe83-4132-b14c-084fb0e59719",
          "status": "OK",
          "code": 200,
          "responseTime": 2340,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "f178671c-377c-4772-915f-a3915c427da8",
        "cursor": {
          "ref": "5d19486b-a89a-4ec4-87b3-0a3574a7cccb",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d89391b8-700c-4ae5-b397-92993b2a425b"
        },
        "item": {
          "id": "f178671c-377c-4772-915f-a3915c427da8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2c622133-52ab-420e-a060-dd0ace7a015e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa64de78-a3a8-4b33-b31d-0d4506a2ba50",
        "cursor": {
          "ref": "54358dcd-ddeb-477a-a22d-1bcf0cf7360c",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5bdb5d7c-e5a2-4833-992a-641d2a257acb"
        },
        "item": {
          "id": "aa64de78-a3a8-4b33-b31d-0d4506a2ba50",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e6839c5c-8586-4f74-b037-62c897a7811e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3ebdec-56ee-4f3b-82cc-b25a80960d1c",
        "cursor": {
          "ref": "89cbd8c4-11ee-4f0a-a510-675e9877d881",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d23772ec-7597-4166-a2f8-8b5389b7d45a"
        },
        "item": {
          "id": "5a3ebdec-56ee-4f3b-82cc-b25a80960d1c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8816ab4c-81a7-4534-9add-a967df00a827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f0b79c-3454-4b02-a1d4-f37a2912ff62",
        "cursor": {
          "ref": "2ed0af3f-1078-465f-8e5f-a01bd61b0e24",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a77c5959-b152-43c2-9f35-3815d89aaaf8"
        },
        "item": {
          "id": "07f0b79c-3454-4b02-a1d4-f37a2912ff62",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1bb8ebdb-1af3-4536-ae70-cb386358f44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40db4238-ddb6-4af6-97f3-f68da70a4339",
        "cursor": {
          "ref": "7c6bedf0-8d40-4c39-a7a9-345beb1f870c",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6b126fb3-8394-4ede-991b-c7eada8dc1b8"
        },
        "item": {
          "id": "40db4238-ddb6-4af6-97f3-f68da70a4339",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a2d2b4f6-27b0-4dca-8801-78899df770b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd496b87-d1d2-4df5-a381-0b136b3e7a45",
        "cursor": {
          "ref": "24f82173-e4ff-46d8-8e00-290ead1f64fd",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bb3f2c74-e6bc-4774-b5f2-d3196b8ea934"
        },
        "item": {
          "id": "dd496b87-d1d2-4df5-a381-0b136b3e7a45",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e4dadf1f-91ac-4e9d-942e-6cb67e00929c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abd3676-7e66-43cd-a440-d9c683bafbf1",
        "cursor": {
          "ref": "680923b4-d718-4be0-ac62-0c5c9c89962e",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f60db60c-93b3-40b1-8270-f86efb0f0269"
        },
        "item": {
          "id": "9abd3676-7e66-43cd-a440-d9c683bafbf1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b1754045-7db3-410a-aa70-d00b72bad6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee334793-f074-4705-af90-a1502f6eae21",
        "cursor": {
          "ref": "a8b4b80f-0c46-4c2c-8210-fc56e2e4783d",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "449fdedd-63f3-4a52-8f4a-61cef312fb48"
        },
        "item": {
          "id": "ee334793-f074-4705-af90-a1502f6eae21",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c7161272-c973-4727-9cc3-7f9971204e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7346f1f6-bbed-4daa-ad1d-11e11c0f8b60",
        "cursor": {
          "ref": "86a419a7-98f3-4882-b1dd-2518d8adf524",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ab23c7c7-a0d7-44cb-9390-3ad03966c53c"
        },
        "item": {
          "id": "7346f1f6-bbed-4daa-ad1d-11e11c0f8b60",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "44ef6323-1f69-47b7-a08a-0d5ffb044629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20716184-beec-4548-a9ba-8def639d98f1",
        "cursor": {
          "ref": "279f803a-90fb-48e4-97db-dbd8b11d1d8b",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b6f7bb71-7c5e-43d1-b0de-a3e6c23e673f"
        },
        "item": {
          "id": "20716184-beec-4548-a9ba-8def639d98f1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "52da33aa-88c5-445a-abee-ff4f87af7ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03da6598-8b3e-4320-ad6e-501ab45e4f48",
        "cursor": {
          "ref": "2d47f3fd-c2f7-45b7-99e1-f0dd3416d2a4",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0921c5be-c299-4547-856f-bef58f0a95cc"
        },
        "item": {
          "id": "03da6598-8b3e-4320-ad6e-501ab45e4f48",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ab4b9b5f-ddfc-4679-98a3-3c2d4a215122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5b25e8-9efe-4fca-a16a-75f18acfc3f5",
        "cursor": {
          "ref": "8ffee55c-a29a-4476-9c20-3e608b10e41d",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1268064f-5542-4a85-93fa-73576078f68f"
        },
        "item": {
          "id": "0e5b25e8-9efe-4fca-a16a-75f18acfc3f5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "aa8500ed-4603-4982-952a-b9aa97df6431",
          "status": "OK",
          "code": 200,
          "responseTime": 485,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "abf24a76-af16-4c31-b28b-7f8334a5c81d",
        "cursor": {
          "ref": "f1b72eab-86bb-4bc5-8744-65d138461ab9",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "90d3b5a1-7541-4e7b-b76b-59400dfb6e66"
        },
        "item": {
          "id": "abf24a76-af16-4c31-b28b-7f8334a5c81d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c3eeb5ef-69fa-450f-b38e-5500f4f6acee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c900cbb9-8265-4cd3-9d72-213d0a9ce07c",
        "cursor": {
          "ref": "76fce7ca-1594-4e30-9b53-73a77b91dbd9",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f166e495-d0fa-4f41-98bc-629e014efddb"
        },
        "item": {
          "id": "c900cbb9-8265-4cd3-9d72-213d0a9ce07c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b5bb50ed-c5ce-4a59-94ab-93339f6fe1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46466055-b2aa-4a70-ba23-ce77cb6af502",
        "cursor": {
          "ref": "0a5066f7-f1ba-4cf9-a5f6-0d524cb6d3f8",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "433f9c7e-a6e1-416c-ab57-754132c2840d"
        },
        "item": {
          "id": "46466055-b2aa-4a70-ba23-ce77cb6af502",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "19b32c67-7c76-419c-a559-8110d299aa6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7325830b-9522-43a7-9e4e-35ce6c254c8f",
        "cursor": {
          "ref": "21a79366-d355-4b43-ab4e-dbae752cc96b",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6abe1355-7155-4db4-ae50-1b51f52e9511"
        },
        "item": {
          "id": "7325830b-9522-43a7-9e4e-35ce6c254c8f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ccfa1c37-f0b6-49aa-9f21-17738ba150bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f6ea65-492d-4908-8cf1-e2a0a3a682f4",
        "cursor": {
          "ref": "ffebe421-54ac-4f98-8370-4ced50c3d43d",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c67a0d51-a8a8-4659-b6af-2980f533a6b5"
        },
        "item": {
          "id": "b7f6ea65-492d-4908-8cf1-e2a0a3a682f4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "42b19a9e-7a91-4a8e-a0a6-3f7435e502ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c94704-47c4-418c-aae2-ac6044b3ffed",
        "cursor": {
          "ref": "2836bc53-5965-4b45-86dd-7b2d43950c36",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8665397d-fb2e-4f7b-84a1-261834edf4fd"
        },
        "item": {
          "id": "b6c94704-47c4-418c-aae2-ac6044b3ffed",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "27d8505b-b85d-4a7b-804d-42c899b9dc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b592337-1d2e-42cc-bbb3-efe93b2c5f49",
        "cursor": {
          "ref": "55c5d09f-33e3-4457-bd91-21d33272c492",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "62ed0cc2-8ebf-4ab0-a5a5-fc212fc32f6b"
        },
        "item": {
          "id": "6b592337-1d2e-42cc-bbb3-efe93b2c5f49",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1268e439-aba6-444b-ab14-6d8fc815cb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5c2211-7137-4610-8e3d-4670b2711b82",
        "cursor": {
          "ref": "ab966d07-7af8-4d6a-84a9-2586876e7bd3",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "95a816a3-5e75-40e1-a7ff-42d905df7240"
        },
        "item": {
          "id": "fb5c2211-7137-4610-8e3d-4670b2711b82",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "dea98e9a-1606-457f-b294-652763608e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c1f222-9aa0-4f29-9bf4-066f100bcec6",
        "cursor": {
          "ref": "f46ded34-2920-4443-abc2-d39f6ebb97b6",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "432e2f9b-1794-4ff8-8d33-89f20b8111c3"
        },
        "item": {
          "id": "b5c1f222-9aa0-4f29-9bf4-066f100bcec6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c85b942f-e0b5-458e-9154-10e7e93dacca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9adf331-eaff-4224-b468-4c17c0bc47d9",
        "cursor": {
          "ref": "78fdb9bf-a5a5-455b-9ba8-ee06b937c98a",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a0e33ec5-9d88-4b26-bd5d-e7b06a4a1fdc"
        },
        "item": {
          "id": "c9adf331-eaff-4224-b468-4c17c0bc47d9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a6daa4f2-ce26-4b03-a4a2-c25d40c6d73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c929a62-6df2-4502-9299-6fdd8531cd20",
        "cursor": {
          "ref": "ce4800c4-0cc4-40fa-a97f-e4e947294562",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a97f398b-47fd-4020-9814-e2b11b5f955b"
        },
        "item": {
          "id": "2c929a62-6df2-4502-9299-6fdd8531cd20",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "34e239c2-bf49-47da-a59f-3c10df2a6aa9",
          "status": "OK",
          "code": 200,
          "responseTime": 530,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "5c67a434-26ec-4f94-b9f5-3f9b6ecbe118",
        "cursor": {
          "ref": "7668df85-39dd-4e59-a2fd-2c4c3cf1c56a",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6b990559-876a-4ccf-a68e-76220f3284fa"
        },
        "item": {
          "id": "5c67a434-26ec-4f94-b9f5-3f9b6ecbe118",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "cd36e4d1-e795-4442-ab70-fdd1ba742644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4422bc-853c-4193-8b7e-13163331cd7a",
        "cursor": {
          "ref": "06b3641b-32e7-4b5c-ac38-e3a27b524981",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f37c0c66-09de-47d2-97cc-b24023be20df"
        },
        "item": {
          "id": "af4422bc-853c-4193-8b7e-13163331cd7a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1986f76e-0f47-4fdb-b8b0-738d5c041693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70e41c8-098f-40e6-923a-8d76e69556d3",
        "cursor": {
          "ref": "fe3127b5-2d8d-430f-a87e-0f7252235872",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0f0ea5dc-36ee-42c9-bc8c-28d9a8d4bbde"
        },
        "item": {
          "id": "c70e41c8-098f-40e6-923a-8d76e69556d3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0cf1aad1-8da7-491c-9446-98762c74f512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4badde-cc85-4c94-8087-80e963712e36",
        "cursor": {
          "ref": "6180a695-fa65-429a-8edb-725b64f9572e",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "467fe4bf-2d0e-43ca-ad0e-277ca3d8567f"
        },
        "item": {
          "id": "8d4badde-cc85-4c94-8087-80e963712e36",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b662e3ac-5d32-40c4-9943-fc0675cb7afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8ef022-22d2-4cbc-a61c-74b7c8fd1ba7",
        "cursor": {
          "ref": "e6ab679a-26ef-46cf-a92c-402d85384cac",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a2bd858a-8d4b-44ab-8f60-082ffba1f3a7"
        },
        "item": {
          "id": "4b8ef022-22d2-4cbc-a61c-74b7c8fd1ba7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7fdad530-1025-4815-9df8-84dc884ca46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5597659-e19b-4f94-a444-031e6cad3adb",
        "cursor": {
          "ref": "8ecf0cc8-0fcb-4705-9daf-01db8121fa6d",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a6de655a-91eb-41ac-8111-298cab7b478e"
        },
        "item": {
          "id": "a5597659-e19b-4f94-a444-031e6cad3adb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bd9e39bc-3b34-47fa-ae63-8bc472fba48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e511683a-a2d1-46a7-81d0-2489f80ef7b3",
        "cursor": {
          "ref": "0d41980a-dbe3-41d3-a6c2-66b6f6643f18",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3c7d531e-eada-4459-938d-74cc79b3bcee"
        },
        "item": {
          "id": "e511683a-a2d1-46a7-81d0-2489f80ef7b3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "050db8fb-ceba-4cf1-bb7e-a57b39ffb8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ad04dc-515a-4a9c-afb7-31280b174c48",
        "cursor": {
          "ref": "6949c309-fa21-4799-b60e-287bc1751ca7",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5a8814a4-6a44-4ccd-97bf-64e23279e650"
        },
        "item": {
          "id": "45ad04dc-515a-4a9c-afb7-31280b174c48",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "36c9ac71-6357-4ca9-bf1f-9f71f2c1954f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11ca8c9-4026-43ae-93af-4856588eff85",
        "cursor": {
          "ref": "caebe60f-5140-4091-8b9d-7c7f14b2083a",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6dda4e12-3334-4d66-ad74-9d4e754781d5"
        },
        "item": {
          "id": "a11ca8c9-4026-43ae-93af-4856588eff85",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "03749191-d7b9-4259-b238-a6bc3abc2264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a9fc66-731d-4db9-b979-2782f6629e5c",
        "cursor": {
          "ref": "e8c32a54-1251-4f9e-9f6b-01afbd68a813",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1986eeb6-bc30-4495-b734-7d3d8431bd16"
        },
        "item": {
          "id": "e0a9fc66-731d-4db9-b979-2782f6629e5c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9a63ecaa-3b4d-470d-ac01-795aef067100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899ccc63-a5f3-467a-b031-6f129145f44f",
        "cursor": {
          "ref": "604ffbdf-6dc2-46ad-a090-c25b79c424ee",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "18d7a74a-d4a5-45a7-bc39-de0dd0da26c6"
        },
        "item": {
          "id": "899ccc63-a5f3-467a-b031-6f129145f44f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6b707888-f64f-45d2-931c-24b7fb94a3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cb7498-490c-4592-b3f1-31848dba1b13",
        "cursor": {
          "ref": "c580d6d1-687f-4af4-95f1-a65584f5ecfe",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "768be3c1-c402-427a-912d-b8df4121a448"
        },
        "item": {
          "id": "51cb7498-490c-4592-b3f1-31848dba1b13",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e5cfc4dc-481e-405c-b23a-9d7b30926384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e59ae7-799a-4bc8-a97e-68990e113403",
        "cursor": {
          "ref": "6b38d85e-1a49-406c-93ad-5d54cbedea8e",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8da57bdd-15b2-48ce-a318-4d90ad575cc4"
        },
        "item": {
          "id": "e1e59ae7-799a-4bc8-a97e-68990e113403",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "96735402-f5db-4c46-95dc-282401fe14b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d60af1-186e-4c27-b545-17cdb7612744",
        "cursor": {
          "ref": "73d61081-af13-4b48-83c9-a6d6d661d5f4",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "230c36c7-79c1-4d37-8cc3-d31c1b8491d7"
        },
        "item": {
          "id": "53d60af1-186e-4c27-b545-17cdb7612744",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ff7d0387-d179-41d2-8b98-c1dc6820e47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae9114f-8d8a-458c-8827-d7498f2c10f7",
        "cursor": {
          "ref": "958f39cb-3dc0-4c8a-90e0-c9814673a901",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "042804c1-2367-4360-8ec1-e580be5ab46d"
        },
        "item": {
          "id": "bae9114f-8d8a-458c-8827-d7498f2c10f7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fdc66c68-0c43-4c99-88d1-c82d4b37b6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010d45af-feff-4ddd-89d6-9e22490316df",
        "cursor": {
          "ref": "326466e4-d51b-4eb0-b9d8-ac3377ea5a83",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "641f2f2c-30fd-42d9-b03a-8bba19687db7"
        },
        "item": {
          "id": "010d45af-feff-4ddd-89d6-9e22490316df",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9a83e81c-be91-4a09-8f41-dbff04f1dba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df59f697-69f4-49dc-bf87-76f8d8c7f043",
        "cursor": {
          "ref": "cfde5ef7-5415-4319-83ff-b7b2d4d272d2",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e46940dd-c66b-42f6-a779-05d2821ac826"
        },
        "item": {
          "id": "df59f697-69f4-49dc-bf87-76f8d8c7f043",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "96e4de66-0538-4583-a98c-4781e7cd4f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cb3fdc-d78e-4972-87ad-b6b4956c8110",
        "cursor": {
          "ref": "b55b4be9-ce36-4fb5-84c9-c983019ee8bc",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c0dfb533-7a16-4dda-840f-48cb14cf7183"
        },
        "item": {
          "id": "e0cb3fdc-d78e-4972-87ad-b6b4956c8110",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b8f88f7a-62f8-4293-b3dc-79861c66772a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1378,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b26ca07-482d-4d58-9e37-73f98371123d",
        "cursor": {
          "ref": "ab8581d5-28fb-4eb3-80e8-11bb7ab68f85",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "14ce87ff-1a53-4832-b76f-5657e02059d6"
        },
        "item": {
          "id": "6b26ca07-482d-4d58-9e37-73f98371123d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "34ba7543-7859-4b77-ae81-ad035d4ee12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1431,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1703a2-9770-4c2b-af4e-d303c0ce88fd",
        "cursor": {
          "ref": "f5b3ff41-a0d5-4e58-90f5-3b8e3a1254ca",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e71119a6-621d-43e7-85ac-7b2b30486f68"
        },
        "item": {
          "id": "3e1703a2-9770-4c2b-af4e-d303c0ce88fd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f16290c0-f68c-4e36-b983-0a63b0c3e3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1523,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87137803-7918-45f6-88d8-30bd74419c76",
        "cursor": {
          "ref": "d7222016-3fdb-4282-95e8-54769cc8e845",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1437653d-8393-4f2d-bd2b-f93dd2ff1f60"
        },
        "item": {
          "id": "87137803-7918-45f6-88d8-30bd74419c76",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3018166e-3e23-4840-83c0-fcbed7e8c1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1497,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7b1b12-33c7-4ca8-b03a-f4058e248d1a",
        "cursor": {
          "ref": "1765a995-65b5-4588-9661-f3f384c4f26b",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c7d11eed-25e3-4e3d-9936-3840368d3438"
        },
        "item": {
          "id": "7d7b1b12-33c7-4ca8-b03a-f4058e248d1a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "955ad839-5ae7-481c-8633-5ab93c65f712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1341,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305c39b6-4704-4ec8-86ba-22be2c42fe22",
        "cursor": {
          "ref": "61203618-7a97-4b1b-a271-06353822ef85",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "364d9145-fa49-4570-9976-01b31983402d"
        },
        "item": {
          "id": "305c39b6-4704-4ec8-86ba-22be2c42fe22",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a48e7e9c-b749-4ff2-9bef-280b55cc4324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1311,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4894e94-25be-48ba-9e18-29cc37f38b9f",
        "cursor": {
          "ref": "5c896395-f6ee-4ae0-90a1-fe63a911f6ba",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9b64f45c-0d48-4e08-a1a1-3953e9246323"
        },
        "item": {
          "id": "b4894e94-25be-48ba-9e18-29cc37f38b9f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "88eaed27-90cc-443c-aab7-ad482a80d564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf08177-f4b5-45fc-bc41-584ac0a75d2c",
        "cursor": {
          "ref": "ef94ef2c-19c2-447e-9133-732712b8a5d7",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "912b872c-d7f2-4b7c-ac5a-728157585200"
        },
        "item": {
          "id": "ccf08177-f4b5-45fc-bc41-584ac0a75d2c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "391ff8d8-b8d5-4c87-b43a-b7ac6668dc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0065cf39-0bf5-4051-94ff-8838256f2bf6",
        "cursor": {
          "ref": "ab7f33c5-56de-4fa7-bd4d-3c9022e9bc22",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ba61d5a3-38cf-4f81-adf5-6fed2fb35bab"
        },
        "item": {
          "id": "0065cf39-0bf5-4051-94ff-8838256f2bf6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8a9bf407-4f04-40fc-8743-dc36905b6644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0472967-10d7-47bb-87a1-18ef59c8c7be",
        "cursor": {
          "ref": "dfd540be-2cd2-447e-9155-67add0d73fa9",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f2d1298c-4bc7-481b-b95c-97b09f2fda73"
        },
        "item": {
          "id": "b0472967-10d7-47bb-87a1-18ef59c8c7be",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "67a7a597-2ce1-4259-9b86-69f1652cf10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81831327-c26d-4472-8c53-7790e7ab660e",
        "cursor": {
          "ref": "63c6c2e5-b4dc-46ef-924d-eb7163cbd16b",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c997cfc0-d747-4bc4-a948-882b0988f5c8"
        },
        "item": {
          "id": "81831327-c26d-4472-8c53-7790e7ab660e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c48e60d4-5f3e-4615-947d-8ae15ff69110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c419f20d-9635-41de-a203-8813f5463dbf",
        "cursor": {
          "ref": "6b280eb4-3e74-4491-bf3e-6af6f2890740",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "45553c24-e406-4fbf-a349-8f9c1f13c12f"
        },
        "item": {
          "id": "c419f20d-9635-41de-a203-8813f5463dbf",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b3ad1d8a-d75c-44fa-b98f-7f850e267cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfedcb28-c083-4e9b-9e66-7194a6bcdd09",
        "cursor": {
          "ref": "1c988d81-b865-444a-a380-ac0224ec701a",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "dc988732-c3ad-4117-b5ae-691b65025736"
        },
        "item": {
          "id": "cfedcb28-c083-4e9b-9e66-7194a6bcdd09",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4e6a2eba-bec3-434e-9199-28323c28ec5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e9fa6f-38a2-47a1-b6ac-84626f66fa70",
        "cursor": {
          "ref": "47e37667-9d56-49f6-a141-b6f655750bc1",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "230bb511-5991-4a7f-b17d-995db898a42b"
        },
        "item": {
          "id": "82e9fa6f-38a2-47a1-b6ac-84626f66fa70",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8677905f-034d-4921-aff2-d726c9a10d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df20779-404a-423f-a4ad-62619218b1a3",
        "cursor": {
          "ref": "bd0cc765-4f52-4152-8dd0-5a2cb1064c89",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6043b940-efd4-4cb8-aebd-77db8001b554"
        },
        "item": {
          "id": "9df20779-404a-423f-a4ad-62619218b1a3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8761a4a5-6609-40a3-a6d1-fa2a82e75aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1883dfb0-1aec-4071-9b61-28861dd33386",
        "cursor": {
          "ref": "96a064a5-d8b8-4084-a149-666204e36c85",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "856a0129-905e-431a-ae63-b59120e57840"
        },
        "item": {
          "id": "1883dfb0-1aec-4071-9b61-28861dd33386",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "845ae40f-a57e-4786-bfd1-f87beee3d125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c937da-86a9-401a-a2fd-47838cd0b578",
        "cursor": {
          "ref": "0124b258-d57f-4d3a-984a-40b92164ab74",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "39f00847-330d-4dac-b610-00c56ce3ef66"
        },
        "item": {
          "id": "85c937da-86a9-401a-a2fd-47838cd0b578",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7b30ec4e-9c2a-4c1f-82d9-47950f0867a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebda25a3-a51a-4a13-8f42-25e3e0922222",
        "cursor": {
          "ref": "5df84a68-d0f2-4f11-ad5d-fac24d8ea8de",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "318f9bf5-c5cd-4998-acd4-3f6c1d7e25b3"
        },
        "item": {
          "id": "ebda25a3-a51a-4a13-8f42-25e3e0922222",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "de766523-b241-4911-a14c-e0a663d8bd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfb420e-3aa8-4bae-aed2-7e43ca278d96",
        "cursor": {
          "ref": "2dc33a7c-344e-4df8-b45e-2ed5b9cc1e3c",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c734bf5c-5b42-4ba3-ade7-77535ed69ed1"
        },
        "item": {
          "id": "9bfb420e-3aa8-4bae-aed2-7e43ca278d96",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "88c509c5-48e3-4e13-96ac-5ee76ca2a7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46667c97-0642-463f-951a-6a0d4d99a7f2",
        "cursor": {
          "ref": "9050395a-acc0-4c45-8a4c-5a2ac01297e4",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "51ed2667-2e22-44a0-b70b-fe4779dd0297"
        },
        "item": {
          "id": "46667c97-0642-463f-951a-6a0d4d99a7f2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0e756a17-be6b-4962-a087-705a738732ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229fe891-393d-4eb0-b376-aeaeeb4ba6a1",
        "cursor": {
          "ref": "34e02742-f4bb-46af-be09-87ba30d43d47",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "640128a7-e0a3-4e03-9163-f890501b9e35"
        },
        "item": {
          "id": "229fe891-393d-4eb0-b376-aeaeeb4ba6a1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a26fb7f0-ff53-43a7-afaa-e7cebbf19582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215a60a1-7b55-4b94-9250-82d1c8fac3b3",
        "cursor": {
          "ref": "1edf7d37-1f2b-438f-bba4-60830324dfd6",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ea07b5bb-e979-4b40-aee1-0919b558af8a"
        },
        "item": {
          "id": "215a60a1-7b55-4b94-9250-82d1c8fac3b3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5ed763b5-6f14-4f3e-ac4c-af52ac6e9f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0784a67-ac1b-4b00-912b-dafafd1dd228",
        "cursor": {
          "ref": "61642347-fcab-486e-825b-727954dade68",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "396d01a8-24f9-4387-8329-d40fc0eba837"
        },
        "item": {
          "id": "f0784a67-ac1b-4b00-912b-dafafd1dd228",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "77eb1e78-7326-48f3-a678-86c290f49a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a7f433-878d-45f9-909d-da26a5b25a58",
        "cursor": {
          "ref": "78f277c7-df35-46d8-970f-6bda4a437feb",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ea88ce63-dbf0-4087-96d2-00bda4a84f25"
        },
        "item": {
          "id": "44a7f433-878d-45f9-909d-da26a5b25a58",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7b7779ed-1f7e-42bb-b48f-a0d6d7ceb421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b6a06b-99ff-487f-b1e0-934138a101c7",
        "cursor": {
          "ref": "35162e78-c23a-4758-811f-cf3e37c6cd42",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "17c40ae1-55c7-41b3-98c3-b6f5dbfff194"
        },
        "item": {
          "id": "87b6a06b-99ff-487f-b1e0-934138a101c7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6fbb2d29-8817-4e4d-87d8-92cf0bd1fd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb4f056-7d4c-4020-a62b-652b27f776b2",
        "cursor": {
          "ref": "ab82213a-dc88-441c-9265-54016d5d5042",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b913e5bd-9ada-4d7a-92e3-ecae180d9291"
        },
        "item": {
          "id": "3eb4f056-7d4c-4020-a62b-652b27f776b2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "29aab508-60cb-431e-b0ec-20a408b0614c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dc169f-753b-4a51-8b7b-09c1f5d35c0b",
        "cursor": {
          "ref": "a2d4dd3b-d2c3-4ec6-a2e4-951bde765f6a",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3ccc07fe-cbec-4214-98eb-4df2a63292f5"
        },
        "item": {
          "id": "84dc169f-753b-4a51-8b7b-09c1f5d35c0b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7aef4c8b-b8fc-4a09-a9f5-d9c928760d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a059cb3b-8d4e-4ee5-b376-f2c8cf90170f",
        "cursor": {
          "ref": "f34d1ae2-fa9c-43a8-a28d-2359c0e32922",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "696e2104-0035-4e97-945b-2fa6986abcb1"
        },
        "item": {
          "id": "a059cb3b-8d4e-4ee5-b376-f2c8cf90170f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1dc82f78-4a43-4f01-bbf1-86f449ebab29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7de7e2-f388-4e12-a7fb-90446ec6b7d6",
        "cursor": {
          "ref": "43742457-a8d7-4f23-a882-8f8b0c0c3bdd",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d173bd15-f3b0-4911-999c-5c91aa284e45"
        },
        "item": {
          "id": "0a7de7e2-f388-4e12-a7fb-90446ec6b7d6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5ca55656-39c9-40a5-ab6f-1031a57d396b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc965d2-dd13-4bcc-9929-6bc9499123cb",
        "cursor": {
          "ref": "4964a711-be3f-4591-9205-336606d8bd6b",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bfd634ef-5920-439a-93e2-1e124cc439f3"
        },
        "item": {
          "id": "bdc965d2-dd13-4bcc-9929-6bc9499123cb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "49166f9f-4861-497b-af81-728a1e1b2c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3f5ba1-bcb2-4c37-877e-ff79a0a15000",
        "cursor": {
          "ref": "6b2e7601-2ecb-4c07-b5d6-9748f98094aa",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e1541f6e-7791-4663-92d0-1477d64e5153"
        },
        "item": {
          "id": "ff3f5ba1-bcb2-4c37-877e-ff79a0a15000",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "32bb7650-867a-44e5-b899-c29ad616dd62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fbe7d2-536d-4874-9cef-026ff31b9a58",
        "cursor": {
          "ref": "9794b774-51aa-4758-8c44-5dae35fa3a24",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8c2d8981-6f89-4d39-815a-b722d9bb82ba"
        },
        "item": {
          "id": "c4fbe7d2-536d-4874-9cef-026ff31b9a58",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a94b0d62-5a7b-4dc7-aaca-03778fe5de0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6e11ba-d7bb-491f-86dc-7e26c272529f",
        "cursor": {
          "ref": "26529f4b-d133-41f6-8b2c-b53aef261e7c",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "703a9ea4-198d-4626-a264-c7b1ffb32f2f"
        },
        "item": {
          "id": "6b6e11ba-d7bb-491f-86dc-7e26c272529f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "09762dd0-16b1-4807-9b0e-8cd093d7be92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cf8007-9ab0-4b0a-b394-ee4d518583db",
        "cursor": {
          "ref": "42cb44c8-e332-4d3b-a429-9b6f4839036e",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "02c206bd-ece4-4472-b375-05ce908c49c2"
        },
        "item": {
          "id": "60cf8007-9ab0-4b0a-b394-ee4d518583db",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b4636916-50ec-4696-a6ec-3cce18a15951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65315aac-3685-4fd9-a120-dae904a84554",
        "cursor": {
          "ref": "ab5a2eba-ead0-4a85-907c-a233f6eca1df",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3ba385ef-5830-4f93-b429-ff1ccf84e5e1"
        },
        "item": {
          "id": "65315aac-3685-4fd9-a120-dae904a84554",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4c793418-5228-4993-8dbc-dee07896fc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23327356-37ce-4bef-9c63-0a3f6a3d0f79",
        "cursor": {
          "ref": "63ee35e4-6901-410b-bd99-2608f7b00549",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3d21b185-3122-4fc5-b702-87a08ed61bd9"
        },
        "item": {
          "id": "23327356-37ce-4bef-9c63-0a3f6a3d0f79",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2cb5853f-693f-4ebc-967f-09018abf16b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d6db1f-ab51-453b-9338-07a769cad76f",
        "cursor": {
          "ref": "e2c21a06-46b8-4ab4-a47d-9b74ac6d5d29",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0e7cb5e0-5d96-4b70-b8b6-93839c2bb8fa"
        },
        "item": {
          "id": "13d6db1f-ab51-453b-9338-07a769cad76f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "68a93850-74b5-4825-8028-7176e9b414d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2001cf-3786-4105-b56e-63f0b92cc7b9",
        "cursor": {
          "ref": "3fcec187-8bd1-4b49-bc93-2537cbd0cc0a",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0784dd0b-da34-412b-8a41-b38eaf661214"
        },
        "item": {
          "id": "7d2001cf-3786-4105-b56e-63f0b92cc7b9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d6713a70-3777-4e68-842f-36aa1c09ad5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad53c61-4673-4a69-901c-e126045dc3e0",
        "cursor": {
          "ref": "28719b9a-0efc-4cc7-b019-68a6f38d2685",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "84726653-a5a8-409c-9a98-6f4889881f57"
        },
        "item": {
          "id": "bad53c61-4673-4a69-901c-e126045dc3e0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "353ec95c-747c-4232-87bf-e64c7fe4c5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc73305-0530-4e46-8fc2-27efd86db0b4",
        "cursor": {
          "ref": "390a57c1-9052-49ee-8f92-ddf0594406f4",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d68b3d71-2614-49e2-8eaa-6c7fc0cca62b"
        },
        "item": {
          "id": "ecc73305-0530-4e46-8fc2-27efd86db0b4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5db14f69-d841-43b2-bd3e-5e253a624f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f6f95c-0439-4fa5-8e4d-8431ea292112",
        "cursor": {
          "ref": "0a25ce7f-84f5-46d5-b49c-ade640a8428c",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "989fff12-c05a-4843-99e1-ee8c74c7e91a"
        },
        "item": {
          "id": "47f6f95c-0439-4fa5-8e4d-8431ea292112",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1a448bb4-085a-44d1-8978-782b3a84b93b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c12612-89f1-43d3-8cb9-968a462cf0a7",
        "cursor": {
          "ref": "91839b96-cc09-4896-94be-5aeb527f0ebd",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "836407f9-64f0-4100-b03e-9fbb04395c78"
        },
        "item": {
          "id": "75c12612-89f1-43d3-8cb9-968a462cf0a7",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "e0e47983-70e8-4067-998a-64dca00b3fb8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 792,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48dc5bd-c553-4d28-b661-4c0f939f73d9",
        "cursor": {
          "ref": "cfde1c91-249c-42f1-a311-76ad668f0101",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5ab221c5-b34d-4b59-93ad-ea05c733a111"
        },
        "item": {
          "id": "f48dc5bd-c553-4d28-b661-4c0f939f73d9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ae90c026-f40d-4c32-b933-e2089eb4c72a",
          "status": "OK",
          "code": 200,
          "responseTime": 893,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55ca6d6-5c7b-4ae4-9644-ee5442404c47",
        "cursor": {
          "ref": "32a7372d-9309-4543-84c0-890744e4cb3a",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8a378c2c-f82e-4daf-a738-28cb30f37e8e"
        },
        "item": {
          "id": "f55ca6d6-5c7b-4ae4-9644-ee5442404c47",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0dba6108-a9f3-458b-8aac-ecae2f8c379e",
          "status": "OK",
          "code": 200,
          "responseTime": 3492,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff8f676-e9ac-4fa0-83bf-97b0777e222a",
        "cursor": {
          "ref": "540d1711-93e1-458c-9064-b4f9624b42df",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fc51457f-2207-4314-b465-d2672c57cd39"
        },
        "item": {
          "id": "4ff8f676-e9ac-4fa0-83bf-97b0777e222a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "abc566ea-970c-46e0-b70e-faad9c7c190f",
          "status": "OK",
          "code": 200,
          "responseTime": 2285,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a92d488-ceba-4bc1-826e-1c801fda4534",
        "cursor": {
          "ref": "3c714f4d-f26d-49c7-a27f-318c1fec10b8",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3ec24309-304e-42c8-9461-545709757f2a"
        },
        "item": {
          "id": "3a92d488-ceba-4bc1-826e-1c801fda4534",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d5eb0a41-152d-42be-9194-ddf539b04e9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a92d488-ceba-4bc1-826e-1c801fda4534",
        "cursor": {
          "ref": "3c714f4d-f26d-49c7-a27f-318c1fec10b8",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3ec24309-304e-42c8-9461-545709757f2a"
        },
        "item": {
          "id": "3a92d488-ceba-4bc1-826e-1c801fda4534",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d5eb0a41-152d-42be-9194-ddf539b04e9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a92d488-ceba-4bc1-826e-1c801fda4534",
        "cursor": {
          "ref": "3c714f4d-f26d-49c7-a27f-318c1fec10b8",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3ec24309-304e-42c8-9461-545709757f2a"
        },
        "item": {
          "id": "3a92d488-ceba-4bc1-826e-1c801fda4534",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d5eb0a41-152d-42be-9194-ddf539b04e9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906acde5-061f-4f86-8fed-9a4ea4fa8ab9",
        "cursor": {
          "ref": "596fe4ad-f952-4c03-9941-d6fab61a7054",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ae343085-2d06-45e7-a538-ed544f027a8d"
        },
        "item": {
          "id": "906acde5-061f-4f86-8fed-9a4ea4fa8ab9",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "97404158-c124-4b52-b864-29a531646401",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 441,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250b82b9-e581-4c1c-b83c-8c9b017ecf9c",
        "cursor": {
          "ref": "e5c4af46-cdef-4a26-a041-10e590867d00",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2116ec79-541f-4b9c-a6ee-7dd6ac869f6d"
        },
        "item": {
          "id": "250b82b9-e581-4c1c-b83c-8c9b017ecf9c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b43c7b31-06d7-4301-8127-a4821cdc25ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250b82b9-e581-4c1c-b83c-8c9b017ecf9c",
        "cursor": {
          "ref": "e5c4af46-cdef-4a26-a041-10e590867d00",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2116ec79-541f-4b9c-a6ee-7dd6ac869f6d"
        },
        "item": {
          "id": "250b82b9-e581-4c1c-b83c-8c9b017ecf9c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b43c7b31-06d7-4301-8127-a4821cdc25ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbd7744-2f33-4e0c-9262-6287dc8b6f62",
        "cursor": {
          "ref": "48eb30bb-eda0-45a1-9cbf-8c970e183e08",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "96ab528e-f869-4cff-b42e-5d1a5354386c"
        },
        "item": {
          "id": "7cbd7744-2f33-4e0c-9262-6287dc8b6f62",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "747b8d3e-0b9a-4154-801d-f78c1ca49e5b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 800,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91587af-126a-4200-accd-04e043b428aa",
        "cursor": {
          "ref": "6a51e158-f984-4bc0-a501-c35e35d517d0",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0988c5b3-443e-4522-bbd1-3ff04c97556c"
        },
        "item": {
          "id": "e91587af-126a-4200-accd-04e043b428aa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6bcc5ff9-2bfe-433d-b60e-7fbe503eb4c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91587af-126a-4200-accd-04e043b428aa",
        "cursor": {
          "ref": "6a51e158-f984-4bc0-a501-c35e35d517d0",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0988c5b3-443e-4522-bbd1-3ff04c97556c"
        },
        "item": {
          "id": "e91587af-126a-4200-accd-04e043b428aa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6bcc5ff9-2bfe-433d-b60e-7fbe503eb4c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fadc09-edf5-4638-8cf5-c1198707dc0d",
        "cursor": {
          "ref": "6697b0b4-8d0d-4d98-b84e-e5e8d67c73e7",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a9ad799f-c654-4a60-9acc-e39f19b83297"
        },
        "item": {
          "id": "03fadc09-edf5-4638-8cf5-c1198707dc0d",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "15023495-c486-470f-b403-7ef6432e4509",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 630,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}