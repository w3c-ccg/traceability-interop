{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b76f11ad-1935-4dec-af78-26f7076dc313",
        "name": "Clear Cache",
        "item": [
          {
            "id": "eba3df6f-0d73-415a-826c-206d1489210d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "24a46ebf-af1c-4c44-adf3-0c0a7dd3dc62",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a57e8f94-ad34-43b3-824a-1c2d06ce8269"
                }
              }
            ]
          },
          {
            "id": "61322563-8324-4f40-a293-50c169b30455",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae60c853-45d5-40b7-aae3-5e6e6e50532e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0cc539b4-c2dc-4092-9cab-3cc5e93c5d28"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1404b5d2-30d6-4d65-b119-c4b5c0c61839",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "72e0175e-f781-4f3d-8f9d-439654e6e477",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6d008cea-482f-4e59-9152-d1f7f6713d7e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b084ac4a-cab4-4d5a-ac2a-5e6f013cb32c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83078f29-986e-495b-abfa-112b2bf44687"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2ce8228a-4dc7-402f-8ce4-8ef0f00595f2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dd8b5703-6063-457e-8892-50a11eb5db94"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "92231c92-0e6d-4052-ace0-2849122c7eac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a18c581b-87aa-4764-b943-9473faa996d2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aaa3446c-4702-41a8-9af1-bb526faef18f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e70f6766-34e1-4a83-83a0-106f78043c07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b34f0845-0051-401d-ba41-5f5cb702719a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51dc97d4-a60f-420e-bb55-635dfe115981"
            }
          }
        ]
      },
      {
        "id": "fbfe69d4-1412-4fb6-8f52-1b2279533ca4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "628a4119-0a78-4120-a593-e80e877e62b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ab0f0e1-f71b-4320-aaa2-d0547d77e3b7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "35deafdd-fdc1-468f-af5f-fc43f263234a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79bb16e2-9e3e-40be-8137-649dd7eb83b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbd52368-71bc-41b3-9336-6dda8ee6fad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf3bbf1-29e6-40f6-a5c8-44d0f475a0ba",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c87e09-e441-492b-92f7-ab4e962d790f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24b2a0b2-fed3-4da4-819d-c345ad076d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5113d15-70c8-4acf-b6b2-4f16555c760f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432f2ab3-f259-480e-b836-2c3250347fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6fb492c-b56b-444d-8124-5ce53544f60d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b1160a80-9a8a-4206-a9b2-83883c372055",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d04e30a3-29e0-4049-9366-ecf179d2d098",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb62c94-caf5-4301-bce3-f1c11874a705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f67241d-e187-41cf-93b0-f0b8e0d3470a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16bb1c71-5951-4339-af12-e06e230ebea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b848054d-7370-4eb5-b743-84ccafaa3922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519d6ae9-8570-406e-85b0-9a50c641e77b",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12448b3d-6709-4a1a-815c-16b26b0121be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb1c2b3f-e5f5-40ea-8825-d11e69564cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f146f8e-5007-4815-8175-6cfa69ca35d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "07699d06-83f0-4475-a6b5-51e7e578ba53"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "362bed69-fe73-4116-b030-112c7c2a9769",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b4397c13-a404-4c68-8631-6a227597405e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa6490db-0c6b-42f4-a792-685c0b34ac3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b5fb0265-17d2-4a47-9193-537e94d8c1dc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a2c00fa-4e92-4e30-974a-aa0b6fa943e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "c54a67d1-60f6-40a8-b82e-e7f6fac20673"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6de33b64-a0be-4bdd-ae63-40523d5e64ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af1e81c9-9163-4c70-80a0-5e380bac8e8f"
            }
          }
        ]
      },
      {
        "id": "223ae9d4-64a6-466a-ae5b-c68bdf6963fa",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bd677b36-6ae0-4fd5-b4b6-886d2c771867",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9db7edf1-a97a-4cce-9e8e-d90b936862c5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e4366c44-ba0d-44e2-8b5a-05ba1f0e1ad7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab57f2da-030b-40a4-8efd-4d1ea6623fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596f79d2-e224-4e2f-9ceb-f2c8097146a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9dcbcce-f17d-49ea-9f7d-b08682deb1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de21503a-40a2-4aa9-b712-a3776ac72497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7a9b27-6bf2-4ecc-ad6c-dbc0567e8054",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a7b6a1-2035-45c3-872a-e67505b395b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c4d78ab-ac99-4594-a4f1-18e2ad35ce8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdce33e1-8841-4e0b-9e6a-07c8f1bfde9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e016be61-31a4-4548-b007-68ad00e6ad14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270c090c-3d53-4e60-8a57-d21336983a0e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc22991-9f89-4a60-a5ac-45d2232c8251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a80c2c-dd88-41cd-aa31-91cf30736df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f92a28-51be-48ac-85a5-a43ffbc9b657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "443f9884-4e55-4383-991f-2026aae7d579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2888bb9-c5d1-4c52-9970-4e66f34845c7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37deacf-e3e6-4753-9112-94e52056a078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099ddfa6-675f-4c11-a433-dfdc66b418db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227d46dd-60db-427b-8bb3-3bd814b98811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8420b1ab-8206-40aa-b50a-c6447d20e86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a36a1f2-b9be-4525-9c90-8b955f4fa36d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0cbd82-c1bc-4a55-8347-6f3ae37fbbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6817e6d7-7b68-4c7e-8e87-05d2b8977d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f9c1e0-ef6f-4837-8e23-cac121a69156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0714804f-d540-43a2-bd6f-4fe54d940d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabd680c-8550-4a86-8d0b-4bd44045b531",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc20a97-cac4-4825-98dc-0a877882ee6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c7f713-ed95-481a-82fb-dd46fbc5b4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3286ee5d-55ec-4c83-9983-6890088ce2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8cf88e4-4216-4937-bfce-b4f83ed720ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8548e85e-8c6c-443d-ac54-db2ebbe108b4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f54992-a5bc-47c9-8e90-fdb2373397ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13f648d-2b8e-419e-b447-5fdb09685d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1e17b0-0cca-40a0-9955-e20fff7bd58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45a1a566-d531-4bc1-bb24-b90ebc63f983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67cb19f6-3e31-41bb-ad8d-9c24201d9426",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917f28d6-611a-4caa-b3b7-d18aa6aea867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8171c1d3-1c89-4ece-be0d-62243fbd1daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626f1de5-2da6-4206-9351-1b79c8d98f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58260f46-1dba-49fe-a0a3-0d6dd0fb2e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c616ef4-4ac5-4cac-9a0b-187b42e5b3d6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b27e37a-4f01-4b9e-a2a5-ddbd3dade5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01b3605-752e-43c1-bf78-28a61a52ea33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91896b07-c46c-4e65-bd5f-41fca5818873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34890e5f-86de-43fb-98f5-577b2b7503cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a0b4a7-8ea9-431c-b139-5e4747e9953e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005c4a9c-9475-4b52-b74a-8513708c5812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30e175d-5c10-426e-a5ac-a551ef12c741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8012dbcf-b8a2-41a7-a355-82805919333a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "375b935f-e69f-4935-85ab-dd84fc9f44d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9d2ae8-d071-45e7-9a70-f87c5fbfae34",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe35fd3-9688-49ec-9578-d1273abe2fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6aae63-bd27-43f8-9d19-493b75c93ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfe9664-0451-4396-aced-243a777eec34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b1b0cd1-1380-4d29-ac46-f71733616476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851466ae-d664-4efb-b757-59a3239ae424",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d892857b-93f1-4d46-91a3-102f822c930d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3520ac6c-1071-4d13-a47d-ba26e49b285a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2422d0d-70dd-4424-982a-02f4e5442195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61c69500-9e1a-4f0f-a02e-bdb1184b8b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b845a10-0f0d-4ef2-9c97-5936d6d6d46c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec5f2cd-48a2-44a0-8462-ca326db3d3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b7f5f6-113d-4d0c-9fa1-54655669255b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5bd2a3-cfe1-4ca0-b418-df7cd8242e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61029a44-5f2d-4429-9ce9-77123ccd7ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e44ff6-44e8-4fcb-b0ab-f3c0ee0bc6f6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892049c2-dc31-4f6c-a6f5-25aff7b46b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6306eff-1566-4f81-b329-1167d5080463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796a3c81-1b93-4945-a2d2-e1efb436171b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c49fb2b-06b7-49fd-9269-57afcbf6d90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752ebee5-7d4a-40a3-bc25-b55f4e9ba211",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891c4c81-8f30-43c0-8e3f-fb0bd7998ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11db1365-9cca-4455-9ebf-b55ddd6b08ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d623fd68-b03b-4b24-913a-61e233078c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aeef7ab4-b7e0-41b8-8a80-b8bdeb153a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016ae159-fb2b-437c-8c9d-6082c844a5f5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12f7222-35e6-4b2a-bea3-8fbb7c1fbd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "440aec96-d659-43d9-93a3-b3648b6a5026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4b112a-aff5-424d-93cd-8440f6df38fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0ce0226-dfc2-4e34-a4f5-33ea34f53999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43c54a8-4e6a-4c3a-b6ed-012b76ade368",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b44816-4284-45d5-aafd-c8d62856d6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180acc60-9d5f-4951-9fcb-3ab8b34341f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18a3873-4089-4a4d-905e-e0676cbf6507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5adeaefd-3d02-4783-8e85-7d2063ce7378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc927b3-d235-46fb-95bd-e02b7b64828f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb168636-1741-42b6-b3fa-36418073c34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8330cc7-717d-4298-9c07-3dee05948b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d43d38-048f-44df-b0d5-f169cced0f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "849de488-9ead-4064-9d0c-daf6e35708dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addbffbe-c9e5-4f3f-bd08-2ae7fd3fd4af",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cbd368-2d41-4762-918f-1b14b721fbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2423c5-2aec-4e06-8bd9-675da86f9d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917f6ac0-0a1c-4565-86d9-9f78df912076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbf6401-cfed-4703-b5a1-2c04889623b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a11f3a-85c7-462d-b0b9-09849c9b498e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fa6c77-da29-4fd3-9179-851fd5ef0e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb38b8de-acc1-444d-ad2c-ec28c05be21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f486769e-a2cc-454a-834a-a9be9c77fb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84d36312-062b-4446-8570-08dd101bcfae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d80fcf-22b1-4661-847e-f7710a3aa6df",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a639367c-1c2e-41d6-b0a0-eb93ce46fcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da4c25a5-bfe5-45df-8be5-cb25e8b4dd5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5aad64-aa0d-4967-9c70-bf1222750465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c2742d7-b412-44d9-8667-d8c253c3d3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71fe290-8091-469c-a9fd-2cb594407933",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284346ce-4ae9-4a5b-894b-1e0d4fdf6c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd32f30-73c5-44c7-8ad4-ab42f4e79652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0698d5a6-0721-4403-9f4e-f017513a0d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "907361b3-bd1f-4361-811a-935ba1a54116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc1b2ae-bcc8-4d5b-9915-52087e31e2df",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a925b34-dd59-40e0-b5d7-ea4a71626dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e687bf-cfc8-4eea-b92d-e0a201c65049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6712ed0c-a2c3-4457-a8fa-91ccb3d96c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25e5feeb-be8d-48e9-9371-87260f67269c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef011b5f-dcd7-414c-a30f-78911f08b233",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204b87fa-f95b-40f0-9fc0-f13d5865f594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8373444f-9c28-47b6-b01e-283d3b8b35d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc588870-2362-46b0-a129-e4efc663273a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "49158a18-cf4d-4f51-b8c8-c9a9f2c44c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9d0258-92cd-4869-92a2-83fbdab5be9c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76235d5c-f332-4ce8-a760-0e7c3854304c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f8a18d-8c3f-4638-97a8-8cc2a99ce991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86df0dac-1bc9-4456-9201-71238f8b9338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "26b90bbe-4333-4d43-ad73-ef06555f8e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7641f15b-1fe7-4bec-ac5c-2ddeeb4b618b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494e8924-cb09-422f-aaae-0437bd3b4963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70145614-0a6a-4324-9774-79c74477e8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35767312-e78f-4236-8228-c5a872407232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1b154b-adef-4036-a43e-09d24b8fb4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9447aeae-e429-44db-8650-4b0e0285c38e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f52e3f2-f461-434f-921b-e4e24dd2bace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0ce939-8524-42ce-9113-08df85169d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d783014f-100d-4a02-bb04-a9b705e09b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31917f4f-6019-4f1a-ae8c-e7b631e9417f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf3e254-bf38-4203-b4e2-fb33f781c673",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b580a3-82e1-4d95-afff-80d2297a6b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9353c904-399d-48f9-8b2e-89712893024f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f565171d-b123-41c9-98c0-fed7452dc766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc07663f-2fc1-44ba-9ebd-e40c172038c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e947f7-34f7-45c8-9c41-5a921429b1e2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a2aafa-193c-49b7-bd96-8b43954689ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43fc498a-778a-47de-a4cf-35f7e6a1b54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b4851a-3f5b-4054-b4e9-d0129a9fc70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "02e9f292-2b92-4a90-8585-8d7d2f0a3b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e10ef3b-45b3-4658-bdd1-872f858503f8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424de1d8-22c3-48d3-8420-98776a206a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78110f2b-db72-4ea0-9d81-a702c493b8e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b25728d-4405-4dd0-bfc3-3822cc210efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1ccd67-370a-490c-a336-ad39088277a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0522b7ef-72c4-486c-891a-01f7c604ecf6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9d8352-5e16-4c99-adb4-f587bf2c9377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b86bec2-46a3-4388-b8aa-1ffda0030e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ce776a-add7-4504-b246-3373effe718e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "74d45f2e-e685-429f-9d42-a78d2bbe7674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ee49c9-66ec-4aaf-88fa-2da52ab1e1b6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa9f44f-af6f-4f03-ad29-360316b2bfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24de1113-4a16-4b58-8ad9-0c3caafaac38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aac27d0-8d9e-4400-8d14-27a61d461eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "814c205b-ccd3-4d90-82a9-4cabcb146052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc1c858-579c-4704-bd58-d55d685e202c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fdaa8c-85ee-44a4-a9d4-df0e1745cb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f888c202-0969-42fc-bc7c-218ab193bd7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efded906-52e5-4267-89d6-bacae81d902f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "920f8a03-ae2b-4e72-8db9-89e20f54ac64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35304f92-a174-44d9-b364-863190df962e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817f9ee3-fac9-4c6a-8dee-d6410d229051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51eea2da-0b9a-46de-a3f7-5693fb421e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49acfbb7-6043-429c-8da4-6d657fbea822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2043cf-6e29-413a-a99e-cc8b150006c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d50c249-1304-4d05-a2a2-6c6834e68fb1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53ace3f-1a31-4874-94eb-423f859aeb0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cfac846-e86f-4dec-b34c-6354b23e8993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb694aae-e4df-4bb2-a422-cdeaf14fa92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3eb820-976d-423a-922e-c0655095e7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b22938-0b6c-4b7e-bd2c-2a957e199c01",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f629465f-b6af-4aa1-9bc7-8968dfd3150b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92c4e80c-ca71-4b0e-8779-f5c065a5d106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cd545e-c22f-42d2-906e-02efc8f3127b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9056c8e-4cb9-4f6f-9b86-16de0949be0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07baf95a-de98-47ea-b83a-fa161a094423",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595a9341-3995-464b-8f04-0994c2a7e1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9291a0-7cd0-4657-ac28-6cb4e6745a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28397e2c-feb2-42ab-87b2-14191de38b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e12bc232-22d8-4f4f-b072-7dec2316528d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baca8c1c-756c-4b38-b15d-c863f15a275e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7dd5ac6-32a4-4741-8c61-5bbc696459ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6ae384-661f-4a1a-8d61-f38b4bc2fb31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4f6db3-a566-4a45-902c-3be41a6bce6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b3ff88d-b760-47c4-a709-b8fc2ba86a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe646df-562c-49c1-87dc-161633b84c17",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fddb935-8062-4be7-bad4-5aa45da09575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98af382d-f607-4ebf-9eab-c66327d6a1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8293a589-1413-4819-ae1d-018d3a3f8d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "37bde045-1197-4249-87b7-cd935678f625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e77b5d-09ce-4141-a6e9-24690414ee9f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92360cb5-3f34-4c52-b49b-3c7cd6754f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88dc351-f07b-4ddd-8394-29c9ba93db41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed0e7f8-0a2b-4222-93c9-606e0bc88501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "17bcd526-2550-4beb-9ddd-731c3987c814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedb6b64-160e-479d-b54b-7cd823d46e88",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e04e36-1208-4fc4-b381-11232c6f38d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b812737-552f-48f7-abd3-1e43d463dc91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03717dfd-7f9b-4250-914a-2d086705ba28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "97778bae-d1dc-49cd-addd-84be53278373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78fdedb-1073-4548-a8ce-d4c92beca9a7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9be1dc7-ea7d-4577-9691-7a02b532b6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642741ba-c54d-464c-942c-c793c17c5b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651a5859-781d-4609-9c36-95498256e537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bc354129-7078-471b-ad86-61ca9f332b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59cd02a-91b9-4322-ae98-89ee271c0aa2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f957d0-fd9e-4d8f-9e08-93528def6f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdff87d6-05ae-4252-8ee4-1136e181599f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5b3bbc-ac7a-4e8a-a804-efadc89aa5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b05616-c21f-4e95-b133-73d0f7a9d823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac387ae7-7173-46e3-8fe4-36994ddf285d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ced3278-6458-498f-970d-1ee357111843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598457a9-1284-48d3-873e-b0ec99a247c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbd6284-9f37-40e3-a64f-f3c7d0d9f2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "40715f37-7200-457c-9a53-3a36d85290c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ac75a0-7121-41cf-b10a-5c1c34df26b3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c194c6bf-0f22-4439-96d7-bebbaacdd893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec42699-0ec4-4b06-857a-d2e928113470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5cfa53-87bc-4b53-a574-cd45bfee6a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "93f8944e-8614-42dc-80e3-c130e334c587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6732d3a7-e03b-4280-9303-60e7bca0192d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84bc9f93-b514-4253-9af2-507610381cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d62d97-8efc-4b31-be60-3d6d675dc054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7942629c-8258-4935-9c26-c5c20778313a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7516604b-1f4f-4a13-b6e2-8afc357383c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f099fa-6222-415e-9b61-49a966988941",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550811ec-7dbd-422a-ad76-a6b87e02fcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fdbcd8-bd1a-4c87-980f-300ac1ac1668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a200eb-3714-44bf-bcb6-d9bfae0a12c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e313c03-035c-47b4-96b3-b962fed64c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83321ea0-3eb6-40ab-b978-0ec8dd201104",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab4e7b7-3f3d-4542-8525-8e6078ce616c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43af5b7-cbb0-4a1e-9080-29cbe401b356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed01fb9f-85b0-4830-a936-545af4437c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88f8fc01-43dd-47b2-a26a-05627e12280e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05240b02-4d80-4569-9e84-864dfae351e7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15641871-3b83-497b-ae84-0b78f635e654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4512de65-70b2-4a1a-8a14-eff8c819188a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0106b0e0-5a3a-4b49-a06d-e8e67fb9d3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "300c9829-0b77-45b2-8440-41ca818cd0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922e4d12-bec0-43db-89cb-6dafc12b6110",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf430697-2980-4ff9-b45f-2a02b8822320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a660cb8e-5211-4de3-ba79-bb0c22e4aa67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d4ec17-de77-409a-9733-fa106213254f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba57367-f5b4-4285-a4f9-3364b5c40849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fba88b-ecf9-4ecf-b1bd-3250cc1450e8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae6b332-fd40-4653-bbd5-79641306066a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2aceed2-7a81-4ba2-a74a-1da43ebb18bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9eee1b4-e770-4a32-9829-6d033b31827d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "933dd393-0bf5-47bf-92a1-61c57c85049d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e1108e-0d54-4740-8c9a-3f08a87a8d7d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8316072d-cecc-4e87-a4ff-29df9a42ab0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52860e4b-fb81-4415-bf6c-095a1d9f6762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776fe77e-d744-49c0-92d3-9bfc03073855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dab61c9b-53e1-4156-9d37-b2ebcf27e7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced8bd3e-1bd5-41db-8f08-fd94bbca475f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b90681-c13a-47af-9c70-9dbe0fc4420c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e063737-11be-45b5-a752-c064f3d19b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b2f521-7d4b-47ab-8e19-11ba02b84040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "666fb776-3de1-4348-ab0e-2892c3d90f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ed0487-faa7-4a0d-8c9a-6cd8b37bf936",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd51dc2-1c23-4c05-b38f-01bca62fd46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a840c5e-cb18-4f68-a936-fdcaf0ae4d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ca7576-dfa0-46bb-a20a-5a532de4b761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72d4ca2d-375a-4814-95f8-e9f8ab99ee4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41250982-157c-45e4-9fbb-a2ed66c81d66",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b8cc2d-c775-4394-999f-7fb9aa1f1ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ee96a9-7242-4ff7-bdfa-1de541b373b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b20ce92-9e19-467d-a2ce-fd72a94d21ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43b8f217-d5ee-4586-83fc-20447b29d150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce6aad7-5937-4db1-a4fa-7b51a77f20a4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9decbe6-ea5d-426a-a16c-6c70056db6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56621a4e-3ecf-41f3-9790-c18d4e17dc28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0cf011-7b1d-49ce-aa5e-39a55dc84960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5a93481a-c84d-466e-ab06-e71299953527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca19773-22c0-487f-a14f-b953be9dc63e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25007ebc-9e02-4b1e-ad53-f2203061d4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463063d4-8d5e-4dd3-b2fa-0340df0a8eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f36c0ff-dbff-4a2e-9640-0fb476705511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "914d95b9-5d4a-4f83-b1cf-cafa50b3e6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d684b5d8-4c67-438d-8af9-e051c2f1438d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856efb4e-9af7-4fd6-b52f-84a96da7bf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e5db89-f387-4344-ba24-2586a43f820d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8750097a-6b63-4aaf-9325-8e3c90edea06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "61d9b73d-6189-49b4-8b8a-c93af404bc82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356f1607-7fb1-4b4b-9997-82bdb4c5318a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe50a97-d402-47da-9c39-047344d8214a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699df105-4624-47e0-9083-774d3201b7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84ad5aa-a374-4d36-baba-d2e878bb3dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "32c580d4-6af3-4926-945f-59a4b254ecb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68992cb2-e77d-4851-b5a2-303e81096b9f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ef951a-9069-4e4e-b13e-a5368860ddf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee032be-3f91-4023-a7d7-69b656453065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81494928-2592-45c7-b242-fb765ecc8c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "217a7e6a-c071-46d7-a6da-71d6ac3e9a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7ac481-a704-4329-bf9b-b78cb0751af7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b00e22-9b72-41f9-835b-4fe1a8ed8f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0114611-3f71-4dcc-9f5c-56645d96d28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632c4533-39ef-4f4a-9228-cf296d4cf15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a45bd938-de3f-43d8-b393-749c6aee84c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f1db6e-d90a-4e76-97c0-d78769efb890",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4a46c4-2b8f-45f0-b6b9-1166b3dbfde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6042eb1f-a6e5-40e2-8854-bd5ab03b1f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f97a9a5-3388-46a0-9a20-7b75ccc864c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba4b3bff-f5bf-4da4-ac51-f981b1b8a2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f50ee8-d8fd-4f48-b106-ee0e82016f72",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3082d02-a120-4fd1-9b89-3c889941f88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6545bad2-aadb-4381-951a-76d086d4c278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b63fc24-fb82-469f-bb78-7d7871821f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa13f2cc-fef1-432a-bc6d-e441b4af7c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09032acb-781c-43ca-90c3-c96721411024",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9940dea6-aff1-426a-a2ae-d3e5e1ebe118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10468c36-ff07-4add-b48e-4532eef59a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a746b42a-dc76-4796-82fd-28266c3e7f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8aafca-187f-4f35-93f1-b55df2be03af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef713369-cc66-40bc-a468-b3635fd7476c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc0d246-a27f-4c83-8feb-97c4e24aadb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e374354-e34f-48c2-8d88-73a5c1c9152b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be87350a-f3b4-43e8-b0a4-1c2f0127406e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f828293d-dff6-4469-9689-5b371c2375eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524d70c0-806b-4c7e-aab4-78aee0408308",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d2b482-d798-4707-a21c-eb3253e728f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8391741-c107-425b-b11b-89daf9c20f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5164600c-43f8-404a-b0e4-28fa9eee1ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a504c0ba-2c34-4179-afbd-c2252af5e099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705b914b-3db5-41c7-a5ef-797530f64ee9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9900f3e0-93fe-481f-bba7-dafb3e4616f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d7bf50-9180-4792-b599-e400230553fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe257aac-3a95-42cf-bc15-da99024322ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "258fa2bf-33ea-4819-86be-d4a41fed5baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2821644c-89e1-4db8-aa7f-9940f46b9c30",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde80c08-59dc-49f4-b28d-527199c86154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be475ceb-c6c8-4494-b308-e8ce48f615b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a7fc1c-667a-4180-9cbe-0213a91c32a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3bd6d5-9c7a-421f-9565-0038b6e7fea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b26ff4-f7ca-4619-979b-86a3a50ffb50",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0737b1-2832-408c-8cd8-d2b57b87a72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78bfaf1a-5c1f-44e8-b2e6-6113c3e15a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf58b003-b715-4c56-8652-439a52664660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3205940f-07b1-423e-b602-5043a6398270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b644af3-3e75-47f9-8234-79222806c1e5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3931020a-6cc5-4352-a41a-ed41e062f593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e30860-a611-4d6b-a63a-23f0935fce77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af19e266-50b7-473c-b8dc-455397b68eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5ffd36-58bf-4833-a85d-2244bd922a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba2603f-ff2e-4fb4-80ce-a1d56e027f7b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec42ade-b883-4eb6-8386-7c10e3ee2230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee4c812-cab9-4ea4-ae12-2aa1b6b7f363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8e94b8-cb4b-4236-84b3-1d604e63bb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52b85505-af88-4074-b33f-391f939b5885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93450a55-a228-496e-af5d-5ab52754d0f4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbed1185-b83b-4337-84aa-28663c4e68e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba0639ab-28c1-410c-b843-20fd5f4f823e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccd59ef-d7f1-4806-aaaa-35ff77d71264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79d16081-8370-4764-b6a4-3682c57cb0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba92413-5ad2-40c8-99ee-6b83b202c6f1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d595a4e-8cd5-4f13-9677-79ca9c7d9e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3625a0-b1e5-46cf-9fe0-9dd49184200d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8eaf14-52d0-4f30-8bbd-d1ea8931a2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd79f713-57e4-438c-8337-dd077e625322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffeee529-b83f-4aa9-aa48-a1c688a71805",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4282ae-4486-4429-9eb4-20f6e472cff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6789a0d-5d9c-4385-9367-4c3cb1257323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122a0ec9-59da-45e9-9f0f-1b809e405765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2187c402-1739-4638-ae5d-30f97739a137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8597b72-af49-47bd-ac2c-a446d809bc47",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed88b3e-2fde-4295-8de8-ee15492b816e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb20767d-2a61-480d-abc4-7b0ed354016c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cfe2e3-d7fc-420d-aebf-7b41d9b4bf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "11ad3f2b-5124-440e-852a-15e455746312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd5dceb-2ff2-4b6c-9818-8e26cf37121d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77629f05-a2d8-4cf5-907f-b5e1eebb3f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce7e7c2-7ab2-4901-b801-5cf5ea9d711b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7770d48b-e511-42d1-8c03-0015dde181a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cd49e22-0354-4e32-80d4-eab514bbb50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad50e14-a125-4c48-9ffd-a8d3cf16170c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc22befb-4aae-4101-b366-6fe740763cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29324fb-e500-438e-ae6c-f81baa38009e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0597618-7180-46a4-a229-56cc4a1d897b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a69c63d-e266-4bda-9729-f39b81a3d9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec45774-a6bb-4584-ab1d-dfc9d70bfa85",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a14aab-0be0-4cd9-ae52-40f0aac3500f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b15194e-780b-4398-84a2-7bb2e02066ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a521cb8-2dec-4d8e-b1bf-7f658daaf07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eae8693-9bea-43c3-8e43-1fcc5f6408bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f1263c-4167-406a-8eb4-63df7676d870",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725159b1-c162-45a2-8dfb-28f275fcbb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d29db00-9df4-4b61-9f51-6e3122e96d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861d8a75-b93c-445a-b1a2-1bfb84680c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1101d884-9ca2-41aa-b305-3eee13aca19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdc456d-d4ef-4985-9fa7-a4cd2c2eae49",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcfe716-8294-4e9a-901e-fcb0efc80701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0fc6bd-8044-490d-baf5-b345b37e9c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e51e0f-b238-4c9f-a3bd-06fabde6fcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcacf114-4323-497d-a980-825e7c5e6189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b46656-2f68-4ae1-944c-fc90d3b93180",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94dde86-4383-462c-849c-5ab6f7fca3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c666339-c40b-4e8d-95e2-0274fda4e064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66a14b9-d0f5-414f-96ad-5e64163edb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0315e4-a6ff-4eaa-a642-da2d9dcc60df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24400c72-939c-4592-9063-5f7fc9269f9a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f87d898-70c8-4486-9ba9-3aa1d4dc07b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7765936e-1f56-4a8d-acdc-d8c236b7244a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84a2a40-e746-4ab7-a85f-bffdc00149f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51ca3b18-f51c-4339-a2dd-8bda554ee975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d34ac11-df48-43b6-a26f-30b4eab0d2f2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8d5111-eb3d-4248-84b0-5e67bf16b7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3073e117-d77c-403d-99e8-6d1b3da6437f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87290088-d2f6-43fd-b1ac-587bd0703b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f973ea-4594-45ee-a453-31c7081b8658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1242f3e-3dd6-42fc-b9dc-5092f4674f7c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99bd60e8-008d-4f0a-8c5d-4fdecdf9e00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d514366-affd-428d-8b11-aebc41171bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b7dc4b-d820-42de-95c1-bdd4226fa661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f637b3-fdca-4dab-b7b1-54620c9df144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55e3068-a6b3-42ab-a314-a2b59f1499ad",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3495df21-734b-4108-826a-c37be3f04514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f4d68fb-20a6-4ad3-b0d8-5fc7d70a12ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28523107-1c28-48d0-b720-05ee2998f4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58184d17-5f67-4006-8a98-528f057bb17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3af996f-86a8-418f-9004-0d671af701a9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0c866a-d648-4f7f-9b6d-ef046878550d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b7146b4-a814-479b-878e-a988e37983e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58954798-e6dd-4217-94df-35ed463af8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3d97ec-e11b-4ada-abc6-6b4efc7ffe02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71438db-3f51-41e8-8790-022d1bb24057",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06ed9af-96ba-42fb-b1ad-5e3f30ea2af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5166fbf-d444-4ef7-92ee-f7760f30fa30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e7b968-9f4f-44da-9273-9c4715f21efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1f951d-b856-4e5a-b01f-19d3a5e48a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1cdfe9-c68b-4beb-b8b1-9e3a66d421c8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139b18e9-c6a8-4f6e-a319-9d0f736d531e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d33ceba8-fa7f-4536-a75f-c14121f852aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3fbd41-e4b8-4720-9da7-ebcf091eb27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cadbbc4-8ae4-4bda-bcf6-745184d0387c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5d40a1-ff4a-44b7-ae79-283f4aa57f92",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39962624-f443-4b67-89a7-5bbfee9b6316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3630fda3-394b-4eb4-bff4-aecd675f28eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f50630-7d16-42e1-8b99-aa8d42d4e9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0dbf42-dd5c-4907-ae38-ad8dc074b910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cba6865-1639-4069-b57d-273efc957394",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4958b997-89a1-4b69-aa30-11462927c920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c9f4be-881d-47c5-bf79-4dc18f0903d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20ce73f-cdc9-48bf-a7f7-71ba60d6560a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "16fe1644-7639-42f8-94ad-665703c30eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874e3c1f-8980-411c-b872-c6973975fa48",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ef2d5d-6426-4363-be14-f6f67ed2a400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea63fdcb-f8f5-4fd2-b5bc-676dc1e487b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46fb2d8-ab7f-4459-be80-a7affdb95d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e9082c-da95-4557-99f2-a9221672ffdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a2d018-7c3f-4eae-a5de-1248be252d2a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97603b83-e83f-4df3-8988-bb776929ae86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6c343fb7-5d00-4e01-b711-beade36eac10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60207387-dc8e-4895-a5b5-3468c7112c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f50fd097-b52e-49d3-a2b0-298d31815a72"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac7a3ec0-1dfa-49e7-9576-57a71a89da99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e19353c4-a159-46e3-86ce-dd4bcfa863d6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a28fa3f-2730-4356-a96b-a8246889c0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b35b851-90bd-4f2e-8083-7b6e900bfe88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df604399-7e33-4a41-abff-6b7c878a8377",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9f265d3-6e22-48a6-9ae6-30a0cea66519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7aabbc8-d110-4202-bb77-be6c573e8ef8",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5897f7-f616-414b-a835-db1a270cf350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99f16d19-66ce-49b2-82ac-8ec5eb68c411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25dd059-c6aa-4fee-98be-7ff791a67320",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e7eeb05-0efe-4e50-a12b-b049785218a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c923b691-ad2d-47fb-b1e5-2b645210ef5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb285989-d7e0-4615-b26f-69b2f6fac662"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5085329-ee2b-45fe-b69f-984a01707837",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8c60687-a65a-4fb1-8c5f-152bb8345eca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "777e0bc8-914f-474c-beea-48bd95ebd80a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "771cb670-676a-48c4-8208-58bb16386772"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "da2d4982-c12c-49f6-911e-68566755fbcd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4fb3106e-a285-420b-afd4-9f48831acb19"
                }
              }
            ]
          },
          {
            "id": "1d48b6d7-8566-4b89-8933-7a6a1cbf3fab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "24ae0de9-9f74-4939-b8d3-adc8b70a3eaf",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d398e94-f58e-4175-a54b-2f0bc42cc7c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5763215-0906-489b-846d-b74dbc49cc0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9076d040-15c7-44de-aa2a-53de87e7070b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c323b70e-d2c9-4385-9fb5-31e54de601fc"
                    }
                  }
                ]
              },
              {
                "id": "1526ae78-5a75-4153-861b-8b9e312edd8b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32cc316d-a7f0-4618-b12d-4cfbe0ea0954",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f422080-96fa-42fe-bc04-fd0c24380a1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "901e83bd-8d0a-450a-86f2-02a7a894590e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cd3880c2-1a95-4e74-8b40-8e9bc1b741ae"
                    }
                  }
                ]
              },
              {
                "id": "216b047e-4d09-4807-a2e9-a433dc3bc2cb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14a9e06a-4f1e-46ea-8edb-01faea8cdb46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57f2ea63-805f-48a3-802b-dd0148ff2c4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c38cd5c-e921-4765-8508-ebebc54b3e5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dcb31501-7f11-439e-9bda-03bf9bd0a4a1"
                    }
                  }
                ]
              },
              {
                "id": "152317d0-c2a0-4db1-9a95-f711defb4313",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5976d82d-8333-4dd5-9ba7-89a6019b3765",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4ada59b-04be-4779-8c2a-e1f2e62d4a14"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5aa9f2ef-c02e-4616-a711-d439318dab5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e8c3c6ff-1497-4972-894f-3e02f777fcf4"
                    }
                  }
                ]
              },
              {
                "id": "404a2d7c-38c3-40ac-acef-3397d8f1a5ae",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03e9a2a0-96de-4123-9c8a-23539d6ea351",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19d611f2-1307-4414-8347-a3bf6df73a1f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b972c7ca-9b59-42d6-963f-a437035ab603",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "81545cfa-f7f3-4a2b-8b08-a98699c03a72"
                    }
                  }
                ]
              },
              {
                "id": "4f968ec7-9f3d-480f-8955-07c148d468f6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e451c54c-eedb-4fc5-ae8a-cbc571eba55f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fa9a744-aab2-4b69-a15e-49893aa23a57"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38cda90c-6d5a-41d4-adf0-46520c8230f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "979259a5-fe46-44ef-bbb6-eb3f899dadf1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "40e2d0dd-4196-4d50-98aa-a25930d78604",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e7db570-cf68-4357-b6c2-0c5a265b104c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5afc348f-fe51-4baa-935c-f2bd6f68a365",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e193b4ac-7437-4722-b359-9d30da3f0767"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d63a246-c528-40f8-afcc-b79c951c1d7f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "219c7402-4a30-4657-98f3-e668d9d0783b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b820969a-a44a-4d48-9cd9-67632241a061",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1cc1f6a9-9f3a-4fd9-8794-5b574ed02acd"
            }
          }
        ]
      },
      {
        "id": "b9a5c8a1-fcbc-4a28-a783-4f6d58efc81e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "545bab8f-7337-4b31-87ca-844ebe7a9a92",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f22b3047-14a4-4045-8351-56a77d64191f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b59bfa69-ea1c-490f-ab22-b759ba3fcffe",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8099ae-6095-42c1-ad68-5ceb96785304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e6b361-b4b3-44d9-8c3a-08c7524d1d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd408233-6976-4060-802b-da02d771c25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "285422f4-ce79-4e1c-9fdb-1e6e5b0b8ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420c634c-7d3e-40af-ad05-577d98d6edd4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86246a9-caa7-4896-98c4-d2f813a4d428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb170f73-73ba-48a9-b286-145e09e3eada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e02289-769d-4369-96c8-45486bc34799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f69e910a-03d0-4c18-acec-e3d375dc36d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52437ef0-3065-4005-a3e6-bb59f7780a15",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c328bce9-34f2-42df-80cf-05164f88b7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0f12dc-2d54-4bee-8aea-f0dbfbb5a29b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49d4068-c36c-4064-8786-49bba1e7148c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52e83af1-40fa-4cdc-a1bc-055ae16ae8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43be320-04a4-48a4-bc78-f07c6b06e8cf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c678920-e407-4bc2-8b38-a3ca172b761c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c3320d1-c636-4a16-aba7-778ed2b06ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8310cf-19d9-4430-9c3e-6979ae05f1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4004b1-8823-4ee0-ba92-9a125266bfdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9b7974-e959-4789-88dc-1abf52a4a8a3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3671b428-d0bf-4271-8705-7e0479de80d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db6dbde-4a69-465e-90d0-a5b9df98e49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30cc9e5-f94a-4e1f-96b7-998c39636aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "612d2c13-d7c1-40ed-9c3d-9952a8d17b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7781f6bd-7410-47d3-b0ea-a727e5efed30",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e907e4-60f3-4201-b0b0-04157d8b38be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f46da4d-473e-445a-b718-9c69bae7d19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab138c10-497f-42cb-afdb-af0c10a5776e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3bd34c-a42a-44aa-a2da-61fe151723b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17be174e-c84b-42b6-9346-5d1c67279f16",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf20eb8-78a4-4db1-b22c-932fb5dfc8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f4e995-a4ab-44a8-bddc-c83c89c05616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f025cf-9d65-4cb4-9f31-a3e6a5b2ffc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b9531d-44b7-4b61-8fe9-4c591522e945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b55f58-7a2a-4692-a294-c6a917a89f26",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495f784c-ed17-48bb-be54-38686bca15ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b118e7-0828-4ec9-8e2c-7673e7ff0d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045292c5-5487-49c4-9093-1243fe9165ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e7ef83-594f-411e-8ef4-2e85baba2fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8ec080-0033-419c-af57-8a115d6f2b68",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d57212-ad10-4f05-8d52-72b4eeeaaabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5fb4526-6e3c-44ba-a8bb-ef1cef677bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90fcd75-3d86-44be-883d-026bba9e5bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bde125ee-71e8-46ea-a21c-1480267d30d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deddc68a-ba4f-4f97-bb9c-ab715a25b19e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d05a086-705a-46f3-bc52-e1ec18454214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944c51e2-921c-4a15-ac78-318b962b3554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89abde1d-9586-4e77-ac2a-1feab0980422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54191c42-ba98-4751-aa6e-468bd65ab9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ba2828-f721-462f-8d50-e27d48915427",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342156aa-34d0-44a5-a42d-7f8a87d8cae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70b67ce-7000-4577-b343-f50f815a16c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac99e51d-e623-418d-a539-0f6f979b66a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c299272e-80ca-43f6-9a7a-d690155c9c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c81c9a-ba51-43db-9108-5ecb30f5d8ee",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236f6344-78d4-4179-a880-54dfbde92f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae4855b-ca0a-4ecb-8d18-e3e5ea033517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17e404e-b92f-4277-b50c-ac9d99e8487e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93bd517e-f035-428a-b32e-6f9060429e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bb0c41-ed91-4f50-b97c-e00018054934",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16e5fed-1413-4232-9b5f-fd8208389fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff209572-7521-494f-92b6-a669997f686c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114985d0-04a2-4d11-99cd-34224933904e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "85af4c54-f992-4bfd-89a2-31196f9087dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f29803-f0c8-4559-987e-801a38983fe2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2e4071-3725-4fe1-a43e-1c717b810f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c821c463-fde7-43e7-bcfe-24b1a1c1baf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f794527c-5725-4c2d-b7d0-446bcd06d233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "35aabee0-e5dc-4d09-aafd-2164979cebf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2491fbe2-ab1f-4efd-a048-5a1bec8f409a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b247bf-7664-459c-b379-8c84fd254ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61317c98-16bc-459f-8854-7a0ade121619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953a91db-710e-4652-afe9-4c164b71159b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b04a14a-e789-4ef9-90b1-2f313b739b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b9a82f-e1d3-4350-a331-f2b0ecfc2749",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f02e62-ece1-48ce-b185-b4274eaf205e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33fe414-9b56-4c18-bef9-01e59f483db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9830cdab-b243-455c-b377-044afdcd3237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4df32608-7aa1-46f7-bd59-6518b030ce10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1be8629-edf0-4840-a6b8-2304cd2666a8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13128d73-74c5-4beb-8669-20c34f7aa6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "404c0ae2-76ab-4d69-ad5b-a453191a973d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4cdf25-97a5-4345-8c00-01265222b4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "307f631e-3482-4704-9cb9-532686cd8001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb74cc6-83cb-45f8-95cb-3de88cb09be1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9cc53f-9f9f-4878-9493-1fa78bdc268c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d8e90b-e560-4812-98dc-e7594bc9108c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f40f4d-f86d-48ed-976f-8f333b21f76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e5d952c-aebe-46d7-ba5e-8e0c7f1f0703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d09b949-cc17-47cd-93cc-7d80b615b5fc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ad0271-e77e-4957-ab9f-1d00accc4b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525a1db8-dc1e-448e-8026-0879efde3e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1dbb4e-ed05-468c-811e-3f8ab7576564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b31989f-c124-4564-9316-66be5be9d5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafaa299-8bb9-423c-bdce-f7a531b7defd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a5b339-5c7e-4d86-8088-d2c1498f33b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c8336b-69ff-410b-a262-9b274b6309e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7dabf8-d89c-4ef9-a622-38d58fa5a790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a531a9-5c24-456f-aa01-fad322a381e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99434909-c693-4854-a09b-e8f979ef13df",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e38e50-2839-4ceb-b877-40a9a004a512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922253be-17c7-49d9-a77c-8055baa5345f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934e578e-4f81-47f7-a6e3-87dc07f3e9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3502c214-9687-4c05-8725-0d08f8987bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84dc2d3e-c7cd-4479-96de-b1f24425cd86",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6599e0-965e-4ddd-9986-ba8d054cc6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862485b7-022a-4b88-ad74-e2e78d4e8eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c44686-e64d-467f-90c5-d6d3b8f3d9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e86df1d-b682-4bc1-bc2a-e12896933428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628f8a4d-85c9-47b5-9fec-17222cf9f9a8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5a202f-af7e-46bb-a21f-2823b6635e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13110fd7-b7c0-4727-8d8e-a90dbe6f4055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad99d769-bc92-4860-b613-6d02cd5764c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9963d19b-4aff-43f7-acf9-1c73e9ba3af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f46668-6fc8-4c79-8f93-4c286d777671",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a75a984-c04d-45aa-b9b3-e0f386d83f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c750a4-f80c-48c9-b425-292bf19ff948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095c3a1b-12bf-4a96-845b-05b4f676b8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87ced167-26d0-4ddb-8419-640c16274a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b271a6-c191-4d29-8cc6-dcbbcd7254e2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c223bb5-fbc9-4663-9990-7b4fe1266af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6907305-6d85-47ba-bb9c-322273b85e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c459ca51-ac00-4457-a602-c816a7acb7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30c5f720-e05d-4eee-a4d4-1098796a37fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bf89b2-39cf-4e6d-ab61-001828133faf",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38738ae4-ce69-4bfc-824e-0aee98e36941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162e1a54-1047-4d17-9b19-981dcdd5fe87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3446ee28-2a8e-4110-845b-57348da14b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd220bda-0d0c-4b76-8ee2-037861be882d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ee897e-4c96-4e7c-a241-8c77114ff0d0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8689b5-0e75-47d4-a1c9-56d19a5d3d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1d348d-7c66-4835-860f-695476c10421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1ffaad-da39-4ad1-ac06-ee3646c0d72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06affb1a-5cdd-4119-9e69-f68715486e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672fcab5-efac-40f7-baaa-242d958301c5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f655c1b-a6b3-419a-92ad-f3b20feb2e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1bc3b8-cc51-472a-9530-a0d933b9645c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcbed9d-60f9-4ee6-989e-50adeeba3e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca54574-a5f7-4793-94f9-7bb21b9d50ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008cb60c-57ac-42b6-9bf0-bedfb74e924e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84ef24f-07a2-47d1-a54c-08e034864830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91afbba6-46bf-4809-a028-78012db21f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8220c6-ac95-4ceb-af9f-a26ff6b0d64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72ce55d3-1ce2-454e-b562-ab2f09bda31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f4eeb1-4d44-4439-91ab-a64bf51de003",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef21996-d3f0-43bf-91a9-e918e78ac360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc9aecd-5844-4700-892c-0da4402a4fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8cbcfc-d49e-479e-bb81-b00d2f70ecc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73b65ac4-f3ab-44ba-bd55-f15fadcd9a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e9e45f-cf33-49af-91f2-ed2841d4a26a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b594cd2-7882-455c-aa55-941ca9594ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4656bb43-1895-4d7b-8212-af923c223a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae8660e-a800-4575-b754-6f972f4eb88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f34d0c3-268b-4d73-9f49-6b9f795209c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d2c9e2-8def-4a31-846e-b48e384dc318",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c0a608-43d5-4c17-aaea-909dd3c0e105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e2b335-3c55-4294-aa0d-f3a35f926afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444cfe0f-216d-42d9-a768-d252a92a9a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8592abca-6102-4908-9e40-22b6bff81565"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ae4e8123-c53a-49da-80fc-ffd60bc5ffea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fbd3ab4c-7589-4335-a999-a0bb7576506d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ecf236-6c90-4309-8a1a-150a133ec791",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6db902c2-46a9-4156-a4d3-9ca36b8f2bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcfafee-d207-4c06-8aca-2c03141d6077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ffcc1ac-3299-4e6e-be7f-39b423c346d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653d19a5-f28f-46d5-980d-e25577852726",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703cb067-56e5-44e3-b5e6-69220ef898f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7b880028-f49a-4ed4-a85d-80d726edc563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685c43d7-204a-4351-bee3-21f93e74a0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8297ea56-4ffc-484f-abfc-cbd6f1174e61"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1502b581-48b5-44c8-96ab-5e4f9932c851",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1651260b-b99a-4b49-8cf9-3aab41e81890"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8650fcbb-9018-4751-a571-4dcaac81e73a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ac50605-97dc-47fa-b045-3e4a614d14f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4061d57-b4e2-4715-ad5d-b1f034008143",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9e485153-81a9-4bf6-b81e-fc60c36a9863"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba070a18-f4b2-416a-a8dc-a786dafaa29e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "718abeac-3fbc-46c7-b8e8-577dbd5cc46b"
            }
          }
        ]
      },
      {
        "id": "aa3771e9-ab72-485c-9077-ceb66c1489b6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cb67601b-4279-45c9-b04c-397e7e99d23d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "006fe4cb-7ac3-4f1e-a84d-5f2ee2b91471",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8acd94eb-84f9-4b87-b495-f1e47cac5553",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d9e522-9036-4413-ba67-07b1b3dd4bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82b7184-1889-47a7-bb1f-4dbd71be4173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f842841f-5524-4603-9d2e-afaa3eb29608",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db165962-3bf0-4f80-b5b2-1807b37428c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e87c570-a01e-48f4-a5bb-247a5c9ef7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9508148c-14cd-42c8-acc2-83bd4c2c5c69",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8f75ed-657d-4b67-bc92-bff835491d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a4e43e-f000-47b2-80de-d06304508a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ed4fb3-b480-41ce-b572-90ea91c91ac7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62273e3-cae4-4b74-b107-74d55fe41551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c08acbc6-50bb-4183-95bc-56d6f0b82e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469f7caf-b3b2-4f96-afd3-b72f2aaba91c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44554a39-b696-416e-8fb2-a3cef11db9c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5efaad2-826a-44a0-a522-aaffc43203fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cb5b71-1270-443a-a76a-2091e44a6bf9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26694c09-e767-4eb8-ad39-536feb1bd7b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e50988d-b79d-4c9b-8315-8c387cd0349d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28312bc2-8057-401c-b8c3-bebddf9fbdd5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657b1bd3-51b0-42c9-98a2-e9583176fc74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16fb839-6192-43a0-bfd2-114352588e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de7ba90-9707-4b0b-b2bb-de063b978e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c8ad7c-09cf-434e-9a24-9735908a9b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7cc6e8-6732-45d6-a267-11e2087507f4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24459ad9-fa67-47c2-80eb-12ca0b65533e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37907d5a-57c5-459d-991b-1b955fe33f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f346ec00-3af3-426e-b095-047d572b50ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93093a0-674d-4050-aef9-741d234491a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3548361-350d-4cc9-b52c-102e54a73032",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf49048-f02e-41c3-a7f3-6f8b4468a11e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cd73480-afaf-4806-b2b1-7918c01fa9c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48630f73-b989-46c8-92be-fd326c966610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60748262-7870-46db-a601-5228c7e7d302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc55cf46-d65e-46cc-9885-ff0918786796",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565f3c8e-0176-4d86-a802-e769442c4b25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ed25b44-89a8-40be-bc22-6cb14f42dbf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31820a0b-6c06-49f6-8792-5395004f5577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5cc4b32-3694-4a03-be41-449f59b0a7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7fdfd9-8c01-4213-8158-0b7d8dc69016",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6038f5-c277-4e7f-a097-095b85285def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1c98a3-a9ab-4092-b726-1d6c4ba81505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b919ea-533d-4ac0-9ac3-f11298aff1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0fc9814-481e-43c7-9e06-0cb10c663384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4350dffe-5861-481f-be17-ca7250206f37",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b286e448-68e0-4663-beee-a7499a4a50a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1489b3a6-5bfe-4e71-99bc-6f0b769b235c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5d13b3-2380-40ec-880b-05fa12a575af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad40f8e-f483-4d9e-9755-f8b8d4d7a4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f6da44-c079-42a6-83b5-32a192ec8e9a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda098eb-a465-4fb8-a598-d91fca2b65ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fbc099f-b7bc-4737-b0d3-c17e68d4c21f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7fa06d-e507-488f-be5e-231209080838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc4c27c-3d98-43cd-ab42-ded0f621226c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7341e94-d434-444e-ab18-d5a20360c036",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32185ef-a916-4a44-983d-8d7ad291b119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "786f5f8a-7875-448b-ae34-ab543de54359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88abcc03-0722-4d88-9c67-c363c0b4c33b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83a742a-38ed-40f3-8e7c-088c6dc8f854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5faf1a41-6a04-4fce-9f9b-80c653d12000",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303fed50-eb78-414c-a92f-be322f350588",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cbbdab8-728c-400a-929e-5b0506242dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9688063-6a23-4722-a412-17f290e7e6db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253a1d02-392b-43a4-9a8c-a4fa128319f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3931f0ac-8505-403f-83f8-fc780d5038f9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9feab419-7956-4066-b823-be8ba40789de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "838723d6-0a9b-4ab3-ae35-23b55f2bab5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "000e4b4a-1397-4543-b549-0400ad41afab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3a5714-039a-49b9-bf72-f5d3657ad315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2094236-d5f3-4f64-98b0-bde18c27ab7a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b2afcf-c7de-4f9d-8e88-c48bde567a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2712020-5929-4895-8149-aa224bd14410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5babd9-0427-4a6e-b148-630098bf3376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0351abea-a9d6-4638-9d8e-09d0b80a6611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf417fd-5e66-42fc-b8f6-ff6c31d3649e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e0f4bb-006d-4ce8-b953-e7d26ff7105f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8eb34f7-406e-429b-9bec-dd021bded0da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "404524d1-1698-4e1c-ad3c-785f118ca873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ef4aa1-b445-4ba8-9af1-c9ff92d28379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a212896-2902-4b52-8236-0664c71330fd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40146b40-f93c-4c30-b809-78483f503ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a0215f-add6-4cbb-8608-66e194eabc36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df3c964-462e-4f19-b83f-dcf5a6fd7320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5241fdc-8d3c-4f4b-9349-0cad1108df33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02c020c-0cf4-4721-a7cd-43f0f6317df1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181f4087-c239-4e04-8d72-86af4257cc60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c555ef36-cb17-45c2-84aa-64ea36546215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "670730ec-0be8-4fc9-8a0b-e43e22f88122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691ce7ea-67d1-48ae-b96f-e1e5b88fdc43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bb121d-9b0b-452e-8406-54567def33ca",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f53634-430f-4835-8684-9d62f6f96b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25df5577-b473-4410-8f90-25ebf38444f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e4c1fd-a5ce-4d0a-ab01-41e0dbc326c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8806af59-9fc8-426a-91b3-6a32a75da9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5048f95f-7027-4e39-88a8-751b7405fbdb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b51d93-fdaa-49e8-a2f4-8443e3243af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22eb14bc-2bb5-4283-8bd1-756f70859545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e560de38-e9d4-439e-8c58-377fac28c84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835dee77-65fc-482a-b212-537d3bd208a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a1b216-9b52-4fc4-8067-46e045047124",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de85e52a-cc6b-4848-938b-20e2f98ba85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d94778-4509-4563-80e1-472caeb2ab83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9337dc-42e4-4cd6-b8a6-acbe49b73952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6167508-e1b8-46ea-8c9a-27920fd10232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fb2554-0dee-4136-8140-5baf567e1063",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b589a245-b675-47d9-b31f-25e8c3ed6399",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b80abe53-6ac8-45f9-823f-510df1d8b76e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7644f7-4533-4a38-9466-8a739b7bd0c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2461e4a2-7f51-450b-b6e0-09d8cd0c94e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2926cb6-ddfa-40b5-8c48-a913934b8d68",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cd95ef-6296-4045-952f-22be731655ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efc6516b-596f-4b4e-9172-c82f47388edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ed2de6-7232-4c40-8c57-20ab1b31ddd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a73d16-521a-41d5-9e7e-c704e1f5ab08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d862dbe-9d63-4599-ae33-ba8583745b53",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabbd38a-766b-421f-bd89-be28ba5151ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29c0b28e-4c30-40b5-9e7e-16305cd19e9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac0b5c1-4586-41e7-b0db-122cc2d72a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311fe08e-6ca9-410f-a151-02a80208cb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b9b589-9caa-46cc-be1f-e982caf62487",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc8f460-b699-4685-97e4-9cffd0b2ff4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13d875de-86d1-4460-b2af-ef62b04d1353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b37e0a4-412e-4c00-84ab-cca55d42e780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf34a1b-e81a-4119-9082-bce4292e7197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bab1b5-928b-4575-97f5-495936bc6dd0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5086a9fd-30ab-4973-a459-6d2aa269a0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f272b2-8c23-4c5d-b2f0-549fa794e33f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d570b0f-2f60-4992-90fa-16939fb2d928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0eec65-333c-4646-ab45-ff82bc3bf43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776c8de2-7526-4449-a8cd-cf63264190a8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7376866d-44a5-4b92-8386-f6a337d040b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ace3f880-e5f0-44f8-af52-b26d814b8c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9de083-1d6d-4385-9812-704c7c55e24c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50815e4c-80bb-4942-838d-afdd3bb1ed5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1c5c2b-d5ca-490c-8313-1544e925627c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199ade62-1d44-4eef-80db-d4147b1a2034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14d84191-70f1-4433-94b2-ba9ad419805c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47de159d-843f-4284-85c0-55c9e50846bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a36f463-2566-4f68-929f-bf2dbaea8600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9618699-faae-46a4-8f10-ff0706f28199",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a534dc20-2b9b-4ff9-a5ad-eb49c0be5671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "534501b0-ef25-4cb5-8bb9-035aa6771887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df1ebf0-f023-44cd-910a-9b8030df0554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f907e5ab-faf4-4ccb-9063-8ab12e71985f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0894acf5-bb0b-4a62-9bdd-e87049734ea1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbe0db2-2422-4d1d-9c5c-b6061159b3ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3b2795b-c39c-4fe1-9eba-df7cf02f2988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "696fc79f-e4b1-47e4-b17a-0320f0b7e93a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ee45a5-d272-40ab-a005-7a6be394631e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daee43d7-fadc-48a3-9a74-cac1d75735cf",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c43377-55dd-42ca-8e05-f50cb54294d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27d2a970-0ad0-486c-80c0-d6be547f378e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8784b569-43d6-445c-9a3e-3ddbd34a523b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ebc428-aae6-4e12-ad6d-e82b15107c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421376bb-121a-4cec-acd9-b1494216c752",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758b2c75-3f4d-4c04-8cbd-38ccbe10e6ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c843a064-7160-4c30-8f4c-2765f97c8244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bead100-8c44-4e4c-9c76-f662abcfd5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e7774e-bb81-4377-b33e-629e4c1384f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa896212-b34b-4bf3-8b0c-2ff47b46b8d1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca74ca44-487d-4c1c-8174-cfd5a0bf58d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fe2996-ebdf-40d9-a956-af32b4c8be18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "606b981e-bb12-455b-9d6b-2b9978f50b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1305c9-c4f2-4992-b8e1-0b82eb0c7a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786840d1-f369-4ecc-a4ee-ddf0596a1782",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0428da92-bfe3-4ff1-af31-9c96636e868e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562bbf73-c1a2-411e-872c-2ddc61d2fdeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7dbdfe-f378-4c46-9d99-dd9c9f3d14d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf989a7-f62c-48b8-9877-5f8c8cc7697a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2594296-a2fa-4667-9b02-812f6e3e7856",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2ad9ad-e280-4384-8500-f7817c9e4903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39748e93-9f67-4f93-b5ec-4942bba0f971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf511eb4-2d6f-4ce5-912f-ef06ed315add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21be8d5-04d2-4e93-b136-f2f5e84442d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121b10d6-c7f9-420d-9048-64e17c90e9a4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eee1195-7dbc-4909-985f-6fdd920d8cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4118ec7b-14c5-4482-a604-7b2fdcfcadda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0649b19-b184-493e-88f6-cf7d3875f573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c60ff8-e106-4e45-acc3-2b2d53079a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33310b1-0734-4de9-8cf1-9c4456da489d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2b4a7f-6f48-4b13-962c-3a79b1463681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca24ae97-a959-42a8-92f8-8dad5eb4a0fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd3fcea-85a7-4102-9f88-cec89c6ec78e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890ed978-a29a-4477-a4ab-b785c995ef21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3468f5-1ef0-48d5-a5d6-6d27b1b8decf",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f067a0be-b25e-438a-8cef-ca82b8d19521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b9c546-1cb1-4e4b-a9ca-58b9e148f730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2896dce5-fd44-4705-abca-65a5d87f01e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507e756e-2607-4cee-b370-9b1eb021406d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933f498b-50d2-43df-9df7-ee88b75baff4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580857ec-805a-4290-8faf-85472d1cb026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22585a43-7798-4984-b1e1-a4f8eff27dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35fb07bd-cb6f-403e-8973-241f0db8a9d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d22ccee-42fb-4ada-8254-ee32f25edfa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c9ad51-b6aa-4f85-9055-10dcb5d45b25",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f764c88-b600-4ccf-b389-94dad328a330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442eaa66-95e5-4bf4-a42f-8d3146c41fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a4f608-1d02-4033-b55b-9658c78e86e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee85ddc-58d3-45bc-a905-6b3cc52c3ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271f3d76-529f-4d49-9616-b2eab70f6b00",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4df13f-724e-4069-bd80-e96b2810a0a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c10d44-9ab4-4f98-a46d-8474f4acd13b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3875949-a594-4256-bc44-535b81a38a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "601960dc-071e-43fa-a3c4-ae5fcc7c9272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116a4a76-89a7-4ed2-bfba-4107767e54b1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e79217f-09f9-4022-9659-a4cef4c868ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f628020-24a2-4e61-b4b9-e68ad6430385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2116f57d-c3c2-4334-aec5-de13eba1ceee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d026e54b-3165-48e2-9883-32140b7f864a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab1d5ec-a62b-44ec-b881-36b50aef912b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf725f7-afa3-4add-99db-5f7c9a0b6365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fadd0a1-b253-43ba-902e-707021db1d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "236c9d48-5cd3-4d3e-b2e0-10d987a161ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77b603b-62b3-4c69-a272-5f46c9c3598a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400fed42-5749-4361-afd4-2d23d03e57d7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd8307a-27f8-4a1a-96c4-79b8676a04de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b76e5702-38b5-4dfd-98d6-8cf340aaf700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89ffb3e-4b46-4cfe-899b-bc76bcfb8015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b2c9e3a-47c4-4085-91bd-ef3ae2e096a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab5d600-afa1-4fd5-929c-e2e6dec12294",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3aba5bc-8a63-46aa-b0a7-eb770c8787aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9252d5d3-3685-430b-bc53-0409fca83826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2dd0f9-c035-4b7f-b768-c35e39174a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21cc1ed-be6f-477d-ae60-8b46a1cd0777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995cacdd-fe69-4420-987d-e82a5ce602b8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abae0e9-0a05-4927-acab-acd05e061871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9b9e75-400a-43e0-8dc3-c4bfec2ef1da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bdb052-3fa9-48e7-8a89-646303b3fe92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b9f692-0cfd-4aa6-97a1-82f36b23c186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e0d15c-4957-4c24-ac2e-312e7a148f72",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9a6796-5f7e-40be-93ca-bbc89dd4cbf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c05bb986-fa8d-442e-872c-f8cac609cb93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fd4623-768c-4065-9398-225d19811b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11deb8a-06a3-4f09-ae30-7378cf10935a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac98373-0615-4971-ab37-bc87b66b566c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af01f2a2-95e3-4167-a6ae-a099fb9d070b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e9689f-17ef-4925-b0f3-4164167a257d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a14ff71-e7a3-4bf1-8708-57332b3f913c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbaf20b-61d4-4ce1-b4a5-618c57a4288a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5970b3-440d-44cd-ac2b-82341df0d1fc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccbee71-79c5-4014-bb69-f31d249fff07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad45575-5861-4769-ba9a-54194813cb9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e2c52c-1a55-44da-834e-3f6c74e341d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122e85b6-5026-43af-af2d-dbcfcbe8d08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3f96b1-2bb4-49a5-b614-41333ddd0d09",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716729de-d6fd-42fc-85c8-41c386fa2153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6225f8fb-8531-4949-b399-52781cb45329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b348e332-8221-44ca-b755-c09e8b66f6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70af956e-d2b1-425d-b65b-c71c66e2c0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174b9b88-021e-443d-8dc7-2bcf60655804",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d60915-8e0c-4222-b70d-60ce2f085c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f52bfc7-7734-434e-b3a6-42c4d7175df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7477a389-4747-460e-a2d1-2c3a2885cc55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267485f3-d03e-4b1b-b8f5-b05bab005e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f46360-39cc-4b48-919b-d051d1505fcc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77e0949-cfc5-4c72-a8dd-c41dd4913a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7e9815-9f25-4cbe-9efc-e2ab43513dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc7c019-990e-48f8-b0c8-5da8d242d2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d0e8c0-a0a9-44a6-80bd-ddded2478c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622d5ed4-adaa-4f66-b11e-525b63286df3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db995af8-901e-4872-a7cc-2a87483d0280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9487e4ac-679c-4bac-b318-2ed55d68771f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb87545-eaec-486d-aaa4-39d11fa09879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b03d131-b94c-4e68-9b48-f623ec8e35bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13653539-54ef-489c-a162-ca6dbc28028f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68afaea1-c681-46a2-9ebc-c53973a6102d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201774e8-8be2-4502-aea5-150e524787f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd11c759-0d4c-47d4-b252-f272c50e6bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0871e9a-dfd5-4351-95e6-362ce084317a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd47363-d210-4724-a535-a1c189238fbf",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93397eda-c293-462e-b587-ba075ae752f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9f854d-dece-41e6-ba94-6f8e20475bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca93eecb-de7b-4712-9165-c70aedac3728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e953e0ee-f96d-400f-b2b8-aa402e49f416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4611c585-5b26-4dba-b1fa-1224a3ac94b4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c8bc1a-dd3e-4e87-afb4-a89c0336cf94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59161425-d11d-4652-a88d-b74bf93ba140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0216dc0-533b-4206-bce7-06f399b6d4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a49746-45ac-4a84-acf1-d254f4a4fc69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc21dd31-12da-443a-8b13-b3fc8d419024",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be200c55-04a7-439f-97f9-55f6c883f23a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f22fc5-0fc0-45d5-9d93-ba9c377e474a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f226cbce-72db-4d11-b6db-de467ea87c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef3996a-3a3e-4276-b10e-ae239ed56fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1c5e65-5eab-4450-960b-e40195095a9d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2842593a-7d5a-4527-9a52-5c57bf3ae1b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d75897-0911-4a69-86b6-6d49645be05b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64685647-d308-4a21-941d-513f1665dcc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1fee591-88ef-479c-b34a-a94704630cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4e9c2d-bac9-4e58-99d5-adf929c7ce62",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8e93cf-dee8-42c2-ac5a-fa497dad7399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c1cd5b-8be0-4ee0-9ec6-87c7c39f140d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96449b5f-e76c-4c19-b19a-06ab2b9fdb45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b8c25a-9861-4a92-b228-f20c5a984a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85aaf864-fe36-47ea-89fa-ed464f8707da",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f20219-89d5-4ed0-add6-66daebe87959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43117c90-4b28-4f43-8a0e-b27cb92ce57e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb27325f-ad11-42c1-85c8-9c4aef3f6001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a808273-f428-400f-8e6d-060e293b3088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516127e9-64af-4ff6-93c5-46b7e5c4978d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7f31f3-0589-456b-b8c4-0665a1109005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e2d377-c8c5-4be7-9a1a-f0dea4d28306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd98de40-65a5-4c08-95e5-8c8984307ad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a6da2d-3b81-4fd4-a6a9-035da8aa82b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88980304-ed03-4215-812a-a7e9d2966be0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0440dd-09d7-443f-b241-7914a4e39bff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4317627a-7725-4c49-99ee-4190fc024348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2ec094-01fa-4e1a-8e48-34160b103e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d7b851-46d2-4632-842d-ad9483cdd05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1be3f0a-6c81-4d09-828d-cb80065a8430",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2ce310-a382-4376-a4e1-e508300664a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1d1e070-49fd-46a8-946c-b9d8759b55e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bad1665-5505-4bde-aba0-c5f54db12047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da18888-996f-40e6-84b9-f5a980367d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa130bf-80c6-4cef-a14c-58e3fa68cb62",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013d73a6-67c8-4bdd-a7f3-45e5c0677e2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00008643-a05a-4463-8a0d-113c33f6779a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef8f9ef-291d-41b1-aa4c-ee271a599746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a45d7a1-4146-4f2f-ac6a-259a87050777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a753560-b665-47b9-a83f-1aef20cb2820",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0ca708-cf58-44b3-bd29-2149e2f6da36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eff0a07-ed21-4880-9444-041ff1389bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "479d06b5-10f0-4546-bae3-332c54699ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab0b3e4-d34e-4852-a762-44e696c6ca09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3fb390-395c-4798-8089-e6c60c621ab5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f71bdbf-9024-41e5-a8aa-ff9e8a95acfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c423dcf-a09c-4e7c-91f1-d0fddfbc12a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "389268b8-f2fa-42da-b1b2-e1b45ce2569a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124ce5a7-58e8-4187-9ed4-b2363557a908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef03fe5-e36e-4f63-9bf4-d1debd3b4f7a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f562fd-4a7c-48e8-b7d1-6e801d299613",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e85910ae-5a70-4453-ba64-96775c3244bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48185c5-d818-4b29-85b5-e697ef28c521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53adaff-40f7-493b-af0d-ef5d6e867ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f0d629-5988-4ce1-b188-b7f258d0fa42",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c8ce71-9dbc-4ee1-9126-072fd8f173b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "117508ae-31d3-4d35-a2ae-1a4af6a15cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ddfe34-117e-443f-93f5-a8346c5918a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c75eee-7ac2-4390-a8b7-78ff353b8080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e228224-7119-45f2-b487-ff1e04476b1b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10549de5-86ba-492b-80b1-ee7ed1aba6b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75c6450d-956c-4c67-8152-5dd7ad863e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9071c002-f62c-429c-955a-cf925d8c4453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1550f192-afb8-4715-add8-a79127b00bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ae95e1-723e-471d-a244-2162af5b346f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c89df07-6eef-4c47-8eab-a24148955492",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "732bc101-9faa-44d3-9727-ad5b200887ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f08595-1315-45fd-8d4a-1ce79abef385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b878089-2613-4637-9d78-a414a28d29dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb7b935-2464-4042-bcd6-ff69e214f7a0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7e7f80-5d17-4d4b-8b3e-0e20c12e4792",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4da0eea8-d822-4805-b390-406537316c00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f0c7aa-ab33-4961-93bb-9b77136d4c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71750e15-0cbe-451d-ad2b-3df34c79b9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd99227c-4a52-4514-927a-51f967181069",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8b7233-d094-40ee-9a91-648f65a2605e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2ed5cd5-b889-4cc7-970a-01b668602bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f601d0-30b1-4292-a82a-f14a626ecd86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4455284b-37c3-4c0e-9072-ec2c51d8e41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5887ab-e1eb-40b8-97d6-92f7bb6ddf26",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437684b5-efde-46f9-8ca0-5f3804c8889e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ec23044-6946-4ada-87d5-88991f21dca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecf4509-0c0b-4a80-8e71-3d6528cd181a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386340a5-e1fc-4343-85e3-ceb16af176f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ff0481-0ed5-484c-97aa-8deac2347440",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05189a97-f281-443b-a8f1-5bcb7f21f10e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7781f95c-da5c-4992-aef7-f4e11a87ea10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d861eff-478f-4399-b5f1-0c85d04057a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97cc6d5-665c-4f6d-b8bd-c95387888ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8973531e-f242-4f42-89aa-ecc843a9b462",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216fd976-2848-4bf6-b158-455f48e0bff5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d986cebb-a5f3-4ae7-b633-52b12eaac0c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa186cc-81d4-4a75-a325-55f45bf684d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95647613-5bff-4728-9ce8-9e02361482f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76b09ab-a6ab-44de-850e-1ee632d3458d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78584609-1701-43d4-a56f-566bb7d78694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce505771-a341-41fd-b7ad-bda77f324158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae555e2-e13c-4a4a-a8f0-443df518e22c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372b18c3-5151-4f9a-95cb-2ca0ff4160af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a60c411-48be-4233-8a81-87e6f59a1878",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42be782b-0443-4be9-92b7-6d154825ce28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e45a37c7-7da1-423d-8b8a-94ef46e04359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ea3563-64d5-4eeb-a84a-72d65fd3c226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4e9359-11af-4f0d-a68a-76afa3b1749b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69206a3-c7f6-4e60-b937-17f93350183e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cb0946-4dad-4674-909e-3d6e46f6b69d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8a567e9-e4b8-4fbf-9f8b-d12250187133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151b4bfb-7b7d-4a8b-8000-cbbf5ccd2202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4441e57-49bc-4494-9048-6ba37e1de559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24343a5-3f43-453c-9910-778b4249d3ac",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53334a4a-e11d-4ded-b817-4704d465b8f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28490b18-4321-4b79-b459-c46fff1e3724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "865ddf35-9db2-4149-9f38-e5a4f6065b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62849e19-93c9-4d6f-9f4f-a97333d21b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054dfec0-5129-4c4a-8ec3-94e873dd3aaf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0178b382-6e1c-4deb-8334-7ce7bacd9b52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b625d05-00ea-4341-9dc0-725d207ecadc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da2adc3-d8cb-4a93-919a-d7d67a13b1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770e588e-8c89-46f2-9091-91f1b3894eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6bf991-2978-4662-8981-e6aa525c7577",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53580a7-4c79-4819-9e6b-59bddbf1e025",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48418843-50f5-4d7f-8ecd-9b76a1bfc3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf63076-ff05-4c92-866f-233652acf6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e27cd6a-46f0-4c6a-89a5-5445e5edff60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53368870-50fe-4743-8690-102b0f03debf",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75596d79-14e3-4ba1-b0f0-135819cc3d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aff5046-43e3-41c1-945b-9feaaaedf97b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1484db22-4edc-4522-861d-f8f711c599a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1848d7-f8a5-495f-952e-f14bfc363b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbca9ee-759c-438c-8c5d-812cf2b08ccb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f1dee6-a313-40bb-9f44-7eedf250a109",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "910ea82f-2321-4c82-a69b-49d8d4f70617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55459bfa-06f9-41da-b6a0-7b715be3853b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec51235-9e42-4500-b26e-a6ae266c2598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be3a150-aaef-441f-87cb-b0a24e667aa0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad1e273-3c6f-4b72-a00e-5eaba0460804",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c95628da-c0a2-4733-b533-6def6d669b8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c37c07-7435-4e3c-a067-da26e53ff53e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d5355c-ccf2-4668-b3f2-80e8d770652f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf083c79-9b5a-4c0b-9dcf-af39351cea1b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4604a9-8319-4679-87d2-2c7e4d468400",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad3e0498-69b4-4830-a62b-08d253ec642d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69abddfa-9edd-4e7b-9803-8d0cb1b177f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baeb450b-76b5-442a-8ec6-cb25b611d9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26908a9b-7ee2-4fdc-b178-b44d7722651d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f629d8f-e60b-4f2f-ab49-442c9a3d2e40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "690dfa15-06de-4c2b-800e-1ac6875a0dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83094992-a81a-4570-b2ea-234751bf7ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e3f8e4-a547-4dbe-8264-2448567bee2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26e7e87-3238-487f-95f3-9e70a574e0e9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76673cc6-4e0b-46c8-8420-9650337dbb05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b4f643c-abab-4e93-acd7-3a4337175159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac356349-d6fd-43a6-834b-57f494e6d0b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99fe4bf3-d37b-40a4-a91b-ef0cb33a276d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598553b2-31af-469e-ba3b-692aa5c0f0ff",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e387f9d-b675-4f9f-b6a4-d17cc8325efe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d93f02c8-defb-4353-a378-8aebc5ce7346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e726ead6-ac2b-4e34-be4e-7971cd2e0e55",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9402e194-8feb-4517-902d-4cdb1f5b6e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b029329e-8c88-4dc3-a002-acb736a6ad49",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9d6837-f8c4-413c-891e-46eb09cf328d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6de05f88-f1f3-4349-b40a-29030ef3b08b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d0ec85-133a-4f6a-995e-c0e49032b523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd184cb-02d2-44e9-854d-6f08ff16f197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44d06ac-8758-4e0d-af60-2d5d8acd1a63",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f8c581-4d4e-4532-91dc-42c4774a92e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "994a0606-4b6e-4e33-b1da-02901d8056df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754707c3-ba85-4cd4-9e2f-50a3e29f0a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113579bc-ee2a-4dde-b9c3-bb044c5705d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed670bc-9719-45e9-9862-c78ac98bcb70",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade9eab3-75c8-4b98-9b9a-8999026b2522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f182e681-3ec5-495f-bcc5-56f45a4da0f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8644022-b44d-475d-8098-33c9e2a025ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec84e109-9aae-4604-9da2-3b48a434ac61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33315f06-f8a7-49fc-a070-a7039635652c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d9c85f-592c-4b88-b62e-20a688600fbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fd48af0-c06a-4a16-a3ee-079fc28085b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18ece1b-43f9-42a7-a141-e356b38210c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef203619-024d-48a0-bdca-b554f30d2043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0467ca9-868e-4cd7-8169-cce377b3d784",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a08bb89-1143-4d49-8f99-ee673d924256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08ddad8b-9bd7-4a50-90f6-5314899da6c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6055ba-189a-4599-8c9f-71fd2eb581b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d796dafe-e844-43db-a240-dd23dc87ba2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d029164-eda1-40e0-af8b-b59534962060",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c9338b-ab34-4fbc-836c-aad59cd8e60a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fdcae86-262a-444b-a520-77258610ec58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7105f161-355b-4132-b111-1f012fef8982",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ffbb445-2bde-41b8-b335-0baa80bcd37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372399a8-0f55-4572-8d93-8cb7c764a991",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73775d70-78c3-499f-a3d3-f5914861bb01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00a6c689-9e05-415d-89e1-94695926f670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e100b524-b3e1-4d42-ba63-adf1655e62b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbb94a8-490f-465c-85ed-c719cb62721e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6bb8e8c-d2a3-48d7-a35e-f686499456f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edbbe3da-ffe1-4d62-bb6c-5cfb1c240faf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "efe64445-e526-4b0f-b7b4-b9e0b591df74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2946042-3819-4c3a-b0d7-c78a0668815e"
                    }
                  }
                ]
              },
              {
                "id": "5fc66962-6c4e-4ade-9512-cc67757d3997",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e83bd41-b235-4f8f-9096-53aa1c715d46",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82d563c-582d-4444-bf58-90f5cb8d76ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a0a085ed-905f-4ece-97aa-af51fb307444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be898d6c-8666-49f6-857e-3820f979c4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65c48f02-feb5-48e8-bba5-54c0b80f4ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e51bfa-32b6-4852-ad1d-f64256e01ead",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7d0995-c8aa-4b61-94de-725bbf2a6272",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "750beb42-e379-4aa1-9847-859d93a50d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3a4a9d-a4ac-409d-ad8c-ffad4697be1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c7bc780-6a46-4951-bde9-b919ccd56bd5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8ca8377-1cc6-448a-8265-16afbf614179",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a84ca47d-6e67-4a9b-80db-e9a85be39475"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8d0f11f-37f8-467b-9e7a-b009b90494c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a95ad0bc-a595-4954-bb17-60f5f262d554"
                    }
                  }
                ]
              },
              {
                "id": "c449d943-34fa-4c9b-a745-938216d6d7a1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bd0bf170-6e25-4f4e-8753-db874fb71108",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00683e32-0165-43a1-8ed2-6e34b644aa01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9ab294c2-3753-456b-b168-a43dcc765cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d95aa22-f18e-41de-b77a-117f2e956e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c13dea47-60c3-4003-b886-59ed95d477d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ccb687d9-4296-404d-ab94-4fc25835e67b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "22d1de36-8f71-492b-95c9-48795f642d41",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fd87363-91f9-4215-8b91-3215e5c66665",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "37bcf16a-971a-4274-b5eb-d2210aa39ce1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc0a13c4-d2b7-49ec-b573-672ad9adf367",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84259620-7c7b-49d2-a71f-4d6b88898a1c"
                    }
                  }
                ]
              },
              {
                "id": "bd7be289-797f-40f1-b414-61b0112e7ab1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2964657-08c8-4156-b8c1-1089cf845a3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a1c9b87d-12bd-45fe-a302-7628c0249d58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbf3d1f0-8866-4b57-97f8-514785d7c579",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1167f3a6-56c5-4e75-a0e6-7d1261f50991"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "37f6636d-65e2-4df7-80f8-2e6e385eea0a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "46d02bdb-5f07-46af-8e11-13ac838a6335"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b3f938c-8ea4-44f3-9720-aff7cf1bd996",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70b5a3c6-3f98-4c68-a00b-1ff5c4ef8d1b"
            }
          }
        ]
      },
      {
        "id": "e2c6c30d-4ff4-4aca-8a5a-fbedcaa18eee",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1ba85e1a-5e1b-4812-bdfa-40ef5e34dca6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7701a700-b5a2-4baf-be39-0d1bd7bd6f24",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "67a7091a-1d44-4c22-9d74-9f5d9378e1c2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb0a7bb-4712-41f7-81ad-b575cd6ad947",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ca4bdc7c-6011-48e5-aabc-42080d5e0c92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "162f2aa6-0ac9-4b67-8b7a-3b8a2d98a955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "813fbf93-414b-4ac7-9ae9-5b14f0114d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f570066d-27af-496c-91ec-7222b600423c",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f6bffc-e244-4188-8456-29f61c5f91d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9569adac-f1e6-45ec-90fb-dc0ab5ea5ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcc29c9-948f-4985-9bd4-98660a209c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d48a7989-2735-4831-993b-c406956cf1d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23f7350b-eec4-4a0a-b80a-41bf50ef521c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7efe44fe-1e85-4797-a7f5-c7008687d25f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "439bcc72-d42d-4a82-b8c2-38b1cc2a4fa3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e25e0a15-77f6-4df3-a410-0092fa42f92b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67c0b28e-3661-4382-9b55-25f1bd35509d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "00a24230-1f15-4fd2-a3c3-be745956df40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d482b38-05c4-4cab-8ab0-152b59ba873f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d5e8433-9940-43db-90be-bcecbcd35cf3"
            }
          }
        ]
      },
      {
        "id": "577b1e6d-a2f8-42ef-a7a8-097548f2ecdd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "fc9978f7-a53b-409e-94f9-58ec23f5eb5f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15f9c00f-c84f-42ae-b196-ba9069df9322",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0dc7c73d-85c9-4222-8344-6cd887ce6aa2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afee0547-1359-4c8e-acb5-3d0ccdea5823",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d174fc89-c008-4eab-b4ad-7b60247653d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f41e59-132f-423b-9ce4-1440c71087b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61d248c5-02c6-4401-b554-2e4d6e2767cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efb6028-d15f-443d-a542-a9a00f8dc984",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35120234-a900-488f-8379-d0f61136a569",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "759ffb70-6c78-4f94-80db-e752bcb49854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a745e7-47e0-4b48-997d-f2cf479b1f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b5abfe5-9155-4d8b-87f8-a11834aa4228"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31a6a948-decc-476a-9161-364cac00dfd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e1d89ef-c481-43af-a14e-97e20ab6d87e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c73272cd-1e2b-4996-a0c8-56352ba45e5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6774a520-8d6e-4f32-899d-797838211065"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2706599c-ab09-4d08-95ea-4ef014b9cab4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e13f5b6d-7ba3-4bec-8c81-3256a4168d4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f9e68a4-ebd9-4e0b-abb9-5a3fa825bf6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a82474d-d763-49ae-a41e-1c330a80c4a9"
            }
          }
        ]
      },
      {
        "id": "62c454e2-ed67-49a5-b006-363b211e9e1c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3d851593-f8ee-409a-8ae9-cf9d7d705611",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27a8c830-de8e-471c-a813-1f07042cc461",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34d60874-3c1a-436b-8be3-5d4372e69237",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6f04ac-8316-4777-9bd0-a854c251b59e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2529ef6-a416-44f3-a15b-80c35ae3ed7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6e6067-f7f8-47f4-8bfa-512c0faf8ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f704142-a9c1-4287-a17a-6ebb324e9dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74cf8d1-58d5-4d3a-9963-1088fbcd2fea",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab4f511-a5ff-4804-b1bf-7cd9a85026cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cd20ebe7-b985-44e9-996a-45e70ae87b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9819177c-2b27-4e37-a65c-565d01217da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b0dacc8-2de7-440f-9920-602e3be6832a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d7e0d92-a1da-4c2f-ab93-e6ec640406c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "702d6fd2-1eeb-49b5-9cd6-1dfde9b03567"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7622a84f-fb17-4422-b81c-c66a444da488",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf167fa5-f31b-4eb1-85ef-0f28f2e6094a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d30dcdf2-bc24-4045-b680-904356b0f5bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "85af7fb4-10cf-473f-a4e3-96311b057d86"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f85b9477-34f0-473b-9a10-122127659c47",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57faa150-231e-4a85-958c-7d15ba6067f5"
            }
          }
        ]
      },
      {
        "id": "e6a94e38-c2ec-4f34-8791-63c08effddeb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fec0cde7-1e31-4693-8d6a-a817af891ddf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a165c2d-325e-485a-aa30-68b93d9e2782",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a4c8dcb0-85e1-4b59-951c-0b75e8a4aefd",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6bb5e88-0274-48fd-9326-e2e3c48dde3b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe6226cc-1541-4028-b25b-c3e895642051",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 750.2038461538461,
      "responseMin": 13,
      "responseMax": 8091,
      "responseSd": 1052.372590856114,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681346116241,
      "completed": 1681346327082
    },
    "executions": [
      {
        "id": "eba3df6f-0d73-415a-826c-206d1489210d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e02e0fbf-1d30-444d-9937-add86d4cbd2e",
          "httpRequestId": "352e7034-aaa6-4af1-8701-dbe8b00678a7"
        },
        "item": {
          "id": "eba3df6f-0d73-415a-826c-206d1489210d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "73c18577-9d1f-4ecd-a846-4ebec653a2f4",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 0
        }
      },
      {
        "id": "61322563-8324-4f40-a293-50c169b30455",
        "cursor": {
          "ref": "e0f2adbc-eb2a-46ad-a4fe-b0d837ebb1cc",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d409e6f7-7f2e-4d38-ad3a-7e3c533870f2"
        },
        "item": {
          "id": "61322563-8324-4f40-a293-50c169b30455",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f56aa962-48cc-4fcd-8fce-a7d15a91d87e",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "6d008cea-482f-4e59-9152-d1f7f6713d7e",
        "cursor": {
          "ref": "d3871686-0370-40d0-a938-8efd53413d0c",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "42adb95e-bb16-4be9-b051-8480daa6a67e"
        },
        "item": {
          "id": "6d008cea-482f-4e59-9152-d1f7f6713d7e",
          "name": "did_json"
        },
        "response": {
          "id": "7910aa72-02a6-4f45-9773-eaab4ca29598",
          "status": "OK",
          "code": 200,
          "responseTime": 1913,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35deafdd-fdc1-468f-af5f-fc43f263234a",
        "cursor": {
          "ref": "495e9ff7-30c5-48d8-9788-78f5da4d6ca0",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6dd1c76c-c0b3-4b80-b241-2686cdc39dd7"
        },
        "item": {
          "id": "35deafdd-fdc1-468f-af5f-fc43f263234a",
          "name": "did:invalid"
        },
        "response": {
          "id": "8dbd523a-6072-45ad-92e8-22f732500d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1300,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35deafdd-fdc1-468f-af5f-fc43f263234a",
        "cursor": {
          "ref": "495e9ff7-30c5-48d8-9788-78f5da4d6ca0",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6dd1c76c-c0b3-4b80-b241-2686cdc39dd7"
        },
        "item": {
          "id": "35deafdd-fdc1-468f-af5f-fc43f263234a",
          "name": "did:invalid"
        },
        "response": {
          "id": "8dbd523a-6072-45ad-92e8-22f732500d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1300,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf3bbf1-29e6-40f6-a5c8-44d0f475a0ba",
        "cursor": {
          "ref": "6e831611-bff5-4b37-9c04-6767adf793d5",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "744a5a84-aa35-4790-82b8-dfadb83e236e"
        },
        "item": {
          "id": "bcf3bbf1-29e6-40f6-a5c8-44d0f475a0ba",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d18f9604-9ed8-4380-b429-22ac979cfbf0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 880,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5113d15-70c8-4acf-b6b2-4f16555c760f",
        "cursor": {
          "ref": "65744437-fd2c-4808-847c-cfb788336405",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "42b9f83a-34c4-4d82-8868-f78eadf8eac8"
        },
        "item": {
          "id": "d5113d15-70c8-4acf-b6b2-4f16555c760f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "df9ba72c-c5fd-4468-9236-2b08546a2cf9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 995,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04e30a3-29e0-4049-9366-ecf179d2d098",
        "cursor": {
          "ref": "832bd4ef-c1ac-434a-8105-f8549d61a7e7",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b75f90b0-3a81-4fed-8723-1630233ee201"
        },
        "item": {
          "id": "d04e30a3-29e0-4049-9366-ecf179d2d098",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4546e24f-8c9e-4f24-839f-f12ad868a885",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519d6ae9-8570-406e-85b0-9a50c641e77b",
        "cursor": {
          "ref": "944e7f9f-b274-4bed-bd84-3d32b0fbf9b4",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "172dc1d0-2cb2-477f-b1f9-b44946af0206"
        },
        "item": {
          "id": "519d6ae9-8570-406e-85b0-9a50c641e77b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "3cd2af2d-566f-49d1-bdde-a34a4a983cf3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 678,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519d6ae9-8570-406e-85b0-9a50c641e77b",
        "cursor": {
          "ref": "944e7f9f-b274-4bed-bd84-3d32b0fbf9b4",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "172dc1d0-2cb2-477f-b1f9-b44946af0206"
        },
        "item": {
          "id": "519d6ae9-8570-406e-85b0-9a50c641e77b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "3cd2af2d-566f-49d1-bdde-a34a4a983cf3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 678,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4397c13-a404-4c68-8631-6a227597405e",
        "cursor": {
          "ref": "3a6160c7-a86f-4b31-877d-a5eaab225523",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "82b6c005-b371-440e-ac03-61fa0c78f98f"
        },
        "item": {
          "id": "b4397c13-a404-4c68-8631-6a227597405e",
          "name": "identifiers"
        },
        "response": {
          "id": "db6253c8-e572-409b-9dff-c241d285169f",
          "status": "OK",
          "code": 200,
          "responseTime": 1202,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4366c44-ba0d-44e2-8b5a-05ba1f0e1ad7",
        "cursor": {
          "ref": "bf321d01-b7f9-4620-828d-cc30b383607c",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "82530878-cfc2-47cc-8a55-f624facb7d8c"
        },
        "item": {
          "id": "e4366c44-ba0d-44e2-8b5a-05ba1f0e1ad7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d7708a34-f6ad-46b2-af2f-39244192ad66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4366c44-ba0d-44e2-8b5a-05ba1f0e1ad7",
        "cursor": {
          "ref": "bf321d01-b7f9-4620-828d-cc30b383607c",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "82530878-cfc2-47cc-8a55-f624facb7d8c"
        },
        "item": {
          "id": "e4366c44-ba0d-44e2-8b5a-05ba1f0e1ad7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d7708a34-f6ad-46b2-af2f-39244192ad66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7a9b27-6bf2-4ecc-ad6c-dbc0567e8054",
        "cursor": {
          "ref": "c13454c5-9d9f-4f66-a6b8-01d71c570c0c",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "06850a13-f9ec-47e8-a9cb-5ba3a505d0fe"
        },
        "item": {
          "id": "4f7a9b27-6bf2-4ecc-ad6c-dbc0567e8054",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "450078e7-6924-4563-bdf3-5649f2fa59f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270c090c-3d53-4e60-8a57-d21336983a0e",
        "cursor": {
          "ref": "e3b79eea-d938-4e89-9152-02529ae51b9e",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4b75d3df-c22f-45ac-b86a-d959695c9ce6"
        },
        "item": {
          "id": "270c090c-3d53-4e60-8a57-d21336983a0e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9f620c97-d193-4b35-bac0-6fd089541892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2888bb9-c5d1-4c52-9970-4e66f34845c7",
        "cursor": {
          "ref": "79dca522-a9cb-4fe7-bbd6-d22c0338d94d",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "93e9d442-fea4-431e-b975-f6d4645a0841"
        },
        "item": {
          "id": "b2888bb9-c5d1-4c52-9970-4e66f34845c7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7b1ee503-8675-415e-be2a-ba26a7a093cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a36a1f2-b9be-4525-9c90-8b955f4fa36d",
        "cursor": {
          "ref": "33970b5d-c1d7-4950-9213-9a6e5450e5b1",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2bae16b1-4cec-49ee-8603-ea6db06abfda"
        },
        "item": {
          "id": "8a36a1f2-b9be-4525-9c90-8b955f4fa36d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6a58b467-a45c-408c-83ff-f589df978818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1142,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabd680c-8550-4a86-8d0b-4bd44045b531",
        "cursor": {
          "ref": "25fb8679-8bae-4df6-8bd8-87986235a2ff",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9169cdbb-a070-49b7-9556-f5875b2042cf"
        },
        "item": {
          "id": "dabd680c-8550-4a86-8d0b-4bd44045b531",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "76156542-7b53-41f1-9096-c7289d2b136c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 881,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8548e85e-8c6c-443d-ac54-db2ebbe108b4",
        "cursor": {
          "ref": "d828804c-24be-4b55-ac8e-24227be894be",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "93c1e5bc-42db-4d85-855f-33eb7dee6c50"
        },
        "item": {
          "id": "8548e85e-8c6c-443d-ac54-db2ebbe108b4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8f1362ed-a4d7-489d-9696-50ab623cc7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1042,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67cb19f6-3e31-41bb-ad8d-9c24201d9426",
        "cursor": {
          "ref": "32e07fe8-9b0d-463d-bfb2-3b559543aabd",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "77c112a4-b3f0-4abb-a438-77ddc3ce5f60"
        },
        "item": {
          "id": "67cb19f6-3e31-41bb-ad8d-9c24201d9426",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2393d50b-3097-4ba1-beb4-17405e1f38a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c616ef4-4ac5-4cac-9a0b-187b42e5b3d6",
        "cursor": {
          "ref": "e295495b-80ef-47ca-a7f2-74fc0dd0946a",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8f129b0b-bef1-49aa-bb39-8c1d500349f7"
        },
        "item": {
          "id": "9c616ef4-4ac5-4cac-9a0b-187b42e5b3d6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "616ca4ea-2ef3-4727-8d39-17c1eb34750d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a0b4a7-8ea9-431c-b139-5e4747e9953e",
        "cursor": {
          "ref": "0d756a11-ce90-4835-b5bc-a72a4d30e954",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "29e4eaa3-ae1d-44a6-b9a1-d6fb85b05e58"
        },
        "item": {
          "id": "82a0b4a7-8ea9-431c-b139-5e4747e9953e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e14a0c21-5323-4db7-8b6b-ef904b4800ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9d2ae8-d071-45e7-9a70-f87c5fbfae34",
        "cursor": {
          "ref": "0e1c48e7-1106-4f76-9533-1b9c492b6b01",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "272b7ca9-27c5-4183-9d9c-064d64646d8d"
        },
        "item": {
          "id": "bd9d2ae8-d071-45e7-9a70-f87c5fbfae34",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a389bba6-1e06-42a4-adce-5b0aa284dfce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851466ae-d664-4efb-b757-59a3239ae424",
        "cursor": {
          "ref": "f9c7f692-6975-405d-8634-b13572e01d61",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9501ab50-741c-4508-bc6e-0faca0949fd4"
        },
        "item": {
          "id": "851466ae-d664-4efb-b757-59a3239ae424",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "88e9b836-1724-45cc-96e0-45ab143fd787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b845a10-0f0d-4ef2-9c97-5936d6d6d46c",
        "cursor": {
          "ref": "739aa5ec-cf41-4a51-be62-9c97fc04cb77",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9e5ffe7a-710f-471f-aa50-04f5bb0bd6e0"
        },
        "item": {
          "id": "1b845a10-0f0d-4ef2-9c97-5936d6d6d46c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7cf39bcc-254d-4474-9837-c2dbf0ec8474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e44ff6-44e8-4fcb-b0ab-f3c0ee0bc6f6",
        "cursor": {
          "ref": "5ceba2e5-ff14-4f2f-96ac-ad1d99efc9c5",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4cd7177d-bb6f-4f20-a914-58ed149a8632"
        },
        "item": {
          "id": "02e44ff6-44e8-4fcb-b0ab-f3c0ee0bc6f6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "323d1217-b97c-4c15-98b7-d6640d4e824d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752ebee5-7d4a-40a3-bc25-b55f4e9ba211",
        "cursor": {
          "ref": "969120c2-370e-494f-b9a0-977f0652e761",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "15c6b81f-7f56-4802-b53b-cf27bdeed89c"
        },
        "item": {
          "id": "752ebee5-7d4a-40a3-bc25-b55f4e9ba211",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5225da87-1bf6-4ec7-b56f-81e008091e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016ae159-fb2b-437c-8c9d-6082c844a5f5",
        "cursor": {
          "ref": "663ba4d4-ee38-49ac-a8bb-b6230d63d6f7",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0eb273c9-3337-4258-9dd1-3d7ba6070da5"
        },
        "item": {
          "id": "016ae159-fb2b-437c-8c9d-6082c844a5f5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "587c2b13-533a-4ee4-8821-e71364827bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43c54a8-4e6a-4c3a-b6ed-012b76ade368",
        "cursor": {
          "ref": "8e3c8f81-5e0e-4a47-bae2-a5586564fbd5",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0ec8186f-874d-45a7-b0de-cc3c79dc9720"
        },
        "item": {
          "id": "a43c54a8-4e6a-4c3a-b6ed-012b76ade368",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "092599d1-75b0-44cd-9281-1e72e58ec3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc927b3-d235-46fb-95bd-e02b7b64828f",
        "cursor": {
          "ref": "c0e976e5-bd1e-4acf-bbb2-e90e3508e1ef",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a776830d-ac09-4dd9-af49-d450b942039e"
        },
        "item": {
          "id": "7cc927b3-d235-46fb-95bd-e02b7b64828f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c73f2c64-41c2-4913-913e-b4722c8e0189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addbffbe-c9e5-4f3f-bd08-2ae7fd3fd4af",
        "cursor": {
          "ref": "c7505889-f6b9-427d-ac5d-d5cdceda6a2a",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "856fadf0-5d2b-4074-bb92-3593586c4550"
        },
        "item": {
          "id": "addbffbe-c9e5-4f3f-bd08-2ae7fd3fd4af",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b8bb4ed8-150a-4fd9-b8be-3befbd89f4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a11f3a-85c7-462d-b0b9-09849c9b498e",
        "cursor": {
          "ref": "0714e520-076b-4859-832f-eab83bfd2cdc",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "becdab94-9797-4332-8c84-270551def504"
        },
        "item": {
          "id": "f8a11f3a-85c7-462d-b0b9-09849c9b498e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ef32d1e0-ce2d-4433-a820-58191c3e91fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d80fcf-22b1-4661-847e-f7710a3aa6df",
        "cursor": {
          "ref": "9bac3386-8bda-440b-834c-1f05196e7af7",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3c2d1cbc-9f7c-4ea1-af0c-2cadcbd52a51"
        },
        "item": {
          "id": "c7d80fcf-22b1-4661-847e-f7710a3aa6df",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0db65f40-83f0-42d6-a483-138e09d5e7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71fe290-8091-469c-a9fd-2cb594407933",
        "cursor": {
          "ref": "b941060b-1792-496f-ace6-fac99a281a23",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6b6a546d-d6ed-403c-9095-d02eae41bf95"
        },
        "item": {
          "id": "c71fe290-8091-469c-a9fd-2cb594407933",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8bd03905-4762-491f-b95c-130fac4c038b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc1b2ae-bcc8-4d5b-9915-52087e31e2df",
        "cursor": {
          "ref": "fb202960-a72f-4c51-8926-63f92739db48",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6807a906-e076-4393-ba0b-67206dff5483"
        },
        "item": {
          "id": "6bc1b2ae-bcc8-4d5b-9915-52087e31e2df",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8ff0321b-35f4-49be-aac7-a6fb94a3ef03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef011b5f-dcd7-414c-a30f-78911f08b233",
        "cursor": {
          "ref": "c7caf5fa-15bc-46d6-bb59-f97e4f4f1a69",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "212843a3-cf8e-45c0-a568-8527a9368721"
        },
        "item": {
          "id": "ef011b5f-dcd7-414c-a30f-78911f08b233",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f885f962-4aad-47cc-97ef-97ac1627ac1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9d0258-92cd-4869-92a2-83fbdab5be9c",
        "cursor": {
          "ref": "843b2c7b-434e-40b7-b46d-72d9026e6154",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3702560c-2122-477c-84fb-ed9ba035928b"
        },
        "item": {
          "id": "1d9d0258-92cd-4869-92a2-83fbdab5be9c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b043e9da-fbd8-4a35-92e3-63f43c759160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7641f15b-1fe7-4bec-ac5c-2ddeeb4b618b",
        "cursor": {
          "ref": "68d7243d-552d-4691-b2dd-be4cb5694217",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e608dc1c-855f-43b8-b287-dc77c4990eab"
        },
        "item": {
          "id": "7641f15b-1fe7-4bec-ac5c-2ddeeb4b618b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2c8567d3-cffe-411b-87fe-7ddc6a65c1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9447aeae-e429-44db-8650-4b0e0285c38e",
        "cursor": {
          "ref": "9c9861ab-d45f-447d-a35d-522edd0a1cdb",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ffa4961e-1612-4f2c-893e-80b796fa06f0"
        },
        "item": {
          "id": "9447aeae-e429-44db-8650-4b0e0285c38e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f565adda-af73-42d3-a1cb-ed3686d0ca38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf3e254-bf38-4203-b4e2-fb33f781c673",
        "cursor": {
          "ref": "790eabeb-ab6a-461b-8bdd-7555c667f5e5",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f17e1065-da95-41aa-bd68-886d4dd29356"
        },
        "item": {
          "id": "aaf3e254-bf38-4203-b4e2-fb33f781c673",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ae26dafd-ac0e-4274-a4f8-865f6cd532a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e947f7-34f7-45c8-9c41-5a921429b1e2",
        "cursor": {
          "ref": "a6c29fc2-416d-43eb-bbcd-7c363fd59591",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "88ab00f9-de52-4ec0-88cd-9ac258559584"
        },
        "item": {
          "id": "a5e947f7-34f7-45c8-9c41-5a921429b1e2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "efea1de9-4e86-42ac-a182-d7459ba408ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e10ef3b-45b3-4658-bdd1-872f858503f8",
        "cursor": {
          "ref": "5ca7f4ad-7b0c-4354-9b1c-ff947e52208c",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5292a9f4-f887-4576-a962-264ebd2482ed"
        },
        "item": {
          "id": "4e10ef3b-45b3-4658-bdd1-872f858503f8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "cf582101-dbea-40d8-ae85-c9eeaf4880a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0522b7ef-72c4-486c-891a-01f7c604ecf6",
        "cursor": {
          "ref": "e02f4d4e-6d61-4ffb-834a-899bc8b5c09d",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5c32bc7a-23aa-4194-b658-a1e2fd04f58c"
        },
        "item": {
          "id": "0522b7ef-72c4-486c-891a-01f7c604ecf6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "02802dcf-a865-4b52-9954-13420cbae0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ee49c9-66ec-4aaf-88fa-2da52ab1e1b6",
        "cursor": {
          "ref": "06888afa-4596-4855-97b0-09c07c9016f4",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bfa958fb-6efe-4e88-8bfb-529dd8544aab"
        },
        "item": {
          "id": "45ee49c9-66ec-4aaf-88fa-2da52ab1e1b6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "296d9a78-9aec-40ea-b9b8-3b154458b763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc1c858-579c-4704-bd58-d55d685e202c",
        "cursor": {
          "ref": "f39549d2-67f5-43af-a21c-44398fc4385e",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4cb166db-adc2-4c8e-bde7-1b0afceabc63"
        },
        "item": {
          "id": "1bc1c858-579c-4704-bd58-d55d685e202c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "26367107-24fe-4fe7-bed3-dbbba0f1818c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35304f92-a174-44d9-b364-863190df962e",
        "cursor": {
          "ref": "23a4e340-b31a-4e72-9203-eca98f738292",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3d0e971f-4626-463b-8ed6-4d5576946b11"
        },
        "item": {
          "id": "35304f92-a174-44d9-b364-863190df962e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "663affbd-e6e4-45cc-9d54-6c4637a3049f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d50c249-1304-4d05-a2a2-6c6834e68fb1",
        "cursor": {
          "ref": "562cc14b-f96c-4eb0-b14f-4f5c655447a7",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3d05af7e-522d-4c1a-b3cb-8bfdc7b541c3"
        },
        "item": {
          "id": "0d50c249-1304-4d05-a2a2-6c6834e68fb1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "125af11a-c237-425e-a009-c75f5643ba15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b22938-0b6c-4b7e-bd2c-2a957e199c01",
        "cursor": {
          "ref": "810e76d5-a3bd-4f36-bf6c-d713b4f61027",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c98fade5-1e7d-4a67-953e-4e5e3873e106"
        },
        "item": {
          "id": "78b22938-0b6c-4b7e-bd2c-2a957e199c01",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c120a779-f33b-45fc-b9c1-c2b08578997e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 659,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07baf95a-de98-47ea-b83a-fa161a094423",
        "cursor": {
          "ref": "e1b5dbdd-c7f3-47fa-8b98-b77a2a413b3b",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f65023b1-07d0-4f5f-a560-e1cb3f30fb7d"
        },
        "item": {
          "id": "07baf95a-de98-47ea-b83a-fa161a094423",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "12535a10-98c5-4c78-8b0f-d6cba7996892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baca8c1c-756c-4b38-b15d-c863f15a275e",
        "cursor": {
          "ref": "e3c85759-5521-4df9-b3f2-47c6bcf18c91",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "01aaec4a-a876-49da-bb4e-73b4c705c04c"
        },
        "item": {
          "id": "baca8c1c-756c-4b38-b15d-c863f15a275e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "24da4c4a-baaa-4195-a37a-600f50efbe30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe646df-562c-49c1-87dc-161633b84c17",
        "cursor": {
          "ref": "f2f66bc1-9ff3-46fb-ad9e-0c4bf0083292",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4c4eff8a-e428-43d3-8fda-481bf2c45467"
        },
        "item": {
          "id": "cfe646df-562c-49c1-87dc-161633b84c17",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "279e0b6c-13fe-42d6-b079-686f2056f327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e77b5d-09ce-4141-a6e9-24690414ee9f",
        "cursor": {
          "ref": "1ef0ddce-5642-4119-badf-14f9b37dba70",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d5692f3b-11e3-44d5-82ca-20d7a83f054d"
        },
        "item": {
          "id": "e4e77b5d-09ce-4141-a6e9-24690414ee9f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "43425c1c-4ad4-4a98-acb5-cecdb044a83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedb6b64-160e-479d-b54b-7cd823d46e88",
        "cursor": {
          "ref": "f4b519af-0c09-42a5-bfef-4d377f28a56d",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2ea64951-f5ac-4c8e-94cf-5ccfe9d08d3e"
        },
        "item": {
          "id": "cedb6b64-160e-479d-b54b-7cd823d46e88",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3c609735-ef9e-49c2-a975-e6cfa49da026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78fdedb-1073-4548-a8ce-d4c92beca9a7",
        "cursor": {
          "ref": "42631935-ea94-4068-b3f4-21aef83fd492",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "49ad9aa2-c4b5-415a-8e00-58c4672935be"
        },
        "item": {
          "id": "f78fdedb-1073-4548-a8ce-d4c92beca9a7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2e6b5a9c-d1b8-4b8a-b09e-d3aa002ab9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59cd02a-91b9-4322-ae98-89ee271c0aa2",
        "cursor": {
          "ref": "245f5752-31ce-43df-a892-752a2d5b5170",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "716be9c0-ccb0-4917-9cf1-f16f6e0bbff7"
        },
        "item": {
          "id": "e59cd02a-91b9-4322-ae98-89ee271c0aa2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "57f9c315-478c-4d68-81eb-5ce4f583dabb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 674,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac387ae7-7173-46e3-8fe4-36994ddf285d",
        "cursor": {
          "ref": "af401232-495e-48c2-a6fa-cd247c443374",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8cfd7980-73f6-4b84-a73a-b45c2e0b797b"
        },
        "item": {
          "id": "ac387ae7-7173-46e3-8fe4-36994ddf285d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a0292819-b915-46ee-8d2a-ef747beb85a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ac75a0-7121-41cf-b10a-5c1c34df26b3",
        "cursor": {
          "ref": "d5ad4abd-2981-4757-84f5-409d2d367019",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7af6a69a-33c3-4837-a381-b69504c4c1f3"
        },
        "item": {
          "id": "16ac75a0-7121-41cf-b10a-5c1c34df26b3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "407c50d8-894e-486f-8be5-48cdf7691903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6732d3a7-e03b-4280-9303-60e7bca0192d",
        "cursor": {
          "ref": "514b2075-5f02-4b53-ab2a-04887b974281",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "14608d8d-cf1e-49c3-a2df-e9dad9854bf3"
        },
        "item": {
          "id": "6732d3a7-e03b-4280-9303-60e7bca0192d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2949b8d7-1904-434a-91b6-52b3272244e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f099fa-6222-415e-9b61-49a966988941",
        "cursor": {
          "ref": "e1c1fcb9-2f4a-437b-92fa-cb7a52b1db44",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d74caa83-be2b-4d5c-a5c6-2178cf747778"
        },
        "item": {
          "id": "a7f099fa-6222-415e-9b61-49a966988941",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "aece9c20-3259-48ce-b9c0-d14781bd01ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83321ea0-3eb6-40ab-b978-0ec8dd201104",
        "cursor": {
          "ref": "acf36237-5e46-4a6c-acef-facedeb9e2f8",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "59df2714-88ba-40c0-8af0-c590e84ad146"
        },
        "item": {
          "id": "83321ea0-3eb6-40ab-b978-0ec8dd201104",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f3691adf-6f79-47ab-974b-9bd7c7371127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05240b02-4d80-4569-9e84-864dfae351e7",
        "cursor": {
          "ref": "98881f2d-d4fd-4713-ad17-8920a32bea71",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a18d069b-8cb9-477c-8bc1-299a231cb870"
        },
        "item": {
          "id": "05240b02-4d80-4569-9e84-864dfae351e7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9696e670-253a-4d04-95b5-de70885f017c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922e4d12-bec0-43db-89cb-6dafc12b6110",
        "cursor": {
          "ref": "8fedaef8-ae71-4095-a078-27baa9d23d62",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5739986d-9f67-4849-adb0-9c2db642f33b"
        },
        "item": {
          "id": "922e4d12-bec0-43db-89cb-6dafc12b6110",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9771d54c-0229-4e86-b12a-1e25ccf2afd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fba88b-ecf9-4ecf-b1bd-3250cc1450e8",
        "cursor": {
          "ref": "827c0ac3-6b89-4d34-98ce-b4a2547ca305",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "875e1d53-240c-4cce-9c48-e7893a2df5fd"
        },
        "item": {
          "id": "d8fba88b-ecf9-4ecf-b1bd-3250cc1450e8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d09ba147-f0a5-42ea-a5f2-eb12a1547c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e1108e-0d54-4740-8c9a-3f08a87a8d7d",
        "cursor": {
          "ref": "a8853a34-8451-4f88-9fa1-c3b07316cb80",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4adb7bf4-4ce9-492e-b22f-0a27dbc10518"
        },
        "item": {
          "id": "56e1108e-0d54-4740-8c9a-3f08a87a8d7d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3d93bc18-46cc-49ce-8249-537f7f45da6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced8bd3e-1bd5-41db-8f08-fd94bbca475f",
        "cursor": {
          "ref": "41c0e131-9657-448b-bbe2-f752f5383992",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "28fe63f6-9574-4717-ac60-2d187044d31d"
        },
        "item": {
          "id": "ced8bd3e-1bd5-41db-8f08-fd94bbca475f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f9cb7807-c23e-4a52-9650-dfbdbaba0558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ed0487-faa7-4a0d-8c9a-6cd8b37bf936",
        "cursor": {
          "ref": "db23d953-82d5-48f6-ab47-3b9a050067df",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9c7a99ea-0be8-4555-a529-59917d49ee0c"
        },
        "item": {
          "id": "d2ed0487-faa7-4a0d-8c9a-6cd8b37bf936",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "82f66003-0237-47b7-b4a9-ec1a37cf07ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41250982-157c-45e4-9fbb-a2ed66c81d66",
        "cursor": {
          "ref": "0d4d7469-8e10-4056-bd1d-032b37563b53",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7c155efa-a5f6-49f1-8c72-f8457415b097"
        },
        "item": {
          "id": "41250982-157c-45e4-9fbb-a2ed66c81d66",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a6570783-bce4-4c66-a710-84a1823e0307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce6aad7-5937-4db1-a4fa-7b51a77f20a4",
        "cursor": {
          "ref": "b2489b30-e795-47e1-9b27-cbebc5f02581",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0fe24812-d0e4-4136-b9af-d0113c00ba77"
        },
        "item": {
          "id": "9ce6aad7-5937-4db1-a4fa-7b51a77f20a4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6acf208d-2a57-4895-b2a2-352923f464d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca19773-22c0-487f-a14f-b953be9dc63e",
        "cursor": {
          "ref": "12630ae6-8fd4-4d04-85de-fb8d693235d5",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a0332210-93fb-4049-a4d0-75a154b944f2"
        },
        "item": {
          "id": "8ca19773-22c0-487f-a14f-b953be9dc63e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "226b8b71-7c93-4e9f-9063-27642e91fb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d684b5d8-4c67-438d-8af9-e051c2f1438d",
        "cursor": {
          "ref": "77023a24-4ce0-4d13-b321-35ec1b2ae247",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c5c5f096-557f-498f-b127-144ac3defa52"
        },
        "item": {
          "id": "d684b5d8-4c67-438d-8af9-e051c2f1438d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "91d194ea-dd10-473e-8b52-437b538b0b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356f1607-7fb1-4b4b-9997-82bdb4c5318a",
        "cursor": {
          "ref": "49acb76c-d485-4227-92e1-0bb658766772",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "224a0c6b-b524-4cd7-acb7-b6e2f9c5399c"
        },
        "item": {
          "id": "356f1607-7fb1-4b4b-9997-82bdb4c5318a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2eaee545-d271-42e8-95d3-6ae6a3304c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68992cb2-e77d-4851-b5a2-303e81096b9f",
        "cursor": {
          "ref": "ccc7bd6a-dee1-42f1-ae00-ec20bef8af68",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9fe0ddb1-6e88-4660-a600-732634306dc0"
        },
        "item": {
          "id": "68992cb2-e77d-4851-b5a2-303e81096b9f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e2e0c46a-4777-426a-9df4-bb83d35081b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 933,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7ac481-a704-4329-bf9b-b78cb0751af7",
        "cursor": {
          "ref": "f04afb28-58ec-4c58-99fc-54a0d95dca62",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "13ebbbcf-fae7-4e85-86ba-563ca6e2b561"
        },
        "item": {
          "id": "8d7ac481-a704-4329-bf9b-b78cb0751af7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8639e361-be6f-49ac-a677-8cb106262498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1079,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f1db6e-d90a-4e76-97c0-d78769efb890",
        "cursor": {
          "ref": "cd205f2c-f817-444d-976a-cd10f31eb47c",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b4e112d9-3cb9-4f07-9054-09a27f336850"
        },
        "item": {
          "id": "a9f1db6e-d90a-4e76-97c0-d78769efb890",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "44c83703-35b7-4fd2-892c-cb2ecda6580a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f50ee8-d8fd-4f48-b106-ee0e82016f72",
        "cursor": {
          "ref": "671b98b9-9653-41c7-b996-bac021d7fe02",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7e639e5c-19e2-4424-97a5-5e26fc11bfe8"
        },
        "item": {
          "id": "04f50ee8-d8fd-4f48-b106-ee0e82016f72",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bd1df1e4-6b93-45aa-a2cd-58a36a4759df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09032acb-781c-43ca-90c3-c96721411024",
        "cursor": {
          "ref": "951ba673-5f20-4639-a0b6-fb0bf54207fc",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "34a292b2-157e-41e6-8fe6-f304936630b1"
        },
        "item": {
          "id": "09032acb-781c-43ca-90c3-c96721411024",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f75b64e2-6e4c-4480-92fd-110f6e6ff624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef713369-cc66-40bc-a468-b3635fd7476c",
        "cursor": {
          "ref": "740f3e69-0558-4183-a6f3-1864ddc23695",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2d0c0c1d-d9aa-44a5-a09c-4025237a9f89"
        },
        "item": {
          "id": "ef713369-cc66-40bc-a468-b3635fd7476c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7cf1e21c-df50-4886-8ad9-30aec6ec5f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524d70c0-806b-4c7e-aab4-78aee0408308",
        "cursor": {
          "ref": "e3b55e97-37c7-4b26-90de-2d50e3919c52",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f5739947-16c7-4513-9c33-de17c93978f9"
        },
        "item": {
          "id": "524d70c0-806b-4c7e-aab4-78aee0408308",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3317dd03-e55a-41ff-958c-0751e36bd13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705b914b-3db5-41c7-a5ef-797530f64ee9",
        "cursor": {
          "ref": "64a18160-3987-499d-9cee-58b209cdcb49",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d7817bb2-0b51-48a0-a9fb-321490917c41"
        },
        "item": {
          "id": "705b914b-3db5-41c7-a5ef-797530f64ee9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b00da0ae-1fab-40ff-90b8-918244cb8cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2821644c-89e1-4db8-aa7f-9940f46b9c30",
        "cursor": {
          "ref": "c1a0347f-191d-4696-b97a-9c7789eeb4da",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3e8d5a7b-c003-4676-bf6b-44548a48a3e9"
        },
        "item": {
          "id": "2821644c-89e1-4db8-aa7f-9940f46b9c30",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e4e5ab9b-01af-4781-8acb-2586f2b15cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b26ff4-f7ca-4619-979b-86a3a50ffb50",
        "cursor": {
          "ref": "2bbbcb37-3f2f-4034-a458-94d40d9f15e5",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7e714d12-6f30-454c-aa28-1d307f42adf5"
        },
        "item": {
          "id": "04b26ff4-f7ca-4619-979b-86a3a50ffb50",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d75ee3ba-7741-4055-92a8-3becd5da9903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b644af3-3e75-47f9-8234-79222806c1e5",
        "cursor": {
          "ref": "2fd15115-1d39-446d-b6a1-c4a81695720d",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "97ee231a-fd0d-4634-9fb6-57a38e70c05c"
        },
        "item": {
          "id": "7b644af3-3e75-47f9-8234-79222806c1e5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f4554e06-bdb9-45f7-a444-a662d819dfce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba2603f-ff2e-4fb4-80ce-a1d56e027f7b",
        "cursor": {
          "ref": "b2237a1d-7c6e-46e0-ab74-56ae2c57e74b",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4a579c14-9035-4a6c-b25c-2b0165a7e67e"
        },
        "item": {
          "id": "3ba2603f-ff2e-4fb4-80ce-a1d56e027f7b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "36281569-f1bc-4adc-ae78-cd0da40f4a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93450a55-a228-496e-af5d-5ab52754d0f4",
        "cursor": {
          "ref": "f0f29f98-ff7b-4aa7-b179-ad653972c3b1",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "aee9af02-cc80-49c7-9806-c13027faa77d"
        },
        "item": {
          "id": "93450a55-a228-496e-af5d-5ab52754d0f4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "941ca336-5e54-4bdf-96f1-9ff77818cd6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba92413-5ad2-40c8-99ee-6b83b202c6f1",
        "cursor": {
          "ref": "8a56f071-13e9-44cb-9bd8-22d6b56e67f9",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bf23c65a-02c8-4dde-8b82-6965d290cbfd"
        },
        "item": {
          "id": "7ba92413-5ad2-40c8-99ee-6b83b202c6f1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d97699f6-7f10-4dae-9f59-adb2bdf1f2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffeee529-b83f-4aa9-aa48-a1c688a71805",
        "cursor": {
          "ref": "52390b9d-fcb6-47c6-9a72-0a74361dbded",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "df24b1ee-d340-49ec-a081-a1d45905e9cf"
        },
        "item": {
          "id": "ffeee529-b83f-4aa9-aa48-a1c688a71805",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "55d2837c-a999-4557-96bf-42b77c68f229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8597b72-af49-47bd-ac2c-a446d809bc47",
        "cursor": {
          "ref": "25ad2001-3b85-4c46-a456-652412fe2759",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0b7c0e3a-392e-4f27-85cf-7e0896e61ea2"
        },
        "item": {
          "id": "b8597b72-af49-47bd-ac2c-a446d809bc47",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d292e823-af9c-42c9-850e-e5250e4aa707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd5dceb-2ff2-4b6c-9818-8e26cf37121d",
        "cursor": {
          "ref": "e5ae3f6c-493a-4787-8435-92d73baff2ae",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "25c9f683-2c3d-4ed0-8eb3-ef0b120e82f3"
        },
        "item": {
          "id": "7cd5dceb-2ff2-4b6c-9818-8e26cf37121d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "904e022c-9f30-4019-bd45-372eb72ade0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad50e14-a125-4c48-9ffd-a8d3cf16170c",
        "cursor": {
          "ref": "f5d0270b-f795-4fad-b9c5-aeb85d1410ef",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d8e24ef1-b04e-4ea2-97fe-e16d64ebaf00"
        },
        "item": {
          "id": "5ad50e14-a125-4c48-9ffd-a8d3cf16170c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6e9269d9-066b-4c67-8602-7b45f70c6748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec45774-a6bb-4584-ab1d-dfc9d70bfa85",
        "cursor": {
          "ref": "b75a2bbe-509b-4efe-b1e5-724e87ff009f",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a5947b18-c283-44a9-83d3-901b94ecd815"
        },
        "item": {
          "id": "aec45774-a6bb-4584-ab1d-dfc9d70bfa85",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3d1bbb04-a2d2-43f9-9560-2aa556c5beb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f1263c-4167-406a-8eb4-63df7676d870",
        "cursor": {
          "ref": "d09324f6-e132-40de-ad3f-f21d9c1bc8fc",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3c91a911-6df4-46ff-a4a5-861265ed95ea"
        },
        "item": {
          "id": "56f1263c-4167-406a-8eb4-63df7676d870",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7d0b13be-3b05-4c99-8091-2a9d97fcf4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdc456d-d4ef-4985-9fa7-a4cd2c2eae49",
        "cursor": {
          "ref": "217d2a4c-5cbc-438b-a647-57afa9ca52e2",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4f22917c-4706-4bc5-92af-f8b8846aed5f"
        },
        "item": {
          "id": "8bdc456d-d4ef-4985-9fa7-a4cd2c2eae49",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2a625533-0966-4b9a-a77b-769549f4ca8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b46656-2f68-4ae1-944c-fc90d3b93180",
        "cursor": {
          "ref": "feb70824-cabe-4651-9927-d10e8d833b3c",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "16aa6e81-7e10-4ab7-bf7a-2e4abc173d41"
        },
        "item": {
          "id": "62b46656-2f68-4ae1-944c-fc90d3b93180",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a027f6a0-a347-4042-bfe1-c2f9b68086c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24400c72-939c-4592-9063-5f7fc9269f9a",
        "cursor": {
          "ref": "a1c91b1b-c06a-4cc3-93f0-6d5e56307b90",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b1b729b3-33e1-453e-9afa-c665a378eaab"
        },
        "item": {
          "id": "24400c72-939c-4592-9063-5f7fc9269f9a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "eec09b2c-5372-49d6-92f9-1d9f44931c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d34ac11-df48-43b6-a26f-30b4eab0d2f2",
        "cursor": {
          "ref": "c90c8478-5773-4630-acfc-cbd2ffd91410",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "70a97bcf-ef71-436e-b560-00b40532bec5"
        },
        "item": {
          "id": "0d34ac11-df48-43b6-a26f-30b4eab0d2f2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fe3f9187-d58d-4723-9cf5-98d708b9df00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1242f3e-3dd6-42fc-b9dc-5092f4674f7c",
        "cursor": {
          "ref": "18471bc4-8e3e-4180-93db-14ce00aafe82",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "69bbc30a-13ec-472b-833f-005346a80cd6"
        },
        "item": {
          "id": "f1242f3e-3dd6-42fc-b9dc-5092f4674f7c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4fbe7e20-3f79-425e-aa1c-00696e16d09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55e3068-a6b3-42ab-a314-a2b59f1499ad",
        "cursor": {
          "ref": "5970ed99-4188-4e42-9ed6-e0411805fdb5",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cfe2a0cf-51cd-4b64-b291-ac0b04f17322"
        },
        "item": {
          "id": "d55e3068-a6b3-42ab-a314-a2b59f1499ad",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fa8e93e9-5a71-4c98-982b-dcff45e9c4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3af996f-86a8-418f-9004-0d671af701a9",
        "cursor": {
          "ref": "bf1c1b5a-438a-49a3-ab63-93a18b3d394c",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7e85d57c-ef41-4555-b19c-5055870d6caa"
        },
        "item": {
          "id": "f3af996f-86a8-418f-9004-0d671af701a9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "24a9bc0d-c2c7-4595-b8e1-bd50a62411e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1229,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71438db-3f51-41e8-8790-022d1bb24057",
        "cursor": {
          "ref": "5c070ea9-2a62-4dd5-af5c-698324389b39",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f4ecd6d9-e826-4e62-a2b3-6cd7ccff8349"
        },
        "item": {
          "id": "a71438db-3f51-41e8-8790-022d1bb24057",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "38bbd7be-d565-4007-8e4a-24094a96670c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1296,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1cdfe9-c68b-4beb-b8b1-9e3a66d421c8",
        "cursor": {
          "ref": "ca4b8d67-ff64-4da3-bef7-e77af9a2f8e7",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "775e19eb-95b2-42a4-9707-7f0773facd53"
        },
        "item": {
          "id": "ca1cdfe9-c68b-4beb-b8b1-9e3a66d421c8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e45365ad-49ed-4ce6-b668-ebaa34c238cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 953,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5d40a1-ff4a-44b7-ae79-283f4aa57f92",
        "cursor": {
          "ref": "9f269eb5-8d70-43f8-aaa6-ea92fe5db10b",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6171b0f9-5a4e-45e4-ae76-5d9f5278022e"
        },
        "item": {
          "id": "ca5d40a1-ff4a-44b7-ae79-283f4aa57f92",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e49a4bf9-c5c6-4266-9c69-c9d95ec141d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1022,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cba6865-1639-4069-b57d-273efc957394",
        "cursor": {
          "ref": "8460ab67-24f8-4233-bd56-6d18a8fe825c",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0a843c5a-113b-4fbb-9183-ea4c7a6d4633"
        },
        "item": {
          "id": "1cba6865-1639-4069-b57d-273efc957394",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "eb17d041-d19f-4437-9dd0-436445795432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874e3c1f-8980-411c-b872-c6973975fa48",
        "cursor": {
          "ref": "289024dc-fc8a-4c7b-bff0-cb2bed041353",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b24d83f7-d735-4d27-b8fa-c645d05fdcc8"
        },
        "item": {
          "id": "874e3c1f-8980-411c-b872-c6973975fa48",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1ab9f411-0232-4f48-8757-9764cdfb108c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a2d018-7c3f-4eae-a5de-1248be252d2a",
        "cursor": {
          "ref": "ee60eebf-2a4e-416f-80af-1bc3c7dab837",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "561b2bbb-98bb-4b22-9ad0-95c8f3c1feb5"
        },
        "item": {
          "id": "68a2d018-7c3f-4eae-a5de-1248be252d2a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d46573b6-cfe9-4dfe-a462-75ad7927d69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19353c4-a159-46e3-86ce-dd4bcfa863d6",
        "cursor": {
          "ref": "2fc53244-3b2d-4f5a-9281-081eea11d23c",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f237e005-afaa-46ee-b82c-c722bd324bdd"
        },
        "item": {
          "id": "e19353c4-a159-46e3-86ce-dd4bcfa863d6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d1a40c73-2e32-4718-9a27-0dfe1ea1b4f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7aabbc8-d110-4202-bb77-be6c573e8ef8",
        "cursor": {
          "ref": "71966e96-a388-4acf-aebc-bc0b2fac512e",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "aee8334b-7705-4667-abd2-2dcb81ae7461"
        },
        "item": {
          "id": "a7aabbc8-d110-4202-bb77-be6c573e8ef8",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "2a976deb-eac6-468f-a299-ec119dca9d10",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 741,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ae0de9-9f74-4939-b8d3-adc8b70a3eaf",
        "cursor": {
          "ref": "af00ac85-2678-425c-8a7e-7842ef35c9c9",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ffba5d6a-3d1b-4596-b0ea-e0d434fa09ad"
        },
        "item": {
          "id": "24ae0de9-9f74-4939-b8d3-adc8b70a3eaf",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a111a0eb-f268-4061-930b-fb276177fe42",
          "status": "Created",
          "code": 201,
          "responseTime": 8091,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1526ae78-5a75-4153-861b-8b9e312edd8b",
        "cursor": {
          "ref": "32a1d92e-dabf-425e-8a0e-257c9af45701",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ed2f40e6-3c5f-4760-9057-fb53f0d946d2"
        },
        "item": {
          "id": "1526ae78-5a75-4153-861b-8b9e312edd8b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ff2020b9-e08d-4be7-bc3f-5ccfd1b8f278",
          "status": "Created",
          "code": 201,
          "responseTime": 7572,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "216b047e-4d09-4807-a2e9-a433dc3bc2cb",
        "cursor": {
          "ref": "e1093dc3-a57b-4cca-b335-3c703c4a6ea2",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "78271f34-2cc3-457c-96ea-30e96e166b9f"
        },
        "item": {
          "id": "216b047e-4d09-4807-a2e9-a433dc3bc2cb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "15a88d19-cdf0-4389-9280-932260c7c5d7",
          "status": "Created",
          "code": 201,
          "responseTime": 7536,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "152317d0-c2a0-4db1-9a95-f711defb4313",
        "cursor": {
          "ref": "7a86917e-6456-40c5-b557-01281b1a7af0",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "275f58d4-ea22-44b3-a49a-c1caeefb1b1c"
        },
        "item": {
          "id": "152317d0-c2a0-4db1-9a95-f711defb4313",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9d648196-4b1b-408e-9e97-c25f76a55645",
          "status": "Created",
          "code": 201,
          "responseTime": 6162,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "404a2d7c-38c3-40ac-acef-3397d8f1a5ae",
        "cursor": {
          "ref": "60eaa4f1-c868-4457-b912-78d52910f10c",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "577f55bb-e48b-4d45-8c76-671a6547b7ce"
        },
        "item": {
          "id": "404a2d7c-38c3-40ac-acef-3397d8f1a5ae",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8024253f-0ce8-4b0e-9ebb-c85e6919d9e9",
          "status": "Created",
          "code": 201,
          "responseTime": 7512,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f968ec7-9f3d-480f-8955-07c148d468f6",
        "cursor": {
          "ref": "e6fd574c-aaff-4f2a-8815-48410d5fca0c",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1e3e4a20-4134-4235-8462-5f7de178dead"
        },
        "item": {
          "id": "4f968ec7-9f3d-480f-8955-07c148d468f6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d1cd3871-fb79-4cac-af1d-6bfcbbcb93bf",
          "status": "Created",
          "code": 201,
          "responseTime": 7297,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59bfa69-ea1c-490f-ab22-b759ba3fcffe",
        "cursor": {
          "ref": "341cf77d-9336-477f-aba0-538d283ee6b6",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5a40a5ed-d3b4-4b47-bbf1-9551761ef38b"
        },
        "item": {
          "id": "b59bfa69-ea1c-490f-ab22-b759ba3fcffe",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5f9c0d9a-4e4d-4161-aac2-3ea0adefc3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59bfa69-ea1c-490f-ab22-b759ba3fcffe",
        "cursor": {
          "ref": "341cf77d-9336-477f-aba0-538d283ee6b6",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5a40a5ed-d3b4-4b47-bbf1-9551761ef38b"
        },
        "item": {
          "id": "b59bfa69-ea1c-490f-ab22-b759ba3fcffe",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5f9c0d9a-4e4d-4161-aac2-3ea0adefc3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420c634c-7d3e-40af-ad05-577d98d6edd4",
        "cursor": {
          "ref": "7cb44178-72b4-40a4-b30c-b7eec246ef43",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "06e9761d-4210-41c6-9010-c33336c23e02"
        },
        "item": {
          "id": "420c634c-7d3e-40af-ad05-577d98d6edd4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "feb53c79-8d36-44ce-8e88-418f75585f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52437ef0-3065-4005-a3e6-bb59f7780a15",
        "cursor": {
          "ref": "17c1c9e7-331b-4891-82a3-4114c6a1cc9f",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "25e6d815-23a6-4d88-b1ba-152e48d4748d"
        },
        "item": {
          "id": "52437ef0-3065-4005-a3e6-bb59f7780a15",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8c29f359-f8c1-4762-94b6-19dcdf8e792d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43be320-04a4-48a4-bc78-f07c6b06e8cf",
        "cursor": {
          "ref": "e55c6a10-e9a6-451d-82bb-8446a2b920a0",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f38023c9-2c2c-4269-b833-942beb1d2d9b"
        },
        "item": {
          "id": "e43be320-04a4-48a4-bc78-f07c6b06e8cf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "89a0aef6-047c-44a9-8823-9d6af9f4773a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9b7974-e959-4789-88dc-1abf52a4a8a3",
        "cursor": {
          "ref": "19504e87-1963-4689-b709-7a9d88802dec",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "73c19847-1320-45a1-8598-f114a70a24a7"
        },
        "item": {
          "id": "2a9b7974-e959-4789-88dc-1abf52a4a8a3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "47a3acaf-a18d-4b39-8da9-2ba1d4b74200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7781f6bd-7410-47d3-b0ea-a727e5efed30",
        "cursor": {
          "ref": "cab8920d-9fec-4d73-afab-5a2762e8a84b",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b58baca4-2440-430d-80d5-55509c3b140a"
        },
        "item": {
          "id": "7781f6bd-7410-47d3-b0ea-a727e5efed30",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7f02ef42-6f64-4f4a-bf0b-1d9e2db62f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17be174e-c84b-42b6-9346-5d1c67279f16",
        "cursor": {
          "ref": "b36ebf63-d699-4486-ae62-ee6b8a1e66b9",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "332ce0fd-0757-4a49-a1f4-4942e02f3319"
        },
        "item": {
          "id": "17be174e-c84b-42b6-9346-5d1c67279f16",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a1f251dc-6568-4ea4-b9bf-c1f45ae99882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b55f58-7a2a-4692-a294-c6a917a89f26",
        "cursor": {
          "ref": "ca785914-72c9-4af2-bf8b-59d61f3df47b",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "36fc4640-5708-4b71-8081-934974d3930c"
        },
        "item": {
          "id": "12b55f58-7a2a-4692-a294-c6a917a89f26",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "813138e5-e3bd-4eac-87e8-c09ca7ed6b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8ec080-0033-419c-af57-8a115d6f2b68",
        "cursor": {
          "ref": "de314d19-e731-49c2-9a35-a969153eaf67",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b9f6cf10-12ba-4eba-9e0a-b845c4f18364"
        },
        "item": {
          "id": "7c8ec080-0033-419c-af57-8a115d6f2b68",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "503c3ddd-6aec-48e6-a774-f01891976aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deddc68a-ba4f-4f97-bb9c-ab715a25b19e",
        "cursor": {
          "ref": "09c44cea-e41b-45a3-8925-1ee9bb1d2f27",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bde3fd8b-5896-4509-a775-f5b7619c8052"
        },
        "item": {
          "id": "deddc68a-ba4f-4f97-bb9c-ab715a25b19e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "629d96b6-a863-41f9-a5ae-d2264432ce71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ba2828-f721-462f-8d50-e27d48915427",
        "cursor": {
          "ref": "8c17dad7-f442-437e-93bc-42c7247172ff",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b2ebaf0e-9ede-49bb-9b59-9438ff22d05d"
        },
        "item": {
          "id": "98ba2828-f721-462f-8d50-e27d48915427",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "83b432ba-20d8-43a5-abc5-b307b820daac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c81c9a-ba51-43db-9108-5ecb30f5d8ee",
        "cursor": {
          "ref": "aed5a17a-f8cc-4146-bb37-2c0e30cb5af7",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "03c214d7-3771-47b0-945b-471f199fcbd8"
        },
        "item": {
          "id": "23c81c9a-ba51-43db-9108-5ecb30f5d8ee",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "05f81cf9-beb3-438c-b53d-dd802366d6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bb0c41-ed91-4f50-b97c-e00018054934",
        "cursor": {
          "ref": "c3a2a57e-95fe-4b23-a856-596619f24778",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "df082348-8375-40bb-92d8-7491f468cd34"
        },
        "item": {
          "id": "66bb0c41-ed91-4f50-b97c-e00018054934",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f311a936-bb59-4278-a63d-c558f1749d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f29803-f0c8-4559-987e-801a38983fe2",
        "cursor": {
          "ref": "261b8069-0ba7-4fa5-a72c-e872a03777ce",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2093fbb6-80e0-488d-ab7f-5156d7887f15"
        },
        "item": {
          "id": "07f29803-f0c8-4559-987e-801a38983fe2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e78bea66-d1ca-4dda-8a56-ada11f819ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2491fbe2-ab1f-4efd-a048-5a1bec8f409a",
        "cursor": {
          "ref": "fa42863e-787d-41a6-9d8f-d472cdf03a4b",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0169c1da-1063-495f-bb2a-143ad1a3eeb1"
        },
        "item": {
          "id": "2491fbe2-ab1f-4efd-a048-5a1bec8f409a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "208e3107-06c3-4c9c-97da-0054208e80d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b9a82f-e1d3-4350-a331-f2b0ecfc2749",
        "cursor": {
          "ref": "89cdd8bb-eba5-4525-85f6-6094decfc961",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fe9f86e9-f8f7-4472-9396-77d9f0aa21be"
        },
        "item": {
          "id": "63b9a82f-e1d3-4350-a331-f2b0ecfc2749",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6cacf73e-2863-4f3c-9345-e687f52ab8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1be8629-edf0-4840-a6b8-2304cd2666a8",
        "cursor": {
          "ref": "3985c8c9-005a-46b0-92b1-7cf74183ad40",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3896d96c-ef8b-4ee7-a71d-2ff6a09047b6"
        },
        "item": {
          "id": "b1be8629-edf0-4840-a6b8-2304cd2666a8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "562c528d-44ea-445d-a0dd-d29ea967670d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb74cc6-83cb-45f8-95cb-3de88cb09be1",
        "cursor": {
          "ref": "b6de16da-dc93-41c3-80e4-46612cb95a05",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "795fe1f9-ba3d-44aa-b192-6c0e2a1d7e6f"
        },
        "item": {
          "id": "3cb74cc6-83cb-45f8-95cb-3de88cb09be1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c565aace-8280-4714-b0b0-f7ac22b6fb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d09b949-cc17-47cd-93cc-7d80b615b5fc",
        "cursor": {
          "ref": "933c8e00-f6f5-4630-a34f-cf377bd449b7",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "08321434-c86c-4aba-aa64-a2d9f666f6fa"
        },
        "item": {
          "id": "7d09b949-cc17-47cd-93cc-7d80b615b5fc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "35f4f86c-e159-4eb2-8f69-7a1e26fedb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafaa299-8bb9-423c-bdce-f7a531b7defd",
        "cursor": {
          "ref": "f35857e7-cb64-4c6f-aec4-a7d0e58c5bb6",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "96807b2d-54cd-433d-a16f-a991e3087083"
        },
        "item": {
          "id": "eafaa299-8bb9-423c-bdce-f7a531b7defd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7b7ae1a9-0cb2-4d98-b603-042ce30d2de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99434909-c693-4854-a09b-e8f979ef13df",
        "cursor": {
          "ref": "e5e90e8d-749c-49f9-af8b-132975a24ed1",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6d366d3c-1573-426d-99ef-a8c9ee869665"
        },
        "item": {
          "id": "99434909-c693-4854-a09b-e8f979ef13df",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f6661fe6-b6fe-48aa-902c-c1d643f0d1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dc2d3e-c7cd-4479-96de-b1f24425cd86",
        "cursor": {
          "ref": "462d7609-c43c-4bc0-88e2-99334b31e1ce",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6f50cd9c-1137-426d-bd24-595566311460"
        },
        "item": {
          "id": "84dc2d3e-c7cd-4479-96de-b1f24425cd86",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "64d22930-96e7-4ea7-a784-a381389de49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628f8a4d-85c9-47b5-9fec-17222cf9f9a8",
        "cursor": {
          "ref": "363859be-70ac-4a9f-b9d4-f9219d56c820",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f9c2ff08-b1a2-4cd3-bb50-e30c79ca13af"
        },
        "item": {
          "id": "628f8a4d-85c9-47b5-9fec-17222cf9f9a8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e164cc3d-134a-4dc9-a17a-fd5a9541974f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f46668-6fc8-4c79-8f93-4c286d777671",
        "cursor": {
          "ref": "fa0c628d-559c-49bd-896e-3fa8032a2d12",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f261a4e1-572e-4e58-ab63-3f73d0cafb5a"
        },
        "item": {
          "id": "66f46668-6fc8-4c79-8f93-4c286d777671",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3c73a193-d380-4bc6-87f8-593f73345bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b271a6-c191-4d29-8cc6-dcbbcd7254e2",
        "cursor": {
          "ref": "b97dc8fa-c93b-44e1-96a9-2f2a5eb08980",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fb36bf99-2a5e-4383-8087-dcb0c12832cd"
        },
        "item": {
          "id": "84b271a6-c191-4d29-8cc6-dcbbcd7254e2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7218812e-0f9c-421e-a1f2-49836a75d3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bf89b2-39cf-4e6d-ab61-001828133faf",
        "cursor": {
          "ref": "4c6802a7-c486-4cd0-b2f9-2535c2bd3c12",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "03bae320-c6d7-449c-953a-92bb1ddb2d0e"
        },
        "item": {
          "id": "e9bf89b2-39cf-4e6d-ab61-001828133faf",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "12224afc-6e5e-4fd7-b057-73f3e59cd39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ee897e-4c96-4e7c-a241-8c77114ff0d0",
        "cursor": {
          "ref": "3bb75507-823d-435b-8338-75e2d2b522f2",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "05fb4c4b-ef65-41e8-a847-52709da64184"
        },
        "item": {
          "id": "53ee897e-4c96-4e7c-a241-8c77114ff0d0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "baa1223f-58c9-436c-85e2-5ec91204422b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1114,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672fcab5-efac-40f7-baaa-242d958301c5",
        "cursor": {
          "ref": "d88acf4e-aab4-4fe4-9c12-debe85e3c4cb",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "842b1153-3360-43d6-bbd9-d610efa55e93"
        },
        "item": {
          "id": "672fcab5-efac-40f7-baaa-242d958301c5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "10262188-7178-4236-b118-d32541e1c433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1035,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008cb60c-57ac-42b6-9bf0-bedfb74e924e",
        "cursor": {
          "ref": "3c85781c-5779-4917-a0d4-143a035c2338",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "10f00246-4774-4cd3-8f21-80b0c5155913"
        },
        "item": {
          "id": "008cb60c-57ac-42b6-9bf0-bedfb74e924e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8cea6d34-0e33-4dca-8c03-39821c6cf325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1172,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f4eeb1-4d44-4439-91ab-a64bf51de003",
        "cursor": {
          "ref": "c52818b6-e7b3-46e3-a571-abe83d9f7686",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "13f46138-d350-45e3-9eb5-8c7db0f0ff0a"
        },
        "item": {
          "id": "c5f4eeb1-4d44-4439-91ab-a64bf51de003",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "97301c94-2ed2-472c-acf4-65aa62e62c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 885,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e9e45f-cf33-49af-91f2-ed2841d4a26a",
        "cursor": {
          "ref": "c0d18d38-4a93-4a9d-8f7c-03d6adcaeedc",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8df0369d-098d-4f31-beaf-0190490ffe46"
        },
        "item": {
          "id": "a0e9e45f-cf33-49af-91f2-ed2841d4a26a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e9bbc6a0-540e-4e43-ab77-137249fe531c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d2c9e2-8def-4a31-846e-b48e384dc318",
        "cursor": {
          "ref": "ac461d19-1e92-4d61-8cc2-b64c8af81c8c",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a2ce89ee-53b9-4d20-84b7-6cc21ee7c1fa"
        },
        "item": {
          "id": "15d2c9e2-8def-4a31-846e-b48e384dc318",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7c4f5814-e451-478b-8911-f30f92610417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd3ab4c-7589-4335-a999-a0bb7576506d",
        "cursor": {
          "ref": "3ce25814-925a-48ae-a5ae-59c890996583",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "54b889b8-1110-410d-b29d-98263b4a2219"
        },
        "item": {
          "id": "fbd3ab4c-7589-4335-a999-a0bb7576506d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9e04ecf8-6286-48db-950f-5cd28ff392f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653d19a5-f28f-46d5-980d-e25577852726",
        "cursor": {
          "ref": "48074771-9696-4b89-9d0c-1178fbfd9246",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "66a50083-459d-4412-9f82-507e69156f9e"
        },
        "item": {
          "id": "653d19a5-f28f-46d5-980d-e25577852726",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "c9bff42e-eba7-40d4-815e-8962c71fda56",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 670,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acd94eb-84f9-4b87-b495-f1e47cac5553",
        "cursor": {
          "ref": "661346ad-2967-4ee7-94de-d0b8f48340b2",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e213ec7e-b84c-42b9-a54b-f07c27e30f67"
        },
        "item": {
          "id": "8acd94eb-84f9-4b87-b495-f1e47cac5553",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e479643c-3dbf-478c-b9f0-9d9f9784efda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acd94eb-84f9-4b87-b495-f1e47cac5553",
        "cursor": {
          "ref": "661346ad-2967-4ee7-94de-d0b8f48340b2",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e213ec7e-b84c-42b9-a54b-f07c27e30f67"
        },
        "item": {
          "id": "8acd94eb-84f9-4b87-b495-f1e47cac5553",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e479643c-3dbf-478c-b9f0-9d9f9784efda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f842841f-5524-4603-9d2e-afaa3eb29608",
        "cursor": {
          "ref": "d2f60f2f-4fb5-4e57-bee0-3506ef06675d",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "605e60b4-f400-4487-bc3e-2494b12d6da0"
        },
        "item": {
          "id": "f842841f-5524-4603-9d2e-afaa3eb29608",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3779d0ba-0851-4dab-9363-1e7d7b7c7889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9508148c-14cd-42c8-acc2-83bd4c2c5c69",
        "cursor": {
          "ref": "3091d483-7904-4c87-a314-cfaa45319380",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "115ca02c-5ceb-4361-9f67-c8fdefd96835"
        },
        "item": {
          "id": "9508148c-14cd-42c8-acc2-83bd4c2c5c69",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b92f13db-fc88-46cb-8eec-d306e140400a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ed4fb3-b480-41ce-b572-90ea91c91ac7",
        "cursor": {
          "ref": "0bffe167-3358-4590-9afb-c3783f957fb0",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6f7b6529-3de9-456f-bd1e-5233b109e7f1"
        },
        "item": {
          "id": "18ed4fb3-b480-41ce-b572-90ea91c91ac7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2e8193b3-8a5d-4ea7-8e9e-f670a141914b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469f7caf-b3b2-4f96-afd3-b72f2aaba91c",
        "cursor": {
          "ref": "d4bf780a-9886-4981-9efe-7960ce51d3ee",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "36652a56-7ecd-4230-9d86-dac75d0bd875"
        },
        "item": {
          "id": "469f7caf-b3b2-4f96-afd3-b72f2aaba91c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "71de1906-860c-4922-be81-a094ba14b5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cb5b71-1270-443a-a76a-2091e44a6bf9",
        "cursor": {
          "ref": "4beb5336-0bf0-4a4d-91da-485cfa7034da",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1400e6ef-9504-4c53-a819-df34c385ff6d"
        },
        "item": {
          "id": "07cb5b71-1270-443a-a76a-2091e44a6bf9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b5260b2b-ca79-4cf9-8be8-2f44a012838c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28312bc2-8057-401c-b8c3-bebddf9fbdd5",
        "cursor": {
          "ref": "983ad801-30e6-4abf-9d79-65f2f47d920f",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "00d45389-03b1-4757-b963-92e621743004"
        },
        "item": {
          "id": "28312bc2-8057-401c-b8c3-bebddf9fbdd5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "026d585c-ba84-4c85-b9a7-fe5d08eb9d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7cc6e8-6732-45d6-a267-11e2087507f4",
        "cursor": {
          "ref": "5a80d5c8-a903-4ed1-8cf0-7053d3f8993a",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "92a902d9-5c91-47b0-b971-a8e893c5a340"
        },
        "item": {
          "id": "be7cc6e8-6732-45d6-a267-11e2087507f4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c6de9a0d-e88c-40a7-ba20-6426bfac8fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3548361-350d-4cc9-b52c-102e54a73032",
        "cursor": {
          "ref": "bf3ad70a-5c0b-4b1d-b850-896de3cd2633",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0fed87f6-c897-4c85-b005-39f5c2877f1a"
        },
        "item": {
          "id": "f3548361-350d-4cc9-b52c-102e54a73032",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b88ccad7-98e4-4e7e-b3a2-5b28ef0101f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc55cf46-d65e-46cc-9885-ff0918786796",
        "cursor": {
          "ref": "829edf07-eda4-4ccd-997c-30d394d0a384",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1456a56c-3834-465b-a57d-00e865740a7b"
        },
        "item": {
          "id": "cc55cf46-d65e-46cc-9885-ff0918786796",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6e5a41a8-8632-4bb6-b2c1-c4d4c07e53df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7fdfd9-8c01-4213-8158-0b7d8dc69016",
        "cursor": {
          "ref": "72fd96db-8c2c-4753-9479-a47acbb86866",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "991a135d-d572-4b04-8378-88d06e2cda56"
        },
        "item": {
          "id": "4d7fdfd9-8c01-4213-8158-0b7d8dc69016",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "bbbed8d9-107f-4267-a545-3685a5c6d62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4350dffe-5861-481f-be17-ca7250206f37",
        "cursor": {
          "ref": "9b839d61-2b05-46ce-a0c7-b2eb7a89be1c",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9afe3958-8c1f-419e-96a3-dbd984271c1b"
        },
        "item": {
          "id": "4350dffe-5861-481f-be17-ca7250206f37",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bc6f3d8b-68f1-489b-ac5a-0c0093bf738d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 924,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f6da44-c079-42a6-83b5-32a192ec8e9a",
        "cursor": {
          "ref": "70a147d4-e1b1-4f95-ad49-94eb91a344f1",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "72aef01f-8275-4411-ba48-1d0316186c41"
        },
        "item": {
          "id": "42f6da44-c079-42a6-83b5-32a192ec8e9a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1b1f9ec1-f1ca-474d-9b08-bbf50e6bc273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7341e94-d434-444e-ab18-d5a20360c036",
        "cursor": {
          "ref": "aa626f71-b475-49d4-858e-cce44f3e651e",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c19a07a7-aa66-4ce1-8b5e-380678204800"
        },
        "item": {
          "id": "b7341e94-d434-444e-ab18-d5a20360c036",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5219e1e9-5329-4ffb-865e-e05f01f55759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 878,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5faf1a41-6a04-4fce-9f9b-80c653d12000",
        "cursor": {
          "ref": "3568b4ec-2afe-4443-8a2c-e7c63250541c",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3d3b1a9f-c2b3-439e-b75e-ef34f20d7ad6"
        },
        "item": {
          "id": "5faf1a41-6a04-4fce-9f9b-80c653d12000",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "31af3080-200b-4944-a758-16e4f41efbec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3931f0ac-8505-403f-83f8-fc780d5038f9",
        "cursor": {
          "ref": "559cb6d6-dd8e-4bcf-a0a8-f02850d7804f",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a6e8cc6b-a5f8-4936-bda2-7bc9d4c1a7a7"
        },
        "item": {
          "id": "3931f0ac-8505-403f-83f8-fc780d5038f9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "09ba4b04-b4cb-4095-b284-2e87a69755be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2094236-d5f3-4f64-98b0-bde18c27ab7a",
        "cursor": {
          "ref": "b79e8f39-2504-456e-8bfa-45ef87aa239c",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b97a3354-7432-41f3-84e3-7a111d047b7a"
        },
        "item": {
          "id": "a2094236-d5f3-4f64-98b0-bde18c27ab7a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "52e5e0ec-3863-42e9-8d2b-46e2caf75e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf417fd-5e66-42fc-b8f6-ff6c31d3649e",
        "cursor": {
          "ref": "3b6784ae-8380-432e-a65c-7ea25f8d6fff",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0c66913f-1619-4cb0-90b6-892f54e1d398"
        },
        "item": {
          "id": "5cf417fd-5e66-42fc-b8f6-ff6c31d3649e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3eca7a23-b691-4e5b-b3d1-ccd688a1f6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a212896-2902-4b52-8236-0664c71330fd",
        "cursor": {
          "ref": "1eb9f82f-2d89-4f70-a1fa-358dbd58bd17",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "df9df929-9534-4be9-bc4a-218159a339c6"
        },
        "item": {
          "id": "6a212896-2902-4b52-8236-0664c71330fd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fb404693-5279-486f-b907-45598cf5b314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02c020c-0cf4-4721-a7cd-43f0f6317df1",
        "cursor": {
          "ref": "e2105cab-97a3-48c9-a552-90eb4b1bd4b3",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4ffdd230-4e73-42b9-babb-518681f1b447"
        },
        "item": {
          "id": "c02c020c-0cf4-4721-a7cd-43f0f6317df1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ab8d37b1-348f-4277-88fd-522e542842a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bb121d-9b0b-452e-8406-54567def33ca",
        "cursor": {
          "ref": "4399291b-b0ad-4151-9a8c-2d9b1c4de6cf",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6ca0e10c-95c5-4f09-987f-fe63c6c56493"
        },
        "item": {
          "id": "c5bb121d-9b0b-452e-8406-54567def33ca",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3c0ef149-40f9-4ea3-866c-93b83482edef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5048f95f-7027-4e39-88a8-751b7405fbdb",
        "cursor": {
          "ref": "896e0693-1c36-4609-9630-461e82158c51",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9ac1e35a-f91a-47c5-8635-3b139d590bcc"
        },
        "item": {
          "id": "5048f95f-7027-4e39-88a8-751b7405fbdb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fd45f29b-9832-4f0c-856d-432d5385821a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a1b216-9b52-4fc4-8067-46e045047124",
        "cursor": {
          "ref": "29b24bef-3fdb-471e-bd2a-5f61c0e44468",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c588b59a-79f2-4692-9c18-578960c13013"
        },
        "item": {
          "id": "33a1b216-9b52-4fc4-8067-46e045047124",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6b4caee4-49cd-47c9-970b-b334b1ab1fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fb2554-0dee-4136-8140-5baf567e1063",
        "cursor": {
          "ref": "0ecbcce3-7ace-4002-aed8-fa7ded855533",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b233d8b0-480f-4b25-98d5-ebd98a8e7918"
        },
        "item": {
          "id": "c5fb2554-0dee-4136-8140-5baf567e1063",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "13ddf5ab-8f7c-4058-b576-2860c029d45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2926cb6-ddfa-40b5-8c48-a913934b8d68",
        "cursor": {
          "ref": "7e9551cf-1463-40bb-86fd-e75dd9b6c720",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e442d236-7f38-47e8-84af-c803d54b9291"
        },
        "item": {
          "id": "d2926cb6-ddfa-40b5-8c48-a913934b8d68",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ca899288-a12e-48f9-8271-c2dbef782dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d862dbe-9d63-4599-ae33-ba8583745b53",
        "cursor": {
          "ref": "8c01f8e7-a902-4333-a1a6-fc407d20737f",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7de22a4f-b5c6-445c-aeff-e77206837cce"
        },
        "item": {
          "id": "2d862dbe-9d63-4599-ae33-ba8583745b53",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5d141538-9391-4c48-bf08-2b6bfc376e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b9b589-9caa-46cc-be1f-e982caf62487",
        "cursor": {
          "ref": "aab95041-7762-4127-a14c-417d6f0235b2",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "60625fcd-2a58-48de-8b9c-a942052dc39b"
        },
        "item": {
          "id": "14b9b589-9caa-46cc-be1f-e982caf62487",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0567d3c5-fd95-4b7d-867e-5f5cbfffa9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bab1b5-928b-4575-97f5-495936bc6dd0",
        "cursor": {
          "ref": "eaeee0d5-ac5c-41e3-8a0c-41576ff83c13",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2ed80993-c72d-44aa-b7ec-83af10d46c55"
        },
        "item": {
          "id": "c5bab1b5-928b-4575-97f5-495936bc6dd0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "484e745c-7acf-4e70-9e1e-c8febf6da716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 885,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776c8de2-7526-4449-a8cd-cf63264190a8",
        "cursor": {
          "ref": "e1158ec7-9df5-41dd-bc83-c1f837bf6df2",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "54a5e885-1502-40ef-9fef-d5636aacb800"
        },
        "item": {
          "id": "776c8de2-7526-4449-a8cd-cf63264190a8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a93c72ec-2941-49f2-9460-c44c6b3e0823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1c5c2b-d5ca-490c-8313-1544e925627c",
        "cursor": {
          "ref": "ed1c6946-dc40-4abf-843f-e1349be8bfda",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "69848ee6-98c5-452b-849e-ee4080d20fed"
        },
        "item": {
          "id": "3e1c5c2b-d5ca-490c-8313-1544e925627c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "36b03c52-86dd-48d2-a2e9-810da2afccf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9618699-faae-46a4-8f10-ff0706f28199",
        "cursor": {
          "ref": "89c89df7-aeb9-404d-b750-17c5f48557f4",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6efe2b93-98ea-468e-8f30-b2337ee0c7bd"
        },
        "item": {
          "id": "e9618699-faae-46a4-8f10-ff0706f28199",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "99dd21b2-1eed-40d8-9dd9-46f53eddd980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 899,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0894acf5-bb0b-4a62-9bdd-e87049734ea1",
        "cursor": {
          "ref": "a76bac14-7b0f-4749-b4c6-740163669d2d",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fd573513-cca2-4e32-a563-8859666505b8"
        },
        "item": {
          "id": "0894acf5-bb0b-4a62-9bdd-e87049734ea1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6bf2d72c-236b-4bb6-8ce4-f28046efa13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daee43d7-fadc-48a3-9a74-cac1d75735cf",
        "cursor": {
          "ref": "7963e01c-921e-4e13-8801-baccd4aa01f9",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ecbc5a8e-1dc9-41f7-b548-202fdc89eac4"
        },
        "item": {
          "id": "daee43d7-fadc-48a3-9a74-cac1d75735cf",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f9defa8b-5d6f-41b9-bf87-81748eb22a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421376bb-121a-4cec-acd9-b1494216c752",
        "cursor": {
          "ref": "90f02ca3-22c6-4fcb-9398-3cf3db8d0d40",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b4951d1a-2e6d-46db-af32-fd5a45ced34c"
        },
        "item": {
          "id": "421376bb-121a-4cec-acd9-b1494216c752",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5936e193-757b-4b98-8ffe-a92695f0356a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa896212-b34b-4bf3-8b0c-2ff47b46b8d1",
        "cursor": {
          "ref": "43646b68-97b5-45db-8ca3-ee91fe3df2f5",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "49c7357a-384b-4d72-b473-2eb1541dfa71"
        },
        "item": {
          "id": "fa896212-b34b-4bf3-8b0c-2ff47b46b8d1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "97344561-0b09-4985-aa09-af4eaca7bd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786840d1-f369-4ecc-a4ee-ddf0596a1782",
        "cursor": {
          "ref": "12d0fee3-5dca-4cc7-a15d-7289b4cc6b11",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3c3d7d7b-3453-4d78-a539-e8a8d4199b14"
        },
        "item": {
          "id": "786840d1-f369-4ecc-a4ee-ddf0596a1782",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "56eb4584-4a79-466d-8d07-8813357ddeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2594296-a2fa-4667-9b02-812f6e3e7856",
        "cursor": {
          "ref": "de2e19d1-6d85-4c0a-acf6-67246b624e02",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "069bddfa-0052-466f-8290-6cf140825d3a"
        },
        "item": {
          "id": "e2594296-a2fa-4667-9b02-812f6e3e7856",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0b050d57-bdbe-4d8a-8ff2-b2d75f5ae3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121b10d6-c7f9-420d-9048-64e17c90e9a4",
        "cursor": {
          "ref": "52192794-3750-46f1-979f-5a6e209efb6d",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e0d1ad72-ef32-457d-899b-7ec9865a0b6d"
        },
        "item": {
          "id": "121b10d6-c7f9-420d-9048-64e17c90e9a4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "70fcb5fb-83bd-4f0a-8773-8e5d1b1d1dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33310b1-0734-4de9-8cf1-9c4456da489d",
        "cursor": {
          "ref": "9adf607b-6f22-4da5-a16a-c4e99e511538",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d6db4694-e99c-4695-8c7a-fdb1cfc5a47d"
        },
        "item": {
          "id": "a33310b1-0734-4de9-8cf1-9c4456da489d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4d12d904-15be-41b9-b53f-19dc94056e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3468f5-1ef0-48d5-a5d6-6d27b1b8decf",
        "cursor": {
          "ref": "3496d8de-94a2-451b-b9bb-78b22d354134",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8e6d2d2b-2fc2-4456-ba36-cb982098f546"
        },
        "item": {
          "id": "3e3468f5-1ef0-48d5-a5d6-6d27b1b8decf",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6eb80ae0-8301-4637-863f-4465b859eb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933f498b-50d2-43df-9df7-ee88b75baff4",
        "cursor": {
          "ref": "dc2060ed-4297-439b-806f-f544b8d09b2a",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8ed73f8f-60d4-4737-94c5-a31fc0a87136"
        },
        "item": {
          "id": "933f498b-50d2-43df-9df7-ee88b75baff4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0bd3b35f-5ea3-4935-9879-6a0efbcd44f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c9ad51-b6aa-4f85-9055-10dcb5d45b25",
        "cursor": {
          "ref": "3e7db682-9d57-4af4-a4ea-6760decc9397",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2aec79be-a52b-42dc-9807-2a11c572e0ac"
        },
        "item": {
          "id": "93c9ad51-b6aa-4f85-9055-10dcb5d45b25",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6f1f386d-e0b2-4613-806e-76f96236ccff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271f3d76-529f-4d49-9616-b2eab70f6b00",
        "cursor": {
          "ref": "a198901c-edea-44e2-98f5-c0dd92bea6c2",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b4633ed0-fc27-445f-9b19-b09b2bc0e50e"
        },
        "item": {
          "id": "271f3d76-529f-4d49-9616-b2eab70f6b00",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9ffc0d08-76dc-48d7-be00-abcb7f3f4bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116a4a76-89a7-4ed2-bfba-4107767e54b1",
        "cursor": {
          "ref": "4211b66d-8867-4266-a054-d33318bea1d4",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "406eda7d-b752-43ad-8d39-e4873eadbd48"
        },
        "item": {
          "id": "116a4a76-89a7-4ed2-bfba-4107767e54b1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3ad9e764-a727-47ee-bc04-217945a074a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab1d5ec-a62b-44ec-b881-36b50aef912b",
        "cursor": {
          "ref": "870fb5cf-110a-4b2f-920f-a81684fb276a",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "da703769-c357-453f-a012-ebefacbd34d5"
        },
        "item": {
          "id": "bab1d5ec-a62b-44ec-b881-36b50aef912b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "816f62f1-1204-4d68-a20e-a349bc0544fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400fed42-5749-4361-afd4-2d23d03e57d7",
        "cursor": {
          "ref": "1b81ddfe-f5ef-42c2-b918-c466eb2c3457",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8d6370bd-c774-44d5-831a-78a58df41cd9"
        },
        "item": {
          "id": "400fed42-5749-4361-afd4-2d23d03e57d7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "86b1c75d-1bef-4bef-8a31-a3620713f6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab5d600-afa1-4fd5-929c-e2e6dec12294",
        "cursor": {
          "ref": "f0485948-6908-4f4a-96bc-f235f8eb61c5",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "84659ef0-bfe5-401a-8cd0-deb4922e38d6"
        },
        "item": {
          "id": "4ab5d600-afa1-4fd5-929c-e2e6dec12294",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9be6dc95-790c-427c-8cdb-ab35a7078f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 854,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995cacdd-fe69-4420-987d-e82a5ce602b8",
        "cursor": {
          "ref": "2bfc50e8-aca2-4389-9f8d-daeea8542ce4",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a8b7cdb5-5646-4b7f-b401-c8f93a31c20a"
        },
        "item": {
          "id": "995cacdd-fe69-4420-987d-e82a5ce602b8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b0d0db41-a05d-4051-a825-b2245b26ed22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 963,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e0d15c-4957-4c24-ac2e-312e7a148f72",
        "cursor": {
          "ref": "ddc79c82-f211-4b21-b478-02791eaf5ece",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "83d4c03e-19b7-4c8d-9d97-afb306188291"
        },
        "item": {
          "id": "73e0d15c-4957-4c24-ac2e-312e7a148f72",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "07219389-e9d3-4a77-bcc7-f0cb3d3857d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac98373-0615-4971-ab37-bc87b66b566c",
        "cursor": {
          "ref": "944fba13-5511-4ec4-9d2c-f0cb8dfa0696",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fb993167-fd9b-46d4-b93a-57cab6263e4f"
        },
        "item": {
          "id": "2ac98373-0615-4971-ab37-bc87b66b566c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3c7af384-48ba-4cc6-9ab8-c7ece2b749b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5970b3-440d-44cd-ac2b-82341df0d1fc",
        "cursor": {
          "ref": "ab53a2ab-9f23-4d8a-a309-6566e8d963f3",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3b28e556-682b-4a0f-87d7-eaf47dc84bc5"
        },
        "item": {
          "id": "ff5970b3-440d-44cd-ac2b-82341df0d1fc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "688242ec-f891-4b89-804e-9f00d928df93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3f96b1-2bb4-49a5-b614-41333ddd0d09",
        "cursor": {
          "ref": "2ea27177-9e16-4262-982e-dd7bfe74a1db",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d8ff5d6b-179b-4372-b13a-504459750fae"
        },
        "item": {
          "id": "fe3f96b1-2bb4-49a5-b614-41333ddd0d09",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1cdfe268-02de-48d3-8d8a-a06844041973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174b9b88-021e-443d-8dc7-2bcf60655804",
        "cursor": {
          "ref": "ad94e2c2-6aca-463b-a99d-c460178ea039",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6b5be59c-3edf-44da-bbce-3361840bef54"
        },
        "item": {
          "id": "174b9b88-021e-443d-8dc7-2bcf60655804",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a8ee487a-e791-4c69-bfce-c36834f76190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f46360-39cc-4b48-919b-d051d1505fcc",
        "cursor": {
          "ref": "6d265e8a-c071-4726-9a60-fa345e086293",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2569cba6-1d7d-4608-87cd-3aaf3058025d"
        },
        "item": {
          "id": "78f46360-39cc-4b48-919b-d051d1505fcc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "254369b4-5984-4380-aac4-115bb95f7fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622d5ed4-adaa-4f66-b11e-525b63286df3",
        "cursor": {
          "ref": "8bee70d4-5ab9-4b7f-991d-a22b82544d84",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0700132b-17f1-42cd-adb5-e0f8cdb65068"
        },
        "item": {
          "id": "622d5ed4-adaa-4f66-b11e-525b63286df3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0ea9c001-8543-428b-9b67-5549147f62bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13653539-54ef-489c-a162-ca6dbc28028f",
        "cursor": {
          "ref": "d1d9933e-c6db-4ecd-b5c1-9c37081096bd",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2d009310-de49-4902-ac3f-a0e5df8b08c8"
        },
        "item": {
          "id": "13653539-54ef-489c-a162-ca6dbc28028f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f0c76ce0-1e36-4790-84cb-268a92c691f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd47363-d210-4724-a535-a1c189238fbf",
        "cursor": {
          "ref": "2366aba8-33c5-40a2-beac-0bde773a1e63",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "50d0544a-dbfa-4979-9410-f0cedd3ca67b"
        },
        "item": {
          "id": "0dd47363-d210-4724-a535-a1c189238fbf",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bad0c33a-77be-4def-a140-16c3d0bdd0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4611c585-5b26-4dba-b1fa-1224a3ac94b4",
        "cursor": {
          "ref": "f2fb656f-ca57-4e09-9eb3-1f0dd2e13e87",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cf7e7534-628c-45c5-b5be-2cf920d99834"
        },
        "item": {
          "id": "4611c585-5b26-4dba-b1fa-1224a3ac94b4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0bec653b-aa7e-4dfa-a094-d01ae837b7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc21dd31-12da-443a-8b13-b3fc8d419024",
        "cursor": {
          "ref": "248b98fe-8b92-4d9e-85e8-9284520a35df",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c7914f08-4f3f-4758-a6a1-4cbe9ad53795"
        },
        "item": {
          "id": "bc21dd31-12da-443a-8b13-b3fc8d419024",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a4293c6c-788f-4579-812b-33eb6e28b41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1c5e65-5eab-4450-960b-e40195095a9d",
        "cursor": {
          "ref": "627dfddd-ef8f-4c45-8191-421640200fcc",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0d4d64de-87a5-4e1a-8661-d1d9cb512769"
        },
        "item": {
          "id": "7a1c5e65-5eab-4450-960b-e40195095a9d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "30987d06-503c-4dbd-8269-798d9d88a5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4e9c2d-bac9-4e58-99d5-adf929c7ce62",
        "cursor": {
          "ref": "820ec819-3b5e-4e18-89eb-fbd11bf9604f",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f7842dbf-2e47-47c7-adc5-551a2a753f8e"
        },
        "item": {
          "id": "2d4e9c2d-bac9-4e58-99d5-adf929c7ce62",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "efb00c50-271c-425b-a17e-8e1e455c816c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85aaf864-fe36-47ea-89fa-ed464f8707da",
        "cursor": {
          "ref": "aaa88e76-65e7-41a9-aae8-7ee5138c9c47",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6c0d0a0b-af07-409b-a82b-b80dae9dba20"
        },
        "item": {
          "id": "85aaf864-fe36-47ea-89fa-ed464f8707da",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0ee4c84e-bd34-4e20-bdb1-e1ba3d3b5e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516127e9-64af-4ff6-93c5-46b7e5c4978d",
        "cursor": {
          "ref": "ea239847-b901-4db1-aec3-bc360ba9b306",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ece95a94-0312-432b-b66c-2bfb440f5720"
        },
        "item": {
          "id": "516127e9-64af-4ff6-93c5-46b7e5c4978d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5ecb37c5-0660-4918-8010-ccedcd3d9861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88980304-ed03-4215-812a-a7e9d2966be0",
        "cursor": {
          "ref": "e7a87611-c944-4e96-82c6-50cfbcf23d72",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "89c8248f-de82-4e2c-b2e8-c4f12a072e71"
        },
        "item": {
          "id": "88980304-ed03-4215-812a-a7e9d2966be0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "79162fd8-68b5-4024-a138-f95b06151dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1be3f0a-6c81-4d09-828d-cb80065a8430",
        "cursor": {
          "ref": "2880fa93-c2e0-48c3-9c28-ffb168e36423",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "12f50556-d77d-4d5b-8d35-0edb37321ad8"
        },
        "item": {
          "id": "d1be3f0a-6c81-4d09-828d-cb80065a8430",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b15073f3-a13d-44ef-9368-309645b55ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa130bf-80c6-4cef-a14c-58e3fa68cb62",
        "cursor": {
          "ref": "99052650-27ef-4065-a3f8-a7e5706d2186",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "783d500b-ba04-4fd8-9e77-6e5e67af5b02"
        },
        "item": {
          "id": "4fa130bf-80c6-4cef-a14c-58e3fa68cb62",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d17c8382-f598-41bf-97b8-050897e46b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a753560-b665-47b9-a83f-1aef20cb2820",
        "cursor": {
          "ref": "f6132fe4-406e-4db8-be4e-81e4ed787a05",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3558f124-c683-4350-b123-4135212671d1"
        },
        "item": {
          "id": "7a753560-b665-47b9-a83f-1aef20cb2820",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "db844b72-bf43-4bc6-8347-aefabcd57dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3fb390-395c-4798-8089-e6c60c621ab5",
        "cursor": {
          "ref": "d0b4dd3b-cdb7-4a94-abf8-6b715dde5050",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4edde492-bbc3-4602-aaa8-9ade745199a6"
        },
        "item": {
          "id": "aa3fb390-395c-4798-8089-e6c60c621ab5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8b3d50db-6328-4aaf-86a4-cf1822819d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef03fe5-e36e-4f63-9bf4-d1debd3b4f7a",
        "cursor": {
          "ref": "e1150c1a-e5cc-4846-b89b-b5be66ada8df",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b89d880e-6baf-42bf-a9a6-f27ef28432cc"
        },
        "item": {
          "id": "1ef03fe5-e36e-4f63-9bf4-d1debd3b4f7a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fd3734cf-cc64-4c61-99c6-e6dc33c9f9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f0d629-5988-4ce1-b188-b7f258d0fa42",
        "cursor": {
          "ref": "8d625fa4-c364-42fa-a21d-f1dbbbd5664f",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "74c459fc-cf43-4d42-958d-f6342187ab0e"
        },
        "item": {
          "id": "22f0d629-5988-4ce1-b188-b7f258d0fa42",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f87e4c91-c489-44e2-a602-b66d88cbdc12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e228224-7119-45f2-b487-ff1e04476b1b",
        "cursor": {
          "ref": "7a9450b5-67db-49d2-be45-8f5e93978e48",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7ffc46c9-6e75-47e6-b55b-b3b45e1a23b9"
        },
        "item": {
          "id": "4e228224-7119-45f2-b487-ff1e04476b1b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "231863e6-3cff-47c1-b97b-b807ed24a017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ae95e1-723e-471d-a244-2162af5b346f",
        "cursor": {
          "ref": "167daf62-eac0-4c89-9c71-46e2e8069347",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b8d7ab9d-6c2a-4c43-9139-550e729d2e58"
        },
        "item": {
          "id": "92ae95e1-723e-471d-a244-2162af5b346f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0e4a6a7f-e510-4287-a8c9-1879f515fde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb7b935-2464-4042-bcd6-ff69e214f7a0",
        "cursor": {
          "ref": "5a19e14e-3927-4a70-bcc7-62bc358b506a",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "de345296-bf25-4f27-a2b7-db55e8b06b9b"
        },
        "item": {
          "id": "9cb7b935-2464-4042-bcd6-ff69e214f7a0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d8fdf7ff-81b5-4eb3-b90e-494121237c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd99227c-4a52-4514-927a-51f967181069",
        "cursor": {
          "ref": "83b4f14d-8f50-433b-b307-4b4ece6cd270",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c203f81f-3134-4be9-86b3-01604485d8e1"
        },
        "item": {
          "id": "bd99227c-4a52-4514-927a-51f967181069",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4eb044e4-4574-4628-87f2-9e1995cb8b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5887ab-e1eb-40b8-97d6-92f7bb6ddf26",
        "cursor": {
          "ref": "f5880cde-56d6-4732-9d1e-a17e79ee398c",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "37a79c9e-f7ba-4ae1-a9ca-9210705718cc"
        },
        "item": {
          "id": "6b5887ab-e1eb-40b8-97d6-92f7bb6ddf26",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "690e4771-089e-44ac-8fa3-0afd7138c45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ff0481-0ed5-484c-97aa-8deac2347440",
        "cursor": {
          "ref": "d9ae7e3b-f54e-4c68-b901-717bc9fac5fd",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c4849353-cf90-4e3f-b392-c3e7211c8254"
        },
        "item": {
          "id": "06ff0481-0ed5-484c-97aa-8deac2347440",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "62764268-1779-4d57-9149-2fb0de8e7418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8973531e-f242-4f42-89aa-ecc843a9b462",
        "cursor": {
          "ref": "a2f96b50-04c5-4ea6-9d6d-879d2e5c9981",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e886f126-ea2a-4725-a122-994c94b60bd7"
        },
        "item": {
          "id": "8973531e-f242-4f42-89aa-ecc843a9b462",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f38cb1b1-447c-4e1d-8eb1-0b0a63f4850a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76b09ab-a6ab-44de-850e-1ee632d3458d",
        "cursor": {
          "ref": "6f6159d8-9a48-43f2-880e-b82fd6654309",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "18bed589-29c1-44f6-943a-40c8330dac0c"
        },
        "item": {
          "id": "a76b09ab-a6ab-44de-850e-1ee632d3458d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0a193242-51c5-4030-bbe3-cf0faf182e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a60c411-48be-4233-8a81-87e6f59a1878",
        "cursor": {
          "ref": "f9e9d606-b65b-4a4d-aa5c-5fb5a12265d6",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "13cdb861-6687-48fe-9b91-240c5e82beb3"
        },
        "item": {
          "id": "9a60c411-48be-4233-8a81-87e6f59a1878",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7d7e6c3c-4721-4e76-b6fd-a4f8edd1e4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69206a3-c7f6-4e60-b937-17f93350183e",
        "cursor": {
          "ref": "150b90aa-dff0-49db-99f7-8d23d2d6841e",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "60a7b61e-6f7e-4197-a816-dce2cee2bdb0"
        },
        "item": {
          "id": "b69206a3-c7f6-4e60-b937-17f93350183e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9d5ebc57-0958-44e0-bd53-efe67d414592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24343a5-3f43-453c-9910-778b4249d3ac",
        "cursor": {
          "ref": "cfcb378f-85be-4cff-97b1-4f572d99c01e",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ceeb7476-bf44-4e5b-b7f3-7d3a924ad9aa"
        },
        "item": {
          "id": "b24343a5-3f43-453c-9910-778b4249d3ac",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ba0bad4c-22fe-40a5-a08b-8f12549ba6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054dfec0-5129-4c4a-8ec3-94e873dd3aaf",
        "cursor": {
          "ref": "3e886b72-eab3-457f-b9f6-3f887f4e31dc",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "41b0f823-306e-46dc-8d29-c35703631fdd"
        },
        "item": {
          "id": "054dfec0-5129-4c4a-8ec3-94e873dd3aaf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "713331ba-fd27-4b13-90ae-a44f39e78e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6bf991-2978-4662-8981-e6aa525c7577",
        "cursor": {
          "ref": "e98a6d58-e606-48a5-a68f-09b85ecdf3e5",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "42abd89d-63ba-460e-978d-428a21e58a01"
        },
        "item": {
          "id": "4f6bf991-2978-4662-8981-e6aa525c7577",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "99a1982b-3011-4edc-80c7-183563737ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53368870-50fe-4743-8690-102b0f03debf",
        "cursor": {
          "ref": "35f052d7-b80f-4f8c-84a2-41ff71d5f334",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ac4572c5-9c90-4501-81c8-ab5241a52e77"
        },
        "item": {
          "id": "53368870-50fe-4743-8690-102b0f03debf",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "656f7b7f-8ede-46be-b332-5542e2022c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbca9ee-759c-438c-8c5d-812cf2b08ccb",
        "cursor": {
          "ref": "5c1694cd-0dc5-4f67-80db-ffd729e7ff66",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "92247b5e-9d3d-412b-8b87-0a214870d306"
        },
        "item": {
          "id": "9cbca9ee-759c-438c-8c5d-812cf2b08ccb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "909aeeae-53f3-46a7-9a64-22c6b5d68c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be3a150-aaef-441f-87cb-b0a24e667aa0",
        "cursor": {
          "ref": "4d7534f7-f79f-4e1e-83a7-16264359f07b",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "cb3c7a3b-e370-43e3-b8dc-698dce41531d"
        },
        "item": {
          "id": "9be3a150-aaef-441f-87cb-b0a24e667aa0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fd076c20-a4c4-4d8a-aa0d-447c2b4dd54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf083c79-9b5a-4c0b-9dcf-af39351cea1b",
        "cursor": {
          "ref": "da9fde7e-9ee6-4b2c-b779-9fb38906b09b",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e5fb1f9c-7fdc-4495-be53-e8b7963bdd0a"
        },
        "item": {
          "id": "cf083c79-9b5a-4c0b-9dcf-af39351cea1b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bcb8062a-8f82-4044-867a-e6ad080978b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26908a9b-7ee2-4fdc-b178-b44d7722651d",
        "cursor": {
          "ref": "ccb11bc0-4ed2-4e6b-9f1e-bcc31b192746",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d7369c35-bb56-45dd-b276-5689987523e3"
        },
        "item": {
          "id": "26908a9b-7ee2-4fdc-b178-b44d7722651d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8ceaa44d-21fa-4e50-a59f-c4d69c038fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26e7e87-3238-487f-95f3-9e70a574e0e9",
        "cursor": {
          "ref": "9d1755c7-a12a-4127-901c-c61ec56003fe",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c00eb085-b097-4eb5-8c0f-ae35313b7cb9"
        },
        "item": {
          "id": "d26e7e87-3238-487f-95f3-9e70a574e0e9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1f5553f3-fd9c-4d3a-ac4f-df1099b3f75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598553b2-31af-469e-ba3b-692aa5c0f0ff",
        "cursor": {
          "ref": "c3b7e9b9-da3e-478a-a415-c9b46ae382eb",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8376ede5-90b2-450c-996d-b5e4d940d9d1"
        },
        "item": {
          "id": "598553b2-31af-469e-ba3b-692aa5c0f0ff",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6177fec1-262c-40a2-acf3-2a304db540f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b029329e-8c88-4dc3-a002-acb736a6ad49",
        "cursor": {
          "ref": "8a346594-2c1b-4c0c-a865-35980c2a1549",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "052c86d6-af4b-4916-a547-6b06e9deb3ab"
        },
        "item": {
          "id": "b029329e-8c88-4dc3-a002-acb736a6ad49",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "71bc3742-8486-406a-a7f7-936ed95d0f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44d06ac-8758-4e0d-af60-2d5d8acd1a63",
        "cursor": {
          "ref": "cad4942c-cacc-43ce-afa0-218ff72c3ab7",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b8932888-db22-4f78-9e6c-6fa630bc9c31"
        },
        "item": {
          "id": "b44d06ac-8758-4e0d-af60-2d5d8acd1a63",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "127b1b7f-7283-4212-91b4-556123a7db37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed670bc-9719-45e9-9862-c78ac98bcb70",
        "cursor": {
          "ref": "760d8e59-5e7d-4d23-a4d9-4df0cfd89dad",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9a36f122-c518-4a81-b835-8c2a1f3fa79f"
        },
        "item": {
          "id": "1ed670bc-9719-45e9-9862-c78ac98bcb70",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2a4e9efc-3825-4fab-82ff-5bc5ee95fb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33315f06-f8a7-49fc-a070-a7039635652c",
        "cursor": {
          "ref": "58d31265-ce81-41ca-a096-1b4ccb4a7be5",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "07a26467-a789-4263-8f89-f9c19db141a2"
        },
        "item": {
          "id": "33315f06-f8a7-49fc-a070-a7039635652c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "399c8320-ed90-4a90-ae91-d3dc2874cfb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0467ca9-868e-4cd7-8169-cce377b3d784",
        "cursor": {
          "ref": "63d2809a-db0e-4d08-a70e-fd32b2cd0a92",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8550201d-55dc-4519-80dc-5e014230e37c"
        },
        "item": {
          "id": "b0467ca9-868e-4cd7-8169-cce377b3d784",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cc78ce33-81b9-4d26-a3c6-b80046e95521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d029164-eda1-40e0-af8b-b59534962060",
        "cursor": {
          "ref": "2dfdfeaf-49a7-4303-b43f-adc50a3443f2",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "17d2dbd1-692a-4ddb-b4f5-151fefb1302c"
        },
        "item": {
          "id": "8d029164-eda1-40e0-af8b-b59534962060",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a3d4eb59-26e5-4c11-bff3-981048faa079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372399a8-0f55-4572-8d93-8cb7c764a991",
        "cursor": {
          "ref": "ec12b5e1-d503-4ce2-9f98-d61c33077b7f",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e3c3aa85-1c47-4730-b594-29b7e822461a"
        },
        "item": {
          "id": "372399a8-0f55-4572-8d93-8cb7c764a991",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2148414e-8f91-4be8-a1f3-938c9161469d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e83bd41-b235-4f8f-9096-53aa1c715d46",
        "cursor": {
          "ref": "30424ad0-20ce-43ea-940b-e0bef1401454",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6678bfcc-3c1c-4bc5-a118-bbb078338466"
        },
        "item": {
          "id": "0e83bd41-b235-4f8f-9096-53aa1c715d46",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8bbefdbc-67e3-43c5-907e-c75a7efd1040",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e51bfa-32b6-4852-ad1d-f64256e01ead",
        "cursor": {
          "ref": "30bf17a5-30e6-43ee-b482-f365cb331297",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6c8b2e4c-7149-4296-b144-d2d06241bdc2"
        },
        "item": {
          "id": "f7e51bfa-32b6-4852-ad1d-f64256e01ead",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "cdf129f2-a0aa-4f47-80da-9b493204ca2c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 382,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0bf170-6e25-4f4e-8753-db874fb71108",
        "cursor": {
          "ref": "88542fc3-4a30-4d89-9678-5e8a90e41b42",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "291910dc-d7a5-4a70-959a-bc2ca0dba71f"
        },
        "item": {
          "id": "bd0bf170-6e25-4f4e-8753-db874fb71108",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f6b4f5a8-2329-44c1-8608-246f40afd699",
          "status": "OK",
          "code": 200,
          "responseTime": 486,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d1de36-8f71-492b-95c9-48795f642d41",
        "cursor": {
          "ref": "82d7cccc-f5c9-4788-927a-f370d7354ce0",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d43f9a43-ef00-489e-9cb2-237048db206e"
        },
        "item": {
          "id": "22d1de36-8f71-492b-95c9-48795f642d41",
          "name": "credentials_verify"
        },
        "response": {
          "id": "85d35940-c223-471e-945d-31c0d7d9551f",
          "status": "OK",
          "code": 200,
          "responseTime": 2152,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7be289-797f-40f1-b414-61b0112e7ab1",
        "cursor": {
          "ref": "04ff7f6b-b187-4778-ad28-db490cac7a51",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0f9e438b-7e5c-4691-bf3c-db49750322f1"
        },
        "item": {
          "id": "bd7be289-797f-40f1-b414-61b0112e7ab1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a047ac00-53f2-4a92-b7ba-390b3bd2a85c",
          "status": "OK",
          "code": 200,
          "responseTime": 1814,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a7091a-1d44-4c22-9d74-9f5d9378e1c2",
        "cursor": {
          "ref": "c87ad76e-ba4a-4b3a-ae88-370045a90a5b",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3e09cc0d-69d5-42da-97fe-67b9168a1392"
        },
        "item": {
          "id": "67a7091a-1d44-4c22-9d74-9f5d9378e1c2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "82ece473-ebc2-4694-a403-8122bf77e45f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a7091a-1d44-4c22-9d74-9f5d9378e1c2",
        "cursor": {
          "ref": "c87ad76e-ba4a-4b3a-ae88-370045a90a5b",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3e09cc0d-69d5-42da-97fe-67b9168a1392"
        },
        "item": {
          "id": "67a7091a-1d44-4c22-9d74-9f5d9378e1c2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "82ece473-ebc2-4694-a403-8122bf77e45f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a7091a-1d44-4c22-9d74-9f5d9378e1c2",
        "cursor": {
          "ref": "c87ad76e-ba4a-4b3a-ae88-370045a90a5b",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3e09cc0d-69d5-42da-97fe-67b9168a1392"
        },
        "item": {
          "id": "67a7091a-1d44-4c22-9d74-9f5d9378e1c2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "82ece473-ebc2-4694-a403-8122bf77e45f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f570066d-27af-496c-91ec-7222b600423c",
        "cursor": {
          "ref": "9354f867-237c-46c9-93da-3ba8ff5cdd02",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "14fd19fa-c847-42cb-999d-2d6f8405a913"
        },
        "item": {
          "id": "f570066d-27af-496c-91ec-7222b600423c",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "b5b9555b-ac0b-4c2b-b025-e8ef429ca83f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 374,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc7c73d-85c9-4222-8344-6cd887ce6aa2",
        "cursor": {
          "ref": "8486c454-94c4-44e1-96fd-8c0617e2e0df",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "281519a5-210a-4f38-8dd2-e0dbddb7936a"
        },
        "item": {
          "id": "0dc7c73d-85c9-4222-8344-6cd887ce6aa2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "23df215a-f9e8-4ae0-97ee-a26e3854ae6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc7c73d-85c9-4222-8344-6cd887ce6aa2",
        "cursor": {
          "ref": "8486c454-94c4-44e1-96fd-8c0617e2e0df",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "281519a5-210a-4f38-8dd2-e0dbddb7936a"
        },
        "item": {
          "id": "0dc7c73d-85c9-4222-8344-6cd887ce6aa2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "23df215a-f9e8-4ae0-97ee-a26e3854ae6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efb6028-d15f-443d-a542-a9a00f8dc984",
        "cursor": {
          "ref": "d9511297-ce7a-4a1f-a9c5-c47236eaab34",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7b9283a6-82b5-438b-88ec-52dce9a5936e"
        },
        "item": {
          "id": "3efb6028-d15f-443d-a542-a9a00f8dc984",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "86e603a7-318a-4e89-ba19-bdebbb712105",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 571,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d60874-3c1a-436b-8be3-5d4372e69237",
        "cursor": {
          "ref": "8fdbb7f1-e53e-4b24-9373-a03a8c073b2c",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ca4d2dd0-46df-4276-ab91-c1ca2748e011"
        },
        "item": {
          "id": "34d60874-3c1a-436b-8be3-5d4372e69237",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9ef678ca-da42-46d5-88fc-e412464921f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d60874-3c1a-436b-8be3-5d4372e69237",
        "cursor": {
          "ref": "8fdbb7f1-e53e-4b24-9373-a03a8c073b2c",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ca4d2dd0-46df-4276-ab91-c1ca2748e011"
        },
        "item": {
          "id": "34d60874-3c1a-436b-8be3-5d4372e69237",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9ef678ca-da42-46d5-88fc-e412464921f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74cf8d1-58d5-4d3a-9963-1088fbcd2fea",
        "cursor": {
          "ref": "af2ed172-570d-4200-a7a0-afd5411d08e3",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e2ac511e-c804-4694-b633-f2fde51d9c28"
        },
        "item": {
          "id": "c74cf8d1-58d5-4d3a-9963-1088fbcd2fea",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "3236c934-df68-46be-bdcf-91ed80eb8eed",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 569,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}