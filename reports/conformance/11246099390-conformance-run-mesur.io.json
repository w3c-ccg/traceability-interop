{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5ee2c453-9637-464b-a79e-ed516cb71e13",
        "name": "Clear Cache",
        "item": [
          {
            "id": "29a220d8-d07b-4b8b-a44d-2cf14c410c2e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ffd1bb75-1b6b-4a26-82cc-46c8b1c51f0d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f657fe20-b9ea-42bd-b3cd-9c7cb22e1d94"
                }
              }
            ]
          },
          {
            "id": "0955dac6-140f-4ee6-876a-ddf4510b3ee9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "099d6556-8842-42c0-b642-c115684b11e8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "281a3a97-2695-4e85-8627-380e4f7ef10e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "31f6719d-0105-4cd3-92be-21fbd8f14da3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "788dacff-d6ff-4fab-861f-b0f8c0c00b76",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f573771e-96af-4c73-b05c-1fbaaedf8eeb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f76ac90-62c4-492b-b439-21b9554d78e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7bb5981-20c9-454a-8e00-9e51dff9abb7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "21253009-c6fd-4c91-b313-3e3b6e439ce2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d5f002d7-1afc-4e92-9084-bae68383a316"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4d8f5995-bb10-44ce-9ae1-2d8ea857fa75",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aabad28c-a062-4f54-88c7-36a42f35e876"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8001d4a7-ecf0-4f99-b633-2bf62e796d38",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ba22b339-987b-427b-80bc-5000718fb5be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c22399a-e266-418a-a605-e1cb0cd37ae7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa37d65c-de40-4027-8b93-18220cff35ae"
            }
          }
        ]
      },
      {
        "id": "a28e8063-5eb2-429e-ab64-caf21a1c37f7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4121d13c-81f7-43e8-90e0-f157d0fc74fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d7d7b1df-3da5-489a-9205-4a02efd7a88f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d445c702-f3ef-4783-b3a3-986f8af6c715",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddeee0c-46d8-4dc4-b291-23145fe74298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b09c5e81-60bc-4575-9216-f561b63b501c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89fc35df-6485-4f08-99a1-19c06d12260d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6eb768c-4453-4588-8ef9-cab887ea9065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d5a8d67-7800-47c5-89f1-cadbc8c9943f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6726e6-47ff-44f9-a054-efceea571dd5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f4ec5e-b02d-4026-a744-0eaa4f7b2e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee820402-c886-42dc-b0d8-cce3b2b2960b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5ba28610-bd46-4e59-9c0e-d09640c3e394",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9b217a6-87c2-46b9-82a2-4f909f54def3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b124bed5-ac37-4607-aa0f-d88e1198c1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98742b48-fba1-49e8-a8ba-f52b92095aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8682f601-fc56-466f-9a92-1fe3d3953ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a799a96e-31b9-45b7-aeaa-e45a8929e2e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2a939839-516f-46e6-8f3d-c8243ad729d3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "56a63a3e-872f-4034-aedd-b91d80b2be7f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df9cfb50-2abe-49c9-b0f6-178cebc01e97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "15b2d583-162c-4933-8da2-bc74db90276e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d3a9a13-e7b5-4d85-a556-d2eb9ffe296d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "23cf0fb8-7c50-4fd0-9d4a-f156558ccc8c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9baa62f6-94cc-44d7-bd29-088654439665",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96150e2a-158c-4613-b611-235b48b8d4d6"
            }
          }
        ]
      },
      {
        "id": "7887accb-09c8-4cdf-8c25-a904e4b11b31",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "747531ca-5577-43d0-a7b6-ae743881b33a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9ea7ba7-9e7a-4adb-b80e-edad1edee036",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "de4cccf7-5a55-41ce-a564-2b8b766215dd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3f0ede-799e-4934-966e-714110f84686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6bc96a-3b5b-45e8-867e-9137aa558a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2033142-602a-4ca5-9997-8dc0c9178e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1abecaf-46db-4565-adcb-1ddf5c1b15f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8563269-2e81-4857-ba7e-a9b9d5b78101",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1683936-b807-42e5-bd43-c6ceabc249e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68051bb-13fd-4a63-8601-a154632c832e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88d0f1c-7021-4d19-a11e-0dad67951023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b117ff88-9368-4884-b8f5-f12c7fc34788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1ea622-0200-49b2-8248-a6f069a18dbc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d613a8f-0bba-46d9-b7b1-cf2b8f8c0909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad5ce17-65b2-4c30-85fa-5cb9e6dd9b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029e62ee-ea14-4d16-b863-9fee444f8a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29c6502b-be48-4dc0-81cf-1752685c2766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823871a3-b1d6-40d7-9c0d-8add8e43d71c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd54e96b-08e9-465e-b23f-697d6e17b48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11f7c40-42f0-47b9-b741-49420ea59e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d88dae5-1947-4524-b5a3-a1fdb4a47e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30d07e35-c4e9-4955-9cc0-81967ebfa14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e7043c-e39d-4acf-afe4-525812d38445",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede35284-a48b-42bd-9bf9-01d89debe5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d4e6156-1c51-4002-bd2e-66b4a7c3d4db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6da9b3d-0771-4ec4-8f66-a2ea7c1a6bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ff4427c-cb72-4b11-9793-47a7ce32dce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2ca076-7ac5-4a93-98cb-316dd1c23412",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df6ccd7-b48d-4bdc-9bd2-7c79820cec2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962e2df9-38dd-4bf8-ae66-fa2409122b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f5f0e5-ffc0-4a68-9550-cbdd33cf5a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fc61a4f-f0d3-4257-b034-ba3c81d0b368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fcbaef-d6b5-477d-98f6-5808ce881d3e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823216b2-20d5-47c5-b642-e1a15cb406ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eed7218-755e-403c-91e6-62397b18cf50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6f11eb-d1fe-4e9d-8a8b-1eb88998723c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13b1eece-e067-4b5e-a414-abe5b415f188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746a8f8e-e046-4180-85ea-adaf8fe9aee7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc09299-eb60-4f62-b926-e4a965e838e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db89b58f-92b5-4ede-8b09-2f521a9ed550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405c67d3-a589-4d65-918c-ce96595234eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "218bef3c-bb4c-411e-9fe7-2a3bf71914a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93369672-9c3a-4690-822b-7c93dedfea56",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02edcff3-2dcb-4bef-b119-f9cfc107bae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69521745-47c5-4999-a14e-f9b415fa23b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d72cd68-c654-44ab-9c8c-08878cf693f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77a39d8c-3e47-4ee2-b4cc-583161d1d58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9831dec8-5c50-402e-91bc-8a720f9bec32",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4066110a-b32d-481e-bc15-c6d9ed8a6141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0eafc2-aa83-4d7a-8884-1e072d93ebab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014aeef0-a29f-4ce2-8d05-96ff0d89c97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6aab8b96-a460-47f1-803d-d4e2af644ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47cb5d7b-ce37-4317-a498-1b3744dfd926",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc77bbd9-a267-4cff-ba20-b289b2ab5ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2861b36c-830c-4d9c-a1fa-180ea039948e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a985a096-4bad-45aa-b082-9889d4efd475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ccf45d2-7522-4ca4-9c0d-dbe754e5a297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3055fc8-0215-4ac8-b39f-9eb49c2ba6d4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a6d38f-dc88-48d0-95c4-c626156b1151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e87b278-3f3c-497e-959e-ae9f3dd4ae49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2b5d95-04f1-4843-b17b-feff3febaa88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f55e2f2f-976e-4a00-a907-9984ca960793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632d27eb-70e3-42bd-a7b3-639c26a66eaa",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f146f59-d176-443f-82b4-025dd6d5a5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3915ae-4c27-4582-8ace-6c884baeaebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdda49b8-8342-42fc-9bd9-2bb573810fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab70584c-7dd7-464f-a145-de304d9517d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc17a4fc-a736-44fd-863a-b55ad01eaf8c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3b566f-caad-4a2c-8fa6-e1c3b1be870d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a17cd7c-780f-4777-91c0-8aaf20c6cbe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e11915-3532-4b4d-a355-49e3f9413617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6eaddeda-0741-4817-b4af-fa51f3b7751e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08489521-5408-489e-8dbd-760847ef9c88",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672e8b8a-5b7e-4cac-985f-89ea22326d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ced11c-5c58-4b43-9d1d-44653e48a5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9be5f31-6655-4933-aa51-bd7ed2bef67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad2fb0a4-cdf8-429f-a450-71dd86abc157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea3fa7b-882e-41c1-967f-db1fbe039288",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cf79b0-f88b-4ab0-89e4-7dce8bd3afdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb312dc7-1c56-4495-b72f-6c8a77fcc2a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54dcf7a-a474-4f84-b9af-7e91f1b6b894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a06438b4-2089-460b-9818-b8af88db9abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88761608-c358-4311-8c39-c2a361c9d7a8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52137a80-b127-405e-ba54-ae327ea0ef4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8703a94-5499-4a86-91a7-fb642115e011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86058580-6b33-4725-b6ec-3363bcc361ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bef8ae77-1bc3-431c-8258-226b21c557a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b6c082-d592-4597-8026-e1573e9d6802",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c33519-1e91-4ca4-a5cf-06567f991e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0383d2b-597a-41e3-aaff-44963227e46f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd449ae-cc2c-4618-8329-b1bc7f54c537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "51b2c25d-d956-4917-88f5-dd8a5a236e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c94873a-5c33-4040-8f2a-7f5ab590d5fa",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8706d576-a415-4c87-9d79-23d47b5b6e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "602c79d0-4a36-49c0-89fc-b879152e5e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa21b5b6-c772-43a3-9cd8-fcf98b404ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc39c68b-0073-44c1-bfba-235c5ce0fff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0bfbc2-2f6d-4967-bfef-1d269ff0a835",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c20f65-ecff-406e-aad6-04516ab37a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a172ed-298b-4cdc-8b1e-b6151994d906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d915d97d-bc8d-4b7b-9361-8fb1aab87c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a005436c-1a94-4ba6-8346-b53a0e7f9735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692085b6-b0e9-406e-b796-3af21c79775e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264ca299-3e6b-494e-a16e-8d087cc376ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9290aacc-d004-4d48-878f-1927c8907242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be2ec51-4393-446a-ace6-38ff467156f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42ed9655-25bb-47a8-9e82-fe2cffc71529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e44cbd5-3b3c-4d03-8df5-405a819934a3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4a419e-4453-4b87-a070-6333e5c4d868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d2db5d-3b2d-41e5-9c0e-9e6018a3563f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ba5e2b-ec97-4a4e-a69a-58e1fe6bf0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "91ff841a-73c3-4362-81d2-78d7975a421a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34cba26-1297-487a-b005-f8ba06aa3847",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ede831-f443-460e-943a-547b59c125f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd411bd7-adc1-41af-a835-b3188b9eb70b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfcfc8e-3bcc-46ea-a5f2-8a36151a988e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0736bc13-cbb6-4fe2-b7b1-f3a3a8982f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a384871a-73ed-4998-a517-87a4c84306f2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2626b8-0cdb-4a34-8130-f3fb1c2e3a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2c0cd4-af3c-4908-8800-edff7a955b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb34396-36f5-4b10-be3d-d0f7181bc6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "98de2c3d-e24a-4cad-aaee-71f9bc518d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58e4328-588a-4625-8598-a7880b7e0fbb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa71094-7832-41f2-b258-d76117bb54d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e330b1-5c9f-4fed-b0c7-0a435dc9f240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb42d5e1-4194-46c5-bbd2-8240cf31007b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c73d1c6e-0890-4e0e-b8f1-f7c66ce74df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084e4e86-c877-4105-a682-02b1f408724a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54670de4-ad7d-49ac-9563-6cca15c33850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ffa0f25-6103-4ee3-b364-3d0c07b163c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5ac646-eb74-4730-87cb-c382b124f712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6591578f-d0c4-4888-bf64-d871cfccd8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ddccae-8330-43b8-9a4b-be3b193d8fda",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d87b423-5d9e-4307-be0b-bcaaac79ec08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860528d8-4080-49fe-a4de-4de8a7c9c64a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c85445e-f675-4665-bf8d-fdf6ecb31b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db7f8cbd-f8e0-4441-bbfb-9884541b65e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba90ef97-ef39-4ccd-81f4-9c7895c3f81e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fbddee-0a0a-4617-86cd-c852fd0c479c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e866c9-7549-4228-91bb-d58fa37adbfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23af1d5f-707d-4297-8ccb-6ab8511526a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea13e7a-770e-407a-9095-0fd92532ab5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8da97d-2adb-4e9f-b9c4-95f3f35740bf",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2ecd4a-eccd-44af-853c-264e61338788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343fcf2a-0106-4dcc-b7fb-6a84ef88c35a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f1ef7c-7fe7-448a-9b07-d5a53e9a212c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "112be7a8-e77a-4485-b571-cf00e5ef9ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3ebe3b-add7-4295-a103-cba4df7513dd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68bde08-7236-4561-bb40-c09d12baec88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754fc346-2c52-47e1-98ee-a2bef7526029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d93c8cb-e8d4-42dd-9f90-983395567d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "67504127-42c1-45dd-99a4-98686f7789e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0335160c-c543-4a3c-a993-0f521dab9dec",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d253aaba-d9ce-4872-aeac-1ec16e46fd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb93a010-632b-4d9a-a1d7-52223588f44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f21acea-59e1-47d5-887e-6279d4bd6ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dff5f8fe-7106-4418-a4fa-9bdd7d672616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb67053-c82e-484e-a912-2b8fafc447e6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086c0d8d-04f5-46d6-bb3f-2363bb367a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5819f9-a769-4bfd-9379-8d68977898ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13c0995-8831-42d9-9e87-0f79a658a71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cbae9fc-1ff5-4f58-8c1b-67e9969c6920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0418f91-dd3a-465c-bfcb-a8e66535eb4b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd907e20-703d-4e30-9bc1-a6ae52a71aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f838b4d-1464-4d71-a01e-6e48b60bc3a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ae8810-66df-4f90-85b5-2bed1aecf788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35f7ead6-f346-44c6-abf5-671ea817c0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d457d52a-7b89-44c8-b239-dd868a01d0ff",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b8cd05-4cbc-43a4-bb8b-2ad711ee311f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae1e8db0-2459-4dfe-adec-51510e7d4242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106a0e42-9942-41f8-83bb-15e0a5ac3a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93ba1be1-0720-42c2-81e3-728edb2ed2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa02ed2-9160-43ee-b6f3-deb53fef8bed",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55c8c80-d12b-4032-9d00-834cd32ee4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757788e7-d6e0-4013-a063-77fcac13ea73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34480005-01a6-455e-afc3-d231157a5bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0043d49a-b358-4c7d-a05a-e623e830fad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae171d6-7951-4f5e-8ef0-b07fa2860c8c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce25a70-5e72-4380-85c9-f63d944939d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d8dffc1-e4f3-422c-9b73-7d296108379e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a07d87e-7031-400c-b2d9-ee79963a30c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3d6c2a-5835-418d-9c8e-f4b4395097cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7dbf7c1-b7fd-44f6-80bf-809d626b8840",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139a585e-c6dd-4c67-ba52-db127863cea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc6ed222-385b-4760-bff7-238a361d0724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1095b151-7eec-4c25-8c68-0ddf44af38c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48923019-4f71-4422-af34-93dc55a85ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a45ac63-843a-46e5-a220-be8d5835573c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f775876-92bf-44c9-8998-f98bfefd9ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fbda62f-1e60-484c-8160-260e9d941574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8d0920-9719-4edb-95fd-e5bc27d97efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e50aad-6534-4cf0-aaaf-8c1ee3f6c7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc1f6b4-6042-4654-8b22-1a5106dcb1d6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a79265-ffd9-45d1-9ffa-38538540db2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "587234c0-498c-44ee-b01e-2616d462ae68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5e76a6-d890-48a0-a4a9-f322093e6378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "55536796-194e-4055-9bc6-0ffe6c7b80e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6f49db-d342-46d4-8ed5-dd714ac1e618",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f329c3c2-441d-461f-a498-be43e767c34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dfd2a21-c239-4de8-93af-2021ccb76c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb5a1e3-154e-414b-a50b-0ab5c33de7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f5ffbb6-c954-42b4-9a5f-1e8a7868564b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97cb574c-24c6-48cf-a431-bba508b3b142",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711db17b-a061-4b19-8b14-58c6ee6a6f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ec7557-6099-47af-9865-13f5ab923029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daccbc0e-c6ef-4b4c-9618-8b29164e62f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a43d4c68-1e4a-40e4-9703-4f1811589f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a67c731-bcd1-4c9c-8a59-af84600d5b0a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024bd954-417f-4b6d-b800-b4dde68abb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4242c1-bb1f-4bf3-adb5-b1cfec293278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcada7d-1aa2-4ad5-9999-6d1ea53f5040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1151907b-3886-43ce-b244-b692a5f57428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d5477f-1bde-4c2c-8b7f-2364f338edc0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0b97fc-ca26-479d-8964-91526de9d560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de323aa5-1c2d-4456-813b-0fa4621c15fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5542b4b-64aa-41a8-98c2-9372a3bf452f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "419f34e3-b6f2-4e29-8cc2-a29210d25cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5729bb-40fc-4e63-94ef-8390b271219f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d3345a-6bea-46a0-a50d-4b00d3b78b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca908e5-af43-446a-8f8f-735b90ac38ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792c7be7-7214-4d96-b2eb-104a9afb7b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "120fbf5b-f05d-40fa-a996-1721cb4571c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c119e66-a1bc-4fa3-a9aa-f3e3d500c021",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b36221-6b9a-4a4f-9e98-715886a55952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d1ade5-d121-4737-ad77-430eeffe8a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4c82fe-79f4-4b41-9ea0-e8a272d583b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3178c0f-7683-49c6-b69e-9a3de2ac3597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f6502d-b933-4f7e-a9d2-140d14ac845f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8af815a-419b-474a-94a0-e5e5051900bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd4a20c-1a27-4084-8538-067dd0b08c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d590388-dcdf-42bb-a7ca-2c680780bd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7fd31f9-48a8-45c5-aa74-c4a3cd13f32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a878d97-40e1-44b8-8b30-c5cbaa5ca56a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b7162a-dc43-4875-bf6e-54dac275d19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4dc989-4001-4233-92ae-c3b28928677c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ace7fc-efc6-4487-a4af-8df88b86bcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d71f24f-0c31-415f-9948-eeca13462d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9419513-fee0-4bcf-ad8a-907c87542eb3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd69b05-56c9-4dc1-89c6-d44266b451df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34982738-3ddd-40f4-aa24-af86b3eb7836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb285cc6-d367-4483-af1e-7418060e9e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7da9d080-8d3e-4efe-b1e0-a0f4b40097af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611f47e4-26e7-4d3f-8f6b-05421b2ddbc7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32200c03-438b-40be-ac46-5d58ac70e235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5418ed4d-ca16-454f-bafe-99f1e112f768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fae266b-3679-452f-86f0-6f89eff86442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "494c7999-d5bc-439d-919e-cd606b45072c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448358fb-ad11-4077-9c95-a88b3162c342",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5076e3-2bda-40a8-8506-49ba65570447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77f7714-490a-4af0-8f3b-514f8660d171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837a1ae8-697f-48c1-9eab-4101b8db59c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7ab633-aaab-464e-901d-ea5f01e49d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e3f964-1fc9-4865-90f2-6d34f265c027",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03e82ae-8981-4864-aca5-f4497ce4489f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cdc6258-51bc-40a0-a8aa-05b1d24a24b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc63243-efb7-45ee-99e7-cdff932acf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8aba062-4480-4139-b65f-88cec229fb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415538c9-a874-4566-a5e4-8ec58a914fa2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454a03d5-50ba-4e35-ad9c-c3f5083ee2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60560ba8-eeec-495b-bcfb-17683928f0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce3b5be-8419-4813-bc32-ed694c0ca89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "82969909-3449-46cd-aee6-b5d345035892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1717355e-7fdf-4028-a8d1-871d50cc0558",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af3d8aa-5a16-4ddf-b0bc-7bd41af6474d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c04c5f1c-b0c8-40ca-9c61-1680db6ba53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c03807-02ce-4412-8abf-0a77efcbddab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd52fb9-712f-4148-bb2a-d9101194db24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9ab5a1-f8da-4eef-9b50-1be02f499b3e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24bff8f-48d4-4392-a72c-991cabd73583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b79fdd-702b-4be8-bdee-711527e5a7a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650a1795-0564-41a8-b8be-82b3be450be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e44b7e3-0a1e-4e0d-9e4f-551b765071e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10aa13fd-e5f0-45d2-b04a-43a406047d50",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1788e8a-a866-4518-83df-0784bbb3fb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1aa210-f264-4154-9d14-ca03e42ccd1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddc166f-d268-49fe-aa99-8dd0acca2e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eca19c98-bbad-4f74-988d-d4cd9864cb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae9c6bd-d035-4834-ac97-03d24a820d8a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6011a5fb-3cb6-4e62-b88d-825d2fb7df1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc296a89-696c-4133-879b-9f90bcebcfeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000a2f43-7729-4fcc-84ab-dd23a41c4a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4fe31324-60c9-411b-a816-63fea6f5ae45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c44bb5-1283-49eb-8032-e7fff3b6d774",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1345b8ed-d614-4996-8c3d-d43c14e8999d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad18b46-4bdb-4963-9a16-53184d9c6037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c72522-1364-44c8-bad5-a33975f032d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e43b5e6-9c6e-4c58-8206-c873cc8d890a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2700f1ce-0d12-4aa3-b106-72d9cffd0fc2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa5cd8f-e863-42f9-a782-e4e1e0d74be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4586f0-a0fa-4880-9761-d5426d948158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd3160b-68fb-47bf-9a53-5bd52d346ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4553c853-50d5-4255-adaa-0caf2aa8c0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fba4d55-2322-4c1a-8d32-c04c1f8fdabe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9590ab14-626b-4ec0-b7d6-7417d5bf2f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8def1ffe-2bc9-46b0-951d-47e1d50c5ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a71791b-7aa3-4d62-9690-227a79aab31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c415508-e3b3-4da2-805a-5ebb13874dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156fd13b-05a8-4f4b-8e1e-a41653a7725f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0364fd3-21b2-4ee6-a997-786fee80fb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7639ca-7cdf-440a-b0fa-a73fe8721a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80a6eea-824e-4481-852f-fccc9fb276dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1453ec9-d1f3-4659-85eb-4010be3ba4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8686c965-b972-4874-ba44-5f4ea153cc60",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58e3c72-dd63-44d5-97ef-1ebb80136329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a54107c-6fd9-4400-aed5-0b93f5ffe7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df4fe20-4c1b-4d35-8ccc-a0cdfd556a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "39127db5-8d40-4b5a-9269-f86b24e67a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53a4ab5-b2b9-40bf-a87e-3800d2422c81",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3909eb8a-ffcc-45ff-8967-35a3d40fb3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f9b6e0-c3c4-4d2c-8cdd-8fe093cd2229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e243a399-0f16-4aee-bc9a-44ab1f35cf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f32eb3a8-d28e-465f-bbb7-a269b07422e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d1d3c7-a6c6-4a41-b38f-64f06dbe2cf1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec628a07-91e1-4ec5-aa16-d28ed92c76dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b56fb52-26e3-45fa-a9c9-f8da6019b7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea563f6e-844f-4503-a8ef-a9a06d41dfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "daffe2ad-2a07-4dd4-88dd-66ed4f66ce28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262af5c1-8732-4589-a9ac-9f97fa8159f0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc85bf6b-9acd-4584-80c0-dbf21668a4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6c3ad9-ee6a-4a53-a884-1ebe93f6eca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8720de03-54f4-4fc2-acc0-8edf0b5dcd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15e3359a-efd7-46b3-a197-6d410d2347cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb344999-9f3a-4f9a-be97-0e9719826943",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01812c05-d815-428d-900e-8647eb26825d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d2ea65-5276-42f1-a621-690b869649d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22362ad-b443-4984-994a-0f62242e0f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60f3df18-64a0-4c78-9fa1-a44cd6e78440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67714d6a-b3e5-402e-9a0f-457cc2658c78",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7720582f-0bdc-47f8-8121-31f7bc95d135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34177f19-5fb9-4db1-b189-49c1b60142a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33fd489-5121-4625-973f-616428fb9c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a37bdeb3-b22d-4b91-bafc-ebad72f1ab06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea858938-482e-4c02-b58b-e87983a7e6e5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95558d0-ce90-46aa-82db-ef75f026cfb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565c2bde-adeb-4dfa-8b05-454c6c5b0a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96283602-aa3d-4cb2-84e3-43bfc090ccba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4957385-bc96-4d4e-a1b0-58224b3840be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169280f9-82be-4944-a39e-6e8911679840",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29907c3d-b93b-4685-aabe-4970d24529d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdcf9156-21ac-4aff-94fa-51eddf22948b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ee029a-8dfc-4152-b388-4b09ea9a06f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a2629d-4587-4b9b-9718-9059e72d9958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a91de8-9eb8-43f1-80e4-efc3f1a47c4c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d8d6db-3da5-4f77-8d7a-283c21669d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492f4987-ab1c-4868-b9c6-0afd862b1839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf2efbb-c7a7-49bd-8bd7-54701d3e5b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "35476739-73a7-4172-9a35-18cd9c6a2e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d1ce01-9810-4673-979b-83873b397e8a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f184e10-2b65-435f-b336-ad75633e4cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce97bb42-4fef-4713-991e-6a95857a8938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142a60e1-acf9-4049-b98c-a52a09a80d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a98173a3-a225-4b82-8502-05f558c23f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6113d8-375a-42d2-aab8-2349027072c3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a800cbc3-3a63-4a1b-9f71-b4ed8c4aa82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71772201-a9e4-41ca-bc2c-2b9d68e4b3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14b9375-645e-45a3-bdf0-3d028c57b0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f789bca5-6a15-4046-acb0-c3f4abbdd375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6109cf6d-beec-448c-8943-7f144209021f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d397896d-7e42-40c3-9206-8098a94a4c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9569dcff-8d06-494c-b26a-3f917617da12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2e0e9f-34d2-4f51-9889-9049c2d78e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f662bc7-1e91-4fb7-8cd1-ace8e3b49ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de5cdfa-e7ea-456e-a0b1-2db3edcbb920",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abab09ea-e7f8-45fc-a299-5f363c7014de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6ac2e6-21b7-48f0-9643-2b43822e0687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f40087a-2d7a-4c99-90fd-2fb25e5fc048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac8a543-447d-4a91-9f17-43e1b5d3ea54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9559ca34-985d-430c-8a99-78aafcd4ad39",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13dfff3f-7ca7-43a5-8705-740dfda79f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7910a1d-7217-4f9c-8c01-98cd623a7bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780d4650-1d6c-4dc4-84e9-681f8372695a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bf1105-66aa-47c3-a42f-ecfc2356b3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef6941b-4bcd-4858-9c0c-789e49960bd2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225afce9-15ca-488e-b90e-7e895aa0b202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a1211e-4674-414c-8a3d-0b24dedaf39c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523359f8-984c-4dc9-8c5a-c5fb999f2839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e93b9722-21ba-4283-bc79-628f1b017bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5368147d-7ce5-4581-9cd2-bb7bf5892d5f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6e0ad3-14ff-4dbc-a1b8-35f23133a316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087d9bab-6120-4762-a1d0-c9224981dd6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459d8cca-3072-4474-b6bd-48cdec647ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6aabc2-babd-49be-83c3-0d2e8cb489e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632fbeba-d58d-4c5f-9be7-0a9225e04758",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1388dbf-d137-4e19-84ec-39d82b698034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d846ac-364d-4603-a47c-9f7bb0ad1947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca8c949-2647-440a-84e2-183acdc7da06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91dfa14a-7a1c-4bdf-ab7b-bc96b15ec09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66143f76-ad3a-43ce-a8dd-abb0e0466e51",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb4cf64-1263-4254-b433-61805beb2391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80fc811a-d44d-4fa4-9ca0-7b53b8f3fe27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bccabb0-b836-42b4-9fa3-fd82dd1a91ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e85645-ab46-4f49-af61-30ac69b1d05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48f2c02-dd4d-4a01-a211-aeeffb8320d1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fec54e8-9656-4692-aae5-9efdbfb89a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9180bb-fb3e-4be6-9b7b-bcafd7295355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a1f3ad-38ad-4872-a013-211bef3a666a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4514909b-d982-407b-a2de-9173f754ab2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c60b87-e04c-424d-84da-bdda23d46ad6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83005e0a-1211-47c8-8559-b1f7129d01f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed53d257-dbb3-4960-8fad-5ebb21df0c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f396a90f-c433-46ec-b857-2d03e3b11049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "973b8d24-5792-4ba6-a422-a0fe20796876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24e1a45-3c22-437e-9e7f-e3fe305e266f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf05e149-6fed-472a-aabc-43d27282b58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601a972c-19dd-4509-864d-e896c3a2592f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee651be6-31bd-45dc-9af5-de833c37f95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcaddf59-16e8-44b3-b2fd-77f34eea57f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2523387-5565-4970-b756-edfa6febcaf5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d062de25-19cd-463f-88d6-4a28d3b8a366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e99fc7-2ba4-42a3-ba52-5a8fea8b4857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac588be-3855-4e1f-b53f-3db91d9e5636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b650a9-926a-4346-9184-56d2aad2cf79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f11d9e-c96e-4c4d-b142-56cf73811285",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1da659-baf4-4a35-9ab5-550a91220401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9957680b-6592-4e40-8905-f4f93fd7487e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763b03b2-63f3-4b76-9af2-ce82d88f580a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61a4b1cc-02be-4647-ab72-f580acc5f96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf9cb51-3148-41fa-8e7b-62762cd6951e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23290f52-906e-4573-8f5b-f71802aa374b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3656ff6-2efc-4103-983f-90f16c7a1c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d33f6e-24fc-4f31-9e71-42fb2a5ac500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8c83ce-05f5-4b6e-8e67-1017b6d73edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88506513-8d03-4209-9b2c-9703a882c7cc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb87ba40-c36d-41d3-b430-e11d15283389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb547a7-6869-4b33-b88d-92116489476f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1c172f-66d3-4ca6-88de-5b16ae6e73dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e013c07-8423-4be4-94d0-8e1a1a97558b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600d02d5-6077-49a0-8530-8721fe0c042d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1ec5f3-83ad-474c-8bf8-fc14a2c44d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c5940a-0192-4493-b254-92019f871023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77562b89-421f-4194-a174-f1debd8a4611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "662865a7-af8a-46ef-8087-fffdf649bd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8584866-ed98-4950-8968-804bc5113ff5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670f38fc-6a06-4fc9-b2c2-e4ec298fba69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c9f700-8b8c-4c9a-9625-d88052b056a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffbb7e2-4e3b-4f71-aab1-fe45f39d2a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "31a84d8b-2d0b-4848-98c4-67b4a127684d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c09260-3170-4d01-83ee-8b84956db6bb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa20b1a0-3c0f-47fe-affa-b64f6d4d4125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19e8ac9-0379-4a20-936a-2b24201bf74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce641b15-9282-4830-9b61-0878dcc1d66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bee046af-5fd4-45fd-97c8-7f1ca9f5cb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a41e6e6-1573-44a9-826a-8a36557df2c3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113d05c5-70ca-46bc-8cc0-8fe79fa2dd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d4924a-0361-4144-9d96-91e186920ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa02097-b906-463a-8a33-9a3656d92053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba5d78d-9337-40b8-bbd3-174e7d04fdd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28168c53-55a1-4364-b0d6-d7b3b058eed3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b85587-5dbb-43a1-bb7a-9c47d08ce223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a8125c-2ddc-454d-afa3-0c62cfa4c13e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb5684c-73ca-4ece-a8d2-c0ba5952769d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "31b4e3cd-4eaa-4cd6-9988-d2197df62b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63c8ae0-4da2-4eff-b138-3f71552c802a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050f19a4-3e7d-4b94-b88a-5c3848d253fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ebd3470-df88-46c4-b37f-80c5e619a7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd3e4cf-3a0b-48be-8cb9-8484c390d780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8889942c-374d-4310-bddf-6b1e867a6a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d14a13c-d5b5-490b-82b3-69fedc537e02",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655b6a1e-0c61-42e1-9e5b-a6dc4d5d7970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "22bcfb19-e159-480f-a3a3-76264db28931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caab3c28-86a6-414a-b4e0-a3e013461bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4dc5dc1-cbb9-4ae0-b0de-ac8f030dcad3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4c8fdf57-7b00-4868-86f5-5aaea3982131",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c156d70e-615d-46e2-a648-f36d712eed45",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584f1a37-442f-46e3-9dc7-a8b1547975c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eaec7537-9603-4989-a44a-441c15838cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f640b8df-acdd-4519-bcc8-4279c86e641b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43dfc6e8-c8a7-4c3a-965b-fad1cd057843"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6a4b3f9-c89f-45fd-bd68-f30c3ea6b747",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7290bf5e-2f19-407a-9748-ad3daabea0bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e96ff10-5868-4e9b-a7db-92d9204c12f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9853ae61-ccc1-4bbb-93af-571e3456ee71"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5915bc8e-b872-402b-a314-a320327df33d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "587bf3f1-20f7-49c1-ad1b-d1a4a6d45c72"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "380bc3dc-abe6-4f99-87ae-c6b646e929f4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ef7d0d7-dc8b-4f89-ae41-e14b20991739"
                }
              }
            ]
          },
          {
            "id": "955cb510-9b23-45d6-842e-c48d607ea52e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "576366b2-45d2-4787-a5fa-d5d7bcc99de1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ae3311d1-d85a-4192-8f40-6d443c96d9cf",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36b7268-20af-4803-8199-74981137c20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7eae8a95-bcf7-4530-921e-1f16cfa860f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39313624-2d41-4d1e-8765-4daa2ca729e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15206a0-55f8-47a7-87bf-3c931a09767c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5f753f9d-f88a-4310-9134-3b07926aeddf",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1467fb0f-433d-458b-b001-aa2812554e73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "407f0fd3-bd48-4d73-80a0-efe22df8e3f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ff1a491-23c6-4690-af54-e1b2f21679a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "78fe0338-2412-4023-b1c6-bcf102dc2070"
                    }
                  }
                ]
              },
              {
                "id": "ff878646-7567-4009-9e12-96bcdf7462aa",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bebf99c-5cd0-46e5-b2a0-c301d9d8d2be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49fb6e9f-9a77-4663-9c28-924815235249"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23f4cac2-adf6-4b00-9877-4480fd724eb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1966e5e3-2fda-4d6b-99ae-a319d6e5f1a8"
                    }
                  }
                ]
              },
              {
                "id": "46f7c4a7-a2db-4cf5-b520-972f6d77aef3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14c46d66-fc56-4ef1-b2af-0a5781a4fdbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71d50326-37e1-4862-bbee-fbcee113db03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4136800e-c6ff-4615-99c5-8b1d5433e391",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f03ed62d-4484-4aa6-bb31-def36d5c72cc"
                    }
                  }
                ]
              },
              {
                "id": "8ffa3630-f680-4c95-a194-57154152b0d9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14e21547-fece-4ce4-acd3-ec97c804acd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fae73062-526b-41d8-b561-ffa6e445db04"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "659a3d36-63fa-4fd5-b9de-9378a2499497",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a5dd9724-0c8d-4767-913a-1f71dea8e852"
                    }
                  }
                ]
              },
              {
                "id": "654ff75e-d7c2-4f11-974c-0a4eb060975d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6328430-e1b4-462c-ba43-20be1e3d4c68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6a89764-0fbf-4516-b60d-cf63646bc348"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fd9df66-7d47-40c9-a138-18a5f380507e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a2f0302e-6ca7-472b-ac77-77b4a1fe4295"
                    }
                  }
                ]
              },
              {
                "id": "19098e3a-2099-4a65-8a48-1b9463662ef6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d99e9c85-0104-4ee8-bd55-6a1c9eaf2f18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b8df14d-4742-4bb0-b4dd-a31b5f654742"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2caa70fe-2f2e-43d8-98e7-d346553202b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6a97704a-65a0-4c2c-a3b5-d9d768de0cc7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd4edd3a-baa7-4397-a64a-b78ef90728b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c0abe67-bcea-4cdc-920a-3444e07805a4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ae93540e-1fe1-4615-8737-b33bc95c413c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "27e88181-a10a-4324-9388-9976e8a0ab85"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef6a1bcf-19a8-4ea0-988f-646dd4b9dfd7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6da0c5fc-20f0-43bd-9ff2-3743def224a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "578971bd-3f0b-4d26-aa4e-35b0c95b8c9a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e6feceb-3082-425e-ab71-911034663e68"
            }
          }
        ]
      },
      {
        "id": "1088df3c-e1f4-4ec7-bdcd-d030a715ecee",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "aaa8f127-af4e-4bdc-bfa4-2bfe5b3790e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00d6e17d-9bfd-4000-a2e4-9ece8f50808d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8e499406-0968-4876-a6c6-e819b564ab04",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1f83f1-1d6d-414f-9b19-4c717aec303d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90843cf-5dcc-404e-a294-8474242e740d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a4430a-f07f-407e-aae1-77c1c82d3596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "07e016b6-39c2-40e9-9af5-155ef4c636f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335df22b-394e-4a78-bc39-1c51dfb20cfc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395e99aa-5a3f-435b-9e79-7d0e71dbaac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b83f2f-af43-478a-9319-a7a6a8b1f02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bb55d8-74d8-4790-97de-4d4ab568c0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "704f956d-4a8d-4634-992e-12d5dcafb73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761ca6d9-392d-45cc-ba93-916b1998d769",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2de57b-78f8-47b2-a37a-2f95ee97bafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fc9808-0408-48e0-80dd-6206dd61d0a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26895434-b706-41b9-9ceb-ab57be027b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f80aa165-5818-48fb-bbf9-806fb97893e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60e9e7e-a9ac-43a6-97b5-8c7e842b5146",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d53b8e7-a0a2-4c01-bb8f-a0e54ff986d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52f32cd-031b-4113-b336-117c96ae9ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286bf7d4-332b-4a48-a83a-4846eb183503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab84cf0c-f6b4-48e7-9995-1b6e7dcf4aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722b39b5-a4b6-4f73-9671-8d43f46fa11a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16cdb45-a7ac-4a41-8ec3-f5159fb0f0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab57480-e8d6-4d12-9255-f64b3bb1e51d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d82a70e-88b3-4526-a968-d506a052633c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0da9c089-2736-4d6f-b0f1-64588852f6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac847ab1-c59d-4a1d-8cc7-616589bbed0f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5755bea5-c55d-4d57-8306-5400bb04c169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d7bd848-e0f2-4bed-b19a-70f50b2e95f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e7a957-10e4-48ec-8881-ac7fc0c0339d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "462744f7-b9ec-4a81-8510-8cc9ff6e323b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56ba120-5b0d-49f6-8ea6-38768c798028",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bc68ab-ee81-4564-8907-77c5268ca936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "063e221c-350e-440f-b4e9-f2b2b135040e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fed9f3-f24a-40ce-84d1-810f1518b96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b97e6a-2755-4e25-a5a6-51a3a2985621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65fc5c0a-c250-4f90-94d0-b0f30408deb2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1d6efa-8778-4404-8f7a-00a05e63db19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e296f5-4a7e-43df-a1e9-004d888b2658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4892934b-dcd9-4873-afb2-4f262a4c3a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d113c1b-4a06-4f4a-9d4c-cf9117127fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0118b17-38d6-42e2-8dd1-8b6f5feb5a25",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5d0c11-3766-4a7f-b0e2-b57fc9e4dd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7215e82d-0e7c-4174-9030-79c08d02ce34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c203ef-6f07-407d-99af-a32160034561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0766fdd9-479e-4259-862c-ae992072763a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34001c7-14b9-410f-a07d-6e3f5d4918d3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef528614-baed-4d1e-85ff-8dabc4d1ea9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57dfde6-381a-4143-b25a-8973d30a8d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b0d2f2-8d1a-4e14-bd00-e42088e4de94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1040fc1c-3208-45f0-a692-5fc5b526039c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22bf8fcc-cd2e-472b-9f1d-be083aa0ef92",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d99a1a5-e6d3-4ecf-84a6-f7e1cc0352ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd402a0-8d92-4a54-9904-210293fb19ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6f9b29-bbfd-4590-b8e0-e3b631bf5308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "accf9152-34b0-4120-a6f8-c711a3a05066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac9adfe-3fac-4f2f-bcf3-ef5fc3a2da79",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfba13fe-4757-489a-b2b2-59e0c07856bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f428cc6e-ede8-455b-be5b-d895836427fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff892a26-4490-4c4e-a82c-1dc7fda37044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b416a4f9-632c-4382-8977-c1126eb42f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7dfd0f-6613-4a77-bb1b-04708e58a0dc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff21e87-95a0-4dad-9367-b7ab634208e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c60fe01-0975-442c-b726-aa36622ea54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062add51-fb29-46d2-bc2e-e56e6aca400c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2c8b61-9555-4329-9b90-0848e022ad69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587ea993-bf7b-430c-9829-9dde146fd5f8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c063c65-5fd0-41ac-8801-69f5cd566210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c24987a-e2d9-4bf4-846e-4d215c94c7fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9e8f1e-6a10-43a6-8898-215bf519b7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb632f6-7066-40e8-8ac6-c628439edb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b23aa2-ffbc-4ff7-b076-3e1cfbc3326b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206a4333-0dc2-4882-a41b-4abcadb07202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d316796-5189-4dc9-bdf9-6faa456b3805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c25323-fd00-4dcb-8eea-2708e9428a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "23e19102-e545-49a9-b563-004ad5dd3d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0d7046-9d08-41b9-b7e2-dd1bec5d070b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92f8633-a8d7-4fd0-af32-9e54e0ad73e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e0a23c-faea-4a8c-a664-1643eb72e0d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3484e3a3-844b-48a9-954b-b9d6a9964a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "78958d7a-3ed8-4610-9a27-f920ed87bb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38467d52-ad26-4950-b328-b7fe7343ba7c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55571d8-8f6e-4ce3-83f0-91fd91d04764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "507d5839-98c5-4b42-9e1a-56f03675eddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74127718-e691-4d18-b8b8-3b632005eb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a96268b6-5eba-496a-9a72-a77302491cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778c1ecd-914e-4d52-aac9-d2565cf6ceb1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7461c7f7-c594-4466-b3fc-ecfe72650946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2853e0e0-10cc-4a02-a454-85b0f5293913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7196ea92-6b60-45f9-a1b5-ff823ee40b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "745b9d6a-d67c-4b18-a763-640aa17113f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac88a5d-b992-4046-af57-f54f4241fced",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f781e77e-e8cb-4ebd-8236-92f3c22ab6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44a6de4-5acd-442a-b0f4-ad320ca01b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631855e0-617a-4e55-9f10-e25cf1a64759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc958f9-37d9-4105-8eed-d0bc4ccdbeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e1b543-f8eb-405b-a2ac-0b40e0604a47",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29d8488-194a-42b0-a8c5-04fb11128eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28afe4ea-a5ab-4b62-afbc-b801c20ace60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86514ee7-8361-476e-91bb-178489348dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3181a91a-44eb-476b-ae44-72dcb49bc830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef68a4fc-d53b-4999-9eb1-d47b588fc881",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145e44f1-f4b9-4209-b717-2e07c71971d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e0f6108-47b9-4c93-a63a-fe7a739594db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654c4559-9920-4018-99ee-89c683a2fcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04d1f3a7-ae2f-4734-acdb-27866eaf1de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8bb7ff-485b-4849-b181-cfc9e174ee57",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8925bcca-2529-4066-a504-c7a258732e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc684883-820a-42ae-8acb-d4f3404945b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047aea6f-4d89-438f-b696-e6534534e724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f86af18-6859-4c45-b710-901e6851165a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df78cd1-791d-4b1f-aad8-daf1e888691d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56bf975-22d7-4749-a6df-bbd53ed027c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c60272-15ef-45b7-8f6a-fbf23499b1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d50b6a0-f07b-4fcf-a077-3c7f2aa7a0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6728066-89d8-46d7-94d0-209e0a3763e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37788721-9d7e-4a87-88c5-ede05a2783dd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0c4cb1-f3b7-4743-95bc-0e88f4f32336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "789761c1-5374-4b9c-b274-c490d8cffb7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875293bf-59d0-4eaa-9df0-48e5feb8aba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d858934c-53e2-49ed-ad21-98f030313df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64103c7-95d6-4089-8def-aca8978c112f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c73972-5e51-4840-879e-6001945f5087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbaa4c7f-9671-4cbd-b342-4100ac7afc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86c7e08-eb0e-468b-9876-b7131221bf97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7ddc5f-418b-47e2-8acd-cde8d07fa187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8874c968-5eb3-4583-9dee-1f2268ebd67f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4f22a7-7bc9-410f-8a29-19abec6bf7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576fd47b-86cf-4254-8789-55cc4e7e16b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f51908c-a8fd-438f-a48e-33b852f377ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70b15db7-18ae-44f4-a45a-69f01e48f651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54fd68c-942b-450f-be89-1ee2e7c25c8a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3701ea-beb3-414d-af4a-b863d6f4056f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715df963-76b7-4328-a167-347f12d2b364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14387186-33d5-44a9-94b1-e47bcded34e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3940c92c-ec4e-4808-a87c-fad86f6e38ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e694c5-0da0-4beb-a662-7bd6e07c4e77",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7505388-9155-4bb5-9544-5066188be77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d671b09c-520a-46b6-a04f-704346734073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e8021c-4409-447f-adf2-38ec6f6c41c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75d5ddcd-82d8-4134-a24e-e412deeeed09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a79b406-febc-4968-a426-56eefdf62bb7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37204d29-6cdf-40c1-8259-8aeb081a7244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ee579c-160b-4768-b076-d703fcdaf729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209549cd-5488-47bf-a30d-88eec163e384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1c1da7-3e3a-4747-8a3c-29ecb195b64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9d5a7b-edd8-4cf5-8f24-eb7f522e1403",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02898fda-d960-4273-bbc3-4c4432e8616f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da36cca1-e7fb-4d7c-be25-70f4cf2904e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7455fd8-fef6-476b-98de-ff2fe2c53888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15f9e0d0-99e3-444c-b137-a6c0c0843de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2da54cf-702e-45b5-8d8c-11739075a04d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107c064c-477a-45f1-9e84-8b12f4ea003f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6d3dd5-cb99-4a6d-a41d-3ab6d51e2aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323e29be-0f29-47b2-8ad8-33d294519e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00b67c3b-0cb5-4a04-8163-b2e6041931c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7efbb37-0a77-476a-881b-589310b110ca",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23974be-a352-46da-a517-299d74b38955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe274f1-0066-42fd-af96-dd70bfb0a750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc59306-69dd-488a-a225-04b45a8606e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3011b7-d538-457d-8aba-a2c4716055a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca8851f-5616-40b9-8b19-2f702a07663a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea629b6-4f2e-4a3d-a3f3-20b0ca04592f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554f8fe8-0db2-4d8a-9422-98cfe7bf72ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef556a7-43f7-4e7c-8e42-5d4cfaeedc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdfa0967-0cd9-4578-a640-255154874497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9154eb-d53a-4e85-8089-f939492dd8d4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8892df46-b098-403b-a240-028991a9864f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a1db08-e742-45be-9fca-2ae722b76543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05b92ea-a828-49bc-b726-1c0a006422a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "304460aa-de7d-4e42-bc9a-8544b28f3626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409bcddc-aba3-44a8-a98d-ec94a3d83210",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c6c5e1-947f-44c6-bae0-5a6664f55fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f1383e-18a1-4fe8-a976-d4b36ad6d310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2678fe-a3d7-41a9-b158-efcafa122743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56860d89-a5c1-4f16-9f7a-16b5b4fb4ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b3fcd4-1d67-4f16-82ff-9ee96900cb50",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02820cb-f2b4-44a5-85d7-03e86d1396b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7dc19c7-6a6e-4819-8207-a49fef0c7854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32e5166-dc1c-4c2d-a7a0-a240c99666cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98d2b5da-5ec3-4155-8954-054d15ecbabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196933b0-ad3a-4a9f-89fa-93dda4e562fa",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7165248-485a-423f-8d14-2cde9d45421f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8e4b34-11e7-4480-9604-13a6696608c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d414ce-79aa-4599-9123-f229bb3dea14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec78e4c-b953-4ce9-8269-b66600c429d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eccddbfe-7e46-4515-ab23-92ecfa9f8ab1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af38bc51-3fe7-46bf-9ffa-458fb27ae8f2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d8ffa0-58ea-426e-a388-4065eff3195d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9d36c24c-3b42-4c3d-b980-0158cf5d2200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f02f84-3885-45ca-90eb-14f8e2a203d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae5cfcc2-b9f6-4ade-80da-b0de8f33931f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b19d687-e87c-403b-917d-b11aa5b329d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0512ac5a-a98b-4a63-9f1f-b77e4df984e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85226485-6914-4c64-92fa-60a7874a53ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0c40851-4dd9-4eb6-82d8-569a272ad5ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17a1fb3c-c412-4049-9e5c-e51ff385b637",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ff69c989-0f8b-4777-9680-b62d2419e630"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fda0326-7679-420c-9eb6-69dedf38d6d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d188bbb-4d2c-49a6-b6cc-6417a67aa1dc"
            }
          }
        ]
      },
      {
        "id": "63c84da3-850a-4daf-8d17-b69eb502bfef",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fba71ec1-c807-42dc-9a8d-0d737164e25e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "050e043e-10e8-4d04-b348-5d2b29d008ca",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2984dd71-cc6a-498b-b3ed-c4ea7d031472",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925d14a2-3b99-4a90-9d61-47d8aff2ebe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce7328c9-3a70-4c51-899b-12d5a93dd36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa79096-4a9c-4dff-b4dd-6d4799bcf692",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb96c9e-17ed-4239-a829-c156ae834f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f769eb-27cb-43c3-9cf6-2ba3e77650b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce181798-2585-4550-af8b-b81863c91fd8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b040dcef-a66e-4aff-bfca-651c2d9ddcb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b80ef0e-52ac-41f6-8898-b8d3e723da2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6527647-f0ce-432b-8aca-5a452201c660",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91005b70-ea26-4e3c-8f11-5cb9c6c10a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f9f51f-60d4-4609-9464-9fe9c4f35584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48063135-3343-482a-a376-842bd75cb581",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9995af-6803-44d9-9c22-a3d59c515b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e1d5474-e384-4286-aabf-de3dec393403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ee27ba-57c0-4c4b-bbef-9c3f38786aa5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcde8f7-0acf-4fb3-bf21-6012516bf4eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644afa50-44bb-43eb-92aa-21775827c769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07d353e-505c-46fa-98ae-2a79673ec7f7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a0d99c-8598-4ecf-8441-e611e1d716e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbce970c-c8b4-4f74-9067-b528f6e6bf67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a918e1a5-6350-47ed-be6b-f552a8fa9f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec33770a-f19f-43cd-9e69-529a79f573f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2990d97d-1794-44e9-aca3-ab8490c7c3f7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c679a59c-a9bc-4a30-af9b-731119ef332a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f082ce52-21b0-47e8-ace4-207c3993016f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99614c83-7088-49fe-b77b-f19acdc00e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f19ba68-4ceb-45c3-9fbb-d101619620b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b8724a-94eb-4ff8-8fbc-bbb198f693de",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2f174d-1a19-47f2-96d2-ed6abbd01dc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62adb097-edca-4d0a-9941-dc5730b862a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ef3a57-a462-4129-8e6f-b7bcb874f032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a33629-c163-4385-976f-6743491f3004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6876422b-bce3-490d-999d-d6db5d01b76a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c73fb8-9868-4244-aeef-5cc163866b99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bb95b53-5d2c-4e20-9c00-1c494aaa7b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5175ab0a-63fb-4381-a55e-f70978bbace9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45456e7-bcd9-46e2-bb9d-9a8ae706ac5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01bd37ff-b869-4f2e-b0d9-a4c79e24a85a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29823d68-eac4-4a21-b5f9-290d02f9b4af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cccf9c86-207b-4468-a45c-0bb88f64307b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab971522-c2b1-4ceb-9ed4-c1ab52d28663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb694251-2ec9-4a7d-ba86-5f18a91bcbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ede596-a96e-4526-b8fa-6be8c6af0276",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8260b73-4f72-4c26-aa1c-ec1ebc56495e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8550b5e5-39bb-4897-a1c5-952ceb45aa0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f964398-a5f1-4400-ac41-963ac8f17218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f31eaf2-a16e-4d75-9bbe-d3b2af97a4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b16bca0-db82-4738-9253-8267516107df",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac56b77f-39de-49d6-a1f3-9e7ac5f18d86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a39503b-dd44-4446-88bb-3444fb396e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1321e960-1963-4fcd-a9a9-3036a478447b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ca4d0b-152b-4d97-bcdf-fe701d21f16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d418e849-fb13-40d2-af6e-ce88d1b12390",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31b649a-6572-4880-aa07-d452b05c24d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05c5bcc9-3877-4c15-a1bb-4bbbc696155b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e617a18c-f716-4400-8d87-867c4755eb78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75fd5d92-3565-4572-8e9b-e17738bb51fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7bff86-8e34-40ea-ad6f-05b54fb42ba6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6820e3-df1e-4edd-965c-a3dc2067bf19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a9d6618-8156-435f-bde0-6647fb7f1eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49064ea7-18f0-400e-aec0-de85d8ccf28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d18ce73-6b27-4d0a-a2a0-a66857bc1b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96228ce6-8bb4-4737-80e7-d3e6bf3fae36",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9e89d1-ee50-4803-8ed5-5fcabbc75318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35b6cacb-1a9a-466d-8f65-f34e668cfa53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4cf6e1-411c-4901-97ff-7dc8103285bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9107a06-1549-4ba7-88ff-d21f8edf7f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8e3819-c13d-413c-99ea-f6cd8e79bf11",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d65a0f-8953-4f09-9faf-5b6d7b717e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150ba446-dea2-4ce5-8d20-f6535066aa2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc655e18-70cf-4600-b729-053d6770d878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115aaed8-6e3f-4acf-8fe0-427fa7933f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb71ab5-f6b9-4e1f-aaf7-8930c50ad700",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f607a752-fee9-4c4f-a793-a28e67a65128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61009664-b023-46a4-ad5e-bbd885974b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ea0f02-ad25-4386-b39c-3470512118b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db464d5-68e4-4b94-972f-39b262b23375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720f8220-c33a-4145-9949-3921bec1e0f6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e30b45-b3af-462b-b8cc-d2ea919813da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5366d7a-5b22-4a99-8cea-b5db50252143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef335c0-8fe0-4e72-b377-96c8e09719db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bbfae07-f351-48ee-a128-5b153e18138c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1b03ef-5ac5-4b4d-80cd-6bff31dcd6a4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3627b1d-3341-443e-a327-7391a325b484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a643cb-7ee2-40fe-9a28-6dc1db656959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5057c54c-0361-4ade-b3e0-1653ef65220b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d24e7c-86e0-4314-aaed-27e71c44b4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e90566-7af0-41c1-8e38-2bc6bd0813a9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae5eaef-77d7-4841-ba44-bf7bbef5417b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c40aa7a-9f8f-4a44-91ba-ea01d433148e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1c0c3e-a712-44b7-9191-995f7921265d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7e909c-5f9e-4094-9315-a1997b41c32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c55857-97ed-496f-bbda-4f7201ebf3e3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3cbadd-2957-490b-8b88-bf2e816d8e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcdb2dc8-4130-40e0-b8ec-43a4db77160d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58f4fdc-2d66-4d6e-8d7d-b18407a3cf65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9accad9f-b3cd-498f-9143-8fb2ebbf7571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5245fa-d87d-44cd-8d43-f727e984f323",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e374f5a-71a1-4473-a2e8-13665f14c5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "addfd48d-de82-4a81-a34f-18c1bdfbc034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39108ac5-0ed1-4c26-807f-1f8b5502aa7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daecec25-5b7d-4bc6-98eb-f2864e1675b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376c787f-be21-419d-a7ed-da8fda9662f8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d020f2-ceb5-45db-9f60-9dd67cb481db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2166012-a24d-4865-ba40-83558a75e535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3194bb44-fa07-42d3-b0ec-ededd462314c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c059f40b-f72e-436a-8f14-18e72efee2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94f2599-3c1b-45d1-be13-f0bbe47c787d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f728ac0-3f1d-44b4-86ee-0d788ba3e3d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff0baa5b-f9c0-42a2-afc6-d6d554b62132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f4267c-ef6a-43ff-a575-1b39a8a92b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ccef68-9b4e-4409-a399-6fe5c6ba764d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871b09dd-9a90-465a-9eb4-40497f20210a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2778d9c7-f7c5-4f5e-9c93-d84929a52cc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0315b4f6-09d0-4097-abe7-35c37bc9ab5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "566e5d57-4daf-4ab8-9465-7e59fe862a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cfae540-0c1d-45e9-81de-912e20fa01ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80470e49-6c7c-4e2b-8df6-8c00507d8a1d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb78c418-200f-4f76-aaef-21ebb79b9f40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b59ffe0a-00a5-4334-931c-bc80b99d3345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c12fe7-a221-48e9-844e-c58c0ab11bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5977cbe9-409a-41ab-b98b-4a3253a6322e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760fe5c2-3341-42de-8106-d73a57c10868",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf588a77-0524-489e-8b71-a3eb96f9c2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d92ecf-c7b7-4ed7-ac6f-7bcdb05244af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41ee8cf-2cd0-4c6c-9b56-27403cdd3c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59bc8fad-6200-481e-9ae0-0973bfeb4832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cd48bf-d888-4036-ac19-f34147a5137f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8959b1-c8dd-442f-9dcb-4cab588cd3e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1638b90b-c157-437d-9d70-163a037bf84b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d5df2d-3e69-4bb9-a7d6-dd5764bbe028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6927e7aa-2c63-494d-b943-04776bcc76ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef165c6e-ec2a-4853-a127-81756c8a03cc",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e1a80a-de95-4189-adca-2220fac5c673",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3326c589-1778-4502-ad61-7ca3538b84c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf75a11-389a-4227-b0d3-d2c94ac9e122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba7b57b-0563-4cd2-9a0b-15bebe20fd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906063a5-ff66-4e5a-a90e-0f58f282507e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b7ed4d-58b2-4776-945f-50288b720374",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f85b9176-197b-4026-8f5d-34f4f332e682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ff6f0a-efdb-413e-81e2-3344ea0f5696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e1dfa5-e6ff-4b6b-b3a3-8b5637549adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27feb238-ed8d-4f4f-a3d1-e3924684d44c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45c531f-e7b3-413d-86c0-469034cdc4da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56a48916-290f-4746-b9d8-f2a7eb408b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "428ee124-c2e2-4ea1-939c-4bca114415f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87d2ee5-c7f9-4244-a978-7d3a3f6833e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a141c2e-588f-429d-9e60-c8995310acd8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892daf6a-80d7-4eeb-957c-4a4a1151b0b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d9adc32-66a8-4f42-a4dc-986fca682b6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc07f6c-13e7-4370-a062-194427474c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd0503ab-f833-407a-9609-b343d668bf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4177c187-78aa-42de-bb52-d08104edee8b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827e086a-dbc2-4b9b-951e-14d46bd38fce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91322110-afab-4117-835d-5ade2d7667ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00742543-f51d-4595-8bd6-ee3456053edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d33c04-fd7b-4340-bd58-97892fb3f2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278450dc-eb3d-4c77-9c22-ecdbd3cdf7a0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a34e1fc-d4e9-4a3d-9717-491c23d7d08b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f113e7e5-56f4-4d3e-a3a5-bc9d81226006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4edb68e-e4e1-4b0c-b3fa-423b9c608731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb1fced-597b-477b-b701-a9d43fe890c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e9ef38-7ecd-42f1-b42a-fadd150f541c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c6b4df-b119-4a66-a5da-5f5406ea74cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f8be75-4fa5-4716-943e-a3395cf72a1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51891cdf-e2a8-40a6-93fe-b55a0b76f1cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fdf488c-2db6-49eb-9c63-e17c70962c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27b5d70-9307-40bf-8a8b-ad2d88be9096",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8397f93-fc1a-4b10-bbe5-34591ea7e98e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4821ccf6-109c-4dc6-8df1-9be436c4c994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "134cc044-d88f-42c4-90ab-f4d328d441b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d546a9e3-f81c-495d-acce-bce86407c1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c2616a-f0fa-4c28-878a-b12773742e57",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba476427-6ad6-4c81-bfb5-bc1554a491ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0428270-9ebb-423d-99a6-a8c41f6dd47d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76267bb1-e038-42b7-8a19-1f9fe2641c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246f351a-aeb0-43f6-92f5-b213763120e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99a9230-c698-4a18-b59a-e5108001dbe4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d3046e-5478-4c28-a634-aece71e9ccb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ab136f-7eb6-4cfd-9c6d-98f51c9f117e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87097c28-d2ac-445e-88a0-40926678fd90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8b9422-8c9e-46bf-96f9-653bb6b6606c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9583b45c-afa3-44a0-9449-776d1f9e926f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6edcb46-3378-4527-b65d-cbe31acc46d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbe0e16-41b8-4112-9d45-5367acd17fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aab83dd-e09d-43e9-bdf6-5d63e8558c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e3b91b-9e93-4589-8448-0b50e16fecb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6dd0162-06c9-4a5e-98e2-b14a2d6553c2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14eb2dd7-1f04-4bd7-b2d7-2a29d4772d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66a3438-70f3-4ac9-b2bc-d0e9be16f87d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1095ac78-18db-45cd-b642-61151d8e1a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25754bf-52f9-400c-b1b4-419a9a509580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734d7644-854f-4d5e-af67-1b2bc6d4237d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a070d9e-f508-42cc-aedf-aa7ca4078e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a61c45d9-0739-49dc-829d-64227048fa08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13a345b-a647-471f-9585-bd4acdcad8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad6dbb2-c000-43f7-b481-f267d8820b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae1b197-de0b-449d-be27-60095f1aece3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2075453c-f33e-4e3a-843d-f03d9da2a623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b16d3bc-11f1-4c97-9e98-7ee820db6998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c55968-30ec-490d-9cf4-a55955dab83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff24784-2d46-4579-9f90-c1a60c016891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daec85d5-addc-4414-898f-f103d13abfce",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98ba2ea-a219-43fc-93dd-4b79170c039d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81a00c3-24a7-4c50-82a3-3ca9a37b8a22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b414a1a9-0166-4042-b981-159b79a1285d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd4396a-a9ea-49a1-adac-6ad42405eb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85231f43-24a0-45ad-a735-a8914fd87b2d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6d3e75-e081-475a-91ba-a41753aea815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c707d4ad-9d4c-4d0f-9813-42625e1575d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61946d56-3330-4598-8bd6-8b72a91a85e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a9a523-32c4-46b3-bfdb-52c1064f406d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bd9472-573e-49e4-a0ef-45348eeae693",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1faa0d55-3da8-4757-826c-a6c6f85b13ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e264af-5ec7-4a15-9f87-e675378b9b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95117dc-951b-494b-90f8-3daa4e5a8dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f102603-4d41-42e4-b64e-2c42037ab65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150021ec-7863-4689-a08d-08a94db89c18",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f90acc9-3947-4c03-9c0b-16bdc80d22d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff381df7-c237-4df4-a421-b8239ccfb5be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46f86a0-ffbe-496f-aa5e-c8ca591a43f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89bb112b-4e19-4adf-a8cc-b48afa45ec51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3514bd63-790e-4f62-8f46-889e964f70ed",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a38829-60c4-4b19-a20c-deae86762a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96866423-3138-471a-939d-49f7aae1ba04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b87b186-43b4-4fff-b05b-db0a28d3b6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3299cd3-a88a-4963-959a-843d0a7fadd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b68d225-76c1-4eb4-981c-b1e9da790691",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe9977f-5c02-4a43-b834-31c9c4a3fcc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be11e38-e41e-41bd-82e4-6b46ae9d5c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bdd812-6ac2-4359-9ab8-68be6f5180f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e330b5-6b1c-48fb-b2a1-ba31b0ece9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e538965-cccc-41df-8b50-87310597b140",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2028f2ec-5942-45d7-916d-985dd1f44141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb66425c-c455-4015-a95b-059ea52e3e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbea22d4-88f5-45af-b12c-9ce1721fa4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a06a8f2-4feb-434f-af4b-927c606070f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2231f6-5a49-4502-85ad-8d58d54d1752",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36144270-bc0a-4624-8dfa-a77da62633e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61314177-355c-4ba7-abb6-1afad8e0f3f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f238e22d-effc-4cea-bb41-337c60a35762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db58a633-f3fc-4740-aaef-0ab7f4e71a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e378c3ee-4e6d-408d-995c-a761829e487c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2304fa-0e28-4d08-bf22-43427dcbe2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70fa608e-2322-458b-9d40-76b8c3e34249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40728917-5695-466f-9768-9c8fbad23e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a99132-4c2e-41d3-88a5-89b1edc02d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c434bc8-ce74-4ed2-9d69-1b3e0e40e194",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361ce254-dfc1-42b8-bf7b-67ae930fb65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc131ee2-0c81-4c36-b93c-2554c46695b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a368d4a0-b564-4a18-a505-0070f388d4d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84bbee10-28d7-4fc5-81ec-73072898ee10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62344d6c-add6-4784-a64b-54776e9fd8ce",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05a1628-38d9-4aac-86c5-4a2e90f9e993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a76bf1-2ab5-4e42-abf8-926596a06649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b314c45-679c-4fac-aa49-79dcff2948d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a35741-cbc2-42fb-ba7d-3d7833ddb111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571291d7-3a69-4c01-844d-755af2f1553d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a696a6e-95a2-4eb7-8e95-26e61f6f5741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae5ab39-6d41-4efd-9b1d-e44f8819f0b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a363920-f285-40b0-97df-df45d697b1f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd63f22e-a3db-4cbd-929d-4ee503a6e036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf72ee0c-ef83-4929-8525-8eb8b5df989e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697ef792-dfd9-41b2-a0fa-b6c840d60900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8bd20b2-0588-489a-a57f-ad7e5fb01a4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f10753-431e-4c53-afe9-b15a3e80c4e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab9aa52-961d-46fe-81ac-225eae67fa00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20f0cad-f996-42b6-9290-feb0e74b7a6e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdce23c-0c17-4a87-b2cd-7059bec4c6ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537903a9-66e4-4d9d-bc5d-0d7751909c3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6507c36-1823-4e6b-b855-094d9fcd3050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b9708d-2fd9-4b6c-a53f-64671ae55734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5838e3a2-e310-47a4-8e37-893ebdc047d9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdb6d66-ed24-4a6b-9468-720583869d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53d9ef2-661b-47dc-b509-7896a5397298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a71c3a-46fa-4286-a023-99723acf097f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5604f3d-cf19-4883-979a-24883abeec8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20457c6a-6733-4ccf-8019-58cd577aa824",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec4fcf4-093b-46e4-a9f2-c77cca505a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69952602-e0ac-48ae-8804-06cba2ccdc71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ef367e-9ec5-4eb8-bce8-20f99b074446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8df58ba-7623-4ef0-bd5e-71807f56b6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f81f86-373f-4725-9bb6-f5df67c5db70",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003fe17d-218e-4de7-9a73-5d87a87295b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06512b64-1aa5-4711-9d08-a0296bf80e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233008e9-4752-437a-82e6-9dbe1e877052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abeac059-92ed-4742-9f71-52de0d789753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5863e3b4-6335-4686-93b6-e3c70b6972e4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793ed278-2d7d-42f2-acdf-5270f9a722d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253e330d-de78-4a54-ac7e-98490a1fe4d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3909ab9d-7922-4728-8d6a-1f91d44d2ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adaa3f44-a135-4040-bcf9-8feea793f10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f8ad77-5c37-44a8-a4ab-862ee709045d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ab67d7-f7a5-44bb-9f89-e9f295b26099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f035e80c-79d0-43dc-98c3-73972689bb0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a1f2ce-53ac-4cf1-89ed-cd018af27421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb512641-8de8-4238-91ad-8615431917c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cccacd-0455-4cfc-8b30-176c732a685a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8862a16c-8a15-4bd5-bfa0-5c0f2ce3f5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd1fc18-25a4-41ca-9c6f-3ec18103b9ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f600f83-76c1-45a4-b7ed-0f919ab66518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6203dfb-a88b-4c6d-b252-7eeb7b14df1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66f532c-b0f0-4184-bc2b-898e6978ec57",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a74d52-9806-4e59-9c6f-72139b9f05ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ee5fb3d-6ceb-467e-851d-d635b90a3eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb42c74-f5ee-485c-bdfd-43e69151090f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0d2f1d-930c-4825-8da6-a58ae7cc4d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b124d288-2a5c-40d2-a581-1e75ff93ff62",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5312b0f-4f2d-4a47-82b3-cc2900b05bfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e708de3f-d8bc-46ab-b969-427b1b6dbee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9d3c77-f8c2-429b-acd1-c43dcd0dc95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a8486df-0de9-4b91-b1e5-f56905f2f95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bade76-3a82-49fd-9f64-75ad0b50c058",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab439e7e-e424-4b2d-8d5c-ccb53c2a7261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6ef6d8d-89d1-43a7-b300-3df2ec1778c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a525be-182f-47fd-a506-1a4b4330fea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0269c143-f2f8-4b6d-8fcd-fb374da200a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18851859-2ca5-4549-a2bd-90324f3cdfa7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84f91db-e955-4ac8-9278-12341302c5e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fae1989-cf8e-4390-a026-653d89242bae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b242e0-1ad9-46c9-83d7-a38ccb18173a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ee2f2e-9c0a-423a-beb6-465bcd3c9cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2310df-6528-4124-a026-76594f05d186",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64cd343-d377-4098-ae15-00ddef3afe00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0417b28b-bb62-40fd-97aa-61ee793358a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1348544-2821-4c9e-839c-236e80255687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74bf678d-3721-4372-80ca-ce0b52bb0162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab629372-214a-4f7a-ac58-b1db74e9af26",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afdb344e-e128-4a68-8b37-86cce21c2ffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "935105ff-4600-4ecc-83be-43100cf4a95d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5463539c-f350-4977-b718-2d8dcfed4fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "365502f5-437b-4b15-8ef6-b2ffa7b32e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e25c8d-901b-4ea2-9ed6-3ab5b5878200",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b7a092-cc18-43b6-af6a-4198e9f0ab68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b09283a-1016-476a-859c-9d7c55cc2fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "436baa45-3ffa-4ded-9d43-8e0754e0a98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f461aa-43b0-41d9-a6bd-7c524148f23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794f817e-5d98-4773-b9f6-7ec893cf9513",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6789b9e1-066a-4695-b61c-22f889f48a5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9aae7bd-665c-4e6c-be5b-09ec8791ef7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf2054f-4270-4961-9dbb-d55416702688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24da2bef-8aef-4d6e-97e1-f1f60beae6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468ca707-f47a-439c-b74a-2b3a09e18585",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36632b7d-cd28-4619-8e1a-c28f60c3c7e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fe51ac5-7884-4ce7-908e-30dc81ebcda2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a37ca5f-cfce-4ffe-a90e-eee3b4352af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5438113a-4ea4-48a7-8c16-b500a8709382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6058cb61-02ee-4100-b753-4b08aa0c225a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27ebf64-4d1b-4c0d-83b7-4f5adcc32a53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f39ed07-0216-4189-9d53-78ed7b218e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b3c8a4-9740-4365-8bd4-4a68ffd1c407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc162c1-9b15-45f8-b2cd-8a9a893b13b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453455b7-9aec-406f-a661-abfa5a1ea52a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab71836c-87e9-4d9e-bd70-a10ac9d4aaa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "062692b5-744d-4eb2-881d-58fa52edd67f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cd1ddd-61d9-459d-81f6-6bdb79bf7be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9cfcf45-03bd-489f-829d-898d09080177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34501815-5ede-43e1-b87b-e1e23522d74e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601352e6-1ca6-4ca8-83cc-0853f0500c4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07dea914-ae54-4313-a23e-26b112d6e369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6068a2b-f6c1-4ea3-a14c-afbf5acbad07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cee8c1f-3e4e-430e-a27d-b55e40ebef99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d24fb5-e381-4e19-9c95-ea011714855d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b32992-aaa2-4256-ad84-c5f5ecebb0f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "364aa18b-3c0c-4f89-b674-533d29d7a2c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eaf08eb-00ed-4bbb-b2f2-651c4d118f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb255f3-6a17-4397-80bd-d64764b33b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70bb4207-6ae2-40c4-b593-041fdbadcc42",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16137ce-176b-4694-9c15-422f100b666e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65baf44a-0f42-4afa-8741-343ea56cb89e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bc489d-914f-433c-ab4a-5779f0e418bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a246f0f-f005-4b8b-b4b9-c2e057113d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146b85fa-266b-4fd6-90ec-b3aab2127f58",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c522ef99-8177-4181-96e8-e2ccb3898ede",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f567628-9a81-4391-b846-1559515994c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "474805cd-9f3a-4f22-8195-1293fc4463fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bede12b-5cb1-4031-933b-1053e457a2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc089c84-ce99-42b2-b142-5c431e81be3c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e90610e-10cf-40da-b1e6-0a6e96dcd67d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04d7ed04-432f-4b74-adaf-602c8fcf6917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d808fc-c99f-45d2-a1ca-ea1a8931149b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78aac57c-fd22-4b47-81af-55ff70df5f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64061e1b-7f2a-40d1-9eb5-20fca19e1b94",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a71998f-10a9-481f-8196-9e153f238433",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebefa8dd-60c9-4f67-a708-b21db114b72d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a2cb3c-e6fe-4e98-b4ad-36ea6602c534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d78108-b76f-4da3-99a8-67b1afc0a363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe7a618-8801-4b97-98e7-17319c0c5912",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a43b82-19ac-4064-abde-7dc558ee64e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b4fe07a-4d8b-4997-81dc-b4ff4a57e6ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c745da-fff2-4f61-968a-be74cd0848d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e20cedd-52e1-470e-9117-59e5a593bc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f782450c-b506-4766-8e39-8dcdc4bb3ac2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee29a60-22fb-4f10-9982-3a0e92db26e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62a3fac6-c8c9-4f4d-bfc3-65c09e1c40d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba592cb7-6b73-4dc8-a7d3-884bffd7ad37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7cb14c-7f36-4e5d-87e2-e88a8b9b0015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20182b87-6050-4006-b384-bffc871b3f6f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a32ecd-1298-47f1-b096-4ce1d9b1f7da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "743df36c-90b9-4fdd-9f5f-eab887b2a901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0eac161-10b4-44f1-807e-7c9a51e83823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da451db0-8deb-46a9-af7b-4ae8c4659f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed049528-1b7e-443b-96d4-3d75beeedf9e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62106ad-68fa-485d-9332-e3bdd59316db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "138df043-5212-4ec0-ba8d-7f98cf18c629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5be4fa6-abea-47ea-bb5d-96665e9ab845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23e36fe-a881-4f32-9111-03b80a00db45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbd2b7a-f9ca-4199-bbb6-6808d7c0c807",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633db34b-bcda-4a75-9e8a-5940aa3526a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fe75390-3300-4377-a44d-e6ac717e1452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e378a7-428a-47b7-9033-260daab2c7e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4400422a-90e9-42b8-a264-dae5289d2d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddd5502-9876-4694-9a43-8ace4811b4a1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae19185-0bd5-40b5-b605-d1cf6bb1e5a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e210165-cc4d-46cb-914a-6574069f07de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "834371f5-4ff7-4c16-83b4-e3ff0e32a3b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc460390-69cf-4a25-ba12-a80196498f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c53c8a4-dc4b-4df8-878d-971313e055ba",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54664c99-ab5d-42b3-a87b-bbc92f537d40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f16e1021-3d4e-4d46-a516-27006657dd33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d20c87-ab33-44b5-93f6-6da0d4ca3cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591ba3b7-3af1-4938-baa1-3174348beb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281fb343-8ae9-4a3d-a113-9b9444743adf",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe54b5fc-db3b-4353-91db-d39bfc136bdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a77f2dd-71fb-44d1-a1ff-bc0c6595d3b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4e6e71-150a-4614-aed6-95a73d8c306e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13739c2-603f-4681-a9ea-0f86fc585c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050e604d-6e1f-4c8f-be88-4708e05b46e0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d01d86-e6c6-4a06-87b2-616ae9e8a6cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb75ee3a-ac42-44c1-8d1a-0d6bc95d7fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5016a67d-0f3e-44a0-ba85-cb2464aebd21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4a5bcc-e018-4130-a44f-f5552580deb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a93ee29-370e-4f27-a7cd-05e3b75ac495",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0892830f-8d4f-4922-bead-6c3aef740124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "018bb60a-dbba-46bb-a2c0-c79a76884413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1a5f09-732a-4fab-a361-edb4177ed083",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaaa838a-6627-4d87-b820-fbd4e09649a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7a8b10-a174-4a77-8885-5d90c9855a95",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45be645-3265-4304-ae75-c0e8f400c73c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edf226d0-be06-4802-9f19-38b2467b59a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd87b245-8f14-45b0-85d1-c51b163431ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6269258-5c56-4593-9df4-4ac9de2d4607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3ad5e3-1853-4158-9662-c2841ab4c2fb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf206a7-c4eb-4d93-8b7d-ab8420c0b099",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be3ed1a2-8434-4587-8d19-a9c164cfb54c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e842d65e-6a51-45bb-89e2-cda237a0d778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a726ae-b285-41d4-b793-8a2f57377c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2464c060-df0f-4c2d-a262-fafc3842a994",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c568eb-7b40-494b-b5ab-a202281dc16b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ce75bbd-0ad7-4ef6-9f75-064bb326ddc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d97886-ddcb-41f5-aa8f-9ff49f363696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de92312c-0270-4aa5-ab23-b725f1e471ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0399463e-13dd-47dd-b8eb-9c48473c53fc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3953f6-2ffb-44ef-bb83-1eaf9fd2eb32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c99b7c8c-97d3-48af-8cb5-a83e331c89cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c473fa-c278-47d2-bd95-8bc1dab129c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6d6ce6-0a23-423a-8c3f-c7dadc806d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62c9852-0a5b-4868-81b9-11ea833bbfac",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec72ecb-e287-4e20-93d1-50d3a450fcae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07f812d9-3887-423c-b35c-3a9aa365762d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f370a9c9-82c8-49d5-ac2f-33bba7757bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48675600-2d88-4901-a547-33d746ecf46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edc4d28-006c-4e6a-8c19-039a1cda210f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a13a02-5cf3-49f3-a442-d674e1ecef67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3e87329-3d44-4afa-ae01-67b8bc07201f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae0fb39-2ea0-4845-92cb-b1f0bd688db5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb452dab-9565-4b4f-a5f2-89fc744c1135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c853a71-7a2d-4eeb-93c8-54522a4a408e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea5c4c7-6834-403c-b320-00945d8b767b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e255f1ad-983a-41c5-a249-58fd0fc6c0f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e146eaa-cd74-4436-b264-8e3377e3987f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9942dab-75ae-4ad6-8513-e3989c442bc3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f7e73d3-9003-4e91-8b74-4179e372df8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06a0e79a-2894-4e04-9a15-cea7e1b27bf6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "669c9ba1-6e95-45d1-a4fa-f9674818a1ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0430a73-b8c8-47d2-813b-5eb4f0dde870"
                    }
                  }
                ]
              },
              {
                "id": "009c4f04-a6f4-4fc5-8b1c-e8bda9ee15b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7fc8989-41c5-4887-9a73-741c82f7094a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2686e2ab-3550-438f-8246-ead573412dfe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2779b052-26e4-4c88-8116-d351a23f7401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "578e2bf0-59fe-4c2c-813f-07cfb2dadb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfb8d120-0f68-4e5c-af33-0285f4010c8d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e29c9887-6b16-4a53-96c0-4b579687c743",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b7fa396-975b-493b-a10a-244bf80d26b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f37d8ae-3c12-42bd-875a-446e5f140275",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ddf60a4-bd4e-49bf-adef-b2ef622feb2d"
                    }
                  }
                ]
              },
              {
                "id": "c63da0f0-4903-4505-857b-06075499edf8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "eb157caf-8b92-41fd-b5fd-e69052866170",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c4b6fe-af43-48ac-aa66-56f8f39e6c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "bea92607-2ac4-4d6b-bf9f-756c9c8d7cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8629e78a-cab9-421c-8134-db0e01cfc902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "236deba6-36a0-4ff0-8e12-458a3729f1db"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f94da034-7084-4d32-b90c-552353cf483c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cef8cae8-db47-4b66-8e36-b338c29c6564",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "236e9f7e-a8b5-408e-b806-657bb8a036a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2dfaace5-c790-4585-9f7b-b2955f7d2f4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e99b6b9-e690-4cc8-8888-f0c76e03bcdf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9269a6b8-2d69-4cf1-9426-5effcbf079b3"
                    }
                  }
                ]
              },
              {
                "id": "96d7550e-7472-465e-90cb-5d6bd29728bd",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "005b57cf-ca5c-46e1-b524-442bde318506",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a481f3c8-89dc-4dd5-a4ad-da9bc8c9b908"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07790139-c57d-4ead-8a8b-542983f0529e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a96749d-dc6c-4248-8cd0-3b0d7de038e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7fb9de2e-560f-4272-9880-a04baa416a3d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "22e2722c-aa65-4f56-9d12-1bdc5b613050"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84fded4f-d434-4fc4-a1ff-6cf4db650422",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd804125-473b-46f3-abbc-955413d81d5e"
            }
          }
        ]
      },
      {
        "id": "677e789b-9f3f-4018-adec-78afa266c81f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "da0e30ba-e7e7-42be-9c4c-f2adb5401bb4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "333d0ce8-4d14-4584-8740-09d279c697d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ec8806f-5179-4038-9873-9952598a591c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c16c9d8-2421-4edc-9409-514940a82391",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b1f500c7-e807-4a2e-98b3-cf60e27b4436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbddf3a-874f-49a9-b3cb-a3db4fc6402e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf69abb6-2989-449b-8151-8d3c39b0d933"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23496099-b78a-4f52-afc1-dfd6d7d56827",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8822b98d-66e5-4530-9b8a-63b6e845f4d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d7b0be9-4bce-4e4f-9842-36a69b59e7ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90b78b15-e99d-4024-9f25-293abbbe5b13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a80b9d0d-a72f-4858-b7fd-ee7cd8337874",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "056c14b5-f96e-470d-8210-4f5cf6007718"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e3b0ee0-16b2-4ee4-9288-ba261634b324",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1877f76-747d-4584-b0e0-8f7e50b31cd1"
            }
          }
        ]
      },
      {
        "id": "6f74377d-09a9-456a-93e3-148e725d3629",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "97855358-0a34-4bb9-97e8-2baa22a0539d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd3a736e-796e-420c-bea3-f2bfb1c0bc04",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e6bf555-9eb8-40f1-a66a-bece634b14a6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c2bba8-e3ee-4fab-8ce1-5ed04aa4a8c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fda5161a-ec0c-4a40-8f7d-18dede14ffaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d62910-4dee-4930-8a97-b7f8728439cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19af36ac-309b-4a43-9794-088640fdd834"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e2b4824-4aad-4716-bc55-c1531f7a6835",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c589b86-a689-4f35-85e0-c99d9aef0897"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24d653a2-299b-4620-b036-02fe0b784eb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d4247fc-65a6-43be-b6cc-969ba69acd5b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1199c45a-d786-4ea5-a718-929f47916299",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5fd1b305-9e95-4df8-ae1c-0dbbd8716322"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0a20a7d-aadb-4795-b35a-9cb934960081",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "854dc4e8-d5de-4e82-9399-0ee207736f9b"
            }
          }
        ]
      },
      {
        "id": "2698725c-347c-4805-9f5d-ca2d7d50dfe1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3679c948-3d78-466e-a1c1-4f797cc31c36",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9822a8d6-99a5-4e89-8c0c-3653fcd626cf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "795d31f0-5dfe-4984-addc-056a764f6c83",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf8bdaf-627b-4d39-accd-3684a674a0f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09e3950a-0ebf-4953-b2d8-78048078d723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecaae02f-0a25-4c92-8b0c-0f4c331665d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7affca32-b236-4bd5-9da7-39e2f8149db7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89d1444f-4e30-41c3-b314-a75277f471a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edf60616-8120-4a89-a940-ce788c59a013"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "07d2960b-3f04-4547-bcaa-abed7c91a10b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95b85d8a-9e28-48bb-8641-234c9d36787a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98ef16ec-8d7d-40ad-9428-33e3fb489876",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "49556415-8555-4e65-9988-abc0c5ed1b0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ab9beac-ccd2-4b4d-af8b-69143a1ad569",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44b9282c-d01a-40a8-a9a4-1a6817dab566"
            }
          }
        ]
      },
      {
        "id": "b88da85e-1e73-4947-8bb2-024e9df54b4a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2035bf2-d3e4-42fa-94aa-be4ddc1ab7f9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed11a8cc-ac3d-4acd-84e7-5e334f9d7630",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cf99847b-674f-455c-ac9f-ce83c92a4fbe",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9d35287-00b0-4271-a899-f19353c1e66f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5a22cd0-0cc5-4975-8509-65180226fa1f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 65.67063492063487,
      "responseMin": 11,
      "responseMax": 611,
      "responseSd": 41.17893892158938,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728434697252,
      "completed": 1728434721887
    },
    "executions": [
      {
        "id": "29a220d8-d07b-4b8b-a44d-2cf14c410c2e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9d1b0e5b-6485-43df-a02b-1897f1d60963",
          "httpRequestId": "5fdfbb7c-6619-4ebe-a673-5ddcb195405b"
        },
        "item": {
          "id": "29a220d8-d07b-4b8b-a44d-2cf14c410c2e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9969e56d-2908-40f9-85aa-cff9717bb4a7",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "0955dac6-140f-4ee6-876a-ddf4510b3ee9",
        "cursor": {
          "ref": "ecd22e0c-3716-4924-abf4-c5ec1fcd284b",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0ed35158-a0ba-417a-9a79-c1324642f8d3"
        },
        "item": {
          "id": "0955dac6-140f-4ee6-876a-ddf4510b3ee9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "378f7b25-7bfd-41fc-9d5d-5cce7d048e50",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "f573771e-96af-4c73-b05c-1fbaaedf8eeb",
        "cursor": {
          "ref": "5c26e85c-58fd-41a1-9e5c-88f30d24b9c2",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "509fd4c9-c21e-47c5-b188-774093323097"
        },
        "item": {
          "id": "f573771e-96af-4c73-b05c-1fbaaedf8eeb",
          "name": "did_json"
        },
        "response": {
          "id": "bb6c9d55-afd8-4b69-810e-0e3c8e3fb930",
          "status": "OK",
          "code": 200,
          "responseTime": 325,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d445c702-f3ef-4783-b3a3-986f8af6c715",
        "cursor": {
          "ref": "aa3bcdd0-31f5-42d8-9958-7fc8b48152f2",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "36b52091-16e9-4ecb-ba87-4aff7316ed7c"
        },
        "item": {
          "id": "d445c702-f3ef-4783-b3a3-986f8af6c715",
          "name": "did:invalid"
        },
        "response": {
          "id": "75d44caa-228d-4865-8ecc-81ef69c91b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d445c702-f3ef-4783-b3a3-986f8af6c715",
        "cursor": {
          "ref": "aa3bcdd0-31f5-42d8-9958-7fc8b48152f2",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "36b52091-16e9-4ecb-ba87-4aff7316ed7c"
        },
        "item": {
          "id": "d445c702-f3ef-4783-b3a3-986f8af6c715",
          "name": "did:invalid"
        },
        "response": {
          "id": "75d44caa-228d-4865-8ecc-81ef69c91b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fc35df-6485-4f08-99a1-19c06d12260d",
        "cursor": {
          "ref": "bb445c6d-d1bf-4bca-a3ce-6093d6e430fe",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "27c4a764-e8cd-457e-8640-0e16d9fcb574"
        },
        "item": {
          "id": "89fc35df-6485-4f08-99a1-19c06d12260d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fdb580c1-0dc5-4216-b7a2-78bce7b4581c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 123,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6726e6-47ff-44f9-a054-efceea571dd5",
        "cursor": {
          "ref": "9c693112-3a4a-4b4b-915c-e4184f2b308f",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b701f3ce-b125-456b-8cd4-5109abc45579"
        },
        "item": {
          "id": "fc6726e6-47ff-44f9-a054-efceea571dd5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9dfc0095-a32f-4991-956f-af1c6182e3ba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b217a6-87c2-46b9-82a2-4f909f54def3",
        "cursor": {
          "ref": "ecd1150c-b7ed-43b7-95f1-a5dfb8b0c30d",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6017ca16-55ee-41fc-a64d-3ba24a61c229"
        },
        "item": {
          "id": "c9b217a6-87c2-46b9-82a2-4f909f54def3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "724f1609-4b4f-4f53-a1c9-85a16e001bab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a63a3e-872f-4034-aedd-b91d80b2be7f",
        "cursor": {
          "ref": "79d07e5e-9220-4948-a65f-f410b03616de",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ed045b3d-aa90-4de1-9b07-0b9504e533bb"
        },
        "item": {
          "id": "56a63a3e-872f-4034-aedd-b91d80b2be7f",
          "name": "identifiers"
        },
        "response": {
          "id": "bf923c88-6612-4be2-94df-3d150db14a11",
          "status": "OK",
          "code": 200,
          "responseTime": 293,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4cccf7-5a55-41ce-a564-2b8b766215dd",
        "cursor": {
          "ref": "cd051a49-40d3-4d49-a71e-0bdbb074a628",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3cd2e793-1f42-477d-bba2-4f0935aef260"
        },
        "item": {
          "id": "de4cccf7-5a55-41ce-a564-2b8b766215dd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1ab079c6-8124-4153-aed3-08a47e5884b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8563269-2e81-4857-ba7e-a9b9d5b78101",
        "cursor": {
          "ref": "7037dead-f96b-4326-8a3e-9e4f68582d6a",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fd4dac8d-e40c-4ec0-b6c0-b480c99f0c2f"
        },
        "item": {
          "id": "b8563269-2e81-4857-ba7e-a9b9d5b78101",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3bc4d735-fb7e-4107-bec5-4a3d06be7ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1ea622-0200-49b2-8248-a6f069a18dbc",
        "cursor": {
          "ref": "9ef1e76b-3c67-4517-8c1b-602ace824adc",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "aa6e8679-b34a-443a-9283-663146c41671"
        },
        "item": {
          "id": "0b1ea622-0200-49b2-8248-a6f069a18dbc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "89770d38-ec6d-4d5b-8e3f-ec5341e3dbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823871a3-b1d6-40d7-9c0d-8add8e43d71c",
        "cursor": {
          "ref": "e154d2d5-d6db-4af8-81d3-968592129bde",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bdd75718-e20c-4552-8ba4-e6e6df4b9071"
        },
        "item": {
          "id": "823871a3-b1d6-40d7-9c0d-8add8e43d71c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0bffbbea-80c1-4607-950f-fb0e16e484f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e7043c-e39d-4acf-afe4-525812d38445",
        "cursor": {
          "ref": "232ad93f-f8ee-4d18-81b2-7e9b1fc1e356",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d1157cff-2965-4382-b01f-660e5395703f"
        },
        "item": {
          "id": "d6e7043c-e39d-4acf-afe4-525812d38445",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6bf5d777-3db9-4a9c-abb4-203be6bc910c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2ca076-7ac5-4a93-98cb-316dd1c23412",
        "cursor": {
          "ref": "5bac99f2-230e-4083-8214-e7a0b77fe82a",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8180275c-b374-4111-91b9-fbaac0215a49"
        },
        "item": {
          "id": "4c2ca076-7ac5-4a93-98cb-316dd1c23412",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f2cca8f9-3a0f-45d6-a6b3-92a83bd53b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fcbaef-d6b5-477d-98f6-5808ce881d3e",
        "cursor": {
          "ref": "a75b507c-85c3-4a11-b729-95efb990f60e",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a92cb37c-d5a7-4619-b7cc-1f62e09cd783"
        },
        "item": {
          "id": "36fcbaef-d6b5-477d-98f6-5808ce881d3e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dbb559d9-b328-4c93-8902-6fc808c8898b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746a8f8e-e046-4180-85ea-adaf8fe9aee7",
        "cursor": {
          "ref": "d086d2c7-d333-4465-9243-efa95f45c571",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "64670bd3-76b4-418a-9817-d2ec86781274"
        },
        "item": {
          "id": "746a8f8e-e046-4180-85ea-adaf8fe9aee7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f1c8c51b-e2b2-41c9-a928-5c8f905b96d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93369672-9c3a-4690-822b-7c93dedfea56",
        "cursor": {
          "ref": "6cd1570a-1b9e-47c0-a4f3-bbaf31d04244",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5ea402fe-9a55-4b07-9de8-2a87eb5fdcaf"
        },
        "item": {
          "id": "93369672-9c3a-4690-822b-7c93dedfea56",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9c19c819-ef40-46d8-834e-c3bfbe85d146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9831dec8-5c50-402e-91bc-8a720f9bec32",
        "cursor": {
          "ref": "b7858e2b-f811-4c4b-b110-cc1ce78e9a65",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9c3508ca-856d-434f-a961-3b1b32b04e72"
        },
        "item": {
          "id": "9831dec8-5c50-402e-91bc-8a720f9bec32",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8f2cc7a2-bf4c-4eab-b5c9-92c7e05f6988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cb5d7b-ce37-4317-a498-1b3744dfd926",
        "cursor": {
          "ref": "f0936dee-26a0-4a57-a5e0-ee6fe32f9ac7",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "95e876a9-4037-4ba8-9fe0-fd07a036a1a7"
        },
        "item": {
          "id": "47cb5d7b-ce37-4317-a498-1b3744dfd926",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d0f2f435-48e6-4116-9c6d-968d15f83923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3055fc8-0215-4ac8-b39f-9eb49c2ba6d4",
        "cursor": {
          "ref": "d18002e7-94b7-45af-82dd-5be76dcd750b",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "90b67f5b-3845-4639-96ee-3e4118f69af7"
        },
        "item": {
          "id": "a3055fc8-0215-4ac8-b39f-9eb49c2ba6d4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cc387ea4-a629-47bd-9ab6-ead34fe23c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632d27eb-70e3-42bd-a7b3-639c26a66eaa",
        "cursor": {
          "ref": "3c437324-a2db-4714-86e1-10756be01fc4",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8123d444-8df2-4f6b-ab85-f60b30faaaf9"
        },
        "item": {
          "id": "632d27eb-70e3-42bd-a7b3-639c26a66eaa",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "82bf4e9e-1b26-466a-b890-9fbd008edd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc17a4fc-a736-44fd-863a-b55ad01eaf8c",
        "cursor": {
          "ref": "f8f25490-ad1d-446b-a6ff-8f10f01b94ff",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "870b3bd5-08e7-4dd1-82ec-36844c48b43d"
        },
        "item": {
          "id": "bc17a4fc-a736-44fd-863a-b55ad01eaf8c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "48a0528d-d14a-4c0b-975d-12718226320a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08489521-5408-489e-8dbd-760847ef9c88",
        "cursor": {
          "ref": "265ba1d2-6ccf-4485-b33b-ca83f98f0882",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fb623ab1-d548-4448-a680-4a792a5fc642"
        },
        "item": {
          "id": "08489521-5408-489e-8dbd-760847ef9c88",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f4d7430d-6b7c-4dbd-b8e5-4c6210975fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea3fa7b-882e-41c1-967f-db1fbe039288",
        "cursor": {
          "ref": "a4d73f39-6665-49b8-9146-1be6e5ea7885",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5dac5f8d-55a6-4d99-94ef-4642757209a9"
        },
        "item": {
          "id": "3ea3fa7b-882e-41c1-967f-db1fbe039288",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b4b74d36-e401-4dbc-a38a-fe26bf4c3347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88761608-c358-4311-8c39-c2a361c9d7a8",
        "cursor": {
          "ref": "203c2b75-97ca-430c-a54c-6882c27a28f7",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1a9471ca-48f3-4cb2-9aa4-96e613f5a6b3"
        },
        "item": {
          "id": "88761608-c358-4311-8c39-c2a361c9d7a8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5fb8f77f-a13c-4d89-9812-121ca3c6e362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b6c082-d592-4597-8026-e1573e9d6802",
        "cursor": {
          "ref": "6f993349-a37f-423a-99b7-8715c18f21c0",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c4c998e6-f52b-4a04-bad5-77e524212df9"
        },
        "item": {
          "id": "00b6c082-d592-4597-8026-e1573e9d6802",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "390b4f49-7b38-4006-bfc3-5485f7ff0c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c94873a-5c33-4040-8f2a-7f5ab590d5fa",
        "cursor": {
          "ref": "b5a93c42-ac85-460f-a3c4-a571861418fb",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0f6886a0-e062-4ac9-9d26-ac34f104eb12"
        },
        "item": {
          "id": "0c94873a-5c33-4040-8f2a-7f5ab590d5fa",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "05c3fa1c-1eb7-4fb0-b480-8652ebfa5c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0bfbc2-2f6d-4967-bfef-1d269ff0a835",
        "cursor": {
          "ref": "c75e3c8d-7134-4c77-b541-68be7f324623",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "909286b1-3de8-41a3-b795-5a172a31fd5b"
        },
        "item": {
          "id": "3c0bfbc2-2f6d-4967-bfef-1d269ff0a835",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fc95719a-330f-404a-8522-badfc371f62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692085b6-b0e9-406e-b796-3af21c79775e",
        "cursor": {
          "ref": "f6de2834-eaf2-45dc-9196-0d5f51e1653b",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a36adc31-fa72-4695-99b3-0f719cf19112"
        },
        "item": {
          "id": "692085b6-b0e9-406e-b796-3af21c79775e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d95a29f8-fb74-4b43-84d9-dab22bdf4bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e44cbd5-3b3c-4d03-8df5-405a819934a3",
        "cursor": {
          "ref": "7d1ea23e-7888-41f3-88e2-0337e85e587f",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9093ae9f-93c1-4ee6-9be3-3e76a8300207"
        },
        "item": {
          "id": "4e44cbd5-3b3c-4d03-8df5-405a819934a3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b1a75ccc-6cdb-4f90-9f56-766a74ceb1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34cba26-1297-487a-b005-f8ba06aa3847",
        "cursor": {
          "ref": "89f2dc2c-a99b-4943-a842-c1ac25c6d6c2",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "058adcf9-df8a-47f4-93cb-962e29463485"
        },
        "item": {
          "id": "c34cba26-1297-487a-b005-f8ba06aa3847",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ce3e651d-5c34-48b3-9743-49a3e25aaca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a384871a-73ed-4998-a517-87a4c84306f2",
        "cursor": {
          "ref": "5e990cef-0a0e-4322-971a-18a148dbf1e2",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8b261ab1-df4b-4099-a2df-1befc5554571"
        },
        "item": {
          "id": "a384871a-73ed-4998-a517-87a4c84306f2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bacc804d-1932-4aaa-b4bc-425f30dd5df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58e4328-588a-4625-8598-a7880b7e0fbb",
        "cursor": {
          "ref": "5f2f5f6b-db73-49f5-9fa5-492295605dae",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1bc4add1-55a7-4ec0-8b0b-100bbaf6842d"
        },
        "item": {
          "id": "c58e4328-588a-4625-8598-a7880b7e0fbb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ccfbec63-4ce1-4fcd-b00f-18b9d8be92f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084e4e86-c877-4105-a682-02b1f408724a",
        "cursor": {
          "ref": "870d61c1-124e-4206-872c-4febf3c0b092",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ebf64459-68bd-4cf1-af9d-379cb778e0a0"
        },
        "item": {
          "id": "084e4e86-c877-4105-a682-02b1f408724a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "151d0b2d-9b78-4e06-b784-027afe5ebb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ddccae-8330-43b8-9a4b-be3b193d8fda",
        "cursor": {
          "ref": "7da90281-eb52-4fb5-8e38-8ff5208f8f3e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d4ef89cd-b8ee-4ca3-ae46-e8bf17156503"
        },
        "item": {
          "id": "d6ddccae-8330-43b8-9a4b-be3b193d8fda",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8511f0ec-654d-4a29-97cb-7f784556a2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba90ef97-ef39-4ccd-81f4-9c7895c3f81e",
        "cursor": {
          "ref": "379ec72b-8d85-414b-b1f3-babc0f0a38ab",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7a96ffba-8dd5-47ab-b1e2-1438e183a617"
        },
        "item": {
          "id": "ba90ef97-ef39-4ccd-81f4-9c7895c3f81e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ac207868-4cc9-407e-bce2-d85ae1afc4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8da97d-2adb-4e9f-b9c4-95f3f35740bf",
        "cursor": {
          "ref": "b99ff1d2-5931-4336-94b6-f551c4635b5f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c6b8acc3-16a2-4838-beae-d61e861acb28"
        },
        "item": {
          "id": "ad8da97d-2adb-4e9f-b9c4-95f3f35740bf",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "42e0a418-cdef-4937-ac02-19e039f96714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3ebe3b-add7-4295-a103-cba4df7513dd",
        "cursor": {
          "ref": "3c17dd47-5fb6-465e-82ba-97cbafc3fd00",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "220ae845-f891-44af-973d-520a55c64abc"
        },
        "item": {
          "id": "fd3ebe3b-add7-4295-a103-cba4df7513dd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "506a478d-65bc-435f-982e-ff3d4d90b93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0335160c-c543-4a3c-a993-0f521dab9dec",
        "cursor": {
          "ref": "a58a1fcd-d9c2-45d3-adb5-f47564b9e214",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e4ddffd9-1e11-4f51-8274-b73911ea127f"
        },
        "item": {
          "id": "0335160c-c543-4a3c-a993-0f521dab9dec",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2afad9d1-8017-4724-8fc3-00bc2f5bdc45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb67053-c82e-484e-a912-2b8fafc447e6",
        "cursor": {
          "ref": "ef4c6d47-03fb-4f80-903b-9a2c563f019f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e45f39da-f271-466b-8f43-7c0e52711fc0"
        },
        "item": {
          "id": "7eb67053-c82e-484e-a912-2b8fafc447e6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ca2fc643-8496-4505-bd6c-bf2e04a38707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0418f91-dd3a-465c-bfcb-a8e66535eb4b",
        "cursor": {
          "ref": "2491cd4b-6724-4784-8ad6-3b337789a64d",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4e4d9a53-fcea-4d46-a6eb-42de26677417"
        },
        "item": {
          "id": "c0418f91-dd3a-465c-bfcb-a8e66535eb4b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d36939c6-2261-4cc2-b48d-0e357aa9714f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d457d52a-7b89-44c8-b239-dd868a01d0ff",
        "cursor": {
          "ref": "b4b3306c-48b6-4b26-a310-97bb0873e711",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "21295722-ff04-4a50-ba4c-36600f853e73"
        },
        "item": {
          "id": "d457d52a-7b89-44c8-b239-dd868a01d0ff",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bc032c1c-377d-44d6-84cf-9339a9bf4653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa02ed2-9160-43ee-b6f3-deb53fef8bed",
        "cursor": {
          "ref": "4bc36d1c-bbd6-4145-b83e-ecdcd02df166",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5bdf9245-72f4-4532-a781-1bf7dc90c9a1"
        },
        "item": {
          "id": "6aa02ed2-9160-43ee-b6f3-deb53fef8bed",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9a757bd5-7be5-4eb9-a132-60819a993c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae171d6-7951-4f5e-8ef0-b07fa2860c8c",
        "cursor": {
          "ref": "703296b7-8c98-44cc-a798-d61788501840",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6462ca00-3cb2-4f47-8e70-7efbe3eea81a"
        },
        "item": {
          "id": "4ae171d6-7951-4f5e-8ef0-b07fa2860c8c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "466605ae-08fb-4ef8-9817-c31027c96bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7dbf7c1-b7fd-44f6-80bf-809d626b8840",
        "cursor": {
          "ref": "3320d2f7-8ad4-4059-88f7-28d2cfddecc1",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "365edb34-e181-41f4-854b-e7a19d704c37"
        },
        "item": {
          "id": "a7dbf7c1-b7fd-44f6-80bf-809d626b8840",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "be8c7e86-c490-4643-a3ab-5221ffcef7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a45ac63-843a-46e5-a220-be8d5835573c",
        "cursor": {
          "ref": "23ada87e-653d-486e-9f09-8cfd083c58b5",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f211d105-fb6c-4c30-85cb-ee4f2505d5ac"
        },
        "item": {
          "id": "5a45ac63-843a-46e5-a220-be8d5835573c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ec782ea2-02e4-4ac1-81b9-e32636ad45da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc1f6b4-6042-4654-8b22-1a5106dcb1d6",
        "cursor": {
          "ref": "cd01c73d-26ef-4c0f-bc95-8ddf3a0cbfb0",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7df0b36c-b21c-475d-b7c2-dd04aa10c5a1"
        },
        "item": {
          "id": "5dc1f6b4-6042-4654-8b22-1a5106dcb1d6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7e7db8ce-8eff-4250-8eb1-5ff766d6a65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6f49db-d342-46d4-8ed5-dd714ac1e618",
        "cursor": {
          "ref": "9990346d-a6c2-41cc-b0f8-93a4c53fca7a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9a26273e-cf76-4a28-8f74-52603b71f1dd"
        },
        "item": {
          "id": "6e6f49db-d342-46d4-8ed5-dd714ac1e618",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e0980917-b781-46d8-bbbc-b57bd6648eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cb574c-24c6-48cf-a431-bba508b3b142",
        "cursor": {
          "ref": "0988f71c-d74f-45e9-9746-e285bc3de410",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "161fb52c-7575-4650-aa11-bee01c3d0f55"
        },
        "item": {
          "id": "97cb574c-24c6-48cf-a431-bba508b3b142",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e92227f5-93e3-41b3-bd56-5cd452d52b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a67c731-bcd1-4c9c-8a59-af84600d5b0a",
        "cursor": {
          "ref": "ea08da02-8949-4e9a-9401-e7963eb55336",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cdb30607-249c-48b3-bedb-6aed6b9c05b2"
        },
        "item": {
          "id": "2a67c731-bcd1-4c9c-8a59-af84600d5b0a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8dde1ef9-33e7-4c4f-9a35-eb22e20cc3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d5477f-1bde-4c2c-8b7f-2364f338edc0",
        "cursor": {
          "ref": "8a738924-0532-4934-a23a-7c0eb3688db4",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "828111fe-66b7-4beb-902b-696eb4ccf008"
        },
        "item": {
          "id": "35d5477f-1bde-4c2c-8b7f-2364f338edc0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "190b7d41-0b54-430d-8046-4a0b567b195f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5729bb-40fc-4e63-94ef-8390b271219f",
        "cursor": {
          "ref": "3dcfabae-8eea-414b-9e68-582438d84fd5",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9c15e3b4-4851-45e4-bcfc-9239941d340f"
        },
        "item": {
          "id": "9e5729bb-40fc-4e63-94ef-8390b271219f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "28425aed-b726-4669-a4d1-aa444b21218f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c119e66-a1bc-4fa3-a9aa-f3e3d500c021",
        "cursor": {
          "ref": "76e2bed9-e029-4bf3-8e62-48617c8e3dc1",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4a17635e-ca72-4c9d-bad9-31bb8b1d2e2f"
        },
        "item": {
          "id": "4c119e66-a1bc-4fa3-a9aa-f3e3d500c021",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7aac7f7c-aa21-4dab-9fb6-7e29dccde0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f6502d-b933-4f7e-a9d2-140d14ac845f",
        "cursor": {
          "ref": "80b7c644-fccb-4128-a045-46fcafa3f5d2",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "563984ed-4e44-4b76-b586-9ce027d2f9e6"
        },
        "item": {
          "id": "40f6502d-b933-4f7e-a9d2-140d14ac845f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6b675a03-d127-4b36-81ae-7a3bd40e6a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a878d97-40e1-44b8-8b30-c5cbaa5ca56a",
        "cursor": {
          "ref": "3eda7284-3bf2-42fa-8c84-81dd9c4cfb4d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f62ccc12-8fa2-4e3c-a734-e01c18a1b870"
        },
        "item": {
          "id": "0a878d97-40e1-44b8-8b30-c5cbaa5ca56a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c05e80eb-bdc4-483e-8138-3240d9425df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9419513-fee0-4bcf-ad8a-907c87542eb3",
        "cursor": {
          "ref": "ecc61d1c-e4c8-4607-b2de-11734379aa51",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "241807a4-7c26-4d11-8281-461fd42a026d"
        },
        "item": {
          "id": "e9419513-fee0-4bcf-ad8a-907c87542eb3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "99e05378-9290-41f7-8a35-65dbe29bbb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611f47e4-26e7-4d3f-8f6b-05421b2ddbc7",
        "cursor": {
          "ref": "52aeab21-6bec-42d2-8335-f1a6f6ce4f05",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4753612c-4cb0-4e87-b734-b18790f00dc0"
        },
        "item": {
          "id": "611f47e4-26e7-4d3f-8f6b-05421b2ddbc7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a86ad4a8-98ba-499f-b4a0-4a71dcccfa04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448358fb-ad11-4077-9c95-a88b3162c342",
        "cursor": {
          "ref": "0b598b15-3760-4402-81fe-632a373bc93b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3d0c4198-6863-4b7d-908b-d8499a009cbc"
        },
        "item": {
          "id": "448358fb-ad11-4077-9c95-a88b3162c342",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d22327a6-81ba-46f0-b141-9991363e1156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e3f964-1fc9-4865-90f2-6d34f265c027",
        "cursor": {
          "ref": "a8b94fee-5197-439e-aa88-5a98626c0667",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "12152724-df0a-481f-934b-f18ef1ef854f"
        },
        "item": {
          "id": "75e3f964-1fc9-4865-90f2-6d34f265c027",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "16158dca-795a-40db-941b-5ba54fbe6632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415538c9-a874-4566-a5e4-8ec58a914fa2",
        "cursor": {
          "ref": "160b12fe-7242-4802-b4f1-3a775fe8b179",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "412f0d36-4ca4-47dd-8bbb-9f34db81e0d1"
        },
        "item": {
          "id": "415538c9-a874-4566-a5e4-8ec58a914fa2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4aa35d8a-77db-414d-b51c-5085f3233a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1717355e-7fdf-4028-a8d1-871d50cc0558",
        "cursor": {
          "ref": "5161fb5f-22f7-48fd-9b7c-c142c2fd5f99",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "181d56e1-c273-4cbd-bd76-2a581f17d998"
        },
        "item": {
          "id": "1717355e-7fdf-4028-a8d1-871d50cc0558",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c29776c8-6872-453c-987b-2085bdef09a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9ab5a1-f8da-4eef-9b50-1be02f499b3e",
        "cursor": {
          "ref": "eecb4654-4150-43f1-bc7b-9741cc73e327",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "627b80ab-d4b9-4d0d-9886-8bee760f8694"
        },
        "item": {
          "id": "cc9ab5a1-f8da-4eef-9b50-1be02f499b3e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "839084ac-05b2-4cc6-8751-36a9890aca32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10aa13fd-e5f0-45d2-b04a-43a406047d50",
        "cursor": {
          "ref": "ff8118b3-c9fe-41a8-abd7-7f26efa336b9",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1c510523-e65a-448e-b675-96f6fd438860"
        },
        "item": {
          "id": "10aa13fd-e5f0-45d2-b04a-43a406047d50",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a047c04f-8a68-492e-a9d1-3b258ca14e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae9c6bd-d035-4834-ac97-03d24a820d8a",
        "cursor": {
          "ref": "9a4f85fe-e43c-4c8b-8cf6-c64552ce460f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e3fd77a3-cc99-436a-8648-c74cbdfac8c4"
        },
        "item": {
          "id": "1ae9c6bd-d035-4834-ac97-03d24a820d8a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f0ebb8d1-f34d-47e3-a9e0-994cbae5c7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c44bb5-1283-49eb-8032-e7fff3b6d774",
        "cursor": {
          "ref": "e951a13c-7aa8-4ef4-8052-223f14da96f6",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a949eb5e-40f8-47ea-b1b6-836b67e14718"
        },
        "item": {
          "id": "36c44bb5-1283-49eb-8032-e7fff3b6d774",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fd0a123a-c5c1-4844-b0f6-12008de2e203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2700f1ce-0d12-4aa3-b106-72d9cffd0fc2",
        "cursor": {
          "ref": "5d0deb35-7aa3-416a-a909-9ad4bb3a8202",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "dedf8344-61a5-409d-afa8-784711b33ff3"
        },
        "item": {
          "id": "2700f1ce-0d12-4aa3-b106-72d9cffd0fc2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "64f3a450-26ba-4e85-9cc6-81b009b2be2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fba4d55-2322-4c1a-8d32-c04c1f8fdabe",
        "cursor": {
          "ref": "ae7534d9-3836-4e62-a6a7-228b84e67ef8",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6a4372aa-b8a2-4975-8168-f92ae739efeb"
        },
        "item": {
          "id": "2fba4d55-2322-4c1a-8d32-c04c1f8fdabe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "118d6a33-9b1e-4b2f-a157-b3310514452e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156fd13b-05a8-4f4b-8e1e-a41653a7725f",
        "cursor": {
          "ref": "aaf0610b-cb42-4f9a-b880-9dc6df822f2f",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f75f6439-d49c-43ed-a5c7-350c97399b01"
        },
        "item": {
          "id": "156fd13b-05a8-4f4b-8e1e-a41653a7725f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "26f6d4df-278d-48b7-b0cc-d156a2d4d62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8686c965-b972-4874-ba44-5f4ea153cc60",
        "cursor": {
          "ref": "1f8563fc-a61d-4b33-870d-d14423461609",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e8a9c175-a404-4565-b2ca-f5a9a250f63f"
        },
        "item": {
          "id": "8686c965-b972-4874-ba44-5f4ea153cc60",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5ae1b11e-0b12-4c5c-b785-bd39cde1f038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53a4ab5-b2b9-40bf-a87e-3800d2422c81",
        "cursor": {
          "ref": "e9c4215f-0106-425a-a0bf-514063bdcf38",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1f419fb6-e1b7-4c55-a35d-1fcfad92b192"
        },
        "item": {
          "id": "a53a4ab5-b2b9-40bf-a87e-3800d2422c81",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4c328189-e630-45d7-aeac-e4e47fa5981b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d1d3c7-a6c6-4a41-b38f-64f06dbe2cf1",
        "cursor": {
          "ref": "57ba0d15-45c1-45c8-b15a-972d198c1899",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9907e555-e30b-4c85-b6b4-0a87b757c775"
        },
        "item": {
          "id": "83d1d3c7-a6c6-4a41-b38f-64f06dbe2cf1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4bacba66-520f-42a2-9dd3-64fa49de33dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262af5c1-8732-4589-a9ac-9f97fa8159f0",
        "cursor": {
          "ref": "3319d11d-4250-4f42-8143-44a998b0d216",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "14bf78f0-f154-4245-9783-9ddbc714e947"
        },
        "item": {
          "id": "262af5c1-8732-4589-a9ac-9f97fa8159f0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "64b97b95-d852-4905-9693-6f1d3f691315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb344999-9f3a-4f9a-be97-0e9719826943",
        "cursor": {
          "ref": "d7e6d44a-b223-4d2c-9308-33be2e8334a7",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0c220ff8-e320-4d05-a851-a7d10f4186f1"
        },
        "item": {
          "id": "cb344999-9f3a-4f9a-be97-0e9719826943",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7d61b75f-125f-4e0f-acf4-7aae27006a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67714d6a-b3e5-402e-9a0f-457cc2658c78",
        "cursor": {
          "ref": "489bf6ff-aeac-4629-bb55-a2e9d7aeabef",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2d010523-7fd1-4836-be43-ff4c4885a824"
        },
        "item": {
          "id": "67714d6a-b3e5-402e-9a0f-457cc2658c78",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0d3b29bb-2543-4e28-b93f-0f48c8167a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea858938-482e-4c02-b58b-e87983a7e6e5",
        "cursor": {
          "ref": "a72fffe5-7b45-47f2-b916-9c1a16f5f344",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "983cb106-be84-47fc-a321-495778883f1f"
        },
        "item": {
          "id": "ea858938-482e-4c02-b58b-e87983a7e6e5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8e8d78c2-e9c1-4c00-b9c2-b2339e3c4a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169280f9-82be-4944-a39e-6e8911679840",
        "cursor": {
          "ref": "44fd6ede-d70e-4a58-b669-08c4d663da32",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0360929d-7f5b-45e9-aa1b-b6249dbf1e5f"
        },
        "item": {
          "id": "169280f9-82be-4944-a39e-6e8911679840",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "091afd24-bc54-4132-bfb0-6421b8a4ac65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a91de8-9eb8-43f1-80e4-efc3f1a47c4c",
        "cursor": {
          "ref": "530cdc84-f3ff-48a0-bf17-648653c52bd4",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "923efc9c-d7c6-4a77-a7ca-c4e4441e7876"
        },
        "item": {
          "id": "30a91de8-9eb8-43f1-80e4-efc3f1a47c4c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "aa4bc016-79ce-401f-99b2-b5e7be665b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d1ce01-9810-4673-979b-83873b397e8a",
        "cursor": {
          "ref": "fd176391-070b-4e67-844e-bb64a30846a1",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "958e289c-10d5-451d-86d2-e557ce0614c4"
        },
        "item": {
          "id": "b8d1ce01-9810-4673-979b-83873b397e8a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ddf3586f-b0bf-4126-a5de-41cb85d73729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6113d8-375a-42d2-aab8-2349027072c3",
        "cursor": {
          "ref": "5d704fea-6d4c-413d-92e6-650c965db31e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "602411a1-24e8-49e6-b4be-3649decc86da"
        },
        "item": {
          "id": "ba6113d8-375a-42d2-aab8-2349027072c3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "466ea72b-ed04-4cce-a71a-e841fc24bc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6109cf6d-beec-448c-8943-7f144209021f",
        "cursor": {
          "ref": "270825e1-ad46-45bd-b83a-6bb5b19afcac",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a16b2c93-12f6-4f18-a068-4d0b34e82c7a"
        },
        "item": {
          "id": "6109cf6d-beec-448c-8943-7f144209021f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "61554830-ad2a-4432-9804-85214d3bf406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de5cdfa-e7ea-456e-a0b1-2db3edcbb920",
        "cursor": {
          "ref": "f9ae42f9-5cbd-4e94-8a8a-e1acc74fd8c1",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d519389d-4891-408f-b258-177d41bd29c0"
        },
        "item": {
          "id": "9de5cdfa-e7ea-456e-a0b1-2db3edcbb920",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bb3d363c-3d08-4b46-9b9b-a51aa5057193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9559ca34-985d-430c-8a99-78aafcd4ad39",
        "cursor": {
          "ref": "0f223f35-6111-4e41-a02d-44591c11b561",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "57678b53-fc48-4b8d-92e7-8324835da0b5"
        },
        "item": {
          "id": "9559ca34-985d-430c-8a99-78aafcd4ad39",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2967506c-1b02-4adc-98ac-1edd8860f9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef6941b-4bcd-4858-9c0c-789e49960bd2",
        "cursor": {
          "ref": "7884b728-1575-46d7-877a-03ce5f4849e9",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e157eac4-3620-408c-8820-933501c20d47"
        },
        "item": {
          "id": "0ef6941b-4bcd-4858-9c0c-789e49960bd2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e49e07e7-5b2d-4fc7-b2ca-773cb0b4f8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5368147d-7ce5-4581-9cd2-bb7bf5892d5f",
        "cursor": {
          "ref": "09acd967-bae3-47da-8aba-aea7a2d418f1",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8dd2c904-8902-4be3-a789-8b3ace5994a9"
        },
        "item": {
          "id": "5368147d-7ce5-4581-9cd2-bb7bf5892d5f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e96e3eb7-aa5a-4977-ae3c-50e02fdff414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632fbeba-d58d-4c5f-9be7-0a9225e04758",
        "cursor": {
          "ref": "c3a7cbda-b342-43b0-b0b7-e1c6a52bf214",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "25ccf820-79a6-4200-a62c-02f277acaf8c"
        },
        "item": {
          "id": "632fbeba-d58d-4c5f-9be7-0a9225e04758",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2bd7a536-dab7-4ce0-b2d3-90dcdbfad1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66143f76-ad3a-43ce-a8dd-abb0e0466e51",
        "cursor": {
          "ref": "d88426d8-3c0f-4bf7-a909-3387dfdbe7a8",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "70372053-243f-43e7-a7d5-2eaa7b778d2b"
        },
        "item": {
          "id": "66143f76-ad3a-43ce-a8dd-abb0e0466e51",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "68f90706-8a32-4aaa-bf5e-a12d2337f757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48f2c02-dd4d-4a01-a211-aeeffb8320d1",
        "cursor": {
          "ref": "a97f8d22-652e-42e8-84b1-966e4cf624a5",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "663b28fb-d983-4d67-b1da-f0f42d241101"
        },
        "item": {
          "id": "c48f2c02-dd4d-4a01-a211-aeeffb8320d1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cdd1f17d-a11e-4c66-b471-5ac1043d99c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c60b87-e04c-424d-84da-bdda23d46ad6",
        "cursor": {
          "ref": "1c73f20f-49e7-4cf2-baec-fa53753d9fd9",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d4c58d2b-cc40-4212-8bfd-b323dded0ace"
        },
        "item": {
          "id": "62c60b87-e04c-424d-84da-bdda23d46ad6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d59e4fbd-fe6e-4784-8f07-cc87f638a21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24e1a45-3c22-437e-9e7f-e3fe305e266f",
        "cursor": {
          "ref": "8b6b2ec1-ec36-477a-811b-c4acd64aa186",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "908b9ec1-0560-4587-853d-0373d1d14881"
        },
        "item": {
          "id": "d24e1a45-3c22-437e-9e7f-e3fe305e266f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "106fa568-7607-4d06-b3de-20859b92d843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2523387-5565-4970-b756-edfa6febcaf5",
        "cursor": {
          "ref": "03cfcdb8-31bc-4430-91d7-5666cf4b225f",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1a9a2cea-0d59-48a9-8726-42e99ac0fead"
        },
        "item": {
          "id": "a2523387-5565-4970-b756-edfa6febcaf5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2b5a6b95-4a0f-41f1-a522-752a386665b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f11d9e-c96e-4c4d-b142-56cf73811285",
        "cursor": {
          "ref": "c3957d7a-865d-47ed-ad02-17069cc2b62d",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c26c093c-611c-47bc-b35b-ddf3f7b107e0"
        },
        "item": {
          "id": "93f11d9e-c96e-4c4d-b142-56cf73811285",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f0182d6b-337a-4342-90f4-d184d7b857fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf9cb51-3148-41fa-8e7b-62762cd6951e",
        "cursor": {
          "ref": "4d4c36b9-95bc-4521-a309-3151ee779a8e",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0b9b4da3-4594-4458-bca7-6f89af315f1c"
        },
        "item": {
          "id": "bcf9cb51-3148-41fa-8e7b-62762cd6951e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "63215634-0dbb-4a7a-a95f-9a975c4b37be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88506513-8d03-4209-9b2c-9703a882c7cc",
        "cursor": {
          "ref": "aef07972-85d6-456b-9e0c-2765c3a557a9",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fff4bd0d-165e-4662-96fd-427d72cc3f0e"
        },
        "item": {
          "id": "88506513-8d03-4209-9b2c-9703a882c7cc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e4075525-c8ba-44e9-9219-6d6720f806df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600d02d5-6077-49a0-8530-8721fe0c042d",
        "cursor": {
          "ref": "b4db0a8f-5950-40d8-927a-087f9b5a140c",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1666e654-7f99-43a0-a54f-d2e5b3277b45"
        },
        "item": {
          "id": "600d02d5-6077-49a0-8530-8721fe0c042d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "080bb4f5-a4f5-4b18-8321-108d7c7304d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8584866-ed98-4950-8968-804bc5113ff5",
        "cursor": {
          "ref": "28111e3a-f6fd-454e-9f5a-965ca8e45832",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "270488d5-10ed-4f37-a481-1edf1294d75a"
        },
        "item": {
          "id": "f8584866-ed98-4950-8968-804bc5113ff5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "215140de-f1ba-4ad5-ba4d-87377496d4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c09260-3170-4d01-83ee-8b84956db6bb",
        "cursor": {
          "ref": "c370d512-5dc2-4fc5-bf35-72811a77c291",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7885d179-c36c-44eb-a1c9-601b3036be7b"
        },
        "item": {
          "id": "f0c09260-3170-4d01-83ee-8b84956db6bb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ab9c98fe-f97d-4f42-a9c0-d2b478941c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a41e6e6-1573-44a9-826a-8a36557df2c3",
        "cursor": {
          "ref": "7b6a3665-af84-41f1-8dc7-66cc4577017e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "13e25931-bc02-4923-8ab8-1f31035412b2"
        },
        "item": {
          "id": "9a41e6e6-1573-44a9-826a-8a36557df2c3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1e75e8a1-1377-4b21-bb4e-4b0088bb6b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28168c53-55a1-4364-b0d6-d7b3b058eed3",
        "cursor": {
          "ref": "6787f597-6d9f-4ef8-a6f9-6d9656628ddc",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0ba77969-30b8-497a-82e6-4ebc8b57811c"
        },
        "item": {
          "id": "28168c53-55a1-4364-b0d6-d7b3b058eed3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f8a959ec-9f4f-434b-b849-82f9a3442fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63c8ae0-4da2-4eff-b138-3f71552c802a",
        "cursor": {
          "ref": "da9f90b6-41d0-43c4-bfd1-8ed5bb289c5d",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "336e0592-0ff0-4194-9d9a-9f2be272631b"
        },
        "item": {
          "id": "d63c8ae0-4da2-4eff-b138-3f71552c802a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "72bddbe8-ac5e-4735-a4d2-386220ed89a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d14a13c-d5b5-490b-82b3-69fedc537e02",
        "cursor": {
          "ref": "5f0aae0d-707c-4f66-83f9-be40fb7e6893",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4881f716-9cfe-4f91-96ad-e5b78d08f18b"
        },
        "item": {
          "id": "7d14a13c-d5b5-490b-82b3-69fedc537e02",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f3f7d08a-ab68-4b75-be72-8a09892731b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c156d70e-615d-46e2-a648-f36d712eed45",
        "cursor": {
          "ref": "8163dda2-8c6c-426b-adae-dfb676acf902",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f581c7d2-04e6-4d44-9f4e-9b03d7a597db"
        },
        "item": {
          "id": "c156d70e-615d-46e2-a648-f36d712eed45",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e8f7dbd3-b002-4798-aa3c-2c3b223f77c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3311d1-d85a-4192-8f40-6d443c96d9cf",
        "cursor": {
          "ref": "da6ce353-bc8a-4d7e-be49-71777f895e30",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2fb6464c-2216-40b6-8348-64f63417cd42"
        },
        "item": {
          "id": "ae3311d1-d85a-4192-8f40-6d443c96d9cf",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "629e3473-10a2-4b6f-9f27-887616baa687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5f753f9d-f88a-4310-9134-3b07926aeddf",
        "cursor": {
          "ref": "db34b6f9-79fb-456f-ad59-e8f666b336d0",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1999b0f0-cec4-4a86-8068-1d1365591c6e"
        },
        "item": {
          "id": "5f753f9d-f88a-4310-9134-3b07926aeddf",
          "name": "credentials_issue"
        },
        "response": {
          "id": "98d71a1b-8970-4787-b47f-858fe9c246a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ff878646-7567-4009-9e12-96bcdf7462aa",
        "cursor": {
          "ref": "e1ae48e2-2c73-47ca-897c-516a3c0807b0",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a988e176-1c0d-49b3-a5a5-a68be08f9f8b"
        },
        "item": {
          "id": "ff878646-7567-4009-9e12-96bcdf7462aa",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2cf26ddf-0257-4ce3-ae38-97189c3d316b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "46f7c4a7-a2db-4cf5-b520-972f6d77aef3",
        "cursor": {
          "ref": "b729c986-cbcf-4e53-941e-6499509dcc9b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2565513c-a594-42ba-9a1e-b4d1cc9b08da"
        },
        "item": {
          "id": "46f7c4a7-a2db-4cf5-b520-972f6d77aef3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2f074ba5-5550-4d13-bb62-799217d67b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "8ffa3630-f680-4c95-a194-57154152b0d9",
        "cursor": {
          "ref": "1c8afdd0-d6e2-4fba-8db3-904f0a4c2078",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0dfb7664-b545-411e-83af-73a24989b1c4"
        },
        "item": {
          "id": "8ffa3630-f680-4c95-a194-57154152b0d9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0451b2ca-6b84-4b28-ab71-743af02ed4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "654ff75e-d7c2-4f11-974c-0a4eb060975d",
        "cursor": {
          "ref": "31c11b92-2ab9-4112-8da5-4b332666aedd",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "83a43ed3-0d5b-40e9-a7a1-3af16398e3d4"
        },
        "item": {
          "id": "654ff75e-d7c2-4f11-974c-0a4eb060975d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d247064d-2ef4-4af6-b198-a06953a49a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "19098e3a-2099-4a65-8a48-1b9463662ef6",
        "cursor": {
          "ref": "a13f9e44-2c1f-43f1-b1ce-b418164f8728",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "763fac02-fe4b-4c23-a245-e5feff6e1655"
        },
        "item": {
          "id": "19098e3a-2099-4a65-8a48-1b9463662ef6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ea15709f-ad68-40c8-9c3e-77a71e9ef511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8e499406-0968-4876-a6c6-e819b564ab04",
        "cursor": {
          "ref": "173956ed-589e-4c6e-907b-be8d1a8fd605",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a9febcd7-23b9-45c2-8c52-7e8a07570dfc"
        },
        "item": {
          "id": "8e499406-0968-4876-a6c6-e819b564ab04",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "660eec70-2a76-4dfc-9c45-fd198d185e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335df22b-394e-4a78-bc39-1c51dfb20cfc",
        "cursor": {
          "ref": "883e202a-e855-4cc9-99af-9d756e43335c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5667faf9-2f81-4183-8a67-a8ccbcd101e9"
        },
        "item": {
          "id": "335df22b-394e-4a78-bc39-1c51dfb20cfc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ccc15813-1f13-4d51-bf5b-041c685b74b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761ca6d9-392d-45cc-ba93-916b1998d769",
        "cursor": {
          "ref": "4a20f21b-1660-475c-83de-229ccf8d5fca",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "35ba215a-87af-4d9a-a4da-90032b9f5941"
        },
        "item": {
          "id": "761ca6d9-392d-45cc-ba93-916b1998d769",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b21aa57f-0593-48e0-85b9-71333f813a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60e9e7e-a9ac-43a6-97b5-8c7e842b5146",
        "cursor": {
          "ref": "ee9d03ae-7472-4434-b1f3-32eff6a7dc46",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7433e20c-5ad5-4444-b55e-f696de33d795"
        },
        "item": {
          "id": "a60e9e7e-a9ac-43a6-97b5-8c7e842b5146",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e3aa65e0-2968-477d-9ccd-cdc11c820c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722b39b5-a4b6-4f73-9671-8d43f46fa11a",
        "cursor": {
          "ref": "34c6eaa6-0e70-43f2-9994-6452144f0166",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b18eaa5a-70d8-4ff7-ac9e-7f57b1fb6a3e"
        },
        "item": {
          "id": "722b39b5-a4b6-4f73-9671-8d43f46fa11a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b4ca1820-3d34-4262-8ff2-46d9731ca8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac847ab1-c59d-4a1d-8cc7-616589bbed0f",
        "cursor": {
          "ref": "2879c736-6b1c-4f28-9398-ee147e230dfb",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5b367d86-7a22-4706-a850-d5792d43f081"
        },
        "item": {
          "id": "ac847ab1-c59d-4a1d-8cc7-616589bbed0f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "03952938-4864-4c7f-9186-1b60d60f90df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56ba120-5b0d-49f6-8ea6-38768c798028",
        "cursor": {
          "ref": "02b47e61-26b5-4044-81e9-1a3b0d902739",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "63fd7df8-75c2-4232-bf02-69d882d7bf85"
        },
        "item": {
          "id": "c56ba120-5b0d-49f6-8ea6-38768c798028",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8ccdc539-c734-4be2-ad92-47a6cea37888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fc5c0a-c250-4f90-94d0-b0f30408deb2",
        "cursor": {
          "ref": "d4610823-d29f-478a-a5db-e73e0a4a4cec",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f10bcb91-d708-451c-b272-2bb69c951056"
        },
        "item": {
          "id": "65fc5c0a-c250-4f90-94d0-b0f30408deb2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "569e32fc-416d-4155-b97a-f62ac27fa7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0118b17-38d6-42e2-8dd1-8b6f5feb5a25",
        "cursor": {
          "ref": "a953e0c6-5b17-4672-8295-fe7c02b9fb40",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "01dac89a-d084-4cce-a57b-bd9f7654421e"
        },
        "item": {
          "id": "c0118b17-38d6-42e2-8dd1-8b6f5feb5a25",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5c288592-2573-41a4-ba91-44faa01e7e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34001c7-14b9-410f-a07d-6e3f5d4918d3",
        "cursor": {
          "ref": "04e71a05-9c5a-432b-9102-fc87dd0f6dd0",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2ac60d5b-6948-42e6-9cfd-0ac68e5c6ae8"
        },
        "item": {
          "id": "a34001c7-14b9-410f-a07d-6e3f5d4918d3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "59b3f131-3965-408a-a218-835aa350491b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bf8fcc-cd2e-472b-9f1d-be083aa0ef92",
        "cursor": {
          "ref": "77cac791-346d-4430-a839-99e5503fe5b4",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3d924d84-b65c-487c-b4df-0fde97ef53ce"
        },
        "item": {
          "id": "22bf8fcc-cd2e-472b-9f1d-be083aa0ef92",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8fdd403a-55bc-4828-901d-9349fc13902e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac9adfe-3fac-4f2f-bcf3-ef5fc3a2da79",
        "cursor": {
          "ref": "9e457256-16d8-46a8-adbf-1709fc0d9757",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f7677a29-ad3b-45f8-981d-185b96b98c26"
        },
        "item": {
          "id": "cac9adfe-3fac-4f2f-bcf3-ef5fc3a2da79",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "900744de-85ec-4776-afb9-af04f69ab9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7dfd0f-6613-4a77-bb1b-04708e58a0dc",
        "cursor": {
          "ref": "433aa733-d12f-49a1-b6be-df0062a50236",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b93ef5e1-a109-400c-a560-3b0c02cc7e1b"
        },
        "item": {
          "id": "fd7dfd0f-6613-4a77-bb1b-04708e58a0dc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "aabc310a-13c5-4201-99f3-2c7198a7c7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587ea993-bf7b-430c-9829-9dde146fd5f8",
        "cursor": {
          "ref": "4c0d882a-7180-4623-80b5-e0a3f4737529",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f489c5ab-b198-47f7-9ecf-24878074cb22"
        },
        "item": {
          "id": "587ea993-bf7b-430c-9829-9dde146fd5f8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ac524cdd-a7c4-44a6-a76c-fba7228bcd44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b23aa2-ffbc-4ff7-b076-3e1cfbc3326b",
        "cursor": {
          "ref": "3fbb1291-c8c5-4c96-9d97-0dc30f28054e",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b36b8c2d-1c14-454e-8aa5-1c52e28786ca"
        },
        "item": {
          "id": "35b23aa2-ffbc-4ff7-b076-3e1cfbc3326b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fe09f55f-fd4c-4360-8e61-f3c50af63384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0d7046-9d08-41b9-b7e2-dd1bec5d070b",
        "cursor": {
          "ref": "0d935e08-cd3f-46f3-893f-849a0425bd0b",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e9858b58-f6aa-4a77-8b0e-dbfa6f38770e"
        },
        "item": {
          "id": "cc0d7046-9d08-41b9-b7e2-dd1bec5d070b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9f8a76fe-1067-44b2-a37e-d4301217146f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38467d52-ad26-4950-b328-b7fe7343ba7c",
        "cursor": {
          "ref": "03daafe4-e305-4b00-89a5-ceacad7afb63",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "24337ea5-c62f-476b-97fa-f216adb07b9a"
        },
        "item": {
          "id": "38467d52-ad26-4950-b328-b7fe7343ba7c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a1b03680-0fbf-4d8f-a857-284e00d4cb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778c1ecd-914e-4d52-aac9-d2565cf6ceb1",
        "cursor": {
          "ref": "99264c83-8813-4c0d-b69c-172d6f2fafce",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "64ec47a6-714e-41d0-98e4-766c13a1e39f"
        },
        "item": {
          "id": "778c1ecd-914e-4d52-aac9-d2565cf6ceb1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "be126290-c42f-447f-8c33-7add441c05e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac88a5d-b992-4046-af57-f54f4241fced",
        "cursor": {
          "ref": "15d946f7-8844-42ee-a038-50f22778971c",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ef068ae9-6769-4829-bdf9-5a8c1866f3c8"
        },
        "item": {
          "id": "4ac88a5d-b992-4046-af57-f54f4241fced",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e1819328-5f56-4ec4-839c-c19e289f52ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e1b543-f8eb-405b-a2ac-0b40e0604a47",
        "cursor": {
          "ref": "f09e646a-5a5f-4978-9a56-179ab1133a27",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "01b5049d-709a-4976-837a-3e8a32f96c54"
        },
        "item": {
          "id": "f9e1b543-f8eb-405b-a2ac-0b40e0604a47",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a5279a3a-1f5a-4a93-8126-d86468c3dd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef68a4fc-d53b-4999-9eb1-d47b588fc881",
        "cursor": {
          "ref": "71f23cf5-b586-43ca-aff4-032aaa9aaeeb",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6a80b22a-91ba-4cff-890d-571dccb93b0c"
        },
        "item": {
          "id": "ef68a4fc-d53b-4999-9eb1-d47b588fc881",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cbd3312d-6b12-44c2-9ef6-88419f3dcb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8bb7ff-485b-4849-b181-cfc9e174ee57",
        "cursor": {
          "ref": "f5c460ed-5b32-4a91-b82c-c59b40e34f70",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "32a0330c-94a0-48b4-ab8c-a6df63b1f1f2"
        },
        "item": {
          "id": "bf8bb7ff-485b-4849-b181-cfc9e174ee57",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2f3b0ea0-7bce-498b-aab4-45adca39eddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df78cd1-791d-4b1f-aad8-daf1e888691d",
        "cursor": {
          "ref": "cca77c46-69d7-4a0a-8716-b601d40ef8e7",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e449f0ee-96fc-48a0-a788-100d8a0b2dbb"
        },
        "item": {
          "id": "3df78cd1-791d-4b1f-aad8-daf1e888691d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "435f6b9e-696e-46df-9663-9335385ea3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37788721-9d7e-4a87-88c5-ede05a2783dd",
        "cursor": {
          "ref": "9715a35e-6b92-41bc-8057-cfa3acd3cd79",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6d522c49-9b2d-44d1-a4a0-868fce386e4e"
        },
        "item": {
          "id": "37788721-9d7e-4a87-88c5-ede05a2783dd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bdfdf763-a5c5-4244-b0e0-699ddd84cbec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64103c7-95d6-4089-8def-aca8978c112f",
        "cursor": {
          "ref": "9fdd459b-99c5-474e-bb20-e5f8f7ede46e",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6ee8d35a-9528-480f-8530-75f877bea180"
        },
        "item": {
          "id": "e64103c7-95d6-4089-8def-aca8978c112f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ff48b3d8-5ddb-429e-92bd-74d2d5609249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8874c968-5eb3-4583-9dee-1f2268ebd67f",
        "cursor": {
          "ref": "e9932c48-eb38-4d7f-a87e-4328dbaf239e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "551b70b3-d330-4d89-a241-ebc3bd6ba802"
        },
        "item": {
          "id": "8874c968-5eb3-4583-9dee-1f2268ebd67f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "964d0eab-00a8-4405-9ac0-808839697432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54fd68c-942b-450f-be89-1ee2e7c25c8a",
        "cursor": {
          "ref": "4dfd4d87-00f0-4887-a3ba-e644a3139d32",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "85f31fa1-f0f1-4d11-92c9-9495eb179918"
        },
        "item": {
          "id": "d54fd68c-942b-450f-be89-1ee2e7c25c8a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "15643fe1-87ac-41c3-b083-dff6dad8a31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e694c5-0da0-4beb-a662-7bd6e07c4e77",
        "cursor": {
          "ref": "9607ebb5-35ef-4c36-b10a-df052aa8be62",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "627815ab-c9ff-4620-bd67-ab0ae8a79b4f"
        },
        "item": {
          "id": "b0e694c5-0da0-4beb-a662-7bd6e07c4e77",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "34ffa00b-512d-4b80-b095-5cae8c2a26d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a79b406-febc-4968-a426-56eefdf62bb7",
        "cursor": {
          "ref": "6915dd04-ee3a-4a04-b1be-41f13f2e16e8",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3a396ce8-5427-4bb0-af94-b04c1c36fb75"
        },
        "item": {
          "id": "4a79b406-febc-4968-a426-56eefdf62bb7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7eb6a78e-f5f5-4ff8-b759-1e0f166745a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9d5a7b-edd8-4cf5-8f24-eb7f522e1403",
        "cursor": {
          "ref": "bb91b4e2-b54d-4ef3-8773-165917066c74",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "22ef8b0d-5f98-4122-81fe-9c90efa9b65a"
        },
        "item": {
          "id": "2c9d5a7b-edd8-4cf5-8f24-eb7f522e1403",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7f3f71a2-859d-4540-af05-266710b84385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2da54cf-702e-45b5-8d8c-11739075a04d",
        "cursor": {
          "ref": "2bf10cc4-041a-46cc-87d2-7271d933a391",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b242d2c0-2296-4a6f-ad3c-3c7a614569e8"
        },
        "item": {
          "id": "a2da54cf-702e-45b5-8d8c-11739075a04d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c2fba9a0-7c73-4b89-8aa2-230b838e7305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7efbb37-0a77-476a-881b-589310b110ca",
        "cursor": {
          "ref": "269e098e-d616-4e0d-ac00-7c5e8f957fbb",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "315e5468-205b-4321-a5c5-b22d562df860"
        },
        "item": {
          "id": "f7efbb37-0a77-476a-881b-589310b110ca",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9f6a2ff8-d5f6-4770-9290-67065aa5e929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca8851f-5616-40b9-8b19-2f702a07663a",
        "cursor": {
          "ref": "4db934af-5675-4c69-ac88-73e1d2c37ae3",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cc67d0ce-e996-4f66-ae2a-ee0c0b567c65"
        },
        "item": {
          "id": "eca8851f-5616-40b9-8b19-2f702a07663a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3b257bb6-f29e-40e9-8910-53df2c98201f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9154eb-d53a-4e85-8089-f939492dd8d4",
        "cursor": {
          "ref": "9c8af139-7b8c-4ba8-8314-daf9ee66c599",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5b13e791-7d02-40a0-a7e2-a3d6a896460e"
        },
        "item": {
          "id": "7c9154eb-d53a-4e85-8089-f939492dd8d4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "34a91cfc-d776-4eab-9e71-dd3e11bb9715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409bcddc-aba3-44a8-a98d-ec94a3d83210",
        "cursor": {
          "ref": "8c0ea8bd-6d25-4791-8ab6-b25c12f6cd23",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "dd9c0b23-cc27-4582-be62-b73230ebe3e2"
        },
        "item": {
          "id": "409bcddc-aba3-44a8-a98d-ec94a3d83210",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8bbc474b-7015-4f45-9fcd-27b6d62f39a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b3fcd4-1d67-4f16-82ff-9ee96900cb50",
        "cursor": {
          "ref": "397dd1ad-bba4-4d3d-a684-08f71e720c68",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2edc9988-9c2a-434d-9383-2863466d5796"
        },
        "item": {
          "id": "17b3fcd4-1d67-4f16-82ff-9ee96900cb50",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a2986bcf-d904-44aa-8575-c5009e70b46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196933b0-ad3a-4a9f-89fa-93dda4e562fa",
        "cursor": {
          "ref": "55e77325-1fe5-4fbc-b9b6-65eb52a75171",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7bde5384-106d-4f3b-ba27-523fc813a797"
        },
        "item": {
          "id": "196933b0-ad3a-4a9f-89fa-93dda4e562fa",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6dd36980-6160-4c5b-9314-acf48f5e4e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af38bc51-3fe7-46bf-9ffa-458fb27ae8f2",
        "cursor": {
          "ref": "2686421b-8963-49f8-8e25-c2023059a5c7",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "dea7c454-a75c-4962-868e-52637b0cee0d"
        },
        "item": {
          "id": "af38bc51-3fe7-46bf-9ffa-458fb27ae8f2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "83082417-de8c-4feb-92b6-10c4bc5e57cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2984dd71-cc6a-498b-b3ed-c4ea7d031472",
        "cursor": {
          "ref": "7f6ab2a9-0bf6-4147-ae11-c1dfa482ffa4",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "704abb23-6290-41b9-b980-8d5c36a2340d"
        },
        "item": {
          "id": "2984dd71-cc6a-498b-b3ed-c4ea7d031472",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a2f8ebb0-5938-4d39-8d85-d3c60bcdebaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa79096-4a9c-4dff-b4dd-6d4799bcf692",
        "cursor": {
          "ref": "df128afd-dbd2-4771-9514-c287162de12d",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b777f5a1-540c-4487-89d1-bd0d7e5a90f7"
        },
        "item": {
          "id": "1aa79096-4a9c-4dff-b4dd-6d4799bcf692",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "08e83d67-bb28-4f8c-aede-6e44f0ac4534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce181798-2585-4550-af8b-b81863c91fd8",
        "cursor": {
          "ref": "e5b1a4d4-df8e-49f9-8e6f-fef1d9747ff9",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6efc20d4-edcc-4888-bed7-2636ee620585"
        },
        "item": {
          "id": "ce181798-2585-4550-af8b-b81863c91fd8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e6115177-1a38-4b88-ae81-d76f0a42bc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6527647-f0ce-432b-8aca-5a452201c660",
        "cursor": {
          "ref": "585d2bf2-5208-4d84-9ee1-e700f0e8ea0f",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4dd15d6c-da57-43b1-aab0-029b2e31343f"
        },
        "item": {
          "id": "b6527647-f0ce-432b-8aca-5a452201c660",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "10671f83-f93e-48d4-8ab5-fcc070540d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48063135-3343-482a-a376-842bd75cb581",
        "cursor": {
          "ref": "3d22581a-cf14-44e9-ad75-085d25d44290",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5e8ca7b0-54e4-419a-9eef-6e8a8274b98a"
        },
        "item": {
          "id": "48063135-3343-482a-a376-842bd75cb581",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6264f711-977e-423c-8425-2f05c086d352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ee27ba-57c0-4c4b-bbef-9c3f38786aa5",
        "cursor": {
          "ref": "a9713748-60cd-456a-a49a-86a66d6a8899",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0be11f9d-018a-4bd6-9401-1d25a58a27ea"
        },
        "item": {
          "id": "20ee27ba-57c0-4c4b-bbef-9c3f38786aa5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "91d338ec-2277-4f2d-ae32-2e6e584f0d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07d353e-505c-46fa-98ae-2a79673ec7f7",
        "cursor": {
          "ref": "634364c8-06dc-4e5d-bcb7-a60a61025013",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "28bf0fdb-3d54-4cdb-a8dc-42e5ba6d106f"
        },
        "item": {
          "id": "b07d353e-505c-46fa-98ae-2a79673ec7f7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "39d20625-1d1b-4fdf-ad90-acc1fe3e9dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2990d97d-1794-44e9-aca3-ab8490c7c3f7",
        "cursor": {
          "ref": "d031d524-027f-45bc-8f66-7efc5a43b7af",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "67874705-e5d1-4327-907b-b292ae1cfc04"
        },
        "item": {
          "id": "2990d97d-1794-44e9-aca3-ab8490c7c3f7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "673d3e6a-8467-427d-a457-0eb140dc2add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b8724a-94eb-4ff8-8fbc-bbb198f693de",
        "cursor": {
          "ref": "4bce8397-ff2c-43f2-8bef-f091a3364b64",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "47f462d8-bd5c-4a99-a201-b7f6c37b82d2"
        },
        "item": {
          "id": "b0b8724a-94eb-4ff8-8fbc-bbb198f693de",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8e021c64-b964-413b-b180-470c301bf29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6876422b-bce3-490d-999d-d6db5d01b76a",
        "cursor": {
          "ref": "35f3fec6-968e-4f57-bfe8-b86d357dd2b7",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "11d9f7fb-eb5f-40c9-8662-8e0a9a180b92"
        },
        "item": {
          "id": "6876422b-bce3-490d-999d-d6db5d01b76a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2e7a41b1-6204-4419-b008-5dc2ecd01b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01bd37ff-b869-4f2e-b0d9-a4c79e24a85a",
        "cursor": {
          "ref": "a0993057-8a48-4021-a622-fbbcc2da0362",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f133c0af-040b-4903-85cb-803dc144adbf"
        },
        "item": {
          "id": "01bd37ff-b869-4f2e-b0d9-a4c79e24a85a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "86ea32e1-89b4-4f76-b6a6-6c7c5f5265fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ede596-a96e-4526-b8fa-6be8c6af0276",
        "cursor": {
          "ref": "461e55f7-14b2-47f9-9de2-058bc47a12be",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1bc944f0-7815-49a0-96c9-c4d5ca397b89"
        },
        "item": {
          "id": "d7ede596-a96e-4526-b8fa-6be8c6af0276",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "72047eaf-a204-4a1a-b7e8-2beeb11ef82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b16bca0-db82-4738-9253-8267516107df",
        "cursor": {
          "ref": "38ec934e-9217-4002-8f26-5f2070c3e6ad",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "740219be-08ab-49ad-921d-291514c2afc6"
        },
        "item": {
          "id": "9b16bca0-db82-4738-9253-8267516107df",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "98d1d016-00de-43dd-9848-ea0ab49be70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d418e849-fb13-40d2-af6e-ce88d1b12390",
        "cursor": {
          "ref": "952e9816-c272-4060-9afa-5de0705558e3",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "918c7842-e0eb-4784-8dcd-fada9d492be5"
        },
        "item": {
          "id": "d418e849-fb13-40d2-af6e-ce88d1b12390",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "45cd18ee-2341-4025-9a1d-84ce1033a6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7bff86-8e34-40ea-ad6f-05b54fb42ba6",
        "cursor": {
          "ref": "eab24bdc-7eb0-41e5-bd1b-54400df399d3",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c83530ed-7f1f-498c-97ca-f2c53b2418d9"
        },
        "item": {
          "id": "ae7bff86-8e34-40ea-ad6f-05b54fb42ba6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d9bff3c3-ce1b-465b-adeb-0752a7490876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96228ce6-8bb4-4737-80e7-d3e6bf3fae36",
        "cursor": {
          "ref": "aaf0b550-27cf-4fd7-b289-c32d725e18a6",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "429b293e-4124-4ef8-bfdf-aa0bda8d2ffc"
        },
        "item": {
          "id": "96228ce6-8bb4-4737-80e7-d3e6bf3fae36",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "04017ea4-f2fb-4895-9acf-3179027eb29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8e3819-c13d-413c-99ea-f6cd8e79bf11",
        "cursor": {
          "ref": "63a40cae-f853-41dc-a217-32db7f59e20c",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9a23639f-b14b-4e36-964e-07d28193e008"
        },
        "item": {
          "id": "1c8e3819-c13d-413c-99ea-f6cd8e79bf11",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3d04181f-3d2f-4567-be10-9cbfb73426c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb71ab5-f6b9-4e1f-aaf7-8930c50ad700",
        "cursor": {
          "ref": "6ffaf561-ef8e-4968-bab0-941bb11ab522",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9834210b-0de1-4d16-9b05-25c4426d6315"
        },
        "item": {
          "id": "5cb71ab5-f6b9-4e1f-aaf7-8930c50ad700",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9b38671d-7239-4ed3-94fc-271e6d04f8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720f8220-c33a-4145-9949-3921bec1e0f6",
        "cursor": {
          "ref": "3a97aaff-dd09-45b4-b9e8-c11d2319921b",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b9d0ee0e-deaf-479f-9866-ba3da59f66b9"
        },
        "item": {
          "id": "720f8220-c33a-4145-9949-3921bec1e0f6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "44eb2040-856b-4f51-b571-8bb38bfc7278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1b03ef-5ac5-4b4d-80cd-6bff31dcd6a4",
        "cursor": {
          "ref": "5692965a-62bd-4540-b6ea-637cf2788fd0",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a73034d7-aaa9-4275-8348-688867a23772"
        },
        "item": {
          "id": "6d1b03ef-5ac5-4b4d-80cd-6bff31dcd6a4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1e922698-427f-407e-a973-e8844a801529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e90566-7af0-41c1-8e38-2bc6bd0813a9",
        "cursor": {
          "ref": "3b5e9b57-e0d6-4307-ad37-f168ec0ce62a",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fa3c3730-7d69-4d8d-9044-f39463d6f84b"
        },
        "item": {
          "id": "33e90566-7af0-41c1-8e38-2bc6bd0813a9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8655f21f-cd98-4d90-86bc-e966a41d50aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c55857-97ed-496f-bbda-4f7201ebf3e3",
        "cursor": {
          "ref": "26cfbf52-97c9-4546-bebc-14fe54cad8f0",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9b559759-d37f-4d69-b7eb-b42c9162a6d5"
        },
        "item": {
          "id": "b3c55857-97ed-496f-bbda-4f7201ebf3e3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2757d867-e7fc-4b24-9295-f337c5221d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5245fa-d87d-44cd-8d43-f727e984f323",
        "cursor": {
          "ref": "d0110f30-fc36-4338-9bb6-9ba75747f65b",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1c9a577f-6f04-4e15-8f1c-458d9d95ecc9"
        },
        "item": {
          "id": "ea5245fa-d87d-44cd-8d43-f727e984f323",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a9ef63cb-c277-4c27-8f35-f1a15036eec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376c787f-be21-419d-a7ed-da8fda9662f8",
        "cursor": {
          "ref": "3cea6f74-ed0b-4144-95a1-eb808dddc5ff",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1be74473-5fe2-4972-9f2b-22d5874d0c23"
        },
        "item": {
          "id": "376c787f-be21-419d-a7ed-da8fda9662f8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0677002d-74ba-4956-bb52-085b0db1394c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94f2599-3c1b-45d1-be13-f0bbe47c787d",
        "cursor": {
          "ref": "911a8f6e-3b29-40b3-8fde-1cdacb5c54a1",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a037820a-6be0-4c2a-a301-9597de336b48"
        },
        "item": {
          "id": "e94f2599-3c1b-45d1-be13-f0bbe47c787d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "09d2f079-9f5f-4e13-97ff-b68f13c3ce65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871b09dd-9a90-465a-9eb4-40497f20210a",
        "cursor": {
          "ref": "b130278f-3ba2-4eee-9665-5d801db4cc87",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4de52d02-7a21-4758-b28d-8d354ef58d8d"
        },
        "item": {
          "id": "871b09dd-9a90-465a-9eb4-40497f20210a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "21a4c5c7-840a-4fea-9162-41a89b8044f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80470e49-6c7c-4e2b-8df6-8c00507d8a1d",
        "cursor": {
          "ref": "972e3231-2a66-42e6-a8ff-0d94db2f424b",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "33013de9-e6d6-4c2d-8468-aabd1d6a7e29"
        },
        "item": {
          "id": "80470e49-6c7c-4e2b-8df6-8c00507d8a1d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "cb05d8f4-f3b0-4116-a1e5-cf725f879f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760fe5c2-3341-42de-8106-d73a57c10868",
        "cursor": {
          "ref": "64d0123f-1212-403b-aa08-80162e2134f0",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b1d75299-fde3-42a6-b6f0-b5fc40c7086d"
        },
        "item": {
          "id": "760fe5c2-3341-42de-8106-d73a57c10868",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bfc149dc-449e-4648-b0aa-067d0a72dc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cd48bf-d888-4036-ac19-f34147a5137f",
        "cursor": {
          "ref": "f77296e3-fbc9-4bc8-a867-fb0fb4fb674b",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "020ba9ab-d0e3-4c93-8d12-4869411f3b06"
        },
        "item": {
          "id": "65cd48bf-d888-4036-ac19-f34147a5137f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "81b8b5bc-9678-4e6b-9e36-1e730ee6dc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef165c6e-ec2a-4853-a127-81756c8a03cc",
        "cursor": {
          "ref": "41ba906f-51dd-49a7-8b5b-adacdfec3f0d",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a90b4ab3-48f5-49f2-919e-7c90e6c8da8b"
        },
        "item": {
          "id": "ef165c6e-ec2a-4853-a127-81756c8a03cc",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "13919c3d-e7b6-47a8-93d2-05d333e4fdc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906063a5-ff66-4e5a-a90e-0f58f282507e",
        "cursor": {
          "ref": "653b1f1f-6d1f-406e-838c-7d46f6301e45",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f8a6654c-50e8-472b-ba87-9a77e63d5baf"
        },
        "item": {
          "id": "906063a5-ff66-4e5a-a90e-0f58f282507e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8e382cbc-d55d-4cd6-af68-a97ec6754ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27feb238-ed8d-4f4f-a3d1-e3924684d44c",
        "cursor": {
          "ref": "5188bf62-cce6-4483-94b5-ce8bf2357f69",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "70706183-8b2a-4fd6-b2ce-743eb04be0de"
        },
        "item": {
          "id": "27feb238-ed8d-4f4f-a3d1-e3924684d44c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a39aed23-7a84-47a7-8eeb-2c94827b6fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a141c2e-588f-429d-9e60-c8995310acd8",
        "cursor": {
          "ref": "fb91542c-80b7-4982-a991-c2cd2134fed4",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "496063a8-6382-4c73-a4b6-69beffdcf0cf"
        },
        "item": {
          "id": "8a141c2e-588f-429d-9e60-c8995310acd8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "17cd28c4-d10b-4dca-a431-c011b690bf7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4177c187-78aa-42de-bb52-d08104edee8b",
        "cursor": {
          "ref": "6641a2da-7d5a-4616-b9cb-f4656799b3f6",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5d488c03-9c85-4cc9-b862-b72965f7f1a6"
        },
        "item": {
          "id": "4177c187-78aa-42de-bb52-d08104edee8b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d0deaa29-0a64-4be9-ad05-fbcc8a7e3c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278450dc-eb3d-4c77-9c22-ecdbd3cdf7a0",
        "cursor": {
          "ref": "66da7a05-f646-4c42-8bc5-41f086a2b48e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fab49011-6772-4b53-9e6d-15ed41606bcd"
        },
        "item": {
          "id": "278450dc-eb3d-4c77-9c22-ecdbd3cdf7a0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fba8355e-34a8-4fc3-8498-fa9b3b666b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e9ef38-7ecd-42f1-b42a-fadd150f541c",
        "cursor": {
          "ref": "e128a735-34c6-421f-b060-fb1bc0db0717",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "94d4ede3-26af-4c46-80dc-12077df80efc"
        },
        "item": {
          "id": "d0e9ef38-7ecd-42f1-b42a-fadd150f541c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7f7a5f06-c995-484d-9b34-88b40cc01485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27b5d70-9307-40bf-8a8b-ad2d88be9096",
        "cursor": {
          "ref": "7f3c782a-600f-46c3-88a5-054ec63c4f81",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "592ca621-dbe6-4be0-ac6c-77acb9309c4a"
        },
        "item": {
          "id": "a27b5d70-9307-40bf-8a8b-ad2d88be9096",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1e3df76e-6b5d-486c-bfd0-6cc9be835a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c2616a-f0fa-4c28-878a-b12773742e57",
        "cursor": {
          "ref": "00a2ac6c-d0f5-484c-b714-f853ffd9c305",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "25b92392-3b12-462b-8c24-b8f02ba89a0a"
        },
        "item": {
          "id": "09c2616a-f0fa-4c28-878a-b12773742e57",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d71121d2-4a49-4cfb-8ec7-c57b4a58db3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99a9230-c698-4a18-b59a-e5108001dbe4",
        "cursor": {
          "ref": "8e67f93c-858d-4946-8d61-b25674cfa3ea",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "21258dfa-b942-4ccb-a5fb-a5a418dade5f"
        },
        "item": {
          "id": "e99a9230-c698-4a18-b59a-e5108001dbe4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6e2341e9-9e5d-41fb-8106-471fd4283aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9583b45c-afa3-44a0-9449-776d1f9e926f",
        "cursor": {
          "ref": "62943ac4-797a-46ff-9a19-6f47d3fbac88",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "280c239c-768b-4914-92ae-4643bda19332"
        },
        "item": {
          "id": "9583b45c-afa3-44a0-9449-776d1f9e926f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ecaf4d41-a594-4ef9-9229-29d132ce0c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6dd0162-06c9-4a5e-98e2-b14a2d6553c2",
        "cursor": {
          "ref": "32c88ac0-4816-4229-9af7-bdab3213ab09",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "83c645f0-90a2-4b37-8738-d6bcebe3308f"
        },
        "item": {
          "id": "a6dd0162-06c9-4a5e-98e2-b14a2d6553c2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "35204db7-bdbc-48af-8809-00f4c10298bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734d7644-854f-4d5e-af67-1b2bc6d4237d",
        "cursor": {
          "ref": "efe20dfe-f46b-401a-a2d0-8670997fd51c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "78766982-3147-473f-8ff2-18122bb72038"
        },
        "item": {
          "id": "734d7644-854f-4d5e-af67-1b2bc6d4237d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e1274762-60bb-46d9-a03c-e00a6473a03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae1b197-de0b-449d-be27-60095f1aece3",
        "cursor": {
          "ref": "66f543c6-2f8a-44f2-a8a0-b87edef294e2",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f868a5fd-d9c0-434f-9633-910d86cf6377"
        },
        "item": {
          "id": "4ae1b197-de0b-449d-be27-60095f1aece3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6f7a5763-88f6-4775-be27-f7e786951d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daec85d5-addc-4414-898f-f103d13abfce",
        "cursor": {
          "ref": "7e3ed26e-c3cc-4b9f-8cf8-fa85f61900b6",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ef50ecd4-7a9a-4eda-813d-3f6cf49a611a"
        },
        "item": {
          "id": "daec85d5-addc-4414-898f-f103d13abfce",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "47c9ee50-4603-4b4c-961e-8a9225d4f225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85231f43-24a0-45ad-a735-a8914fd87b2d",
        "cursor": {
          "ref": "6f71bb4f-f8da-4247-ba06-e1f61c3d3c89",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "60e208fe-bbd3-4e3f-84d7-4016e0ab9aeb"
        },
        "item": {
          "id": "85231f43-24a0-45ad-a735-a8914fd87b2d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "18edad35-7eb3-4466-917a-d177edc49912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bd9472-573e-49e4-a0ef-45348eeae693",
        "cursor": {
          "ref": "67f21a23-5a5a-416c-80e2-5268e42a86c9",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "317250d2-a7ff-4c2d-b1d4-99dcb56b1da2"
        },
        "item": {
          "id": "88bd9472-573e-49e4-a0ef-45348eeae693",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8be415b1-17f9-465f-8ce0-a3441e1d5879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150021ec-7863-4689-a08d-08a94db89c18",
        "cursor": {
          "ref": "8f5cbac2-d1d3-418a-87db-b3b6569ee0b5",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c1b8bea4-0792-454b-9773-97d7d286b59d"
        },
        "item": {
          "id": "150021ec-7863-4689-a08d-08a94db89c18",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d55de554-6ede-47a1-8cb3-a2a5d6f42df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3514bd63-790e-4f62-8f46-889e964f70ed",
        "cursor": {
          "ref": "30a58a94-9533-4082-aea6-20744ece799c",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e21e43a3-4145-439b-8a01-348de425b375"
        },
        "item": {
          "id": "3514bd63-790e-4f62-8f46-889e964f70ed",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "67833622-4727-4e1a-ab61-1d177e9152ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b68d225-76c1-4eb4-981c-b1e9da790691",
        "cursor": {
          "ref": "7bf40f53-1ea4-4034-b13b-8d8b7328541f",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a6208e86-fc63-453e-8add-2593ed349ae9"
        },
        "item": {
          "id": "7b68d225-76c1-4eb4-981c-b1e9da790691",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3009ab8e-b7a1-4025-b9d3-4d22ed04e590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e538965-cccc-41df-8b50-87310597b140",
        "cursor": {
          "ref": "9366e785-4ded-4a18-b5eb-ea1243fefacf",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8483dac4-2c76-46ab-847b-dfd594816ee3"
        },
        "item": {
          "id": "7e538965-cccc-41df-8b50-87310597b140",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b467e656-e3a7-4d7e-b070-37bcae192fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2231f6-5a49-4502-85ad-8d58d54d1752",
        "cursor": {
          "ref": "51c9938d-4c0a-429f-9078-3af68daa23fa",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "86e90f52-6a2d-4125-8249-4a5f2b6e6cb5"
        },
        "item": {
          "id": "5c2231f6-5a49-4502-85ad-8d58d54d1752",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "31eb7469-e726-4a0f-92a1-c705723610dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e378c3ee-4e6d-408d-995c-a761829e487c",
        "cursor": {
          "ref": "b4e55429-a194-41d0-be70-58d9bdc02d27",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f539608f-2c20-4c24-b189-6fee10910912"
        },
        "item": {
          "id": "e378c3ee-4e6d-408d-995c-a761829e487c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "bcce94ca-2202-40ac-8c0a-0ab9eff63e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c434bc8-ce74-4ed2-9d69-1b3e0e40e194",
        "cursor": {
          "ref": "849a27f9-5b12-4938-80ef-698877625bf0",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5cbdc748-6993-404d-af97-355228c8295a"
        },
        "item": {
          "id": "7c434bc8-ce74-4ed2-9d69-1b3e0e40e194",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3fb07704-d281-4027-8943-4b0ad2604c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62344d6c-add6-4784-a64b-54776e9fd8ce",
        "cursor": {
          "ref": "c0ead96a-2af8-4bdf-817a-ad95866f3788",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0e7761cb-e5c2-493c-9b13-74907a1bad52"
        },
        "item": {
          "id": "62344d6c-add6-4784-a64b-54776e9fd8ce",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "699f7b4e-a11a-4db2-ac23-efe6725256f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571291d7-3a69-4c01-844d-755af2f1553d",
        "cursor": {
          "ref": "acef7a43-81ed-42f9-95a8-b1ec150dda67",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a6172bcd-9561-4d26-adeb-d633718e75bc"
        },
        "item": {
          "id": "571291d7-3a69-4c01-844d-755af2f1553d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "524855af-b344-4162-bae8-85e6f6702be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf72ee0c-ef83-4929-8525-8eb8b5df989e",
        "cursor": {
          "ref": "6df23eb9-da9a-4cc1-aa6c-a435edc3189a",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ecba85b5-cfa6-4133-8159-613753029b8a"
        },
        "item": {
          "id": "bf72ee0c-ef83-4929-8525-8eb8b5df989e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "44fec9af-2cb5-4408-9fc4-261e265a920a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20f0cad-f996-42b6-9290-feb0e74b7a6e",
        "cursor": {
          "ref": "d04dee4a-6e9a-467a-82d2-a302321eefa5",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4cf84480-d9ab-467c-8439-cb44fd32b2b4"
        },
        "item": {
          "id": "d20f0cad-f996-42b6-9290-feb0e74b7a6e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ce33bbae-d21f-4496-9e0d-740269121f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5838e3a2-e310-47a4-8e37-893ebdc047d9",
        "cursor": {
          "ref": "6f546ae9-0836-4169-bd46-e62d67dda710",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "104bb718-f4a5-414b-8cfc-0cb9540277b1"
        },
        "item": {
          "id": "5838e3a2-e310-47a4-8e37-893ebdc047d9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f21a45f6-cd29-4829-ab0b-297fba3f3255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20457c6a-6733-4ccf-8019-58cd577aa824",
        "cursor": {
          "ref": "975dfc07-6df4-409a-af7f-2a936363dc7c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4aca2148-3a2c-49bb-99c2-c4eb0e244588"
        },
        "item": {
          "id": "20457c6a-6733-4ccf-8019-58cd577aa824",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b40486b6-170a-4f3b-a5d4-2c8de33a8544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f81f86-373f-4725-9bb6-f5df67c5db70",
        "cursor": {
          "ref": "494d15bb-b9fa-4535-a0db-c65f1d4259c8",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3bed70ea-1922-4eb5-bc2d-aac59ece4eac"
        },
        "item": {
          "id": "45f81f86-373f-4725-9bb6-f5df67c5db70",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8788433d-0613-40bb-b63b-c589c2a5abf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5863e3b4-6335-4686-93b6-e3c70b6972e4",
        "cursor": {
          "ref": "f9ee4b69-6365-4cf5-ad95-48bf48bb0237",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e5155323-238e-40f2-86f4-5c9b1d42aa5a"
        },
        "item": {
          "id": "5863e3b4-6335-4686-93b6-e3c70b6972e4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "361d3828-7332-496a-9cfe-3dc433211c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f8ad77-5c37-44a8-a4ab-862ee709045d",
        "cursor": {
          "ref": "c75f742a-1f9e-4066-9855-1a312aeebe9d",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "eba820cd-cd44-4c7b-9ab4-ade76acca2cc"
        },
        "item": {
          "id": "f0f8ad77-5c37-44a8-a4ab-862ee709045d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "74e2003b-cdbd-49f2-9631-716f2eaee666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cccacd-0455-4cfc-8b30-176c732a685a",
        "cursor": {
          "ref": "412d21d0-f927-4f81-8244-8a8b47b2863e",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7746d476-2489-4868-8395-520cd01f5ed5"
        },
        "item": {
          "id": "00cccacd-0455-4cfc-8b30-176c732a685a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b07a8d20-ae8c-44ee-bf86-d9cfd1a1cec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66f532c-b0f0-4184-bc2b-898e6978ec57",
        "cursor": {
          "ref": "b174d911-512f-41f5-8aa2-9f5357203407",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "66dfc235-fb80-4638-8772-bec239f2bdfe"
        },
        "item": {
          "id": "a66f532c-b0f0-4184-bc2b-898e6978ec57",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "98d85a31-be2d-480b-b3fa-74a2c92853bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b124d288-2a5c-40d2-a581-1e75ff93ff62",
        "cursor": {
          "ref": "99012c0a-6e4f-4b92-8d0d-497e5344b060",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3e01d267-77e8-4652-8cbf-9a98b622d4ca"
        },
        "item": {
          "id": "b124d288-2a5c-40d2-a581-1e75ff93ff62",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fe0b30a2-32ff-4f5b-b5d9-db27131147c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bade76-3a82-49fd-9f64-75ad0b50c058",
        "cursor": {
          "ref": "46a158f9-e3f7-465a-b010-caccbe8448a6",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1dee1e18-238c-4922-9255-57fcf59f4d07"
        },
        "item": {
          "id": "24bade76-3a82-49fd-9f64-75ad0b50c058",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f9c811be-8dc9-46b4-8dcb-d70a8f1d6281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18851859-2ca5-4549-a2bd-90324f3cdfa7",
        "cursor": {
          "ref": "92257d4a-0fd1-4811-909c-773cb9929f77",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "814915bb-0d42-4b19-a820-3db750cea8cf"
        },
        "item": {
          "id": "18851859-2ca5-4549-a2bd-90324f3cdfa7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "216bce16-7b60-4c2f-9c22-23e64d45ef3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2310df-6528-4124-a026-76594f05d186",
        "cursor": {
          "ref": "45f0f00f-0693-4fd1-8cc4-6ef32a1ea551",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "814099da-7ac3-456d-9531-fabd9c430768"
        },
        "item": {
          "id": "ac2310df-6528-4124-a026-76594f05d186",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b7e3bae6-6099-4e24-bd69-512254329b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab629372-214a-4f7a-ac58-b1db74e9af26",
        "cursor": {
          "ref": "58bd177b-861e-436f-8f9e-558e0be3e0f7",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "aea80bd2-1d96-400e-9be9-3056546105fa"
        },
        "item": {
          "id": "ab629372-214a-4f7a-ac58-b1db74e9af26",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c09ef6d9-06a4-4452-94c6-9249a8b71ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e25c8d-901b-4ea2-9ed6-3ab5b5878200",
        "cursor": {
          "ref": "86084a64-985f-4a39-9d09-633e57053eb3",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6a027066-14a5-4654-bcef-0d635675df2d"
        },
        "item": {
          "id": "65e25c8d-901b-4ea2-9ed6-3ab5b5878200",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6dde2b9c-dbab-48f6-bc2f-d247d6315efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794f817e-5d98-4773-b9f6-7ec893cf9513",
        "cursor": {
          "ref": "a6592a15-3e61-4664-9b54-60c434bcdc06",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "981d4d93-fbeb-4577-9a9a-3fcfcd465e62"
        },
        "item": {
          "id": "794f817e-5d98-4773-b9f6-7ec893cf9513",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "52bc29cf-4719-4195-a17e-930ef4f0ffa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468ca707-f47a-439c-b74a-2b3a09e18585",
        "cursor": {
          "ref": "b4f2f289-a06a-4c37-bbfa-d96519f9babe",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f8cbc044-e70e-486e-b125-d9a1bd690bec"
        },
        "item": {
          "id": "468ca707-f47a-439c-b74a-2b3a09e18585",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "27cb6378-9546-4f0c-949c-8dc6fef33077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6058cb61-02ee-4100-b753-4b08aa0c225a",
        "cursor": {
          "ref": "ef242351-ae1b-49dd-a2c6-2c7f34df498c",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6a98b05e-7502-4698-917c-0f52087d533e"
        },
        "item": {
          "id": "6058cb61-02ee-4100-b753-4b08aa0c225a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "492b8e01-c3bc-4d05-b10a-26fe716fb35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453455b7-9aec-406f-a661-abfa5a1ea52a",
        "cursor": {
          "ref": "7d639da3-08cb-4438-a1f9-d3ace39588f8",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "323d6c7d-31bc-47ea-9492-8b9a562652f5"
        },
        "item": {
          "id": "453455b7-9aec-406f-a661-abfa5a1ea52a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1239829d-5156-43b3-9186-6f7da213d0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34501815-5ede-43e1-b87b-e1e23522d74e",
        "cursor": {
          "ref": "c8ae576c-6e32-4022-a8d8-b59337eb3a99",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3748f7ea-2ee4-4b18-a6f6-5f3f7c1e9baa"
        },
        "item": {
          "id": "34501815-5ede-43e1-b87b-e1e23522d74e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0a63c005-e654-4fe0-86eb-4ded1db83f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d24fb5-e381-4e19-9c95-ea011714855d",
        "cursor": {
          "ref": "11d57937-15aa-48bb-9031-97257a24c23c",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2aff96ee-36c1-4684-b38a-d6b626dd6cfa"
        },
        "item": {
          "id": "04d24fb5-e381-4e19-9c95-ea011714855d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4e1edfab-9263-45a6-a5bc-089e833974d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70bb4207-6ae2-40c4-b593-041fdbadcc42",
        "cursor": {
          "ref": "1dbe00e2-6d20-4ebd-8373-2d3cf19248a3",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dfed21c3-4b9e-41b4-bfaa-4baf0c50b247"
        },
        "item": {
          "id": "70bb4207-6ae2-40c4-b593-041fdbadcc42",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c5b08160-83c6-4bb8-b40b-1ecf5d0c3a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146b85fa-266b-4fd6-90ec-b3aab2127f58",
        "cursor": {
          "ref": "188117c3-a549-4b74-a548-56ae07d124cd",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5bf1ca2c-3734-4f7d-92ab-91435fa13afc"
        },
        "item": {
          "id": "146b85fa-266b-4fd6-90ec-b3aab2127f58",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "00d4ccd2-00ec-4ab0-9211-5ef4859f124e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc089c84-ce99-42b2-b142-5c431e81be3c",
        "cursor": {
          "ref": "9c2f781a-f8b8-42c2-801d-a34a9330aab9",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1c2e62b1-3513-4b64-ae54-92d7ebd5e3d3"
        },
        "item": {
          "id": "cc089c84-ce99-42b2-b142-5c431e81be3c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4cd2b777-1b03-40a5-8c1b-7c1b87fc78ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64061e1b-7f2a-40d1-9eb5-20fca19e1b94",
        "cursor": {
          "ref": "98bc3154-a60c-4803-9674-1587189f08a6",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "614c6b8e-5281-40f1-96d0-e82c76c01dd7"
        },
        "item": {
          "id": "64061e1b-7f2a-40d1-9eb5-20fca19e1b94",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0d6c1bd7-0b79-493b-a83a-f73d7ce62565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe7a618-8801-4b97-98e7-17319c0c5912",
        "cursor": {
          "ref": "e8342559-e05c-4af8-a484-01de4d787452",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "233b41b9-4fb5-42c8-8d21-021181dbe9c8"
        },
        "item": {
          "id": "bfe7a618-8801-4b97-98e7-17319c0c5912",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "bd4d49bc-6fd1-4ced-a55b-d7d8a34db3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f782450c-b506-4766-8e39-8dcdc4bb3ac2",
        "cursor": {
          "ref": "c31c4c1b-6e0c-4b56-95b9-89fcb3e12b67",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "923637a2-1316-4f25-9849-dea0ad17a74e"
        },
        "item": {
          "id": "f782450c-b506-4766-8e39-8dcdc4bb3ac2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "88947003-4c1c-4725-b954-aba8b9fa7ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20182b87-6050-4006-b384-bffc871b3f6f",
        "cursor": {
          "ref": "f6634aae-a05c-47ca-bbcf-042366be3c04",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "728d4bed-1fab-476c-a8ec-ff8d8213ccaa"
        },
        "item": {
          "id": "20182b87-6050-4006-b384-bffc871b3f6f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "57bc239b-a664-40cf-bdb7-ad05f30a054c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed049528-1b7e-443b-96d4-3d75beeedf9e",
        "cursor": {
          "ref": "1f90bc00-f24b-45d4-a42e-74f95c690427",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "577f9642-e793-4a57-8dc6-84e585fabae8"
        },
        "item": {
          "id": "ed049528-1b7e-443b-96d4-3d75beeedf9e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9a904d97-b502-4a27-aaa3-03eedbf3d553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbd2b7a-f9ca-4199-bbb6-6808d7c0c807",
        "cursor": {
          "ref": "144b01ea-542c-45ee-a816-14b6eca4db66",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6a44e72a-f92f-458b-be31-e4f51e3ea380"
        },
        "item": {
          "id": "4fbd2b7a-f9ca-4199-bbb6-6808d7c0c807",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6801529d-cf95-492b-bf62-904a63fed2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddd5502-9876-4694-9a43-8ace4811b4a1",
        "cursor": {
          "ref": "3a73f694-4e03-4528-b51f-53b3bb32357a",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2a7b563e-b4cc-4d29-91d0-a3d19cf94be8"
        },
        "item": {
          "id": "2ddd5502-9876-4694-9a43-8ace4811b4a1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "37fd1fc0-2904-4573-b8b8-162edcbedeaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c53c8a4-dc4b-4df8-878d-971313e055ba",
        "cursor": {
          "ref": "03df512d-2c7f-4191-8b42-7050cec6cdb5",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0268e9ce-9880-4468-acc9-238bf500f862"
        },
        "item": {
          "id": "1c53c8a4-dc4b-4df8-878d-971313e055ba",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "36643e0e-055b-4193-b60b-475a1ac2bc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281fb343-8ae9-4a3d-a113-9b9444743adf",
        "cursor": {
          "ref": "f829b32d-53b8-4e97-aba0-967daffd9aa3",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9e74ecec-2e16-4e70-adf3-f8151202c4c7"
        },
        "item": {
          "id": "281fb343-8ae9-4a3d-a113-9b9444743adf",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "aa406ae3-7285-4af9-82ed-572fac828343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050e604d-6e1f-4c8f-be88-4708e05b46e0",
        "cursor": {
          "ref": "aee566b0-62f6-4a55-8b4e-bd22609412bc",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a89dca2d-e9a1-404e-9e95-9d78ede69d7e"
        },
        "item": {
          "id": "050e604d-6e1f-4c8f-be88-4708e05b46e0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "64d39572-32c8-43a6-9d35-bd433d6e90a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a93ee29-370e-4f27-a7cd-05e3b75ac495",
        "cursor": {
          "ref": "21806c85-d43c-4b81-98fe-2b5edf0fbafb",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d46aec75-8dd5-4c22-bba8-3be0e8e4920f"
        },
        "item": {
          "id": "7a93ee29-370e-4f27-a7cd-05e3b75ac495",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "586fa601-2cff-4f0f-8d49-56039a8fabb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7a8b10-a174-4a77-8885-5d90c9855a95",
        "cursor": {
          "ref": "02cb484a-db2b-48e0-a738-9cbc59bb02a8",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "947d18f0-177a-466d-8b4b-3bd679f2dd1d"
        },
        "item": {
          "id": "9b7a8b10-a174-4a77-8885-5d90c9855a95",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6d1a6985-950c-4cb5-a979-9c8ad3d5d409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3ad5e3-1853-4158-9662-c2841ab4c2fb",
        "cursor": {
          "ref": "7bfb9840-ebbc-46d2-be7d-a6229bf45c7c",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ea96b1f9-91ca-4fd5-8f75-9f3c6b5063e2"
        },
        "item": {
          "id": "bb3ad5e3-1853-4158-9662-c2841ab4c2fb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9e228509-1950-414f-99dd-343f2e357824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2464c060-df0f-4c2d-a262-fafc3842a994",
        "cursor": {
          "ref": "d5222387-c369-4427-bb05-7b6f2b3ca394",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7adab1f8-009c-4b19-a8aa-e37006224521"
        },
        "item": {
          "id": "2464c060-df0f-4c2d-a262-fafc3842a994",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1e0d9edb-ee7d-4b6e-a8c2-fa8128fc680b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0399463e-13dd-47dd-b8eb-9c48473c53fc",
        "cursor": {
          "ref": "6210651d-6b43-4686-840d-482de1ffa9bd",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e72eb768-0168-4433-a2f5-1745e6dd3481"
        },
        "item": {
          "id": "0399463e-13dd-47dd-b8eb-9c48473c53fc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7ab23c35-abd6-4ef8-8dff-1043687cfd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62c9852-0a5b-4868-81b9-11ea833bbfac",
        "cursor": {
          "ref": "d4f9ab74-5a34-49da-b8e1-8f07f0a11f0a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2183250d-a1e4-42a7-bb24-e8035e27daad"
        },
        "item": {
          "id": "f62c9852-0a5b-4868-81b9-11ea833bbfac",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "80a97e38-0606-40a4-a4fc-addbc22257d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edc4d28-006c-4e6a-8c19-039a1cda210f",
        "cursor": {
          "ref": "f2e8d58b-c5d1-4a58-8ed6-ddb6c6b0b52a",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d660e1e4-e673-44fd-8bcb-0e5dcf672cc9"
        },
        "item": {
          "id": "7edc4d28-006c-4e6a-8c19-039a1cda210f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a5c7a8b4-0fb1-45fa-a7a8-b5428a6df781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c853a71-7a2d-4eeb-93c8-54522a4a408e",
        "cursor": {
          "ref": "a9c6d32e-490d-442d-acfc-f540a54b18a9",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5745bfb6-d7a9-4c82-9c81-2fd6ada4bcff"
        },
        "item": {
          "id": "4c853a71-7a2d-4eeb-93c8-54522a4a408e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "dad79a68-fbc9-4b23-a46a-858ca3629e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7fc8989-41c5-4887-9a73-741c82f7094a",
        "cursor": {
          "ref": "8dd46704-46a5-42f9-85e1-97b26498b8b8",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c5ab86a5-2480-4db9-aa4a-cfcf632b80fc"
        },
        "item": {
          "id": "b7fc8989-41c5-4887-9a73-741c82f7094a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "50c7f22d-0e80-44e6-8c42-1b34f9b98c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb157caf-8b92-41fd-b5fd-e69052866170",
        "cursor": {
          "ref": "1c0383cb-4443-43d5-8230-124bf572979b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "83275cba-5689-42c6-9203-0f97d9a7be69"
        },
        "item": {
          "id": "eb157caf-8b92-41fd-b5fd-e69052866170",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "55cf15d9-68cb-4db0-84f8-e77bdd54826c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "cef8cae8-db47-4b66-8e36-b338c29c6564",
        "cursor": {
          "ref": "dc5fe8de-71bf-4ea8-8f55-9632ee45b07c",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8b360b55-7ba6-4b34-b0a4-5d74be3d6897"
        },
        "item": {
          "id": "cef8cae8-db47-4b66-8e36-b338c29c6564",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7eccc90d-3606-4a37-9ab2-64148add683d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "96d7550e-7472-465e-90cb-5d6bd29728bd",
        "cursor": {
          "ref": "6a3fc6bc-3634-41bd-84cb-7e9c9623ee5e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fec21111-9f35-4b57-9b17-769f9bd8e07a"
        },
        "item": {
          "id": "96d7550e-7472-465e-90cb-5d6bd29728bd",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7cab4f09-9760-419a-85ce-852462d3023c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "8ec8806f-5179-4038-9873-9952598a591c",
        "cursor": {
          "ref": "46bee5b7-be8a-4fc8-bc41-8c6f1eb21d03",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0adac1f7-638d-4237-ab69-6e7576bd4ae9"
        },
        "item": {
          "id": "8ec8806f-5179-4038-9873-9952598a591c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "de22fc71-9406-45f7-845c-6a4482d68bd8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec8806f-5179-4038-9873-9952598a591c",
        "cursor": {
          "ref": "46bee5b7-be8a-4fc8-bc41-8c6f1eb21d03",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0adac1f7-638d-4237-ab69-6e7576bd4ae9"
        },
        "item": {
          "id": "8ec8806f-5179-4038-9873-9952598a591c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "de22fc71-9406-45f7-845c-6a4482d68bd8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6bf555-9eb8-40f1-a66a-bece634b14a6",
        "cursor": {
          "ref": "5fa640e0-c1b6-472f-8e3f-45e3b014f58a",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "88188878-2e26-494e-aba3-407f593471a1"
        },
        "item": {
          "id": "4e6bf555-9eb8-40f1-a66a-bece634b14a6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8ace6731-ebdf-41b5-ae9e-e63de8cec3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795d31f0-5dfe-4984-addc-056a764f6c83",
        "cursor": {
          "ref": "d43e25d9-806e-4cfb-964f-9150ad4aa47b",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "94c72488-001a-44b9-b6b7-6f959e719b90"
        },
        "item": {
          "id": "795d31f0-5dfe-4984-addc-056a764f6c83",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "28e8009b-c2d6-4421-ad53-651263bb7cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}