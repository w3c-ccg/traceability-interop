{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "afbad110-2621-4762-83ca-a8d050a4a8cb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bc581f77-37e0-42ad-8ef2-5b3650fab805",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "74cbfad8-e82d-4e00-ba57-354cb2b02d53",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f746a272-a362-4ad8-8f24-e5882178a52f"
                }
              }
            ]
          },
          {
            "id": "e4b8d633-72a5-4227-aaec-e15904fcc3f7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "477d3f02-87be-4869-8e35-f172cca0490f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b58f2948-c916-4364-82c3-2ef71dd6cbb9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4d9f37dd-8c0b-423f-aede-79b107233d43",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c4fb55d4-236d-46fc-968e-22f22ca36c6d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e68c5c29-e6dd-46e8-8bf5-f4a9457b49c4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "adee2ffb-6b5c-4beb-80d6-666758e9f341",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cea66fba-a8d9-43da-b614-20a83d88d54f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2b9ed017-b8b8-4549-b171-4c62f0e5f1d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1eeec923-e79e-4501-8f4a-c4a134923988"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3df393b7-2adf-4bcd-8a29-e7e6d7580770",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc6b55da-1d65-4a20-b363-b9a5159e3a22"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9d08d5e-e677-4f9c-98c5-70f6f9b673b6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "abc9f2f1-00bf-4d56-b27e-0e09c63ce65e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed5ab324-9baf-4627-a995-9461f9bbe51e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "540069b8-ee42-4110-8889-ec8817e1a4f5"
            }
          }
        ]
      },
      {
        "id": "a5ea6c21-a8ff-428d-ac5d-897d8a8018d4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7bc186db-a814-402d-9652-b9d40e8fdafd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "96925446-5ad8-4348-8d59-da02365a0088",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "516b2b72-4f08-4057-9f1f-e28e4f318db0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646c87b5-68d4-4f48-b34a-2f79a5761bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "518ccf36-b284-495f-95ea-43c13fc23845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d442c36-328d-4eb9-a2c7-fbd80b71efff",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02272704-67f6-410f-a205-b02a8b3f0b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b57d6c6-2628-4b5e-9045-80a68d625e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42372bd-9ba4-4afc-bf81-0b47a7716be6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab0d0ee-d47d-4514-83ad-19eb28e26a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9dc4bca3-7ae4-4c13-b4f2-973553e08c0b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3bcb77a3-8b9d-432e-a04f-b7ff58515342",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c0161b3-cb21-4817-b4b0-bee59e467439",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb37aaec-f78f-4e50-8771-95a98d559621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d3df782-4384-4481-86ca-f959f9e39742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694edca9-a40f-4c53-8c80-a54969aaccc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3221d6d4-23b7-4fb2-99d1-6b98689df92d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f2566749-a71f-409e-aa7b-4a43ba2ef6f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f5af29f2-4178-4a10-8672-ad3f08fdebd6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d63bad99-78b0-47a6-8698-5d8019a7684c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "80a3d840-29d0-4321-bf3a-2d1db860dfcd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd40f1a8-e943-41f3-8950-c7eb6bbf7ffc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bd0d8324-98a0-48c3-8543-a7d6e47efa98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "990e58e6-96f7-4a1d-ab4d-9c6a911003c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a16ecc03-2dc0-43a6-9765-161c1612f2a6"
            }
          }
        ]
      },
      {
        "id": "09646cb8-a2d7-472b-bf69-e2b7a9201ec5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0904a32f-6a62-4422-9bb2-1128f3e7442d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8387cd1b-2a1c-491c-8bb8-ca1de64acd52",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f95c4dd6-2185-490a-871e-b342fe5165c4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153a4c2d-828c-49ba-a667-d38a6d75152c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532f7d8f-8681-4777-bb21-c09bd9251c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6e6e36-3810-4b94-a4e1-1a87dadb506d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "770af57f-e0ef-461b-beaa-f10f5dda2927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1928e302-98bb-41e8-bc2c-f00e05c4dae5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9588a9-cf63-4622-89b9-38a88feeba86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cadc58d4-78fb-4af4-8f32-1d00f36b62af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb2a6b8-cff8-4db6-b2d7-75c4bead3cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4eb90f95-0656-41aa-b413-443c6b86180d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c60c05-032c-47e3-aaf8-c361bf7b17db",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b9cfd4-e82c-4734-a548-56bfae02d3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5d1368-94b1-4b6f-b150-1598405e650a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b868de-ed6b-4d6e-ac35-61247ddfd0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "050c06d3-e968-49be-959f-9e4a58debb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21331c35-77e5-4779-a25b-092a9f803694",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e914fcb2-9607-4a1f-bce0-7128495319fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f1047a-077b-454c-9707-cfcdbee311e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed89ac04-f711-4e5c-abaf-3c5d477162bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6c577f0-8c9c-4212-97b0-71597d2f474d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2be961-eced-4d0a-b432-f00f6dd04efc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24da5350-f015-4ae0-9ce7-35ed8f84e110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4913b7-1c70-4294-9a6e-ac012275eb46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e890bc-ac5d-4286-9f2c-4cb043dacec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84b449ef-b8f1-4c81-b4d3-a10b760a734b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5243be10-ca62-4fa3-828e-5edd4c0a1a25",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c415e0f1-04df-480b-ad9c-cf131adcc90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f0594b-c17a-4e37-ac72-7836a751fdab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab477ad-72c7-4685-9eae-243b1f9e88cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1e70bc5-a764-4360-95bc-b89bdf1f9849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f858bae-a131-4d54-9ecf-c232f6d67183",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a42d708-72b2-40ef-8751-57eb24f09c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f7a21e-30ef-4c13-a233-f57630ee5543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c033d79f-c33c-4c59-8065-43a166d22530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9495a8b2-613f-4bc9-abfa-f34b5a64c9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d7437d-2041-4047-a751-03bca2b28446",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a369ea0-236f-40e8-971f-3e475cb403bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d633e9-57a1-4eb7-9db1-21d8f791d4a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88000b6e-1f06-4e4c-b727-cfcc3f288400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "865a9c82-c01b-40e5-a186-25da2d3a3c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8371231-1702-4091-b67a-b9ba4a07f6e3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47740b2e-1496-4883-a7b1-bb35a7ab3d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb0aaad-fe22-440c-a91a-aa1c954254e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e97c0f9-aa27-42aa-a7d0-a707f46077b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e3de8da-8348-4d5d-868b-2ee462549ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402487ba-f07e-4fbb-901e-37b2e7411c53",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2b10c1-efa3-4f24-8d57-9a387759b193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c28e46-00a2-4dd1-92d9-742504f5a890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b903ffde-b667-4179-8eb0-55cf0354b4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d43f11e1-51ab-4dae-8476-289af6b734f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4deb7028-3502-4e6e-96d4-5ba1a7dc4998",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1826111-a961-483b-bacd-fd56d7a4f2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1b83e8-fa93-4fa9-9a0d-2ebe4af187c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb99ffdd-5a96-4f01-a684-1d7e9b6a825f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23a2d4fb-d6a5-405f-b6aa-3f82cd4a0b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eab781f-c008-477c-b2a2-0de61c3e1431",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84821cf7-bf58-4b46-8f2a-ab6830ad42df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2ac4bf-8e50-4280-81fc-740a14c04e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df8443e-d708-4488-82a2-1c1ece11d042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef54cbc3-627e-4aa6-88f7-e603bf3848ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047d5bf5-e971-4730-8a11-130625de6214",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248abc9a-7ca9-4edd-a8ff-a779f807fba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aaac953-0289-4269-8eba-43a22cd15c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8be38db-c843-44f1-8d6d-111f9008bff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28860edc-7f19-4dd1-acb8-168131eed1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83676fc-79fa-4962-979d-30ab43e45826",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d667ceba-eba7-40d3-97c0-50cd2857ded0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e821f589-da83-4fc0-9117-b90d977fc6cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f82b78f-c026-43d4-ad9a-65084be36f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5622c17b-de77-4031-87d4-b911bb55131a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541d37ff-ae90-4ab2-a5f2-e7e471dfa5c3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc86179-54b8-435c-a50d-d096eb1878ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290a0cec-d9ac-4174-8645-ea68c3d33664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9e6720-e529-441b-8027-01d6e5788679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15a18904-0bf6-49dc-898a-1ffc6fbade3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfad186-be37-47eb-854e-47dff4013f75",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f11129-13c8-4ead-88a9-a39f13646da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a53d8b-b45e-4072-a121-4fdcf71b315a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b1f4ff-0604-428a-bd65-06709e39e6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c08e1f52-f032-4955-8818-5c6e36b18c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871fe9a1-bf45-4376-9dc8-90f015855e06",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d27146-67e2-43ec-af2d-1e279e71d21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68cca6a7-662c-450b-b2ad-744e40fc65ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2ef4ec-b4ff-4782-be34-86e5291984d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab12a922-e4f8-4469-8269-935ecefd918d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3d85de-a7ed-4a4c-976d-36c5a02d8e2f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fd0897-7c11-42f5-9861-07e5f61d74cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a81716b-8ebb-4177-b5a0-b7522f5228b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2251dc4f-0c66-4602-b011-4e9284f35594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a36945a-6714-47ba-9b5c-22ba8e6b98b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83380279-632b-4cd1-b62a-08f07cd8b29c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3377d9-cc8e-430f-9817-b6f02c0c5d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03202d4-f4fe-4d8f-9940-4aadbc0d6867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8933925-a75f-4704-92c7-1fea70f46b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0eb7fc-7e4a-40a8-b232-463a266393f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee64c74e-6d55-4f28-8fde-cdcd9a040f3a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2ae74a-b8ea-4569-939b-c713a61b3563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd66359-1a07-4c94-8e84-d9ef1e20f7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204413af-ea45-498f-bf22-eb3e46867d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eeadfe2-1405-4c30-95c3-ff22a0dd62e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70bf40a7-69d3-4d29-bd50-746192c8312f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8872fe12-be89-444d-baac-d576c350af44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756369f3-be68-46e1-a709-22cecccb6d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890d40e8-4190-43d6-be6d-9fa524e3587d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e87c735e-8c59-468d-98b9-3d397aa1dbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d0aa75-4e2f-44bd-8d98-0611092dd839",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e378d8-8e33-404e-b5b3-628e8eea5b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68cff8e-1a95-4a49-9030-ad3de77ec13f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b7239c-9956-457a-972c-4483862f00d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1960c23-a62b-4b86-8389-41f7ecf2af2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35a1bac-04a7-436e-9617-44317c4384d0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813110d2-1e6e-4ca6-8cd7-1b549ebe744f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b75f01-bdf9-4736-b3e0-df4d722f951c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f98c3cb-92a9-481a-9379-1bc93b0cf01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54af568a-7ab7-4c51-9b9e-229d74e4d420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe400265-4c6f-461a-91a6-4c43b389e3a0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9dcac2d-3c21-4d6f-8868-5459787cd8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d4fb7a-8479-4cb6-8c42-5dc3f250ed2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7277a4-f995-482d-9cdf-869cbb071c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8227bd-0545-40e2-91bb-0a7808ebe55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda7ae32-0c70-4c9c-a6b4-6c1d9021698d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dadbded-845f-469b-b32e-a6454ec5dbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582da8ee-7090-4177-9f38-da02fcdc28cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aab2ee2-79b0-4e99-a81b-c114e6b54654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e24ed730-c3ac-491b-ae5f-fc65a8b84beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459bbcee-e3b7-4944-97ed-bd586aae1895",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fadba71-8c8d-4a07-a2c3-f37fa287a3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fffb7cda-b447-4be4-a2e5-99c847f7ff79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71d747f-89cf-4ad6-9e44-4c87d90bf3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "47cafc4e-38dc-4820-8f99-b2a7784e86fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8334198f-130f-4e1d-b533-80760bc27b3f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23f980d-3144-4844-aa3a-8e2eeac97052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "587e01ae-a356-4051-8e72-2a0fbe2967df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4599fdd-996c-455e-aba5-4bc0ff5d907e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68d17592-ffc8-4134-88ef-545465c20ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c1d106-fced-4bc4-bd86-b3e8a01163a7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866fc8a6-34f6-40cf-92e5-c2a9fb534cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfafb5ab-6f66-4037-8d6d-48d4278f4a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae79334-630a-46a5-a1db-fbc22222f933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0f321a-e829-4feb-b8c8-4d41897c686f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592fc702-b449-4379-8cdf-d62733e9239b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e85b27-9088-4f39-8502-45e44ae2a0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552951cf-0a43-4594-80ee-ee1215e912dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260dfd4d-6b1b-45b4-a718-bac8831cf2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21166146-cc68-4dee-a1c7-7129f2aca8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f051606-54b1-4697-ad64-733eb1ed2182",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70046cd0-7d20-4b8d-97c1-a5fa664814c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c5fb72e-ea4b-4738-8870-178f9660a5e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1510b8-b180-4fbe-9059-2d2be826d69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b619a4-e44b-405d-a27d-68e8f7a8a7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53954e82-87c5-458e-bdeb-99076544c597",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8361a2-4224-47cc-8f37-347c96f80596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0ac232-7c41-4d92-803c-3422e0c40430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd5145b-7c3b-4cb5-b4c5-42961cbadc58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9775d842-60e4-431c-9307-c6cbfc540879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4799b2af-41a2-49f3-a4e4-0274382bca8e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc960c6c-a807-418c-b0a1-23a832d247be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c208d8fa-722d-4cc8-a023-ae30e2257115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265b0aba-1879-4523-a7bb-40642a3c5793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3c0ded-4e39-4f51-ab8c-ad080a0e581e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15276cbe-fd73-4bf4-baeb-9a634fecda53",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921c9786-1a4f-4d54-970b-be7c80d95127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc74d5e6-643a-4615-9b01-a128839cac17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a23d9c0-5905-426b-a827-4cd2bd36da87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7abdf608-99d4-4f72-b9de-dfcc6884fde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42add129-f81a-4021-b86a-248bb4cd2479",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79c9248-3d99-4c04-ab61-323ee348a222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30779398-0299-4a0d-8dd8-dbb54d4a6874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b015b10-37aa-4dd5-bae7-b82344ad9f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17ec0398-f563-48c2-8553-d62d7e241157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bae272-7d61-489e-89b7-dddf6a5d05e2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1729e204-c433-4cb2-b67a-5a4ded6b1b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efdd3e4-ff8c-4e47-a2ae-69f8587523e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2307cc18-4bb6-4f8b-b0e7-206ac52d4cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "268b843c-f47c-41fa-b141-943e6eade6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4dc2239-f52f-4d37-b4a6-adc85d733644",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c848ed-e860-4767-ad2b-072012b017e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "875bb27d-d800-41ab-8810-dad7308104c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2224b3-98b9-4538-bbd1-db25f9427da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a76a05-c57a-4532-91f6-ddc6b393e6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2556169-3777-44e7-bb1c-b089c88cc90f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9a6be4-937f-412d-aa1f-b193515c790b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901a9320-0468-4aee-8ad8-343374d4478c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a8d8e0-8a00-4c68-8d63-92b728a6b2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "adbdd5e4-389a-4328-8a74-7e1c448d0b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7566c7fe-5b72-409b-af86-82dcdb9794cb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c09563-511f-42e8-8d96-51aed7a0fbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45bbd80d-93b2-4612-a7f5-937385c7882e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da83d574-744f-4d34-b693-9f053a63f7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c49530-220c-4def-a967-0253f7db2569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad0a265-0fa7-4fa4-8cba-2211b0a6fbdd",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020dbdd8-9695-4fe2-97b3-c124f219e08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c4e6eb5-e465-472e-93a0-deb5fca8473e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20568c80-ce38-44ae-802d-baae33c9e4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b13ab4a1-d0a3-4c62-929e-b7dc65e37fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81363e52-f615-4cbd-a144-a86b9520d179",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8d9bf7-05d2-48f0-ad4b-fc08898cc5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337616f9-f4cf-4a8c-9e40-5754dab4d97f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d6225a-61f9-408b-982b-07869db212f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd49c8be-7010-4437-8fc5-6c6fb48b6d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0112c564-a5e4-4413-9515-c001d59e3b06",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b13b837-a249-4575-861f-ea473882ab85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b145b4-a2f9-43d2-afc5-f4fc4cbaeea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6fb59b-9409-46c5-80ed-7edca1422b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa1e438-afaa-4326-85e9-181ea8c35260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d55f49-2266-4b6e-921a-5a657f7243cf",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a85f0a2-f370-489a-b61a-efa60d3dc901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b904493-3c7b-44ee-af66-f0799c3c3c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218f9e5b-9c6b-4648-a9eb-9081510da744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae71599-9400-48f2-90eb-8031ff986e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a50667-d7ba-434c-ab9d-6b85831ff6ac",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0673b4-2932-40b7-ac0a-9b3086d77b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6495a9a0-8b71-4c1d-b301-87ee5e2a816f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae50b90c-1d34-4a12-b0fc-83b162a23ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0754243b-7ba8-4706-aade-37e009e833bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3bf40d-0fc0-48f5-a7f2-59d925725b9f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad56b0d8-89a4-45c2-9cfa-a6ada79c5499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de1bd126-00ec-48e2-9bef-f8ab6e1d5e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e9fabc-24a0-4bd6-8eb1-34a7dc18793a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b828db3-31ad-43a1-a5f2-e8d477da153c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee779e63-1f27-49ec-85e0-377f5ed39bbe",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a4bb4a-cc32-4a0b-bcd2-8f399ee4823b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c331bb-0631-4341-a404-18d1b4a6ce6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dca7df1-a01f-46b4-9216-3c99c3bbf260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fecf5e2-1376-4aa3-8809-1bbc2da4cbe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c45a0d5-92e2-4b87-b2c5-7e0e7685b539",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b485fc3a-0198-44b8-a078-00c588b16eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3860aee8-ce42-4ef1-a9bd-2f2ffe70ca36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b0ac8c-d8de-4c21-9543-b865cc64c337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cec35f5-78bc-4ce4-8775-be25d5fe96f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f6bc21-18ba-4ece-961c-2b00336e0f39",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9424de-9ff6-4942-ba66-d9ad8b8229a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ca4a31-0347-41d7-b9ca-91dfab666c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368a5260-f4cd-47ca-b679-453da91fa3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ade4f62-97cb-465f-98c4-72d748ab44d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d6370b-01c0-40f9-a48d-92935e20b998",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047c5b6c-d34c-446b-aff7-e3168c00b19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a70023-e0a5-47d5-a6a4-c37c0f543958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86ae071-52a1-4517-b9d6-0f6891d09ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "833f2733-cda9-4ffc-8ae1-415bb7b6e596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db82ada-eb43-4702-9cea-45cbdc234a8e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57589dec-3812-4fb4-a9bb-2d5d4f4a5009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b3b8f7-8e48-434f-a375-5482e42ad0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df04202a-b40f-43c2-9790-521bc8b2293a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e035600e-bdd2-4c8c-bcd3-b7f635973040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b7f279-4a0c-47da-9442-8c8965898d24",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75263f1-5477-48c3-9c94-e3f9aefaf40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1090634c-3fd8-4f00-b7ca-e7e1a959985e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57854eff-06ca-4a0e-9ada-7043f7d584e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b089bb78-cf68-4582-bdd4-bb78c01f34a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b2b5b7-ae03-4391-9445-c49a05f4a58f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5a20b7-ba42-471d-a5ca-451a6989481e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68367cc-5a47-4e56-9fea-6162c3a2c135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1d4221-872d-4a6f-af16-8d329572f8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "000ae1b8-ce59-4dcf-90ff-b03be8d7269c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09de3e51-e748-4e29-bb51-f30b4064f99a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb69e5f-04e3-4b4e-b834-c663a6e6dd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2879ddf-3efb-4b95-b3fc-f37b088fd9de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7c4791-9d9a-47f4-ac14-03fdc15e561c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d26fb9e-9186-4236-8ab1-9fc33212e1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0de5cac-13df-4eee-951d-e10ba5e5cf64",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3aa6c24-f936-4070-a140-b554c798b28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a68a1cf-d241-4c7b-a92a-b283327b7c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8137e7-a191-4fcd-84c5-1b825e48bb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d661f8a2-0fef-4834-b23d-40226ebacfe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820dbaa0-7f13-45e8-8e31-d906730028c1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5830c245-d493-4b8f-a780-a76c4bad8452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5790f0e2-576b-40b1-bcef-eb070d667f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85746fe-7f94-4cb5-b469-2704a4b6ea28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4422eb1-fd09-4a71-ac97-b89eb0ae5f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f607ec55-44ae-475e-9b37-9597a62e3e9e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af346625-80dc-406f-be26-3ae67c46ca4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9946c7-2d14-4a89-9628-4ba639662ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a89e55-1c23-4ea6-8ead-99ed1f5080e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cbe95ef-e734-4e47-b663-92076493bac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd9b441-cb04-457b-8e5a-fbc43a693abf",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71b5d10-8afb-43ad-9cfb-c57d4c554e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5fea4c-f4af-4757-a76e-c4a40f826c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4056df-91ea-48f1-be76-390b657680e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5b18ab4c-b8c9-4115-8062-1f1e78de86c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f891dd7c-f58f-40b7-94b7-1bf5df218a6d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfe9e96-7f88-46e7-a040-0c9f504d1279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2573d12e-8505-4ae9-b562-34b99612d97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a311a89-6333-4540-9d82-447bcd3da80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d908a1df-005e-4f58-9bb8-b21ad0bad02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca1eb24-208d-4059-bfb4-a1d0b5b5492f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e5be03-3bb7-4f58-8fdd-5a27a879c7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7940eeb-cd78-45f0-afa0-7099a902046a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810459ed-07b7-4487-8fbe-9914fc122e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "df84bc79-435b-4428-8dba-6e7663d3ef12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93421a9c-6517-4c5f-ae70-e9e451c4c404",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99c235c-9715-41c9-9077-35166528ece5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a012fb-d209-41d8-88fe-4d6108c2b270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9692ba-cf66-4074-bb2f-718bc4262745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5563caf6-7c5c-4f62-8fb5-57eaec528771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583f6634-3115-4a36-88e8-2b348edc2851",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9ecf99-6328-4ad2-acea-a87a716261fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7639184a-fb30-454f-9537-1d41ce8990fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea5e296-21cf-4b2f-bb0a-469d7c3b6ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6db7d2b3-7898-4fea-858f-3f075e153d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69487af-8f76-42fc-abc8-e05a5b224bb1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c773914-a0ea-4dd5-9c38-28ad02510470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae85d4d9-010e-48c9-a527-58633ad69fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f35e00d-d360-47a8-bad8-4063e68f4424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b226ab4-e322-42dd-b0f2-aadb2a57a080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c455f86-febb-4e7e-80ae-0bfe95d679ca",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ec6ea7-0429-4927-961c-335fc2489b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b58b50-a3d5-4f7e-b958-aa673efb8d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1236de2-0dac-4fad-9dfa-15191720284d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc784c8-0f2b-4764-8380-6962f88e406e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4602c2e-caaf-4d58-a419-872c86891471",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce77dd67-7ed7-4281-b814-6e928e14ee34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c1ea2b-03e3-4e30-92ac-ecd76a84f15d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e49b695-725e-421e-b629-89d974e13a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5f8971-3205-49cd-ad5d-8a5bc32265af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915cb468-aae4-4ded-8bf5-f444addde3f6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d96604b-9f21-48fe-bc59-385faf14a488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40738a9-c8db-4d16-a76a-bf0ec63ae23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a90a028-794c-4ef2-8985-32e2b65a4749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8057b3-1862-4a07-aa71-6db94e715115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b3ec18-3d64-4e47-983e-e141f9815411",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8054f3a5-c2ca-4559-9289-91ce4fac86aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82191d60-6b30-43f1-8046-7da0ad21708b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2ac714-4fa2-4c21-ac7e-7950d97aad5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "efb20a69-777f-4946-96ed-044e002bae6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2b98ea-abd8-4f5d-bdeb-81d1a44639dd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab11941-f509-494d-96f3-3c312cc26cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9b861f-f7cf-4872-9f36-1075ac4b25d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c03b74a-3114-4909-8afd-fa5f004bab99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba15023-f3a8-4688-9123-6e3d9cf17e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc22d361-166b-44fc-92ae-194fabadb333",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7878213e-f2ab-436d-8b26-11ae3c65f530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96056fc7-a3c8-46d4-8d82-d17228fda4e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667ec80f-1821-4224-badc-66acb698e731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a34af3c-8e4b-4915-ba97-9e90799e6433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87ac513-6251-45dd-a0c6-0766be1e2405",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "282d8256-19c3-40ec-afcd-2ad1fb007bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21484f6f-2d8c-47d9-8e4b-ddb936dcc07f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8616398-5cf2-4483-858b-06f73d5ac132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f10df61-d5d8-41d4-a4d6-4f2e7d674d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe832526-f854-4720-bdd8-a19db56f555f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e1c8ee-ea84-40f0-939c-1011042800f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fc2c42-a32e-4413-b828-f3e05d5dd53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cce57a5-738e-4255-b895-42c27e157c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bbf713d-bc4f-4b2a-be87-8b3fc5c27007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5971732e-7a7f-4036-81ca-ccc8bce102d3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5cfdab-1c92-4f29-97f6-3d7dfdab6f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91afde2-70a8-4b30-a92c-4fee7309534b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb436947-1d29-498c-a413-4b431dadf6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42ce79d0-87d8-4c15-b659-b00c2f034846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee577638-57aa-4994-8d41-7d356d73b0c3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1132411-fc9e-4bff-96f4-bdde214378a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1224425-0f52-4a82-a27f-8246454e84f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c848bc-9a6b-4ccb-8329-40c29275ede3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "131e5700-89ad-47b3-999b-adf6923e909b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1220542e-38aa-478f-b136-4e0ef6def156",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6a94d4-f449-44f3-8508-f0b8f4550d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d469ef6c-8455-4df9-bb9e-dd81411f8f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490b71a3-c88b-40d5-a3fc-4c15428ca424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0046cd8-4bd5-47bd-a028-e2804b92072a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784c334a-1135-40f3-b93a-7ed3560b9911",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cb8122-8a3c-41da-9725-8afcd7ee15f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c91dfb-ee7b-415e-88cf-091da80cf01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e84b67-f563-4557-a3ba-198c9630a99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97138876-d419-429d-8610-27e7451f629c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e190f2-d844-4b73-a69d-a34806d6bfe1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1728ba36-ab33-460c-b6a5-0286e34a8f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a621f160-903f-429b-9737-3b676e49d16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66a672e-fd4b-49cc-a4ef-1124ab45f484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08b56ba3-259d-4af0-9039-83e710f19c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64dc371-61e5-4081-b91e-72c4db13c8ce",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d06cdd-fb97-40c3-bd98-b5b0fd00d889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afbd5647-291a-48d3-a7b4-1ac663f86ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4f364c-f2a8-46ad-a896-1779b6dc69dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f04f21e-8258-402d-82ed-65a37a4003a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1151a510-de91-4fed-9efb-f0ef550e1bb5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41adee08-bc30-4b54-9c9e-d0d4a7e7286b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37a52f9-6f06-4405-8f5a-313ecb2e29a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0623ca0-9073-4993-8459-8eacffab7329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74c608ce-8255-48a7-8a1f-0de101b92319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb538b4-bf17-4f9f-9f09-24d094c4ce87",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd2b66b-0703-4545-aa9b-82ab85ea24c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a15f6c-4c4f-442b-87cc-d5f053e55571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260d3440-1b79-4b33-b9e0-cf93ffddbdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "881c8064-7493-4812-a8a2-be9b5840b5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c559a20-95b4-41be-8d56-11fb8b8bcf94",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6a4711-7fb6-4caa-b3a8-e5f0693e7fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a9254c-1296-4991-882c-1d6a620eb7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d3e56c-4bb7-4e24-9272-bba9266882ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf86625-1c91-4993-ac7d-3870f8c3c0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9397f43-c3a5-499e-8638-ddd15ce9a2cf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35a9029-4152-418c-bd9f-d0c275c8191c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52b8f97-b8d2-43d2-add6-f59ac886ae9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999124aa-350f-4fab-a35a-ea17219bd697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eeed8fe7-9c74-491a-bbd2-6de867cef7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3ffb10-3d1a-46fd-a018-52b2c2520965",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc52c05d-b174-46c0-a10c-091da955e32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0c4443-b1ef-4851-844c-5d4252a15f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb51a87-b0b3-46a6-81f6-bd9fc6d74573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "872bff6d-84cb-49a0-bf80-04079269dfb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad1d722-c6f2-4553-8dc2-25fc1ad3e190",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c212e546-84d8-4622-a360-f62b9c1bcdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c063605f-32d0-4f3b-96d6-b5b760fab521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f958a7-ebbb-4d51-9cf9-92e91bf8cd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "137a852c-a5be-4ebe-abcc-a837f33be170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d65c3ad-5a5c-4223-aa4a-c2f21f966dfe",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcc0c5a-f7af-4642-bed9-8cf73f63e7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd8ed93-ec57-4eab-b2e3-33c32ff3b44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debca455-af94-4488-9260-876a95230c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a4c6560-785c-4c1e-981a-5b65e326108e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e85abdb-614b-42bb-b75c-92acfcfef6bc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1f1667-5f11-4369-b959-898c08d92d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c96e625-0585-4fb6-bafa-78596f510c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70d72da-116c-4afd-9996-6c8c4d1bd85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51889317-b680-43bc-8027-a00b60cd8e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130868ba-f614-47b2-96a1-5688cfef4244",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c516ac-b533-478e-9bb2-bb7f29afad46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6639273-9311-4fbf-8498-785434a9e406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c1de0e-048b-473f-97f8-16e5e3fef184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4de5cfc-b3a2-43a9-9a02-0e846fcd4c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6447f0-9201-4d4d-855a-c2da8c3bc523",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d64491-da5f-42bc-8d99-2ad71bf42115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a5aac7-066c-41d9-955a-0642898792dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e25a65d-2023-417e-b249-fc7515177bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d1514c-2ca0-4a41-a189-5f07dae997e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66af4291-6829-4167-854d-40141c3b5e5c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad17ebc3-7349-4223-bad7-d6ec40b53aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2b9960-9122-47ff-95a2-b12130e457e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde2a69c-caa3-425f-9a23-6dd2eafed324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5da82daa-fb11-414d-a8fa-94b7b908eb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbafed8-9a9c-4df7-a6a3-b88f79e42ec3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7287dea6-2472-429a-884e-011c0077f85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b39fe4-e84c-40de-9219-846ee6a82f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ba6c1e-1384-47d5-8c18-d125bc6c43b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6495f63-82ad-4375-91f4-1fc48cfa6183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5850be-0bdb-483a-b909-eacb4919c387",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b5a768-62c1-48e0-8e80-305e7fdbb9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381231ff-68dd-4f75-b612-4fa434ad18f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6471b596-ccdd-47f6-973a-ba437758c3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ed70a4-ea35-4a6e-8da8-6971d2b1be38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd0c1f2-65ad-4ed6-b772-e3a40d587e21",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc41134d-fb29-4be3-bfd9-073879817672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe14f407-09e1-4678-a7df-28a4a1f2b3c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8182468-6aed-4d0f-8d90-b0202fc3dd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "187aff84-0953-4bc3-bbc1-c87b56740e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d416139b-dc23-4b3b-bdb7-93fced16f69f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb5b191-d29d-4dc3-81d9-3918b27166ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dddf455-5c39-4d6e-bbb8-61140dfac3b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c1eb4f-6540-42b9-b79c-7a0acf1a6923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "495c0cab-5b52-4f6a-9607-b6fb3c556e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702b862d-23c0-47b9-a66b-3389e66b008d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d321e7-282a-4b9e-849a-e3ce1c5eb87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d57df31-ab47-4ce7-9c0c-82ac482b1a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b22435-9da4-4c24-a3a9-30a75cca2cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8efe69b4-23d5-48c9-9da8-5b5dd6662cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9811abaa-257c-42f9-ac27-37a082ac5a63",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a03c044-e2f1-44d7-9fd4-a104ad3151ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7d650d16-b926-47f9-a8b8-68d4642e1c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d7d731-3e39-4d01-9729-619dcc7873f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c08f282-27d2-4aed-b9fd-8d689f15c7e5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fd1744de-52ab-4266-bb0a-a1ec2d081d6e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b0708d2-9e44-4c6b-9b10-89d7a4287f3b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58808497-cd3e-426a-866c-1fc42ee3b8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9206fa02-5ba3-4a8c-b1d6-ebf4a38ddd1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987c357f-2c8b-446b-873b-4bd2a38f8939",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e149450-4581-455b-9267-e9610607c257"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99130119-6ea4-4d6c-997f-404c9b123619",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc2f0c07-251e-4645-94e0-72c171e695b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a3144c2-012a-4096-ae50-2427063aec8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "622f6c63-f92a-4b5a-8ab1-0cbc17bdad92"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fbdc702f-3a7d-4c45-990f-988a7a5b5c2c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "85ce2db4-7eff-4caf-9102-b3bf967697ec"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d04bcdd3-711c-4148-b230-4a5c26b52ed7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2cf6ab1a-5746-4087-a406-fb3495190f00"
                }
              }
            ]
          },
          {
            "id": "ca00b5c0-255d-4ce7-9be8-9cc86e7428d6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9c7c90eb-ea19-496f-995d-caf38c2e6aa3",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d4dba0a9-14f1-46b0-a69d-4a8a609e2e66",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442fddca-6ae9-460f-88df-bbd90dc1ae77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "388afb16-0910-4515-82f5-ca7a340c606c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12282e2a-6b9f-4f7d-9992-cad749b12189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aece7f89-fe6f-48f5-81ac-abc8ab068fef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d8bf4574-49cc-4ea6-9d59-9d15eeeffa24",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59599169-0bbd-4ec6-9bca-3076b701cce5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92ddf0ab-c5cf-4789-890b-43ba285a82d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92ff922a-26d7-4ef5-9822-e62e024bac1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0eca113b-4617-4fa6-8f5a-08ad71d532c0"
                    }
                  }
                ]
              },
              {
                "id": "884baa90-0eb9-4840-9cd1-201d7613dbea",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89277aa7-dc8f-4663-8e6d-631d100f75a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eed90609-943d-4a04-8a24-98027f46dccb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58f63ae2-60f7-4820-8613-693dc23ca56f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e21ba393-df6d-4673-91e0-0487cdfeb0dc"
                    }
                  }
                ]
              },
              {
                "id": "0bdab43a-f747-4bae-abfd-366f4a1c471c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea23cb25-d3e9-4e15-8bcf-c42061722448",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "667074eb-d702-4336-95a1-55982bbbc3ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3381ab2d-4b63-44bd-8e81-505133f3db47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4380089d-2ab1-48d7-b454-a73ac09f2f10"
                    }
                  }
                ]
              },
              {
                "id": "31e16409-daeb-4bd6-b968-2264fabba038",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6ba0618-f5a4-4475-a76c-c1a48393daf1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42080e56-b534-4f88-af81-0acd2176177a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd928aa3-d60f-45a0-9720-0fb936a91276",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0cb2a8c1-b87e-4304-8c4a-396c015bae26"
                    }
                  }
                ]
              },
              {
                "id": "dd893a57-e145-4bd6-90c6-17a3fbe4e7bb",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab3f8a50-947f-4475-bfe9-f46371c7b689",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d99d65ae-4357-485e-afae-bb680fbe6391"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13f81914-c923-4345-9deb-de2108486bb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "50133b13-52c0-4c52-a95c-25b9abedf14e"
                    }
                  }
                ]
              },
              {
                "id": "3b47f648-fba2-4496-a649-9b966650c4b2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6d59d60-73e4-4b59-8f07-0cd68e5a8563",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a73c9616-3b94-41cb-a625-cb3b37f498ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "960d20ee-405f-4436-8b64-80c0e938012a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d5fbf461-e93a-43fe-a681-580bc6739c60"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "72f44c6d-d2a8-41c4-8edf-eb522d16d6b4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3f416af-00fa-4428-9c35-e40a3005e735"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8289ba1c-c513-40e7-8bec-bff974c6973f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6cf486f5-de3a-4d78-88a9-1464a53e962f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a53e4f15-580d-4abd-9d19-2b779d031366",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "34acd9ae-072c-4b02-90ca-65d8d34d3595"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3595b87f-6e4a-406e-8c70-c5a65598d8db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8650c3fa-7383-4a23-abef-6fb4fc779b27"
            }
          }
        ]
      },
      {
        "id": "61507310-1dd7-4ea5-ab92-0037b59a66a9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "03f4ea24-d295-49b2-a2d0-ab466746b17c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "045fc327-da2c-49d5-9a02-29a786e44ec7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "86cc1dff-4845-4305-b7f5-1ebf6c22b754",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c543a2e4-c665-4c93-989b-65e1f8b3493b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18827e96-d9b7-4c1e-a794-55845984095d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc11366-d0ad-46c1-ae1d-e8a8e191b3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b30e4ab-319a-4e09-b5e6-46bbc02edf16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b0887e-44be-46db-abe0-b548982a2700",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0d2773-e42e-404f-812b-3c9f48f62c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5527f89c-687c-4ac4-88b2-ff318ed94d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc8da30-4940-4e34-a08a-b79e3eadc787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "075b3cec-86f4-488d-a700-509b1a9cfbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0808fed-2ef5-4d4e-acdc-6c96c6bd06d9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ff5de0-1d74-4885-9942-055b487cc83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bf68fe-ed6a-4e4e-8a72-8affa99df5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc82c5b-6ade-4ec9-acf4-81d261af4fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0dde5e-a3ed-4c9f-bb57-9a4862fbd5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8dc49fd-1993-4a05-a7fd-bafed3b883e0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47041e05-c905-453c-8205-04722ab46dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6bb8937-0c9e-4296-af8d-ecb0020be5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5a52fe-0b9f-4aa5-bef1-28aad3d49fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77c90b96-de26-4e59-9b53-ec933ac5b646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b04022c-46ee-4bdb-8819-4f400ed44d9b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5854596d-ac19-4ae6-8f34-7a4b9f045eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff8e9ad-bb80-4cf8-9dc4-8eb048c8f966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6878af02-bfbf-4abd-a516-ed43ae33e293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "576189d5-e6c3-4796-abda-f97ee7793325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f1a841-4185-45e0-b244-890a6d81fa24",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50be358-6b44-4c71-bb5d-ad937a0ba2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9ce646-aa2f-4fd2-bff1-ab5ea7786b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9ac613-0279-4ed0-8f7c-045f39a991de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "79fa0fe8-5be4-4ebf-9317-399496ffb070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2c86f4-df39-4e0f-865e-f6e45f0a5208",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a0116e-93cc-4976-8478-49e70ca3d122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c99ef9-87aa-407a-88b7-0b3ea55afac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4061101-9503-42ab-9a11-c5e1415f8232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "615714af-cd37-4091-a03b-009dd0458a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3d0d04-cb9e-4585-bf61-4619003892c9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6426726-52f5-4bcc-8efe-97e900b5ed27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7d9fed-f19b-4a38-a02c-99a96ac0d39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d61dac3-d2a4-4fb9-9ca8-b81462f19ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34a83b41-1355-442a-8e10-a8a35cea6837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e057bac7-8550-41fd-ad9d-2846981a76ff",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb9fdf6-8e0b-4a88-aea7-3084ad412c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a8bd413-9abb-4457-90c8-0c4b41fac97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347cbd49-522e-4bc5-b034-787b1130a44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32fd5089-8b5c-46ca-b29a-a42aadc5a5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38fd7a6e-4194-490a-9a28-757a2eba20e3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5dd78f-9a99-4253-be21-c73de8bf9504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497bfa34-624b-4389-8512-651743da7866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0236100b-0238-42cb-8402-37221794c680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a3f347c-825f-4682-bc0f-b43fe0a40b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901379e1-a370-4685-8e9e-792b3859ee45",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2cf3cc-d98a-44dc-abfc-d39d62757af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "960844f8-0641-487f-800b-333a18e12980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d8905f-74e7-4293-986a-f463f84bcf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "252fb3dd-4483-437e-8414-a5329b706f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93cfcb9f-1260-4d80-a256-266a20decf93",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0d3c60-410b-44c5-8dc5-29189f7cdcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6682b476-aa4d-4df8-a45f-5eb0ee1aa126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17571b36-ca9e-420a-9d3e-348fb15d737d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dedadb90-6091-4f1a-b194-e3940913780b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa68ec63-8b89-4630-832d-d8113c9360bf",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58aa012c-baf5-4dfc-9658-0bb70dc0ac48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5365d43-672f-45b4-9a85-2045b9728604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b5562f-df19-4ba8-9400-8c4853ccc99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c02075c7-b294-4001-929b-f9492f42823d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0be2542-fe8f-4498-b1d3-2936fd8bace9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39863ea3-3fce-4e5b-a0ec-b2d9d97720c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7870664a-17ca-4f52-ac76-cc3cb9b05d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951cbf89-fd3e-40a5-a05e-2ed37bd142f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9db6f339-f054-4479-982c-52f3cbc9001e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06aa674f-f87b-40c6-ad43-4e430533ff29",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6d4854-c5a0-4e4a-9f70-83f0e4147803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438f968a-938d-4355-9ba0-25c774df9b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2294fdf5-8b93-41cc-bbd8-f871e4374a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "167967ad-f207-44d0-ab27-fd48f502a2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a861cdc-bd1c-43d0-873e-e88279fe4e5a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c1eb9a-6878-47db-824e-b0b4d1a83562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e03e65-fe5d-4db5-9aee-79f0a84efe01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b79600-4391-40b9-968d-5134d8d43456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0516d5-a368-4fdf-bf2f-e98fb9974b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9a4b7c-27c7-42f9-a25e-ce76b1d79be5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674660b8-a308-4879-99ef-e46967426296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46216c90-7a96-4edc-8f0d-a04c35c48c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428ecc0f-bbfe-4e03-9793-e79804b56b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "11c0ca18-7135-407f-8c8b-2c9c54d22e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b7dccf-98d3-4ba0-874e-2a228fe16ce6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abea6a7-a28d-4b60-8d45-a70dcf83a08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bfb6bb-2235-43ac-95f6-9b80e54d690d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7c3f4c-4aff-40c4-990d-7cb3b3fd0541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9573b983-154a-4c59-97ee-32776c582e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a5a534-ba03-424a-a293-b1970c68403b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ca0984-c402-4ad8-a0d2-3ba7a9efbad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fafd0013-2e19-4c5f-a6fd-a5cc995938f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188e8fba-19f7-424e-b432-5d77b22e6245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ad788b-85a0-4856-a6b5-aca09d445a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa9d294-a330-4490-b73a-542203a86e08",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5860bc-7584-4bb0-b724-101741ad9ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e677845-9aaa-40db-a7de-3380cf6cc98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b929e346-8aca-47b4-99cf-e2e8fb6b9316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46477267-58c4-4f85-afad-013083a8e006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87044ff3-0c00-47a8-a16d-9a93f8ca93ef",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9554b235-cb53-4d20-b027-45ce6c63784b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd98b38e-e8a5-48a3-9934-7f233e0bd369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127c2312-6b01-436d-8d13-6267facbda84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51ffcd59-4d10-4409-b82f-c74940bdad71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ff770d-f7a9-411c-85a4-c066ceaffafe",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf918de-8002-4d7e-bc12-26826a3cedb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d03e5ba-afc0-49b7-bbf7-6bd40a8c41df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833cba2f-3b47-4aa0-9143-8e7921664c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65f63462-3840-4fec-9f89-66f97da6291a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8e60ff-ccbe-4e25-a2f8-4340ef4f1396",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cfd6b2-a985-49be-a494-41a7cd8e00f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f54ecf4-0a4c-47be-8de0-e5f30a7fd4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f59448-64f0-47ed-a897-d19e0de2ae0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1bc766b-edde-4d18-9fb5-bb76581b0762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e3c758-0fa3-45aa-9f7c-eb00e36b6dec",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f941199b-1a0f-41b0-8582-a42026df4a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0f6688-5fd5-462e-80aa-5d490f863068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e56780-ec12-4db7-b14b-b9656e1d05d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a973ae96-519d-48ed-aee4-37ce61b11b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e1be9e-52dc-43c3-a262-040b85a00e7d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44be656a-70ef-44f5-a750-d33b1ad77d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f728e471-08b4-4846-9f6a-a9f68dd4de21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0968067c-7ee9-47bc-92d4-a5e3038f6852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b87c477-04d8-43d7-ab64-1672f0570d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7860c7ec-cb91-4682-a070-7ee090580530",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460f0a24-2362-4cea-8428-4687cb73f69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86783380-9b91-45e3-9e16-bc7b678324db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a69dee2-bb4d-41fe-a756-80888d8bd605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf4c946-c4c2-434b-bc16-84755cfb6a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bec08cf-147e-4738-8179-da14afe6112c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932b40c3-5b89-441b-b080-9863ff05df78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "907f2b52-45fc-4257-a215-9d183f513cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff51032-f3a2-46ca-ab85-a10f09debe41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b52d90-a931-431f-bb2c-9fa531d03b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a173d22-4fee-4ef3-93fe-45c5535aaecd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6637184-3cf4-475c-be89-31b8ebc3fe58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0f28c1-8d91-424d-b983-6a54611b7bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f531a4a9-e666-430d-b402-9af7d5337676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7d6f26-4581-470a-b721-6a3310a7ca4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6139cd2-cd36-452d-986e-63c3bc35b5c5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e4cf02-be75-4adf-ab2f-2e6fbb300443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22b007a-5aa7-42ec-9131-16bf668dfa66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cc70da-c865-4933-89f7-41d239634dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c804f3d3-7284-4b87-885c-ec56b335ca9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ac61d6-a469-4a3c-89ae-7f10db4edf3b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25647274-9912-4938-9625-fb9046459ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff942ae8-6a89-447b-899d-fa4960d1956a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81a75aa-e3ac-47c2-be3c-6e5835b1451d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0946286-9d70-46ff-8410-3adb86af6bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c6ca37-69e4-4f87-a6b5-b9f71fba6ccc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8aa1b4-ec9e-4694-9584-00aa1e1c2659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a14b70-0668-4e2a-a265-a96b248e58bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4aeb83-42c1-48d6-89e7-424b32f01b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1d2106-7a0f-4670-b6ea-c44a35917bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1eb727c-3ad4-4877-9dc5-b04c321f0d44",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3548f45f-8b85-48db-9bcc-d607a61f174b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34bf51c-5d47-41be-bf2a-0a628bde83d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2988a0ed-8a1b-4e0d-b550-8ef94ec0e449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31a30647-c6f0-44dd-ad75-aae8171744d4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bc38656c-7ad8-4391-b742-ecd05ce0ec54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a59d7ac3-a8fa-41e5-b01e-fd5b0e9818c1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a466ef22-f0ea-44cd-8291-6cce38881b18",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef16805-9a1a-4c99-9068-235631bb1e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf16b80-54c5-4fa5-9689-9139f8303a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a113457a-59c2-49aa-9ced-b9a49330f672"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8af9a0e-d9f1-4fd0-aa49-bf624b412103",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c774eb28-87ec-4fde-a479-0243f07c6a87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "755a9d93-f664-44ce-86de-01b7bd34f9d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae25ce51-f12d-4472-91c7-c0de3b07d585"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18448057-765f-450f-8619-8e9d198f3c26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a7269fcc-506c-477a-b6d2-4d151a60439d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "732532da-02f4-4a6e-b281-6d7aeab4e87e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e3cd3b8-de9a-4c7d-9956-ae21ed1d1dfd"
            }
          }
        ]
      },
      {
        "id": "a465c634-8e1a-42a2-9f49-45a7e3e5bd4a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "cb5f312e-283a-4e9b-aafd-ff8e93b82911",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b42b2992-634d-46ae-b6c9-63b334fbe2c8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "de7544c5-a7db-4b7a-bf91-25fc0b2dd9a6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a922d104-79ae-44c3-ab2d-d81e609b8347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f62062-d0ba-47cd-b9fd-0e5b62a68861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0824c107-e59e-47fb-96b5-7a33e1d24338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0a3b75-eb0e-49ca-9629-5cb7f6d68df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a722a726-266e-4a80-af30-f5c540bbb59d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c883686-dba3-47e4-8c4d-980da935b03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d00b569-c044-438d-a903-7a39f15db304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4317dccc-6028-4c5e-8f28-0cea0b09c55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dca7bfb8-ae8a-4f98-9607-4ba3b624e0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e9c9e2-1104-4efd-8cb8-9f1760d44f2e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83df4b83-2c99-408d-858e-1afa766a2e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345017af-2b30-499a-8d0d-1d18096dc098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b2597a-06d4-41e4-898b-609cc9d793d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8421f67-5544-485d-a2d2-76a717605063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046ef8ad-c819-4840-a6c7-39e180ec14bf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da24f5c-19a1-46cb-995b-79292c4641b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70250814-092e-4eae-a355-6a01268fe94d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8caf151f-e67e-495e-9273-2ada55219d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a45437dd-7370-455d-b4be-1af662f064c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a746c17-fa11-49d2-b919-46aa804848d9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1f2290-70d6-403c-8a9d-636a4f98a907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc55e58d-7d7b-4523-9197-ad00b87cd63c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6fe652-a75b-41ff-ac92-1be63332c30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f412ac3-f8c1-45d8-bae5-db1a68ab6d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c730c85b-f5e0-4e06-8b0e-15b62907f06b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca4ffc7-a30b-4de4-9b20-52c56cfc98ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815a7594-9839-40c9-9811-d2ce3ee975a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3a6fb2-3156-4dc2-bf58-e642a1504c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "694c0e01-3610-4113-94dc-76422775e716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c146ee-5e5a-4eaf-b51a-869f70ce92fd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740e2cb2-8cb9-4cda-8c63-1d30eb7f878e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d07b62d-f1c3-400a-be06-e231e9e0cbef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed26d0a4-f279-43db-b659-064a0d6582c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f91b01f-e61b-4f3f-ac07-d4f66eb6383f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ba19c8-e64f-4a02-9b7f-98859b9c00d5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdbec57-e3f3-4a6b-8db8-e47777024c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031fedf3-d28b-4e4e-8036-e6aeabd3df4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ad2f04-881c-4d6b-8aae-0e086217c787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dda36564-69d4-4ea9-b031-ac7cd7e22a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dcfd53-52f5-4c9a-afb9-8f96592c39c3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e90631-6e65-42db-914d-35a015664241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ca1d70-430a-4e94-9545-9d5189939638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b7dd96-3858-40bc-927a-9daae60d8cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3693f624-2ef0-47ac-b8dc-9e997df05315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d42e116-3a87-4b35-bfaf-9c4d5fa3d0b5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce7e4d4-9df4-4b65-aa13-bb0ffdeeb933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ccc2fe7-4384-4973-bd4e-43278df98971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78dad4a2-6266-44aa-b372-74e1e11100bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e68f7b9-2dd7-4fca-8ea9-903243f35ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f29095d-27de-48d8-a5d1-e85e41f50377",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910c29c0-bd00-47f2-807a-d7058d2fa495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb3502d-5fda-4f34-8465-681b4ed314c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af62af56-068e-4889-85b8-add7403933b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "29222d0a-a9cb-4560-b0a7-0c1318aab117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36e8dcb-b817-4062-89b7-363bfc1626d4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05872a5-862f-411a-a78f-bdc15d1d87e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084731c3-c1b4-4e56-86a1-a1aad6245e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb1673b-f1e3-44cb-adfe-25d9f7abf321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d23d7cf-164e-4e88-bc6d-acb58e66bad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f27a7d3-9bfc-47a1-9125-4ac37735d436",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d0964c-9ab0-4cde-9f6b-90c508efdc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cfb20db-6749-4e25-9ee3-efdbacb9408c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ac5c34-0204-4040-b177-fccf13f05cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c783218-c70c-435b-9e74-0af59bb65e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86139f5-009e-46bc-bb7e-6e044c0932e2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b6a591-b4fa-4b4b-aea8-7fdb30780173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64d4d45-08c7-4dd3-9868-0e3f27cddc68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a649542c-33cc-48bb-ba92-dfe16de3fa1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeaa83e6-3feb-44b3-a868-0f4b35595f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2438a3-b43d-44a2-ae3f-7d820543fb5a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76aae3ba-51cd-49db-a986-0f2df317f778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c2d91d-0838-487e-9ae8-4bebab198303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8224e97-652b-489c-84af-d2b086df08e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "46eca6cd-a345-4abd-bc32-2bee1ad1561f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef36897b-9a16-4425-863b-2097995bcbab",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa88938-c38e-4b88-a5e5-d0c32134baa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8afb112d-2603-4869-8039-a7278d1273e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac98ed9-09e9-41d5-b586-ea1b243ecc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "aef469cc-ccf5-419a-99d4-0c24381c896b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0c04ad-6105-4432-babe-f94a4c1fbdbb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850e995d-8670-4a66-b250-3889817e4a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b16e4e2-fbf8-40fc-8376-05258f908e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26aa9c2d-f949-4d6a-b3b8-959fcf0ce9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1e86d6-8a43-41bf-a09d-ecb9759cefad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a662397-b9af-4187-91a2-4142a1e85e44",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589e4a02-98bb-4735-9e2a-0f6c3ec0bddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e4fc3c-a02b-4a47-a026-2af274480a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eddc456-9919-4343-8822-925e4327b9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "067351fc-f89c-4af5-9875-dc91911cca28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b0c523-34de-4e03-a9c9-e4c8cf2648c4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c5fd18-ea0d-4bb5-9c82-a040719849f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9b7824-ac13-4641-81f2-0a35ae04a093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434f7ac5-5cb3-4ca9-a88d-04ab294ca24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ec0077-7626-4249-af10-38f905d2a202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9af06a-acda-4cd1-bf81-3239904a8d33",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f020af9-6b56-443a-9d4b-f403b0e70a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8c2583-71b1-4f3d-9f6c-08566af190f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba377074-e86e-4051-8c07-237df3c77a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49bb9001-7ae4-4736-8f83-619c4aa1c291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6fdb51-8f54-495d-a240-ea72da0506e2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44fb8c6-2d11-4174-90e4-736baa8d8db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce704b5e-7a86-4288-8abe-01ce0c31b365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e8b090-5107-4145-9f53-808cbc91b750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3be5bb2-40f6-4119-8ae5-f94d889eb757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba12caef-9476-4f66-94e4-6a92bde16bfe",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734c956d-e7c5-4737-af4f-a243ad658e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ccb166-df29-45eb-8e63-0fb7753beb3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad3c443-2dbb-4155-9080-421bfc0bda0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2796c508-6867-4c92-8710-1c8b47e63c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2615861a-a5d0-4020-935a-5c7c0817c256",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e55cfb4-a153-470a-9962-f4914b6b1840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c2f253-a72b-4f52-8c42-20dfcec87743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1a3a51-f101-4876-94f1-3b26e1b72091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d548db7-85cf-424f-a76a-8166466e5bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9291b518-ce59-4062-b4c2-923e5858dedd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26d6326-7c9d-4672-93e2-8fc72bfa3f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1065d0bd-4ee5-46e9-91c9-15812f236ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1832f1e2-28ad-485f-ac3c-212602795a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e4238dc-7716-45d8-a7a0-a2b2fd411f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ee2ba9-8097-4d52-a82b-c9f1c25fcb31",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d527ce64-292a-44ea-a813-28d86874bd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a96df1b-d273-4b92-a1ec-6a776cb83d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008e6664-cb30-4a9e-8c6c-9123644635d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "594cdb20-f168-48d6-8cd4-1a9885aca8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9a8848-b376-4f42-a4f9-4c23e97b9eae",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dccb718-f122-4b0c-9858-2a8a0186d91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd8a81f-be91-4275-ad24-6311d2958089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725e1fe0-c180-4920-9bcc-de94555bb92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec6b75e-5ab9-421d-952c-7e3990d1707c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79a2b7d-799f-4246-b5f5-4d61ec23e084",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc30efe1-5a72-4b91-b4b0-1d71cabdeed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19975bd1-d1b9-4548-bb2d-da549e3cc2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2349490f-2a9b-4719-b433-10266496dc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d5b6e1-012d-43a5-a519-06dd753f7b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cbe083-b722-46db-afa6-0df59cc3d564",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb928ce-8eb2-47ab-8cda-dc864cb663cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eacebade-4758-4794-8ab1-cf6567b0709b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803bb3e8-c8c7-406c-ba2e-639872270817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb1d9a9-0e5a-4f3e-86c8-eaf5cff347a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027e0b2e-d429-4f7f-a022-366db931b4fc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f8b5c7-14fe-4e0c-bf1f-a74303191955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5cafd5-7c3f-4774-ab1a-85765905c9c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2d7a41-b5a7-412a-bbf4-2fcde698461a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "effcc95d-e43b-4082-9aa1-b5f08e4222f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64c99af-9e3b-4f67-bff7-02de612e74f8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d5d37e-8766-49b5-97d5-a9e698d168b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c62011-e437-452a-a4b6-08b1e19239d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac0b8ea-f5a3-4b86-b822-924a6820ef76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67169e0d-38b4-4d6d-a483-169db363fbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5465d9a9-7ec6-4778-b6aa-7936ecdec12c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1b2000-929d-44e5-ba58-0c783369fb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ee02a3-6776-4618-9c72-8558ebd2a02a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55b35c5-19e4-46ca-a0a2-4da33a2f6972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35ad6629-288b-4598-9917-dc28c53606cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3a7048-3237-415f-aada-5e01f43e88ad",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76597d4-d243-4802-8750-63e9bfbb8436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135908e9-8406-43bf-986e-c20c2f96719e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f7e511-9179-42bc-ab39-7c084033cb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7766cac4-e552-4499-aca4-7104c7bd0667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909ef0c2-e101-41f8-9d38-b208ea90d93c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c47aaae-18e9-4ec4-bdd8-0aa3ea18e729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8fd5c7-81b4-425a-9c22-7c278348e536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667724f7-2828-4020-bbab-19e73ce3fa64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d5f483-e098-416d-a4e7-c152aa24fce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792ecec2-99af-40ca-b564-d44e84229adf",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2431fa40-e552-4487-b3a7-08dd84dddf69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ab628f-1f1a-4d75-8e7a-16d4703ff8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09bba69-45fe-4b30-9b87-50abab38edc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efb989af-55e5-4123-a017-41e5116643e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae4a43a-6a07-4970-a880-e52384ef9019",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504c29f5-ae0c-404d-8ef4-f649249f7aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec818656-6f0e-4a90-9283-9be21164e4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6d7acf-965d-454b-a01e-000dd83e7d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87bd28aa-a3e2-4b50-b2af-30ac4bf67ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a242ee-23b0-4762-9561-e3a76240dd3f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237b1399-fa63-4ef9-af25-65abe16079be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2faf9d4-1390-4cdb-b9a6-ae304b13d6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be89b68-8ed8-4268-9b85-84d1867baf69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc5fbdf-dc45-41c5-9852-e7939ce806a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c63d1b-47ec-4532-972c-cf5238b0c19f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d3994b-5f4d-4de7-adee-86fc42bd6029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fbef25-9c0a-436e-b14c-28b0c59900a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7869d4-a961-42af-96ec-6e716194d88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7023c53c-504e-4e4e-893e-48761c9d714b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2fda3e5e-fcf3-43b1-a596-c3bc8252c151",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6392b8f8-4e1f-4c8a-baa4-01302e9a2c72",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e13634-b547-41a3-8b82-1619bfa5848c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "debfde33-11fc-48a6-9633-4c11aa3a7f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf91b3fe-2e1d-40cf-a48d-a7cb4abb3b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e2e9b63-c436-4cdd-be41-14160ff198b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfcfac9f-9adc-49aa-a675-4eac776f80c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "866b9c3c-8b45-4868-a867-3b59c8df821a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f9e91f4-ea7e-49cd-910d-a5482c5ecfbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70ae7d0c-0ec9-485b-9dd7-edaa1d44e584"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b49348a7-5170-4c3c-a38f-733543464478",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7b8e2c51-773f-4a74-823d-db305efdfc8b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0dc5c182-0974-42ae-83c2-3e12743d2feb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "729805e1-87d3-42ce-a571-bbdf1e0ab69e"
            }
          }
        ]
      },
      {
        "id": "9dea1e77-ed6c-400e-b456-c2261a7f3557",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8b621757-78d1-4631-a39c-4d39fee7bb52",
            "name": "Negative Testing",
            "item": [
              {
                "id": "095d1ee8-40f3-49dc-924d-d10aae923b0b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e9923134-0569-4b02-b8d5-30db2909284d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac04af0-7af0-49e4-a30b-a223e60561fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5650dd9e-b077-4a0f-b908-33692bfb637c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e5cb9f-a7fc-42c4-9a6c-3aab27b62390",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20c6e12-2648-4ed8-a631-9e11cfdd5603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d31d16f-cf29-41a4-a649-b7507cf46c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69cdc06-6108-4e63-92cb-e0fcde1e83a1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a88fc1-595d-4a54-9046-40cc94e32378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6280d16e-008a-48b0-b43d-fe4512b7608a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e5a48f-fc39-45f9-833b-cd54b77c5ed6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d89d6e2-d071-43ee-aaf6-4c5c0b67f1a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34f102e-050d-47ee-9b56-3ea3fe3cfcf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b80560-77f8-4082-8673-3e1afdf47312",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40f340d-59d3-41e3-8d14-477c71b3b0de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b56b43-c1e3-4231-90f0-2619d9eadcaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97164fcf-757c-4e7d-82d4-20208512a282",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756de460-df32-4d6a-9f0b-fca94cf2df2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1a53f5-1d6b-41bb-a474-b8b424124eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d789a67-1b71-4a5a-9749-d003a084b8e1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56892583-7bd8-42c6-bbcd-53ebb4f96a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43db335-8aa4-4dee-b0c2-9bd8bc001cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d09d2c8-2297-4e7d-8ead-3f0a8f28f9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ed92b4-eefd-420e-870b-4ba9587036b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5f7abc-dfe4-4936-be5e-5f4e54779d5f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8aee7d-142a-43ae-8896-b74b812ddbf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcc849b9-917e-4e58-89e7-9ce800504b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75d5f7a-af14-4d06-8b5b-c252520ea198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafe8b79-cac1-4960-af76-2c18eec5d755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993127c0-76de-4886-ae70-1fd4f28414d0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a81af85-84fb-4388-aecd-f87f8ab9080a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c62e4c7-b521-4ffb-8029-c17987bc8405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58130ef2-63b4-4aac-b17e-4be5730d9c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28899fa1-eaa3-4b98-899d-9f9b60b8455c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5910a6-7037-49f6-a796-8008f379d496",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531a5bfc-b6b8-4ad4-96c7-6fe37deeca29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c1080cb-489c-4519-a3b9-2eb4d5913f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0aaa06c-495f-4968-9955-db9989807cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfba60f4-337b-43bd-83e6-e9316edbd889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db40a034-4769-4672-ae0e-39d07b1c7f00",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e761dced-64c0-4730-938f-e00cf29c91db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8707c81-9bcd-4765-ae63-3c2509ac2b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "385eab05-ecff-4b9d-90e7-eea5023c6b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "178f2712-48c9-426c-96f7-4431f4191bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02de3b5a-59c6-457e-8021-2c6c4158f57f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5057cf9-cd55-425a-b088-72ffcb53069b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2d419b-2b02-4caa-a804-0b97f8dd5b0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdccd5a-d8e4-43a5-b27b-122c1c1318db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5dd6ce1-d9b1-451d-8166-1a0ff7f1303e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086c8875-afdb-4dbb-a4ff-346cf10dac1d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7e0962-0c63-4800-b4a9-1a0955e006b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "945cc574-09ab-4aad-918d-db9052affc22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a81ff1f-1e80-445f-9dc4-6bbd7bd78671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f6fb64-7cce-491f-aae8-11f80dc57501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc10485-ff83-49a7-9fb7-c579edc0a95f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28116f05-73ed-429a-b7da-591c1e4515af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c0a4fb0-a506-42d1-8993-95bcbec58f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffb673d-b6db-48a5-a69d-55c8c80b6dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21dfe63e-e701-4e10-8f1f-c030b1a69c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86addcb-df24-4ac6-bade-6174004617eb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459e2591-e667-479f-93f6-9dfdb6241763",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27bf3760-09c2-4880-9951-66e67e43056f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4535bf32-d791-4574-b09c-835bee868a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9069c5a0-a517-4136-8e96-cd21f4095827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a5b49e-bece-447a-b841-90b131707d4e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e257a8-6d10-4389-ab0c-3b6d4ff4e328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "909e7ccc-f1be-4efc-863d-af8faa834b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8dc705d-109a-4008-b011-552895e2d272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb65b38-5946-4932-bda7-0e6960d76dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050b0bd1-28a7-4264-802d-2fa8b32c4697",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6c8b60-f0a4-4003-9215-3e2eef06589c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19c6047-cd06-41f7-9de2-4f9858b29a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e63f3d4-7d17-4e31-811b-bb4a474874e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fef66ff-06fb-4dcc-9c90-af999a1041d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e60ef13-9a5b-45c1-b274-a2e365c30dcb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9373e49-3cf0-4f07-95a7-a16bb1fcf944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe06a8e-5718-4a80-aaec-66be45d2527b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb7b72b-8b47-4b50-9fce-ddf738bdd6dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edac8f53-dc39-49b2-b552-522a61245590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e2dd5f-a26c-422d-ba16-efac66e2e5be",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5c266f-4c0e-401e-a7cc-b6a91783018b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7f6c72-9126-41a7-b549-b9faad31fa7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e0b10f-518b-4dfd-a824-9f3d12675a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b191bf-e87c-4930-a1fc-3d7eb4359e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d629da1-8ea0-46b7-81ca-a0a42388c5ff",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf5477c-130e-40a3-a2bb-0b7b9b8124a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56eb9ef-3037-4d6c-9d74-f593c6f5b1be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f2ee37-6048-44a1-a476-3c7dea24d6f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b29214-d030-4fa9-8d4a-6c01e9eb0462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81dfb259-82fb-4691-8c7a-842ad31514f4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9b2961-b7aa-4291-a3a8-e69a871307de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4688f382-5141-4c00-8735-520b7f098bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5e0a71-3555-41ea-bb63-82b975b6be73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6a0212-30c9-45a5-85ed-69defcd42f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2562dd3-f35b-4186-8f81-c36fd95a78dd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f13010-3cc1-4e56-b5e6-69ad912ba6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f14913b1-d144-48a5-8655-ce91809ae4f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e73698-a8b9-465e-8ed8-73906291e66b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf386388-d66a-40e7-8472-c1bdd316acc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c647801c-4de0-421d-a9c9-ecdb4cde785b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea2c3ba-2c97-437c-b34a-18466ff5e1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45678fec-bba2-4c11-8541-770fffe32b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3dbaaac-7e46-42a3-877a-747a6999cb7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e40d3cd5-47a8-4ad3-be53-638daf2d80f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe13c4f0-b9a3-46b5-8e2c-c3914a27410a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb8b7d0-5755-46f7-a18e-c84876fe3e5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eafe983a-00a8-4424-a3fd-509f8bc796c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a66e002-6fb8-42e0-af69-f24463a9c2e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b288967-5429-4804-a373-dfbf3df119fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613fd65d-008a-41a2-b627-5d1b70ea4706",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0102d0-4c3e-4c65-b1a1-f4a4689f17b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29c3dab1-68c3-4437-8a83-ce6e3544e841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca309c07-8b1f-4104-ba8e-be15fae538cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1858020-dcf4-4196-96fe-a5eded961f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95155478-3931-4714-ab8d-bc6ad48d256d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a32c621-b077-45ef-bfb0-2b1f1786bd25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dec31c61-bc32-444d-bbbd-2ef58d33017c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b005a065-022f-488d-8e4c-95090047e763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f451c19-87f1-4981-bc2f-e0a4e355a5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ee6d84-c988-48a3-8e94-4a34a83bc1c8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e681cd34-c4cc-4350-8132-cd2325392c69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f94b304-2be6-4541-b15b-a1e11ec135d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c14319f-5e0c-4005-8448-eb4a15b80512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85eaa304-8c42-4206-862c-de79d4c75c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25193325-67a0-4501-98bd-b1fd74c09543",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0ee24c-406e-468a-8be2-44db495627ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dabeaa87-0bde-41fa-bd29-86bc06edc0c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a99b854-9240-4bdf-9445-822e288deb16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a338014-5bf5-4646-85c2-adea4d563d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea7bcde-66c0-40bb-b9cc-090b449f3a0a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746b6f15-0183-4e56-91d9-210bd2a509af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a26e370-a6dc-44cd-9554-719e60cee995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee39d18-5fc9-47c3-913c-388b5207ff21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5178e7c-8db1-4b5e-84e3-3571c5cdea58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa692935-4c47-4f0a-8af1-0d383e019c19",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0631ac57-844c-456a-8ab7-e65fac3697fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daa141a4-106f-4ca4-bca9-e60e394e4ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "526b9afa-f121-4d13-ab87-d0d410d8bd1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00659592-29ff-4534-ad0d-1084548ed7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a0ff05-c2c8-446e-adda-c4a17cc61d64",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2024bc6e-a84e-480c-aa02-8276ed0e0fb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c38c9d77-da3e-4983-a960-af1987d196b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a405787-a074-4748-ab6c-a1fd190e05e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ed85aa-5c37-4109-b28c-9ccd9a530aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7574d131-db4d-476a-803b-1d7d6035af62",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7650d7-83b7-4d0c-a03b-b780767032a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1565c9a-f4a7-42b3-bdef-efe8ebabf011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "017d8f71-b8a9-476d-a720-815ad8228223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa18c494-ac3f-4aa3-aa2b-24938f407a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb8e8d4-7f3e-4799-b289-91eef6d22185",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274f1c70-d121-4170-9e42-966dd66055e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00a12bf2-c165-4b8f-b026-3d10bf48818c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6fb919-42f2-45d1-b85a-cc376f4f210f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c56549-546d-4540-9692-214ee55e4b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e62ee1e-2d79-47a9-811e-28d3ba1f553a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120cb913-f250-45f1-87df-f364c2020b8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1b062a8-d352-48af-831f-f21c0a2bd73d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a447e89d-a087-4580-befc-45b24ba97d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd157224-20c6-402f-a414-91671d361f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9532fc2e-6b3e-455e-9bdc-7dd2a927ef29",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c485a68-e3e7-44f6-93f7-fb0196803f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b6eb22-8cd7-46d3-95c2-10db11de3e3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2c9c3a-1f47-4c4b-9f9a-80cab26a3323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "418b2487-d18d-4710-b9eb-366b42cb55b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac067714-206c-4c8c-832a-6bac7e928803",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59b644a-3b6e-4236-b21f-4a727e9e01bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fedcfa88-bfbc-4a92-af4c-c262f6f04353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9bc5be-9462-437f-9e36-5c98150f8de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329c5d65-1a45-40b5-9180-0a62e800cab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588b8ed2-2057-40c0-a708-172ca0f2d1c7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c8911b-62da-479a-a7b5-8a472834c488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1c99db-c993-4862-8889-8ed08e8ce1ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2a8910-33e5-41fa-87e3-4bb053fc1093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a2f17d-5f8c-42ab-81f8-fb94dbeac998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84482a6-5ab7-4c5a-ab2c-d5a837bcfebe",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3604fddf-8b5e-4632-894c-1fc829efdaa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b5889b-99ab-4f7c-8c4c-51f83a091baf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3630cd10-fca7-460a-a725-1fdea4feaff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94dc144-3c66-45cc-85c5-12d465969575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200fec23-1cd5-4835-811e-c9fb6f19c39b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a94141-c82c-41fc-8265-7eb33c181e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c98987-7b9b-4790-9069-29409df31f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc4a3c5-832d-4556-ac67-eb0a1fea547d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4abf7af-3f1c-4378-a141-f5cc2fc01081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0e60cc-4571-41fa-aa55-efaf86e0d558",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06626efb-afed-4149-85ae-df24dbda2e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa6788e-8d6a-4b94-9cdb-e74a89495e20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b45bcb9-81e9-4c49-aa68-d8d015e7c639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d573575b-20b7-438f-885a-096b9cb58921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82aff04b-a49b-43be-b704-1219da2308eb",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91aaf94e-9431-4d5c-b31e-3341ef9e40fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f49ce0-fc9a-42dc-99d3-1209fd590880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db45b075-f060-4663-8fc0-fb162e2167f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd4c6f8-177f-45b8-9450-5704bc4e620c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04b5ab9-e27e-40af-b462-55f723606e21",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0517a25-7433-4715-af8f-b8c79c780f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2715e849-568f-4e0f-a5ae-456e2b25c47a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b73326-3396-4b44-ab4b-73e94f3218d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5afbd2e-a1e4-4b0e-95b3-4f49e7e54da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530f16f8-e490-4437-9d2e-82010d0984cb",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e456bf-9726-4860-bc8b-f1bf02104d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db57bb1-f0a1-4acf-8ee6-969ab11b535b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573a21b3-f95a-4c5f-aa6d-568f6883acb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "265ef4d1-d03a-4830-b0a4-de336e59ffeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916d9937-4d4d-451e-8fef-aab71443d23b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facefc83-64e9-44e4-90a9-bf0e87186986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b668f0-ba97-495c-b465-7e421045e13d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be17feb-9e0f-4e34-b274-0ec34593edad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52caced5-242c-453a-b9d0-c651e6b7c754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e6a11d-be5c-48bc-9bc7-97020c0eebc7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b42cc57-9b46-48f2-bea9-db94c8cd702e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "830dd491-5d4d-4681-b7a8-e2b66448651c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3685db-f90f-49fc-ba3e-a565e3279635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21f9f5a-b760-4edf-a24b-5aac9dde9a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c29c93a-48e6-4208-9616-a2e3b827e9f1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b1e4eb-09ba-4510-9ecd-2a718927fb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b452b8-5f95-48ee-871c-d2d8152da9da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba0d374-5aa7-4584-937b-7cf149eda362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f55be7-b5cc-44e6-a960-e4d444d7ae41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0dbdf45-0090-46cd-8126-e2d8f57c53bd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4303d05-e274-4da1-b162-938786b72d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc20f47-70a1-4f35-8f70-1ab1cc8b9964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc47e0da-70b6-46d9-83c8-9f2070060df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da62d81b-737f-43bb-a604-7735da0738c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a433754a-8b86-4815-8422-018409e7491e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be13b3c-7243-43f1-99b0-b09b580230f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ce1533-38b2-400b-ba20-b7e92f7817ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "624a3c8b-27e6-43e4-b88e-240f66adf4e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb220d3-d28a-4c6d-96ae-64ec66df0f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f6bf41-1f46-4db3-a271-0c03a4388a5c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d1a53c-e232-4fe8-b469-44d815e8a6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49612976-c51b-4a64-809c-4bbcce4d6c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64304927-8227-4900-b657-f62ae87aaca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8cebe06-0f75-4098-ad9b-3e41176094d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7403ba-2051-4175-903c-6b5d6e224fb7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1c5880-b7ca-45f0-b726-ffd23dbbc7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937e3be7-7a20-4a48-a6fe-b2f1517928c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bcf058-17c1-4f73-ae7b-68b3cd6d7baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03cc90c-5b02-431a-9d6b-4f28ba7b6fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b08a72e-875e-47ed-aba2-7aa89e3c9991",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b391169-1cb1-488c-944d-3eb57d8182f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc13699-20a1-49e1-ab77-2d0b8a053e18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68abfabf-18ad-4242-80b2-e7af527bf62d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f3ee54-1868-495b-8dce-ce15abbc5462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7555cba-3c30-4259-ac3f-0166f736d605",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee9966f-59fb-4d7a-875f-ddee89a4b4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b4c632-dd06-4ec4-8005-1fddea0b86b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27746fbf-ec76-48f0-b745-c12180ab6e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e6f7b9-8d00-49fb-8e73-2fdef3c87826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e5342b-12f6-4cf7-9678-392f9f02af92",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7710e71-9928-4677-a9da-438e73116ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351afdbe-2ffe-42ea-8885-893cf23a001b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eec5504-b7a0-4945-88c7-ee493b021823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc8a67e-f4d9-400a-9370-784490857430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd191273-676e-4163-bc88-944e8e63fc1b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6edd20-3f3d-4f74-84bd-1977ee904462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53321df7-e3b9-4d67-947c-81865897a05b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "449a549c-e595-401e-964b-b80d49f9efa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e060c746-33d8-47f5-abb1-436fc13c8ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8238a5-0e02-401c-9f7b-6f82ff2574e0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc29e7b7-1760-4c74-bf47-bb13d0d24a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6677e3-f458-44a8-ae22-3693279a8866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee81688-e3fa-4240-83f3-1cc1bcd3fa22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27daccdc-0ec9-4666-8bf8-f4dc5a526647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a453bbd-f99b-42ec-a3e4-581974af31a5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbcad5da-60a4-4768-a086-ece7c83b78e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d043a5b9-7593-40d3-a681-5fc44a2a24fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "addba060-bf62-4dab-97ac-1c85a93abd28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13b0d79-3531-4cc3-9d86-ce723a0cfad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bb3ae6-8e22-4b00-a4c5-d7e85a52a761",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3045a66-d7aa-4047-b904-fa190490acd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f48300e-369e-4120-97f6-4b256a3ab6c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1f90e0-bf41-44c3-bdc5-76d489db4438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde87dc9-9332-4954-897a-8898bba986df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c0dbf3-2421-46fa-ba06-582cd25a006d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c33604f-0dd7-4299-a998-567dff688a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4bef928-e0f3-44d9-ba73-da51a936892e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc8b30a-d967-4b40-a1b8-2c8b68f2e973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187a13ab-4cc3-49a1-b191-0dad8a23b602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908bd314-c212-4c81-9abd-c16a7609b4f7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd5d2fa-7ffd-4d2a-aac1-a3916ea5e455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17614265-e9bf-42a7-af80-bb7fa8111638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d8d9b0-d1fe-4b6f-aed5-f4f3fa4a4bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e982a5-d017-433d-abce-4525255b16aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db998f7-6558-4648-b34a-921314af44d9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0beefca-254e-456d-8372-8679452f0b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4f7dfe-eaf0-4b12-9bd0-1727e3e6bac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60fb94e-6f5e-4e9e-95bc-059c919fbf5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abd97d1-2993-4aa3-8eec-bd63bd99f1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9786edef-78a7-4b67-adab-8248d1ceb56a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf7be58-ab26-46d1-a6d7-54e7442b2800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbd6c8b-5143-47f6-bfef-38fc591a96de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83acd19e-49f2-4646-b9bc-c0eb8711ce7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e1fb0d-7386-44fe-81cc-3dcc3a231d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906d026d-2f7c-4210-869d-4c5b9c376b0f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cefe69-33d5-48ed-b292-341e8ffe9516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0efa98-488e-4852-9692-8fdae43b2862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "377e07ba-50e2-4130-82d0-86a541913bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "882ec6af-8135-4f87-8730-87624d88e052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6bf54c-5b7d-478e-98fa-ad3bb8bb1b11",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4e2a08-ec9a-42f0-8473-66f21c1f0e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce353f45-683a-46a8-a8b7-bb536856b9ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50318f88-6653-4556-a570-fd8a2738138b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c350cc-6674-4bbd-853f-fac84c79b21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4c4805-d1d2-472c-aa6e-7fc3ce0ae360",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6f386b-780c-4344-a1c1-a73cf18e1831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eae22e5b-15bb-4a5b-9ad7-c4740a11bce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3be7d1-c4fe-4a44-9a25-4c16b3210166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f7dbd6-039a-42fb-85f6-fbea0dfcd5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5409f8-cec0-492e-b602-63f7e42a17c9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d06d63-e385-44d8-bbb7-57b303296dd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94efa1b0-c06c-4190-95cf-6fbaac27bfae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c6f1f4-dadd-4b90-8913-af6943b674ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96a0ac7-40a7-437a-9fa5-d115cbb87a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3621b92f-04b1-4d47-80ca-c9c0e3550602",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a99e9d3-7a28-4d87-8dd0-8ed46e4e0cc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17573b93-fee7-4d88-8b27-6a0e357f015c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77a2dc3-b27e-4ebf-8dc7-66c1b1c4c647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad55c46-9dc4-420b-9786-ee2c6fd5da51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16830ed-e8b2-4cac-b34d-93fc8c15b4f1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c726cf-eb33-462e-b54a-9f7eb7b0a51b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c758fdd-d696-4ef8-9f4a-0448dc92f733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "596c05fa-34fd-4e7f-838d-d9bea8f57a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd4033a-90a2-413c-869f-8fde20386e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dae833d-1610-4f20-b729-3e38c4585065",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0473766-ea01-4afb-862a-27efa5f02c23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c399ed31-fa2c-4475-8941-dfb75fc5f527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23653699-3baa-4410-b6fa-7ba1641130fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ba2016-6d57-43b8-b3f5-0293ece2b01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f78f2b-fe26-4a8e-9012-bd510ede4e30",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39c37e8-59d1-4a34-87a6-46e32a995e0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5d76cc9-35ba-4f8f-9cf7-6d51e5e0e523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75acd9a-4c0a-4631-95e7-821cf6c7ff5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c6c39a-de2d-41dc-97f5-7ab2809bc560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248e9e39-5953-4003-a42c-4cc835ba48f1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab86befb-1e97-4634-b660-17f931c25fba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10f676f4-88a6-4140-96b1-605ba2316df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c16b9cd-f0c5-4012-bf5e-1049c0684e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e17ffec-8cc6-402b-98bb-805c8393ed34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629819ef-2312-4165-966e-243cfc549a70",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bac62c0-1db5-4d07-aedb-59ec7c621377",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ec944da-6e50-49a9-acca-7fb1f29ef26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e64abc-ebae-4ace-a534-504b6ea6ee6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eaf1090-c748-4305-b768-13f6cd93611f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495fa250-095d-4d1c-b3f2-a9ab76eb4db4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbb583c-1fc7-4f28-9cae-bedce087eab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "299b14bf-a2b3-4035-bbbe-3e63b1d52791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6dabe9-f8fa-455c-bc31-ba1f33bf8572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb371302-20b5-449f-9ceb-369c90da2fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2f7c84-1825-4d24-aa13-058924fd0e8f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7a090c-5e76-46a4-93aa-e64873c1114f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1b931dd-d367-4f5f-afee-1a0337da3193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e100a8-f956-42e7-9fac-d0147bc867cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf721b66-6ca2-432e-8638-34c8ae679366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665c913a-5bd9-4f9b-8f0f-47539dbb9848",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a1ef2b-81b8-4f35-b87c-f45b31fbed44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01496c1b-14fa-44ef-bd21-4a2c17d50f6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27ae5d3-94ce-4ea8-be32-c6a93667b0ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9996e28-d92c-42a5-a171-412fb10c1db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db975ad4-6ab6-42a1-8b53-c2979e467259",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bcad397-2821-4dc1-bd6b-38290c5a65b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0a8dd57-60a3-4457-b583-e99962797293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4680be-6aa7-44e6-8ff3-af18b2573ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d30504b-6f2e-4c21-965c-069e43887a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd86203-bf6c-4bdc-9517-3871d9d18842",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08351294-a295-4fe1-a711-00c6724c8b39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0994d22a-9500-496b-88ff-65a970bff3ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7656f0ef-048b-4e52-af0a-d635630ad74f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ff670e-e3fb-436d-9366-e6ca1a92c0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c2a106-b968-469d-910c-07e00ec0c1d6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93dcba5b-3a27-4c3e-85f7-2f4b44b24d86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f4bd595-1937-4ff1-98a9-20bfa38dae13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66643f45-393c-4b8a-b583-f4fd68684ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b768dcc5-11c8-44b6-bf6c-5a97e050ac0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ead3204-250c-43eb-9084-4fce8ded4487",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6ca830-38a0-47a2-b7fd-3f32f5d662de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60d0d87b-860a-4329-b7c2-cf75d1b141f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33d14ef-1d35-484d-b73e-0db4a327d1df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba8fc20-45db-4dc1-a70e-1c2bf2003f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd1b3a3-e54f-418a-a091-c94d35e6a493",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841d3495-cce8-417f-b641-329144362b6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89d47fc6-caf2-4123-88cc-264db72f31fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a5b082-d962-4962-9c62-95291b3ed1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c959db-026c-418b-9900-02a78dd4360e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c968fa30-ec9a-446f-96d4-58f24b22188e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9caacd36-3dea-4086-a6a9-b815521f9224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d398e45-4d10-4245-98a4-d7759089b966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f800cd-3616-48b4-8c63-89bd9102a2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe83bc0-4736-4f69-b509-963b2cfd152a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f97c50-3128-4100-9555-29cac9e13f31",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e97620c-f07d-44bd-866e-cb90a32ac6bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "989b5998-e95d-4478-8974-b00d370adf5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a23067f-0ed1-4888-8b26-5208df19fb5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ba19f2-6eb6-4b43-8433-f68d1350b2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8d20a8-88f7-40b8-9ef5-c0cf1e6351de",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050a0ff4-9911-4282-bdc2-410155ce3614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be255f66-496e-40aa-a652-1efb9a879725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b08212-57cf-454a-aa7c-2bec47ec58f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0e3d75-4118-4e8c-95ec-70046d25d334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3a1056-203c-408f-be9d-dad178dbc1af",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52622375-b60c-4aae-b5f9-ea1542edbadb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01f10080-92fb-4cbd-8d88-a5f4a6c666df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25daf8ed-1f34-4aae-8799-05a3b3668907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9f5550-b5f1-4947-8b2c-c72a4b07cdc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968f3584-1c93-4f9e-8335-35a78c6df2ba",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69618345-f80c-40dc-9389-39039d10b4b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fb535ae-c4fd-494e-896e-863f8fd59c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6793c39-7d78-4fd7-a3ed-e55624d96e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af38e8b2-9229-443c-a831-f9063e84390e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da456764-4e13-4452-b7f1-9417647d2622",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcc35b7-fd7d-421b-a5ae-085a06c69689",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ac39815-5cb8-43ce-b216-f01fab78c9aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4006f142-01bb-41e5-8e99-3c1b52eace87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670ef663-5534-4bfb-aa11-46f4bd90ba00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347e8df1-0fe8-43a0-b8b5-210f047aa635",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a87f3c-d45e-47d4-b656-11e2ec10edbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6f9362a-15e3-4234-8ba9-3da8f982b02f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd13a9d-2cf1-4fec-a177-a81b621ef0a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ff98f1-b94f-4d8f-84f9-7d656a8c9e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8874f14-d44a-4400-8bb4-68cf11f689e5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58069fe-d667-4674-8578-abf3e6e83264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d86dbd4f-95d7-40dc-947c-0c46221cd2b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d76f11-0a0e-4e57-acdb-a56db852895d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378c50ac-cda2-4678-bd78-fb3305dcd2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28299ed0-cb47-4f7e-adb0-9d02e4ac4553",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e0c03e-41a2-4294-8a99-2ac4ac35197f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b52a4695-f6e5-41be-943c-174c63b4ee0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2292e5-7c45-4e42-9035-1475bdb031fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29cff47e-d89b-449f-8507-c537d6265634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbf3564-a9bc-4db1-a776-7ad06345f74c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381d9e0c-813c-4b0e-a505-ec5b6386cb74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d8ab9a-dedd-4440-96bc-ca73eaac8cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0cf731-f193-40e3-ab60-a2dbeff1d216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca16f71-a44b-4a01-bbd4-440bc5d49256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99f06ab-3c09-4c04-8b14-701bc55d3961",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28ac2a8-ca0d-4e81-be1c-de4f8b33c9e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8403a3f-d4f6-4744-a986-3ff39aeefd42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "248da9f1-0246-4d45-9229-f9ae89ad29eb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdd3b14-9c44-40f3-b44f-5201bafe910e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3075d43b-6797-44b6-9c4c-0b9968398744",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ba7712-b9cc-4233-9032-d38600ab847e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e539716e-8c14-4df3-8f3b-42136ae4587c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411b03a4-0f6c-46a9-afa2-a2de00942403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b790432a-bed2-45fe-a8f9-d3ee74ec21bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e080c765-9281-491e-bbf2-0e50f193823b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03917c7f-9cde-4951-8d55-35c7e8266314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66366822-60af-4b69-a186-b726e5815309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "822c6585-000e-4035-8df5-317280d873b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aeedd92-e09d-465b-b265-c766d8776b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fc8af1-8864-46b7-9c9c-458181b68125",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a81196-dc01-42a1-a715-23e39a2220e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d60e9732-25b8-4f95-81bd-c4d8e636a513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d120481-7509-4fb4-bbd4-cf447404d70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075a5f80-a24b-477e-aec4-09a9ada8a017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb90689-7a4d-404c-a657-9b7bff6a23d5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823a5b80-fa3e-4a0b-b532-91b509c0f1e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9266df0d-b20a-4bb0-9be9-2cd26162680a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a21acd9-61bb-411a-aad1-ec264172bf38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296cc95f-8bad-4df5-b04d-3409a5635211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a7597d-d93d-4794-85e5-622b887f8372",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5819a455-bc9f-46bb-9d24-71362932cad7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cf47fe8-6b98-49c8-aebf-9a54262620d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f8597a-65c9-45d8-a0fd-956fffcab185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae5258c-f74a-4ca6-8221-7c28d224f750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ef15b9-4014-4c57-b17f-723057466693",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f2f6c6-a8af-4955-9a79-7f2f90d236ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b33f6932-4249-4b34-b004-10b1f792eecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48fe678-c769-4898-acbd-065f927b5bef",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91eca16e-d998-4a86-a6cd-d2358c7c0e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785129fe-424c-4985-8dbc-78731dfa8bbd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a9a69c-c0fb-463a-941b-40069a9bf8c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "816459a2-8e7f-4843-a465-fed2eaeb7c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae074dd-2945-4aae-9841-1c4dbc08fb3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b84f71-a767-4778-a065-82ac90885bed"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1d42bfb-0fa3-4bf5-9e17-36ef8529ee66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d0eedb2-f414-4af2-b2bf-5e1fae9ea5f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76170112-b127-42df-b7d2-1ee7b9a10e7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1754cea0-afb7-448c-b234-27ae7cbda537"
                    }
                  }
                ]
              },
              {
                "id": "0eb5cff0-f408-468a-892c-5e72c427a41e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b53ba81-52cb-4dc6-9338-6fbf74043a18",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb8e0e4-abb4-4648-acd4-1cf6caaa446b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "48970818-f0ca-4da8-9ddb-184f4c7f6015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d8b6fa-5dd1-4181-8481-efc8f0c503d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2db49e1e-c68c-4eca-bcb8-8348d3722dd2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc49ef94-7bf2-403e-b997-a5f550e0a271",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba496dbb-2af8-47c3-ab3a-efe1e61db095"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ac6e5be-9eb5-4cb1-99b0-e9dd3e10a61e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15fad200-832d-4df2-a009-563aca1897ec"
                    }
                  }
                ]
              },
              {
                "id": "fd0ea78b-6127-465e-a64a-da5ac3609aeb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "23b3a33c-7e77-4f7f-8e55-e82fccf11269",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d94c07-0966-40d8-93bb-78ab4eb9331d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "eb79cbbb-6f45-4aec-8139-c54149a98ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c5206c-63bb-42ef-b1d8-5d80c4530e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b23ad83-541a-4d26-98ea-180a8862cbb6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "17042405-57b8-4ef7-b865-723dbfc3e111",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ab93249f-6349-40d9-8299-720fa3a53202",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e66166f0-4028-471d-acb8-20f26e5498cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2c1510de-0a19-40aa-b561-f3b84155f905"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da227712-c1c8-46ad-ac38-b0ceb0059d4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88eb33f4-5393-4c26-9921-619445a0df6b"
                    }
                  }
                ]
              },
              {
                "id": "15d54065-d1bd-45ce-abf7-1afa9ecad766",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b8dda1d-3a88-4c9e-8216-7383cae0b888",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3140d99f-358d-4482-b677-2f0d6b4c8e30"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6f12559-b8e3-4dd5-8c86-75eb482156c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cb2db23-ea1f-46c3-b9a1-e9694f07b0a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc44d327-0b1f-452f-83db-32df6e45636d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "eb3ccee7-39df-4522-b83b-49177a82802a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18af18d5-9e1f-46e4-84b5-0de68c72f613",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe693b25-7928-443d-870d-392a55664ba3"
            }
          }
        ]
      },
      {
        "id": "0976f4cb-eb9e-4742-aaf6-1f8a4c89bbdf",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9cd3defc-61cb-434a-ab1a-a93b2f575ad1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "60115033-4c9d-4b13-9b42-f8d69dfa44d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a12fe3d9-7095-4d23-9515-d4edfbfa4ed1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1bfb77-70d1-427b-be92-4789e25e6083",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "90d70971-5c02-48a5-824d-09ea5bd1620d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1ba565-10d1-4e2a-92bc-44e125df01d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "612071bd-16e5-411b-be21-91caec71f282"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04e4e318-fc7f-4f91-a3a6-1e6dc3bd1a39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "024e35be-bf0e-4c3c-a2c8-e18ea8e3f7ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d9b3d81-caf3-4c9e-8ed7-64f83bacf5a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03bccaa5-d958-42e3-9415-8d10972a9a1d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "333b9360-5674-43a2-84c0-38208f128299",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3d8d50f9-527f-49be-8d0b-442207628992"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b46fbd87-16bf-40e1-ab76-670c7d8532ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60c9c3f2-d140-4b79-9412-c8488bd0a35e"
            }
          }
        ]
      },
      {
        "id": "77b11686-0391-45f0-a913-3a62c025c843",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "47c7df0e-f9a3-492f-976c-36165297d8c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68a1a50c-6e46-4c59-be7c-913e9cff09a7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "02e66c55-b8af-4071-a7fd-43eecf0077a2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a34870-885a-45f1-a1f2-88f0f65758b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0116ca96-4e64-4157-9345-ce6677a14242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0e29bd-587e-4c5d-8696-98195cfb9bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "035a58c7-c597-4015-922b-01e4ba235afd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d370ebe-b365-4228-be71-381452c2e6f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b53c37a6-4648-4fa7-a37d-3ddb10957356"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a43e2c1-add0-4a89-9db3-85ae5d4ed71b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1024c18-027b-4793-bc88-654b6925649f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b3aaee6-1426-48d1-aefa-10f132747aa5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3055952c-89a1-49db-8f0c-e60d5db7c2c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "632446cd-9a9d-4b05-b5b2-8a9e90f33370",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60702df2-e6ae-4045-9afe-fb4d122043bd"
            }
          }
        ]
      },
      {
        "id": "2b1490f3-9728-43a0-9db6-8677486c199d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ce8ba23d-9419-4fdd-aab1-a8f68a19a4db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e55d64fe-17a3-4a26-8957-23e393d47490",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba4d9084-0e04-4f02-9509-6f01865967c0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac17c3d0-c9f8-41c2-9fb3-a7efe646e7d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31a7c964-6bbd-42d7-b28f-0fffb75711c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5859fdf9-c356-4fe9-8b40-978d3c7b4fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ce671ea-19f3-4471-9667-1133f4f14ff0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "808e8de5-8afd-4a32-8681-4210a4686058",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f20c4b9-6543-4456-a71f-863cdabadc9b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a7914cd-c7d2-4b3a-9399-87d1242865a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5b4b09a-3203-4729-9a03-65273f031dd9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bebbf21d-58fc-49cd-9676-d16d64193c6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "27050e8c-a9a7-40fd-8de8-7bca253c2842"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84b643d4-1f5b-40c1-aa2c-e21b8ba88903",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b5edbb5-bb9f-442d-91f5-1221a235997a"
            }
          }
        ]
      },
      {
        "id": "48fb8009-7fa5-48fd-b44c-ee8209f973ff",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b88ed97-7061-441c-9d0f-1b00bb371b47",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47f43ded-9268-47ca-a2bf-a0fd17f8c76d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6aa89ca5-444f-4633-a262-662bc3a565e2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "746d0af4-af41-4f0d-a71f-8d4569fac29c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "adf80e05-f446-4287-9661-3995aa2b8343",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 235.23859649122798,
      "responseMin": 5,
      "responseMax": 8953,
      "responseSd": 1125.9103884061274,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700008504816,
      "completed": 1700008581261
    },
    "executions": [
      {
        "id": "bc581f77-37e0-42ad-8ef2-5b3650fab805",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3c89e850-1753-4f27-b206-fd13418f09d0",
          "httpRequestId": "6e639a6b-887d-4c68-a4b2-70f406013274"
        },
        "item": {
          "id": "bc581f77-37e0-42ad-8ef2-5b3650fab805",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "de1cd76b-5ac5-41ff-bab8-1acf2ee135e0",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 0
        }
      },
      {
        "id": "e4b8d633-72a5-4227-aaec-e15904fcc3f7",
        "cursor": {
          "ref": "cc697902-23ec-4d5e-bfb6-42a3af62caae",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c264049c-5494-4ee8-8309-fd2cb5a606b2"
        },
        "item": {
          "id": "e4b8d633-72a5-4227-aaec-e15904fcc3f7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "87507e39-2873-4e9a-b434-767bedec8059",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "e68c5c29-e6dd-46e8-8bf5-f4a9457b49c4",
        "cursor": {
          "ref": "67bfb7e0-10d0-4deb-a8b8-6bb8e243b630",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "170d9db2-ec73-4a58-abbc-6e4893ca221d"
        },
        "item": {
          "id": "e68c5c29-e6dd-46e8-8bf5-f4a9457b49c4",
          "name": "did_json"
        },
        "response": {
          "id": "9121f543-be9b-4a7a-adab-6e7ef4026534",
          "status": "OK",
          "code": 200,
          "responseTime": 1527,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516b2b72-4f08-4057-9f1f-e28e4f318db0",
        "cursor": {
          "ref": "f6eba884-dfb4-4894-82af-e317431ce078",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a8430fc2-5c77-4a86-bd94-2508b466b720"
        },
        "item": {
          "id": "516b2b72-4f08-4057-9f1f-e28e4f318db0",
          "name": "did:invalid"
        },
        "response": {
          "id": "8aa600a9-1ec2-41ce-a1fd-eff0a40ced19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516b2b72-4f08-4057-9f1f-e28e4f318db0",
        "cursor": {
          "ref": "f6eba884-dfb4-4894-82af-e317431ce078",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a8430fc2-5c77-4a86-bd94-2508b466b720"
        },
        "item": {
          "id": "516b2b72-4f08-4057-9f1f-e28e4f318db0",
          "name": "did:invalid"
        },
        "response": {
          "id": "8aa600a9-1ec2-41ce-a1fd-eff0a40ced19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d442c36-328d-4eb9-a2c7-fbd80b71efff",
        "cursor": {
          "ref": "50be1b06-3243-4e86-b8de-5435fd2b7efc",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "60565f7f-dab6-4eb4-88dc-8b432582f961"
        },
        "item": {
          "id": "2d442c36-328d-4eb9-a2c7-fbd80b71efff",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "be05ca55-8c55-4047-a7d5-f677dc031663",
          "status": "Not Found",
          "code": 404,
          "responseTime": 142,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42372bd-9ba4-4afc-bf81-0b47a7716be6",
        "cursor": {
          "ref": "7d9263f4-1561-418f-afc9-697fdd25244a",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8c2e7d1c-52f0-4da3-a5dc-b30e09b8d103"
        },
        "item": {
          "id": "c42372bd-9ba4-4afc-bf81-0b47a7716be6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f88aacc6-c928-4cd7-ab2a-7769fb308572",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0161b3-cb21-4817-b4b0-bee59e467439",
        "cursor": {
          "ref": "3eb4f274-3526-4b5a-b935-cdc369503171",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "99bc695d-a27c-497c-b752-9d5fa7e688d6"
        },
        "item": {
          "id": "7c0161b3-cb21-4817-b4b0-bee59e467439",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ce0fa05e-1959-4c63-bb4e-1b9b21efeee5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5af29f2-4178-4a10-8672-ad3f08fdebd6",
        "cursor": {
          "ref": "fa808c86-3733-408d-aa75-cb32ce37f01c",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b7395ec3-af1f-43a6-9fe7-5afadd9d80be"
        },
        "item": {
          "id": "f5af29f2-4178-4a10-8672-ad3f08fdebd6",
          "name": "identifiers"
        },
        "response": {
          "id": "74a76e06-62ce-4e93-8dd5-345101ae7975",
          "status": "OK",
          "code": 200,
          "responseTime": 1284,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95c4dd6-2185-490a-871e-b342fe5165c4",
        "cursor": {
          "ref": "009f5382-354e-4233-a783-89243cc294ee",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f5688500-db36-4e7c-bf6e-758cc36b8068"
        },
        "item": {
          "id": "f95c4dd6-2185-490a-871e-b342fe5165c4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1ff48465-202f-4a18-9351-8ea03cad801d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1928e302-98bb-41e8-bc2c-f00e05c4dae5",
        "cursor": {
          "ref": "7c994609-4901-45bf-801b-033c8ef62eff",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "11c01573-ccba-4ddb-aca6-c9cabfad6d54"
        },
        "item": {
          "id": "1928e302-98bb-41e8-bc2c-f00e05c4dae5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "46facc2c-09d0-4dce-b852-bf2151c520c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c60c05-032c-47e3-aaf8-c361bf7b17db",
        "cursor": {
          "ref": "ffa1dc20-ad4b-4448-944b-fb968f0337fe",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9040b6e7-94e9-426a-add3-e309d8c511f6"
        },
        "item": {
          "id": "26c60c05-032c-47e3-aaf8-c361bf7b17db",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5e65fda5-0f18-45b7-89f9-fe8fc22398a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21331c35-77e5-4779-a25b-092a9f803694",
        "cursor": {
          "ref": "e7acad2a-bc13-4b9a-a028-6839ebf27af7",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c4cdd926-572b-46f5-b96c-0db16ab82533"
        },
        "item": {
          "id": "21331c35-77e5-4779-a25b-092a9f803694",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "49c749ec-ee6f-4953-96dd-2a5556da68ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2be961-eced-4d0a-b432-f00f6dd04efc",
        "cursor": {
          "ref": "f6282d76-9e88-4c09-a905-a5e7df6eb4fa",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3dccad62-4760-4065-8bd7-357a6d920c4c"
        },
        "item": {
          "id": "5c2be961-eced-4d0a-b432-f00f6dd04efc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3d56661c-a915-4ec8-aa1b-934cb04640f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5243be10-ca62-4fa3-828e-5edd4c0a1a25",
        "cursor": {
          "ref": "79ca4a4c-d69c-4917-94d5-e2cfc5542227",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2282575d-4609-4e0b-a0b2-bd0c02b2fee3"
        },
        "item": {
          "id": "5243be10-ca62-4fa3-828e-5edd4c0a1a25",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9d6d3930-11f5-4272-ac9e-cab66b482503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f858bae-a131-4d54-9ecf-c232f6d67183",
        "cursor": {
          "ref": "05b80915-8d1a-453f-9ba6-a082329af2e4",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "766b109a-1c9b-4a5e-9ebf-9e178cd4bbc8"
        },
        "item": {
          "id": "7f858bae-a131-4d54-9ecf-c232f6d67183",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d85df413-64eb-416c-a2b4-040f48dfb821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d7437d-2041-4047-a751-03bca2b28446",
        "cursor": {
          "ref": "0eb2860f-02bf-402b-9da4-ea550e882e59",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ad9d159d-b32e-450f-94fe-ca7b36023dbe"
        },
        "item": {
          "id": "e1d7437d-2041-4047-a751-03bca2b28446",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "69456a88-f36c-4583-9ed4-7143a4546292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8371231-1702-4091-b67a-b9ba4a07f6e3",
        "cursor": {
          "ref": "4694c5f4-5908-4562-8dd2-ed50612063c1",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "04d22492-f19d-4011-8dca-e498de373dca"
        },
        "item": {
          "id": "c8371231-1702-4091-b67a-b9ba4a07f6e3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9f90ce97-171a-45fe-8c39-510680e2ece9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402487ba-f07e-4fbb-901e-37b2e7411c53",
        "cursor": {
          "ref": "bd6c1a2d-99e4-4634-af03-0910197e774e",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7cf41cb7-4922-4f01-90f3-762c042578de"
        },
        "item": {
          "id": "402487ba-f07e-4fbb-901e-37b2e7411c53",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7185aded-14b9-4181-9b38-6e3c75d53f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4deb7028-3502-4e6e-96d4-5ba1a7dc4998",
        "cursor": {
          "ref": "219722e4-170a-4d55-9aa7-005c756131ac",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "75836c55-7bcd-448f-af8f-e812dc4368ab"
        },
        "item": {
          "id": "4deb7028-3502-4e6e-96d4-5ba1a7dc4998",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "85c84b2d-9774-41b8-811d-cab76c767fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eab781f-c008-477c-b2a2-0de61c3e1431",
        "cursor": {
          "ref": "365013ef-cf31-4450-bdd8-020dabc9472c",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "bdf5ac51-85e8-4297-bcf9-bc008eff37a2"
        },
        "item": {
          "id": "3eab781f-c008-477c-b2a2-0de61c3e1431",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2db4ceff-0a9d-405e-8d70-694b49910c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047d5bf5-e971-4730-8a11-130625de6214",
        "cursor": {
          "ref": "3796b89c-219e-4e0c-814f-322c7d5d1dab",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8f6755ee-a24f-41b4-b8e6-e7510ebb224a"
        },
        "item": {
          "id": "047d5bf5-e971-4730-8a11-130625de6214",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "24e9e286-6916-4c5a-a01c-20f0cf3e93e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83676fc-79fa-4962-979d-30ab43e45826",
        "cursor": {
          "ref": "60ec3a70-acfa-4738-8339-a8071f536f77",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "eab0b678-bb11-4001-a964-2922eb7837a1"
        },
        "item": {
          "id": "c83676fc-79fa-4962-979d-30ab43e45826",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "26cb9682-7664-4c54-8738-8c3088ce9071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541d37ff-ae90-4ab2-a5f2-e7e471dfa5c3",
        "cursor": {
          "ref": "460595a3-2e29-4b94-9a23-334d6b96afb3",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c207f102-dcd0-4b60-b3ed-892843718bde"
        },
        "item": {
          "id": "541d37ff-ae90-4ab2-a5f2-e7e471dfa5c3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7dda9049-6c9d-4116-bb92-cf9286575bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfad186-be37-47eb-854e-47dff4013f75",
        "cursor": {
          "ref": "efc76559-83ac-462b-a406-ef4050a8ed8f",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7d41d968-5f15-4d2b-ae1f-4bcbe060f2d3"
        },
        "item": {
          "id": "7bfad186-be37-47eb-854e-47dff4013f75",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3141f5e4-43c0-4200-a995-171298aa4766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871fe9a1-bf45-4376-9dc8-90f015855e06",
        "cursor": {
          "ref": "f1f4f968-ed48-459a-ab6a-ab0f2840a9d1",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0082780a-ba61-4380-bef9-ddcb32690787"
        },
        "item": {
          "id": "871fe9a1-bf45-4376-9dc8-90f015855e06",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "cd96fa79-7288-4577-8f79-8bbf2403fff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3d85de-a7ed-4a4c-976d-36c5a02d8e2f",
        "cursor": {
          "ref": "ea71011b-0200-4373-ad1a-1a69d8c9bac1",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "af73bf58-c609-4618-9d27-b305fcf0d7f1"
        },
        "item": {
          "id": "8c3d85de-a7ed-4a4c-976d-36c5a02d8e2f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3b4eb62c-4f67-4b9a-9243-86585b405945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83380279-632b-4cd1-b62a-08f07cd8b29c",
        "cursor": {
          "ref": "21508954-e7c8-4f02-95d9-7ce67e6639b9",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "28053702-f26a-4282-91aa-b3167c8038c1"
        },
        "item": {
          "id": "83380279-632b-4cd1-b62a-08f07cd8b29c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e48907b8-76e2-4a7a-90f3-c8348e0d718d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee64c74e-6d55-4f28-8fde-cdcd9a040f3a",
        "cursor": {
          "ref": "417d66c3-7ab0-4ada-bd18-c7120ff74feb",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c997578b-a1cf-4b76-bca0-6428c615ebaf"
        },
        "item": {
          "id": "ee64c74e-6d55-4f28-8fde-cdcd9a040f3a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ff541313-fcd2-4533-999e-4f537fcf9a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70bf40a7-69d3-4d29-bd50-746192c8312f",
        "cursor": {
          "ref": "5ff46045-d970-4eec-b0d2-bfe688314cb0",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c233684c-4c0e-428e-bb19-8a60126277e2"
        },
        "item": {
          "id": "70bf40a7-69d3-4d29-bd50-746192c8312f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bb604b25-3d58-44a1-9259-12cfdd577083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d0aa75-4e2f-44bd-8d98-0611092dd839",
        "cursor": {
          "ref": "172e38e7-f9da-4655-8f62-406de066d44f",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9134a57f-8fcc-48d2-bc03-dc6be35131e0"
        },
        "item": {
          "id": "d1d0aa75-4e2f-44bd-8d98-0611092dd839",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "add060c1-4847-43a9-8faf-cb490a77b286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35a1bac-04a7-436e-9617-44317c4384d0",
        "cursor": {
          "ref": "c24b6627-037f-4eb3-b737-7a424fd207d0",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "126ce3ab-a6c1-4039-bed9-dd4ce931782f"
        },
        "item": {
          "id": "d35a1bac-04a7-436e-9617-44317c4384d0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d0312584-1a52-4fea-a516-fb0b9cd98969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe400265-4c6f-461a-91a6-4c43b389e3a0",
        "cursor": {
          "ref": "3ca32deb-ae81-4258-911a-ef660752460a",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b110e3c9-75d9-4614-a688-8bb70e6bcbfe"
        },
        "item": {
          "id": "fe400265-4c6f-461a-91a6-4c43b389e3a0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f479d6bd-7217-440a-ae40-0fd46b1fac61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda7ae32-0c70-4c9c-a6b4-6c1d9021698d",
        "cursor": {
          "ref": "5a0ea7af-6938-4c8e-951c-0f77965aa562",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "60f31faa-da31-412f-95f9-4c82e11ce7ad"
        },
        "item": {
          "id": "fda7ae32-0c70-4c9c-a6b4-6c1d9021698d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c0b69f06-50ad-4a83-9f4b-0780c6723abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459bbcee-e3b7-4944-97ed-bd586aae1895",
        "cursor": {
          "ref": "1b0212d6-0f8a-4047-8f9e-87a8472b9272",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "42f5b4ea-daaa-45fe-a23c-79922256fcbc"
        },
        "item": {
          "id": "459bbcee-e3b7-4944-97ed-bd586aae1895",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8218cb44-2bb9-42f6-903f-025c2ee413b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8334198f-130f-4e1d-b533-80760bc27b3f",
        "cursor": {
          "ref": "bdbb1aa1-91f9-47ef-8891-f4d63027f8eb",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "87ca363a-42dc-4a45-8c7d-9c79bb158d09"
        },
        "item": {
          "id": "8334198f-130f-4e1d-b533-80760bc27b3f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b10039f6-a792-4404-bddb-0c198c6a9ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c1d106-fced-4bc4-bd86-b3e8a01163a7",
        "cursor": {
          "ref": "6ff5fa23-bf83-4914-ad62-bca750522cc2",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "31b31ef0-e2d0-4c3b-886e-ca446cb4b1d8"
        },
        "item": {
          "id": "07c1d106-fced-4bc4-bd86-b3e8a01163a7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "10352f91-f395-4128-aa39-af896cb2bb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592fc702-b449-4379-8cdf-d62733e9239b",
        "cursor": {
          "ref": "05339545-33ca-42b5-bcef-5ca1da6fe405",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8b65298b-2583-42a3-a4b6-76b3c111ac98"
        },
        "item": {
          "id": "592fc702-b449-4379-8cdf-d62733e9239b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a500fed2-7dfb-46c8-9919-3c253ae24c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f051606-54b1-4697-ad64-733eb1ed2182",
        "cursor": {
          "ref": "35178a35-98cc-46a5-92f6-2fa3e0f33a93",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fcf4e1b5-6269-4b16-b587-94c438063496"
        },
        "item": {
          "id": "7f051606-54b1-4697-ad64-733eb1ed2182",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e6727cb1-ae28-45fe-9e55-11b25ad78579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53954e82-87c5-458e-bdeb-99076544c597",
        "cursor": {
          "ref": "a03d45e5-d79a-4abc-9e93-5382c70e1d00",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "975de27c-b0e4-4b58-8bfd-808395406748"
        },
        "item": {
          "id": "53954e82-87c5-458e-bdeb-99076544c597",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "02999c89-2539-441f-9a83-3238ff1f4ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4799b2af-41a2-49f3-a4e4-0274382bca8e",
        "cursor": {
          "ref": "016aa7a0-9877-4b8b-9c4e-00761c6685b9",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b3ff4856-fc31-499f-9f42-e43af7831c84"
        },
        "item": {
          "id": "4799b2af-41a2-49f3-a4e4-0274382bca8e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d93b9fc9-ae95-430c-a0d8-f3cae1ed4db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15276cbe-fd73-4bf4-baeb-9a634fecda53",
        "cursor": {
          "ref": "e4a8488b-d1aa-416f-bddf-e9d934718893",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e376a650-2f73-4e9f-9123-749594f9119f"
        },
        "item": {
          "id": "15276cbe-fd73-4bf4-baeb-9a634fecda53",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e6a7e473-4ad5-425e-abd0-5517e6c64836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42add129-f81a-4021-b86a-248bb4cd2479",
        "cursor": {
          "ref": "d37188b0-9c3c-4a53-8856-6305b685afdd",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "453c1a2e-b7e2-4c58-a834-97ad4623bc17"
        },
        "item": {
          "id": "42add129-f81a-4021-b86a-248bb4cd2479",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ad77700a-def3-46ec-90eb-0ae62fac6a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bae272-7d61-489e-89b7-dddf6a5d05e2",
        "cursor": {
          "ref": "a04c6276-15a5-478a-a9cc-9e830534dcd6",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f1be2ed9-a94a-4ee5-a647-90cf8727b6e2"
        },
        "item": {
          "id": "85bae272-7d61-489e-89b7-dddf6a5d05e2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f7192b25-84b0-4dd9-a07c-9ab31fe27113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4dc2239-f52f-4d37-b4a6-adc85d733644",
        "cursor": {
          "ref": "74d545a6-9173-425f-ad68-51763ab11d88",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "796cdbc0-5fab-49c1-9665-74d92e0ec54f"
        },
        "item": {
          "id": "f4dc2239-f52f-4d37-b4a6-adc85d733644",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8a5d46c5-d50f-473e-8272-6377e4bf3d03",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1566,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2556169-3777-44e7-bb1c-b089c88cc90f",
        "cursor": {
          "ref": "2c5887c3-ec74-4321-9163-63b32cd4809e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ce932f37-a87e-4b9d-bf91-c76ca23fac95"
        },
        "item": {
          "id": "d2556169-3777-44e7-bb1c-b089c88cc90f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cfb02ad2-5f93-41df-a435-cfaa1030c06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7566c7fe-5b72-409b-af86-82dcdb9794cb",
        "cursor": {
          "ref": "cf6bca23-3315-4624-b94f-46aa4d8a9059",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ca637a5b-7ce6-4aeb-963a-e7cf88fe3cad"
        },
        "item": {
          "id": "7566c7fe-5b72-409b-af86-82dcdb9794cb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "42899e19-1773-4a5a-9c37-3357b1d87088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad0a265-0fa7-4fa4-8cba-2211b0a6fbdd",
        "cursor": {
          "ref": "47d61759-c636-42a9-8f49-3eb1d01368a6",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "18a18e02-8387-47eb-933f-12b0ad58f767"
        },
        "item": {
          "id": "0ad0a265-0fa7-4fa4-8cba-2211b0a6fbdd",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6f676f66-04d5-4cde-a040-5fba0286b8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81363e52-f615-4cbd-a144-a86b9520d179",
        "cursor": {
          "ref": "09e1da18-90dc-4566-b863-70f9c17dcbbb",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ca376446-ca5b-4ae3-a249-b718716db5b6"
        },
        "item": {
          "id": "81363e52-f615-4cbd-a144-a86b9520d179",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8317e689-aefa-4bb9-b596-d70e1c870157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0112c564-a5e4-4413-9515-c001d59e3b06",
        "cursor": {
          "ref": "a932c53d-faee-4d8c-97bc-ce263ae6b4ea",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2b94a158-3bbb-4f29-a1e0-2d7c9b47d483"
        },
        "item": {
          "id": "0112c564-a5e4-4413-9515-c001d59e3b06",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "603d1006-5000-4b29-8509-4177f91530aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d55f49-2266-4b6e-921a-5a657f7243cf",
        "cursor": {
          "ref": "c98d6ec2-64a2-490b-bb05-50c6c2007719",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a7645540-eb13-41f6-957e-ed529fbfea0b"
        },
        "item": {
          "id": "95d55f49-2266-4b6e-921a-5a657f7243cf",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3231156f-e1dd-4263-9c93-777b3641c26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a50667-d7ba-434c-ab9d-6b85831ff6ac",
        "cursor": {
          "ref": "1ce63ac4-2ab7-40c6-9f20-208bdfcb1f0f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d6d7a621-da5a-4094-88c2-0e3eb56d9aa4"
        },
        "item": {
          "id": "21a50667-d7ba-434c-ab9d-6b85831ff6ac",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0f3c54ed-1164-4e57-bf67-9357db9bd4a9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1507,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3bf40d-0fc0-48f5-a7f2-59d925725b9f",
        "cursor": {
          "ref": "558bc9d1-f5c8-4c5e-9856-fd55562c31f2",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2f9186cf-6f73-43fc-84f4-d7307682c2d6"
        },
        "item": {
          "id": "2f3bf40d-0fc0-48f5-a7f2-59d925725b9f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "46eca23d-0dd9-4a4b-b1ec-ff530d8c829e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee779e63-1f27-49ec-85e0-377f5ed39bbe",
        "cursor": {
          "ref": "4b8acd56-1342-484e-a286-93fe3ba52c45",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "81cefdf3-4bef-4e2f-badc-6b97f807f877"
        },
        "item": {
          "id": "ee779e63-1f27-49ec-85e0-377f5ed39bbe",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ae20c8fc-8ad2-4ddb-9dc8-96e735d3965e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c45a0d5-92e2-4b87-b2c5-7e0e7685b539",
        "cursor": {
          "ref": "b3dada16-c6e2-4604-968b-2dac2bb22274",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "272e58a9-362c-423b-afbe-9e08999c87df"
        },
        "item": {
          "id": "5c45a0d5-92e2-4b87-b2c5-7e0e7685b539",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f8bf15e5-c10a-4f07-aee4-204f409f913d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f6bc21-18ba-4ece-961c-2b00336e0f39",
        "cursor": {
          "ref": "1375e7e2-a683-4059-bbcc-412ac38e0899",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fe1e3149-4a5d-4e92-8fed-6a1f6e6f5c5d"
        },
        "item": {
          "id": "09f6bc21-18ba-4ece-961c-2b00336e0f39",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "88fb7828-d885-4de1-ae6d-510a1523f949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d6370b-01c0-40f9-a48d-92935e20b998",
        "cursor": {
          "ref": "0d0aba8c-0b26-4931-9fd8-f4030c513b6a",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "03bbb130-4bbf-432a-b02d-c6ce8b943f8d"
        },
        "item": {
          "id": "95d6370b-01c0-40f9-a48d-92935e20b998",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3483fe6e-f724-45d7-840e-5425abfa3b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db82ada-eb43-4702-9cea-45cbdc234a8e",
        "cursor": {
          "ref": "4beecb66-af26-4fa4-aace-461d8253fe90",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5add7a8b-01c7-4634-b7b5-f08147584a22"
        },
        "item": {
          "id": "0db82ada-eb43-4702-9cea-45cbdc234a8e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "12e2265d-e348-45cf-b08c-bcd586d4c6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b7f279-4a0c-47da-9442-8c8965898d24",
        "cursor": {
          "ref": "24447424-1c62-40da-899c-16878d412f6e",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9fb46cf1-519c-4bc4-997f-6fdeb9173b5b"
        },
        "item": {
          "id": "e2b7f279-4a0c-47da-9442-8c8965898d24",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a17a7321-ec63-465d-a65d-af39c531d6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b2b5b7-ae03-4391-9445-c49a05f4a58f",
        "cursor": {
          "ref": "45fdb901-b2fe-4b79-b8e6-72ab3743a86a",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "da6a720f-4778-4220-ba26-79c947f61f39"
        },
        "item": {
          "id": "37b2b5b7-ae03-4391-9445-c49a05f4a58f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3db71675-1641-49bf-928e-a42be89f2e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09de3e51-e748-4e29-bb51-f30b4064f99a",
        "cursor": {
          "ref": "fae8faf0-97e1-4a34-84fe-88a7815942b9",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "70fa51dd-97c7-4569-aa4e-0ab5d341d4cc"
        },
        "item": {
          "id": "09de3e51-e748-4e29-bb51-f30b4064f99a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "32d7bac9-a57d-4988-ae38-42eb97425c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0de5cac-13df-4eee-951d-e10ba5e5cf64",
        "cursor": {
          "ref": "851aecc8-7343-4777-8bf2-9072fa05f661",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "dc31fb5e-0bdb-4baa-afe6-17877d9bc009"
        },
        "item": {
          "id": "f0de5cac-13df-4eee-951d-e10ba5e5cf64",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b1e86db8-d18d-4ae5-b7cb-6c83fa129652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820dbaa0-7f13-45e8-8e31-d906730028c1",
        "cursor": {
          "ref": "39fb4886-acce-4b48-bbf3-2e9212f99804",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "02ffadc4-ea6e-4f91-96b2-a808c2222156"
        },
        "item": {
          "id": "820dbaa0-7f13-45e8-8e31-d906730028c1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5fbfbafc-a462-4b2d-bee1-80458e082258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f607ec55-44ae-475e-9b37-9597a62e3e9e",
        "cursor": {
          "ref": "8a28664f-552f-4a47-80e0-5551fe8f3353",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "715554ba-b7e2-4db9-b57d-8be0264ad5be"
        },
        "item": {
          "id": "f607ec55-44ae-475e-9b37-9597a62e3e9e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0d801520-59a1-459d-8bde-069951b031a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd9b441-cb04-457b-8e5a-fbc43a693abf",
        "cursor": {
          "ref": "1cd936b5-6e4b-44ca-9a0f-1bdfaced311a",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "05049032-07c8-48b4-a3b9-7b4cb2876773"
        },
        "item": {
          "id": "9dd9b441-cb04-457b-8e5a-fbc43a693abf",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5e38e0b8-fcb4-4610-a139-075005bcc4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f891dd7c-f58f-40b7-94b7-1bf5df218a6d",
        "cursor": {
          "ref": "ffc15b46-1255-4d01-ba38-f20b2310ed56",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3da22043-607d-426d-bed9-22aa4f34bea4"
        },
        "item": {
          "id": "f891dd7c-f58f-40b7-94b7-1bf5df218a6d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1c22020a-701c-4dc4-a370-7cd09daae0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca1eb24-208d-4059-bfb4-a1d0b5b5492f",
        "cursor": {
          "ref": "47e1a18d-4606-4243-8bb1-d335800e8d28",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7c9bbe20-0018-4aac-b406-db3b58f13898"
        },
        "item": {
          "id": "eca1eb24-208d-4059-bfb4-a1d0b5b5492f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d9a06cbe-40a2-40b0-9f1b-c4741c51132a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93421a9c-6517-4c5f-ae70-e9e451c4c404",
        "cursor": {
          "ref": "385c9a2d-e1e2-4d20-8cac-f32386c3e7a4",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "dc5b372c-5fbb-450c-9824-946855356959"
        },
        "item": {
          "id": "93421a9c-6517-4c5f-ae70-e9e451c4c404",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "28135be8-37a0-479e-aaa2-6f0e67c72006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583f6634-3115-4a36-88e8-2b348edc2851",
        "cursor": {
          "ref": "9801c46f-864a-46f0-90b4-c4967d285ff4",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "87683f4e-8b40-4413-922c-478914e555e5"
        },
        "item": {
          "id": "583f6634-3115-4a36-88e8-2b348edc2851",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c0ffb34a-f973-4680-9e88-c70e112f8f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69487af-8f76-42fc-abc8-e05a5b224bb1",
        "cursor": {
          "ref": "e0ec1a3e-d875-48c4-83cf-ec35857372c2",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d92d9ae7-b81d-4e41-8da9-2924d54dfd19"
        },
        "item": {
          "id": "a69487af-8f76-42fc-abc8-e05a5b224bb1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8ac0c471-7748-4a8f-98ac-6d50d465c8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c455f86-febb-4e7e-80ae-0bfe95d679ca",
        "cursor": {
          "ref": "db02307d-3a3f-4904-8f1f-916532745471",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "84fa7e3a-ce14-4a8a-8fb9-9adb186ce5a0"
        },
        "item": {
          "id": "3c455f86-febb-4e7e-80ae-0bfe95d679ca",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3dd250cf-8f0e-46b6-a856-4d0d307e6b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4602c2e-caaf-4d58-a419-872c86891471",
        "cursor": {
          "ref": "c303de4d-67c8-49bd-a067-6c0ae86a7799",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "571ab51d-0798-44e0-98b6-d86ada41571a"
        },
        "item": {
          "id": "a4602c2e-caaf-4d58-a419-872c86891471",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7a7f32ea-be37-40a2-9fc0-04fd621af939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915cb468-aae4-4ded-8bf5-f444addde3f6",
        "cursor": {
          "ref": "12957ebc-a64e-4d70-99e4-ebc7a5c29781",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1ad4d4e6-8244-4cf2-b519-bdcd37034e68"
        },
        "item": {
          "id": "915cb468-aae4-4ded-8bf5-f444addde3f6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "81535b1d-e16c-44e5-8542-a63feba9cb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b3ec18-3d64-4e47-983e-e141f9815411",
        "cursor": {
          "ref": "d4ca52df-f8d4-4b89-9dd8-cea94a8d811c",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d05633c8-c4f5-4526-9dab-b2f54b40c085"
        },
        "item": {
          "id": "34b3ec18-3d64-4e47-983e-e141f9815411",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3c06e1c1-de90-43c8-9c73-18ba7832ee1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2b98ea-abd8-4f5d-bdeb-81d1a44639dd",
        "cursor": {
          "ref": "0212d0ac-7e68-4a79-83c1-a6b0ec9777d0",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e31f478d-aba9-48ea-8cc2-3a50303f7ef7"
        },
        "item": {
          "id": "4e2b98ea-abd8-4f5d-bdeb-81d1a44639dd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3d587dab-214b-4920-ba4e-466c8238d39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc22d361-166b-44fc-92ae-194fabadb333",
        "cursor": {
          "ref": "d89f95ae-bc69-4113-92eb-3a1271bfca4f",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6cd7c7f3-e22b-4da7-bcdb-6fc1b588087a"
        },
        "item": {
          "id": "cc22d361-166b-44fc-92ae-194fabadb333",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b9d76b04-332b-43f4-9b54-c16a7b665af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87ac513-6251-45dd-a0c6-0766be1e2405",
        "cursor": {
          "ref": "21eef21c-5052-4e1e-a5bb-d29931ad924b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cdf1fda7-1754-4ae9-8886-127c9c7deab8"
        },
        "item": {
          "id": "a87ac513-6251-45dd-a0c6-0766be1e2405",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1df9ae58-c951-4fb6-a7a4-a330603068dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe832526-f854-4720-bdd8-a19db56f555f",
        "cursor": {
          "ref": "a703e290-be7e-47be-aed3-8f4a7f6b3b79",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a3e203df-a494-4280-bd2b-37dba6a27a72"
        },
        "item": {
          "id": "fe832526-f854-4720-bdd8-a19db56f555f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ce632ae2-9573-4a99-a01d-2a087fc9042e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5971732e-7a7f-4036-81ca-ccc8bce102d3",
        "cursor": {
          "ref": "9c8186d3-56e0-4f74-bdb5-673d263ded0d",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a49ed37c-201b-4811-9079-f0f51753e800"
        },
        "item": {
          "id": "5971732e-7a7f-4036-81ca-ccc8bce102d3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c189d797-4c18-4d51-9ba3-79b29ebb29fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee577638-57aa-4994-8d41-7d356d73b0c3",
        "cursor": {
          "ref": "0c91c769-7024-4332-a725-9da6999971f9",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a85fc191-03e5-4479-9a77-00eb66bc80c9"
        },
        "item": {
          "id": "ee577638-57aa-4994-8d41-7d356d73b0c3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5df573b5-f0b6-40af-b8ef-d2e5276cccd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1220542e-38aa-478f-b136-4e0ef6def156",
        "cursor": {
          "ref": "fc36e204-f1ae-403c-b67c-2c4f3220ed92",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9e1989cb-77e5-4baa-8138-fb93bf7d12c5"
        },
        "item": {
          "id": "1220542e-38aa-478f-b136-4e0ef6def156",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9a155b7b-c5d0-4ec7-a042-122f35dc57c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784c334a-1135-40f3-b93a-7ed3560b9911",
        "cursor": {
          "ref": "0586246f-d69e-419d-a4de-42ae35d389fe",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f67b1534-c9b4-4817-923c-f66ed9692f83"
        },
        "item": {
          "id": "784c334a-1135-40f3-b93a-7ed3560b9911",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4a853daf-9e7c-48fd-bcdf-d2d9ad428c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e190f2-d844-4b73-a69d-a34806d6bfe1",
        "cursor": {
          "ref": "6ae66f9a-1775-463c-8b32-6f611168c95b",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "37c5cde1-679f-45bf-958e-e9b10298e15c"
        },
        "item": {
          "id": "56e190f2-d844-4b73-a69d-a34806d6bfe1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "87d09c7b-0ea6-4d73-ab3d-5a4a26c21d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64dc371-61e5-4081-b91e-72c4db13c8ce",
        "cursor": {
          "ref": "620e8052-36df-4709-858d-140e781c50e5",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a0ed8045-192c-44e5-b891-f7762bdbadb4"
        },
        "item": {
          "id": "b64dc371-61e5-4081-b91e-72c4db13c8ce",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ee75d24c-be63-4eb1-811a-bd6aca1e71cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1151a510-de91-4fed-9efb-f0ef550e1bb5",
        "cursor": {
          "ref": "1c7655b4-2a28-4e6d-84f0-1ea7f5dffdea",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4d270ec1-4945-483f-84e8-d7e7142f0092"
        },
        "item": {
          "id": "1151a510-de91-4fed-9efb-f0ef550e1bb5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "78f70f93-fa0f-44dd-ab28-eb53450ddce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb538b4-bf17-4f9f-9f09-24d094c4ce87",
        "cursor": {
          "ref": "5a7cfe9a-0ae7-48e5-8673-940906bb8a8f",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e426198e-d952-4505-a67d-280c7b0c6d1a"
        },
        "item": {
          "id": "bfb538b4-bf17-4f9f-9f09-24d094c4ce87",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "23d2f7f2-2069-4a7e-9aab-19cf0dd6cb00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c559a20-95b4-41be-8d56-11fb8b8bcf94",
        "cursor": {
          "ref": "6ccaab3a-8705-40be-ba45-1ad614a48fb2",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f9ab754a-f256-40b5-82ab-528eabf65acd"
        },
        "item": {
          "id": "0c559a20-95b4-41be-8d56-11fb8b8bcf94",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8d959c88-f2e6-429c-b1e3-fb2708099641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9397f43-c3a5-499e-8638-ddd15ce9a2cf",
        "cursor": {
          "ref": "20d8a5d0-6a8c-4e18-9f1d-cfce1ff59ae7",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "51f71801-5777-4851-a1f5-1ed075969185"
        },
        "item": {
          "id": "a9397f43-c3a5-499e-8638-ddd15ce9a2cf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7607fd25-e353-4e5a-a612-94a038ca8b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3ffb10-3d1a-46fd-a018-52b2c2520965",
        "cursor": {
          "ref": "ec4cb523-eb6b-4e43-bdd6-6d6c9721f75e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "53783b1a-2ec9-4f71-b9e4-fcfaf621752b"
        },
        "item": {
          "id": "ce3ffb10-3d1a-46fd-a018-52b2c2520965",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7ba66587-aad0-41ad-9321-408061735a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad1d722-c6f2-4553-8dc2-25fc1ad3e190",
        "cursor": {
          "ref": "286889ff-91c9-4dd5-b542-5f65f960d217",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "38bd2b89-5d0e-4f20-ad77-384fb387c261"
        },
        "item": {
          "id": "9ad1d722-c6f2-4553-8dc2-25fc1ad3e190",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f59f61f7-bfa5-4954-a437-070ee101e49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d65c3ad-5a5c-4223-aa4a-c2f21f966dfe",
        "cursor": {
          "ref": "27dfcbbb-ef37-4d7c-b289-764af36dd827",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a6ec19c9-3ef0-45d0-8fcc-1a0786561ece"
        },
        "item": {
          "id": "9d65c3ad-5a5c-4223-aa4a-c2f21f966dfe",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d731d69f-5571-4ebc-9c88-3b3b05859012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e85abdb-614b-42bb-b75c-92acfcfef6bc",
        "cursor": {
          "ref": "5a379d90-a619-48d1-9b64-59440715535b",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "22b871d4-9dae-437e-a541-2b1f3d266a4b"
        },
        "item": {
          "id": "4e85abdb-614b-42bb-b75c-92acfcfef6bc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0f252407-cb1d-44c4-b1f7-e23f2b32d8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130868ba-f614-47b2-96a1-5688cfef4244",
        "cursor": {
          "ref": "f56d9987-6d2f-40ac-8ff8-2268835b4b31",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "62277b1a-f792-4bed-ac2e-598ff85bcdbb"
        },
        "item": {
          "id": "130868ba-f614-47b2-96a1-5688cfef4244",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7991edab-3e3a-44e3-a2e9-4dfd255a97d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6447f0-9201-4d4d-855a-c2da8c3bc523",
        "cursor": {
          "ref": "3924b874-e906-477f-aa07-aae60026e873",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "16414492-bbf6-4d7b-ba6a-93b1f865beea"
        },
        "item": {
          "id": "2f6447f0-9201-4d4d-855a-c2da8c3bc523",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "79485dd3-79e4-47bb-80d0-0c66452d9a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66af4291-6829-4167-854d-40141c3b5e5c",
        "cursor": {
          "ref": "9fffd047-62ed-4b88-a620-39641fbda044",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "255fa7c2-e57d-47ab-93bd-583ac1e03361"
        },
        "item": {
          "id": "66af4291-6829-4167-854d-40141c3b5e5c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f32b1579-9501-4179-b44a-9bc2e2fcef2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbafed8-9a9c-4df7-a6a3-b88f79e42ec3",
        "cursor": {
          "ref": "37f884d7-6353-4233-87cb-770282ff9d31",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "78d95a6e-1977-4a9a-98ea-86cb02a3a6e1"
        },
        "item": {
          "id": "acbafed8-9a9c-4df7-a6a3-b88f79e42ec3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "551660f2-d0df-49ba-bdd9-6ce2cd38359d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5850be-0bdb-483a-b909-eacb4919c387",
        "cursor": {
          "ref": "04df17f7-167a-4bfd-9eb6-058e7d890567",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3bde4f2d-657a-4ac8-b251-a1185e4a4749"
        },
        "item": {
          "id": "ce5850be-0bdb-483a-b909-eacb4919c387",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a9540b65-a2d9-4507-9c5a-03c399c28534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd0c1f2-65ad-4ed6-b772-e3a40d587e21",
        "cursor": {
          "ref": "8dff918a-dfbf-4453-abab-b2e9ed049cef",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "70076473-d57d-42c9-8a17-59ba26272546"
        },
        "item": {
          "id": "7dd0c1f2-65ad-4ed6-b772-e3a40d587e21",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c94780e4-49d7-472e-8777-10199d75236c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d416139b-dc23-4b3b-bdb7-93fced16f69f",
        "cursor": {
          "ref": "0ccfb6a4-a1a2-4744-a5e1-c449e6e2c391",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "78a42e13-f2e5-4ed8-85bb-e57b50eb1b48"
        },
        "item": {
          "id": "d416139b-dc23-4b3b-bdb7-93fced16f69f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "129ed66c-4808-40e0-b889-44e8da7c4acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702b862d-23c0-47b9-a66b-3389e66b008d",
        "cursor": {
          "ref": "17c34393-c646-4562-840e-5a0831d6508b",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "966bd390-7851-4308-b97c-c416ecd65087"
        },
        "item": {
          "id": "702b862d-23c0-47b9-a66b-3389e66b008d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1621d307-e48c-42fe-88fd-a0bf7772fc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9811abaa-257c-42f9-ac27-37a082ac5a63",
        "cursor": {
          "ref": "bb0c2fbe-b3de-445a-98ea-d024101a71f5",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ef85fe2e-4f82-49d0-a32a-6007299980b7"
        },
        "item": {
          "id": "9811abaa-257c-42f9-ac27-37a082ac5a63",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b2429a6d-cecd-44fe-bcca-fe9d1ba33856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0708d2-9e44-4c6b-9b10-89d7a4287f3b",
        "cursor": {
          "ref": "e3f90a6a-94ab-4c19-9310-67df14fc2724",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "39350e48-b634-4bc7-95b3-514c39fd400e"
        },
        "item": {
          "id": "6b0708d2-9e44-4c6b-9b10-89d7a4287f3b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fcd63d47-39d3-4626-9f06-9a3d5064a7a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4dba0a9-14f1-46b0-a69d-4a8a609e2e66",
        "cursor": {
          "ref": "13e1e366-186d-4af1-9cff-8bf7b52d2d38",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "40beb44c-a14b-49fb-95ff-35f48a470502"
        },
        "item": {
          "id": "d4dba0a9-14f1-46b0-a69d-4a8a609e2e66",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "14f0af51-80f3-4a7d-bba4-c3e1dbdd8dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d8bf4574-49cc-4ea6-9d59-9d15eeeffa24",
        "cursor": {
          "ref": "7328fe72-b3d9-4c24-869b-ae5cac009555",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "873e2a2b-7101-40b1-b9ae-563f84d0b932"
        },
        "item": {
          "id": "d8bf4574-49cc-4ea6-9d59-9d15eeeffa24",
          "name": "credentials_issue"
        },
        "response": {
          "id": "391a7201-023c-42c3-b7e7-9686c6ec36bd",
          "status": "Created",
          "code": 201,
          "responseTime": 8953,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "884baa90-0eb9-4840-9cd1-201d7613dbea",
        "cursor": {
          "ref": "663b6e7d-b840-4d2c-99e4-f5a8966389aa",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b19d5d3b-17e9-47cf-858c-2eb0089b3b08"
        },
        "item": {
          "id": "884baa90-0eb9-4840-9cd1-201d7613dbea",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "65e37b3f-851a-4d6a-a3b6-a1b12fada7fe",
          "status": "Created",
          "code": 201,
          "responseTime": 7954,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bdab43a-f747-4bae-abfd-366f4a1c471c",
        "cursor": {
          "ref": "af1feeb3-47c5-4e3e-a16a-a71ec7f50a6e",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4d6b58eb-8fde-4c77-9e5e-1078a01fa76b"
        },
        "item": {
          "id": "0bdab43a-f747-4bae-abfd-366f4a1c471c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "915344c3-6827-420b-9726-790e8d6ae9ee",
          "status": "Created",
          "code": 201,
          "responseTime": 8497,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e16409-daeb-4bd6-b968-2264fabba038",
        "cursor": {
          "ref": "048a33dd-acb3-4ea7-97e5-ac6a6372c630",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ac902db5-bc5d-4526-9bff-8e4617d1ee0c"
        },
        "item": {
          "id": "31e16409-daeb-4bd6-b968-2264fabba038",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0c406840-402f-49ad-b659-40ddbd328612",
          "status": "Created",
          "code": 201,
          "responseTime": 8530,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd893a57-e145-4bd6-90c6-17a3fbe4e7bb",
        "cursor": {
          "ref": "65aff8a1-fd9f-4c11-b33c-3a72d0ff4b7e",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d876cc65-a493-4bb4-bf9d-2f25c58c273f"
        },
        "item": {
          "id": "dd893a57-e145-4bd6-90c6-17a3fbe4e7bb",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8ba31a85-a8ba-4b7d-988f-f52787ffae96",
          "status": "Created",
          "code": 201,
          "responseTime": 8595,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b47f648-fba2-4496-a649-9b966650c4b2",
        "cursor": {
          "ref": "e460fe72-17eb-4c45-9823-75f7a55cf8f9",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a2a041c3-f420-48aa-96e3-09079435cd9f"
        },
        "item": {
          "id": "3b47f648-fba2-4496-a649-9b966650c4b2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f850e29d-0e4a-4b66-b873-04908c17a46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "86cc1dff-4845-4305-b7f5-1ebf6c22b754",
        "cursor": {
          "ref": "38a71134-3e62-4434-a117-e46dada2bd28",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0fc3426f-23fc-4a13-a062-ea320d71d26c"
        },
        "item": {
          "id": "86cc1dff-4845-4305-b7f5-1ebf6c22b754",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fc64b38b-df41-44ab-99ff-a5af411a3737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b0887e-44be-46db-abe0-b548982a2700",
        "cursor": {
          "ref": "8a90bb8f-d2bc-4b2a-80f2-11221ec4a486",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8295b8a1-8a99-4afa-a9f8-c540e9c03b95"
        },
        "item": {
          "id": "65b0887e-44be-46db-abe0-b548982a2700",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6a9f2599-a469-406c-b6dc-96136896ede4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0808fed-2ef5-4d4e-acdc-6c96c6bd06d9",
        "cursor": {
          "ref": "e0adc022-e9cf-49cf-bdd0-7836f6da4271",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "84100796-aac9-478a-8391-eb3cc93e128d"
        },
        "item": {
          "id": "a0808fed-2ef5-4d4e-acdc-6c96c6bd06d9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "71c0a597-7116-45af-9135-da5eb6d57231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8dc49fd-1993-4a05-a7fd-bafed3b883e0",
        "cursor": {
          "ref": "726dee83-35c4-49e9-93a6-4102238165d4",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3264779f-4599-40ae-8673-577fca8e7706"
        },
        "item": {
          "id": "f8dc49fd-1993-4a05-a7fd-bafed3b883e0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "09d1d847-3022-49d4-8c8b-36051a8f411a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b04022c-46ee-4bdb-8819-4f400ed44d9b",
        "cursor": {
          "ref": "a58ce1b8-2135-4e34-920c-e1806e3f5ec8",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f8e0d650-156d-4c3d-be7c-8698f4585a94"
        },
        "item": {
          "id": "1b04022c-46ee-4bdb-8819-4f400ed44d9b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9e0c4628-1c6f-47c5-ae11-cf541f0a717f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f1a841-4185-45e0-b244-890a6d81fa24",
        "cursor": {
          "ref": "7f1a46ac-6aec-4ee3-9ad7-bfe3f4b44bae",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "afdcd3dd-0f68-41a8-89f3-be6d581d2ab7"
        },
        "item": {
          "id": "46f1a841-4185-45e0-b244-890a6d81fa24",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5ec86ebb-e1b7-40ee-877e-8b9e5678c5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2c86f4-df39-4e0f-865e-f6e45f0a5208",
        "cursor": {
          "ref": "b224c178-c901-4461-b405-13b4b80830b8",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2ab043cc-0c87-414b-96e8-a8bbf86c2092"
        },
        "item": {
          "id": "0f2c86f4-df39-4e0f-865e-f6e45f0a5208",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d4380a6c-9fde-4914-8639-e3374dab3373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3d0d04-cb9e-4585-bf61-4619003892c9",
        "cursor": {
          "ref": "d58bea6d-3175-4a93-99cb-ecb71a84047c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8535801c-8f83-462a-9196-ea9bbd4142d5"
        },
        "item": {
          "id": "df3d0d04-cb9e-4585-bf61-4619003892c9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d62009dd-1b8d-4ff3-bb3a-d695134e39da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e057bac7-8550-41fd-ad9d-2846981a76ff",
        "cursor": {
          "ref": "619fa209-f3db-4f18-afe2-6e74a1c5f7a4",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0edef4c0-8e3b-4165-80e7-3b4c7e2e5f18"
        },
        "item": {
          "id": "e057bac7-8550-41fd-ad9d-2846981a76ff",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "377434ed-f561-4675-bb73-902c55cce796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fd7a6e-4194-490a-9a28-757a2eba20e3",
        "cursor": {
          "ref": "619275fc-902a-4fed-8a27-81851001afea",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d37e7db5-e5fe-4bd7-8d56-2512e4ce50d6"
        },
        "item": {
          "id": "38fd7a6e-4194-490a-9a28-757a2eba20e3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a0dbea55-f014-4f70-9f6e-6b359548b1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901379e1-a370-4685-8e9e-792b3859ee45",
        "cursor": {
          "ref": "4b33129d-d603-486f-9e07-0651f94e2586",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bb9838fd-6364-4186-8304-e5199268bffc"
        },
        "item": {
          "id": "901379e1-a370-4685-8e9e-792b3859ee45",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c7a6e0ba-fa0a-443e-9ac4-ab57781f8537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93cfcb9f-1260-4d80-a256-266a20decf93",
        "cursor": {
          "ref": "42761d8a-8d31-4a14-9bef-db6b02bcb56a",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e6cfe732-e0af-4047-8b1c-007e306b556b"
        },
        "item": {
          "id": "93cfcb9f-1260-4d80-a256-266a20decf93",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a4ceab85-7030-4753-bc37-2edbcb331280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa68ec63-8b89-4630-832d-d8113c9360bf",
        "cursor": {
          "ref": "d177531d-1a91-4fb3-9bd5-ae5b5e0364bc",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "52838171-18a6-4ba8-827f-095f1b7ce251"
        },
        "item": {
          "id": "fa68ec63-8b89-4630-832d-d8113c9360bf",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a8b125cc-55cb-42cc-bace-ba177401a537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0be2542-fe8f-4498-b1d3-2936fd8bace9",
        "cursor": {
          "ref": "657c8a4c-208b-4000-8eec-4e629e26efac",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5a06e982-dbd4-46c9-9df2-55da6388cf2a"
        },
        "item": {
          "id": "b0be2542-fe8f-4498-b1d3-2936fd8bace9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "deced125-45ef-455b-baa3-f6804f92a017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06aa674f-f87b-40c6-ad43-4e430533ff29",
        "cursor": {
          "ref": "5d0c2181-33e1-472f-80f9-7839e64ab92a",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ee26111b-6cf3-422d-b483-16b1e9771f4c"
        },
        "item": {
          "id": "06aa674f-f87b-40c6-ad43-4e430533ff29",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5d707aa7-96ec-4106-be19-ab8323994491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a861cdc-bd1c-43d0-873e-e88279fe4e5a",
        "cursor": {
          "ref": "c3e9a1e6-61e7-4dd2-87a6-d8e62fa23bd2",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "872bf175-85cc-474f-a372-2b24e64885f4"
        },
        "item": {
          "id": "1a861cdc-bd1c-43d0-873e-e88279fe4e5a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "adb71cee-27ce-4e6b-8548-9bcaff3107a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9a4b7c-27c7-42f9-a25e-ce76b1d79be5",
        "cursor": {
          "ref": "c9d5f48e-ed9c-44c2-92ea-c128a0bcbb63",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "03df8707-6e0a-4098-87cc-74a2a8ca5b29"
        },
        "item": {
          "id": "ea9a4b7c-27c7-42f9-a25e-ce76b1d79be5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e98c9e1f-4c3f-455b-8800-586b15769f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b7dccf-98d3-4ba0-874e-2a228fe16ce6",
        "cursor": {
          "ref": "eb2f0617-65e0-4e5b-a31d-4d335155200b",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a1242b58-0b1d-4544-ad20-f2da2b402fa8"
        },
        "item": {
          "id": "c9b7dccf-98d3-4ba0-874e-2a228fe16ce6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fac91da6-d80e-4c87-827e-04e299078bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a5a534-ba03-424a-a293-b1970c68403b",
        "cursor": {
          "ref": "efe7ae6f-eb32-4947-8244-ed1fc023e9ff",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9938672b-7a40-428a-8776-44aea725eadf"
        },
        "item": {
          "id": "b5a5a534-ba03-424a-a293-b1970c68403b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "efc2b235-f51e-4e93-8acf-fabff1a258dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa9d294-a330-4490-b73a-542203a86e08",
        "cursor": {
          "ref": "0c2f62b7-fcd3-4008-9f92-11009902e391",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1c8fade3-3477-4e64-aa56-500d588293f7"
        },
        "item": {
          "id": "1fa9d294-a330-4490-b73a-542203a86e08",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "19238cc4-f6b3-4ddd-9d52-c99520dedf35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87044ff3-0c00-47a8-a16d-9a93f8ca93ef",
        "cursor": {
          "ref": "14d540b8-640c-452e-bd05-cd7b219506ae",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "14b6e960-c466-4791-8057-9d4a87a9fb5f"
        },
        "item": {
          "id": "87044ff3-0c00-47a8-a16d-9a93f8ca93ef",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5f0f7269-92a4-4862-b143-787f5a04d1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ff770d-f7a9-411c-85a4-c066ceaffafe",
        "cursor": {
          "ref": "33540531-81ad-487d-bdd9-edda9ad0b79e",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8548cf05-7952-4a2e-a473-3cda9801e0a8"
        },
        "item": {
          "id": "64ff770d-f7a9-411c-85a4-c066ceaffafe",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5a759530-455f-494d-b262-62432570f20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8e60ff-ccbe-4e25-a2f8-4340ef4f1396",
        "cursor": {
          "ref": "9d5be3c4-8d2d-42a1-8963-570772fe4ae6",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5dbaad5d-7a8e-4f52-b338-771326d3588a"
        },
        "item": {
          "id": "dc8e60ff-ccbe-4e25-a2f8-4340ef4f1396",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "011eff95-f35f-4d60-af76-41f3f11c693b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e3c758-0fa3-45aa-9f7c-eb00e36b6dec",
        "cursor": {
          "ref": "b3a3ab3a-3fb2-49f7-ab03-f48dca8585ac",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "790c09a0-1e43-4607-92bf-589e0e7b2096"
        },
        "item": {
          "id": "85e3c758-0fa3-45aa-9f7c-eb00e36b6dec",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2f20719f-a225-48d4-a183-d12431694505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e1be9e-52dc-43c3-a262-040b85a00e7d",
        "cursor": {
          "ref": "3c7a64be-aa97-4c6f-8cb9-b371f7234894",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9b976f68-717b-4cec-a7d9-5ab76852c29a"
        },
        "item": {
          "id": "74e1be9e-52dc-43c3-a262-040b85a00e7d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b48f850b-614d-4264-86f4-884439c542a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7860c7ec-cb91-4682-a070-7ee090580530",
        "cursor": {
          "ref": "ed458f38-6d80-44da-a23c-e7d887dd00f8",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ec535add-9b1b-4d4c-914f-f62d84e6d3b7"
        },
        "item": {
          "id": "7860c7ec-cb91-4682-a070-7ee090580530",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "dc476989-7e51-4524-90ef-d267bf8b88f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bec08cf-147e-4738-8179-da14afe6112c",
        "cursor": {
          "ref": "bcaa76c8-3586-4565-9e51-68805863650b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b321fc44-22a3-4fb1-93c4-9a6c3c4ac129"
        },
        "item": {
          "id": "9bec08cf-147e-4738-8179-da14afe6112c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "33e4576a-5482-46eb-810e-db692e23909d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a173d22-4fee-4ef3-93fe-45c5535aaecd",
        "cursor": {
          "ref": "faaf41c2-27d7-446b-b4ae-37e6bd0df537",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c339ecd4-6652-40fc-82ca-de51f6560d62"
        },
        "item": {
          "id": "0a173d22-4fee-4ef3-93fe-45c5535aaecd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3f48ee72-900b-4a28-ab27-985d812d4bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6139cd2-cd36-452d-986e-63c3bc35b5c5",
        "cursor": {
          "ref": "e9087ec9-8010-49b5-94d7-45f5305792dc",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "897b8ddb-9522-4452-910b-ed5f227b8b10"
        },
        "item": {
          "id": "e6139cd2-cd36-452d-986e-63c3bc35b5c5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b5ee29f9-9bc5-4250-99ff-61b86f539ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ac61d6-a469-4a3c-89ae-7f10db4edf3b",
        "cursor": {
          "ref": "7cc5db1f-53d5-4168-aafb-82bfe2afc4e6",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c46cb284-49eb-4003-a05c-ef80eb720849"
        },
        "item": {
          "id": "d7ac61d6-a469-4a3c-89ae-7f10db4edf3b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "35b4aa14-c098-426b-901b-6cfcbb964547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c6ca37-69e4-4f87-a6b5-b9f71fba6ccc",
        "cursor": {
          "ref": "f3350290-75a7-4e36-9eda-7599bb1ec784",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "32ac8079-3d5e-4eb7-b9d3-1baa05b53210"
        },
        "item": {
          "id": "87c6ca37-69e4-4f87-a6b5-b9f71fba6ccc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0ab0dca4-9d2d-49bb-85e0-babf5c79c3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1eb727c-3ad4-4877-9dc5-b04c321f0d44",
        "cursor": {
          "ref": "e9d7b49b-9a26-4469-9a43-6df2bdf707bb",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "80b831f3-11bb-49d0-a136-09807183304b"
        },
        "item": {
          "id": "f1eb727c-3ad4-4877-9dc5-b04c321f0d44",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5f8372ba-5de8-425f-b441-d898a89b9050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59d7ac3-a8fa-41e5-b01e-fd5b0e9818c1",
        "cursor": {
          "ref": "01650021-ee87-4b8f-a60b-ec85053c3d94",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "51d87623-1d14-438c-8ccb-c354d126ee9b"
        },
        "item": {
          "id": "a59d7ac3-a8fa-41e5-b01e-fd5b0e9818c1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0afedb50-29ba-40a9-9664-f41342de2846",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7544c5-a7db-4b7a-bf91-25fc0b2dd9a6",
        "cursor": {
          "ref": "a6face35-f23e-4c21-9494-0f3ff1f1441a",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "54f99623-86c0-40e4-8f70-15366bd1412f"
        },
        "item": {
          "id": "de7544c5-a7db-4b7a-bf91-25fc0b2dd9a6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1801f6e3-4638-4503-9575-5654f94d28f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a722a726-266e-4a80-af30-f5c540bbb59d",
        "cursor": {
          "ref": "6a333bee-330e-41d4-b601-499af2ee4b37",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "17a663ff-fc5c-4f0d-8d19-22d27f30c41f"
        },
        "item": {
          "id": "a722a726-266e-4a80-af30-f5c540bbb59d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9eda013a-d1b3-4682-8e55-38c4eaa687f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e9c9e2-1104-4efd-8cb8-9f1760d44f2e",
        "cursor": {
          "ref": "a21c4aba-5994-482c-93bf-0f2bb9b10a3c",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a9237ac6-3e7a-45b5-acc0-5badc1d6989c"
        },
        "item": {
          "id": "16e9c9e2-1104-4efd-8cb8-9f1760d44f2e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1ed57d80-c9ae-485e-9e8d-846b8f38f09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046ef8ad-c819-4840-a6c7-39e180ec14bf",
        "cursor": {
          "ref": "0477b1f2-8e2c-4205-8573-3d6a41625aaa",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0980d8cf-b4bf-49e7-8403-db302d7c0e92"
        },
        "item": {
          "id": "046ef8ad-c819-4840-a6c7-39e180ec14bf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2463d028-79bb-4a27-af66-f6ffaa647f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a746c17-fa11-49d2-b919-46aa804848d9",
        "cursor": {
          "ref": "7331450e-7fbb-4bb8-a673-05a97c842f21",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "64de2b15-2b34-4b52-85f4-fa8d35642936"
        },
        "item": {
          "id": "6a746c17-fa11-49d2-b919-46aa804848d9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6c0771ea-4ddd-42fc-9260-cf2adc83e2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c730c85b-f5e0-4e06-8b0e-15b62907f06b",
        "cursor": {
          "ref": "34f08c20-d3c8-4b98-819a-4c0844812a43",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "259f5ced-9fe0-4d08-a936-785c748347ef"
        },
        "item": {
          "id": "c730c85b-f5e0-4e06-8b0e-15b62907f06b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d7d8fb66-cffd-4c6d-b82d-048ee751aa52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c146ee-5e5a-4eaf-b51a-869f70ce92fd",
        "cursor": {
          "ref": "76f446ee-538a-4171-950d-e8b708236741",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6f69010c-be29-4edf-8ebd-fd05f97d7fe2"
        },
        "item": {
          "id": "b1c146ee-5e5a-4eaf-b51a-869f70ce92fd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cd14e3c2-bd67-4c19-8ea1-0c608591d1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ba19c8-e64f-4a02-9b7f-98859b9c00d5",
        "cursor": {
          "ref": "979c12eb-2e0e-4f61-ba1f-0aee06132d8d",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8306e06c-96a1-41d1-ac11-39ddd40c445c"
        },
        "item": {
          "id": "b7ba19c8-e64f-4a02-9b7f-98859b9c00d5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ec98e13e-15a4-47ed-8d68-710a90d3b84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dcfd53-52f5-4c9a-afb9-8f96592c39c3",
        "cursor": {
          "ref": "6caffc8a-5e04-4139-91ed-e46dee86bf40",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cb978015-fac1-476f-b8dd-ab9349c21ff8"
        },
        "item": {
          "id": "40dcfd53-52f5-4c9a-afb9-8f96592c39c3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d7dde3f0-250f-4d6b-8f0a-1a151b6d2299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d42e116-3a87-4b35-bfaf-9c4d5fa3d0b5",
        "cursor": {
          "ref": "868749e7-c2e4-4fbd-ae18-b672809c2185",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c630d7af-d06d-433c-a941-47bd069a0779"
        },
        "item": {
          "id": "0d42e116-3a87-4b35-bfaf-9c4d5fa3d0b5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ed0b278f-235a-443c-96bf-87b48c125f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f29095d-27de-48d8-a5d1-e85e41f50377",
        "cursor": {
          "ref": "e168b80c-f955-43f9-9a6c-5c8594324b80",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5711f73d-d85f-4cad-8c2c-28960a44c6a1"
        },
        "item": {
          "id": "2f29095d-27de-48d8-a5d1-e85e41f50377",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "89f50cc7-0dba-4f29-a6eb-75617ae6dff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36e8dcb-b817-4062-89b7-363bfc1626d4",
        "cursor": {
          "ref": "b4cae7d3-0ca6-4c9d-b811-229ec53ce76c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6c0c95b0-4d8e-44fe-a403-ccace0df3c27"
        },
        "item": {
          "id": "d36e8dcb-b817-4062-89b7-363bfc1626d4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "eedf1137-69e1-44bf-9dd9-f563ef17e013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f27a7d3-9bfc-47a1-9125-4ac37735d436",
        "cursor": {
          "ref": "ed57af30-46de-48b6-8837-2f2f77db1f7c",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "082fe037-bc10-4a5d-81d0-c44a43fa7e3d"
        },
        "item": {
          "id": "9f27a7d3-9bfc-47a1-9125-4ac37735d436",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c360977a-e18f-4cea-9b89-7f252afbf876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86139f5-009e-46bc-bb7e-6e044c0932e2",
        "cursor": {
          "ref": "6f81e3ff-a621-41b8-b048-ccd1ca8b7e81",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "03806009-a387-4536-9ab4-9d760fe0f96e"
        },
        "item": {
          "id": "b86139f5-009e-46bc-bb7e-6e044c0932e2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "00b06162-8f4e-4d72-85bb-fc50a41afe07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2438a3-b43d-44a2-ae3f-7d820543fb5a",
        "cursor": {
          "ref": "176e93f3-60f0-46ca-a68b-e1f89ac161c5",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1ce3ad14-6b3d-4db8-8e51-b44e42bc184c"
        },
        "item": {
          "id": "2a2438a3-b43d-44a2-ae3f-7d820543fb5a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7a9dffc4-20db-4962-9a16-a9d473a60a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef36897b-9a16-4425-863b-2097995bcbab",
        "cursor": {
          "ref": "3435d513-ff25-4d91-aa16-54e1725640de",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b9241b71-5514-4b38-be80-76c91a015c18"
        },
        "item": {
          "id": "ef36897b-9a16-4425-863b-2097995bcbab",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0664874c-ef83-4298-90d9-978a89847b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0c04ad-6105-4432-babe-f94a4c1fbdbb",
        "cursor": {
          "ref": "c4a21f49-42b8-432e-8234-21e0ed5801a9",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2acddf36-cf1f-46cd-8c64-23d19aa22487"
        },
        "item": {
          "id": "8e0c04ad-6105-4432-babe-f94a4c1fbdbb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b7db0764-cacc-4779-9446-830a4dea14d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a662397-b9af-4187-91a2-4142a1e85e44",
        "cursor": {
          "ref": "cd4e956c-91be-4680-9cc9-bb4d099da881",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b1c67a03-664f-4aea-bc17-c9994cffee0a"
        },
        "item": {
          "id": "0a662397-b9af-4187-91a2-4142a1e85e44",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "aec4cb14-4466-4170-bbef-37d9c8b2eb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b0c523-34de-4e03-a9c9-e4c8cf2648c4",
        "cursor": {
          "ref": "bec0f2cc-bd48-4648-98c4-85506a4bebb3",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "667d6b9c-4db5-4eb2-a4b6-42e32059ccd8"
        },
        "item": {
          "id": "c1b0c523-34de-4e03-a9c9-e4c8cf2648c4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3ba0c935-e2df-48fc-91ec-b1b0134cbd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9af06a-acda-4cd1-bf81-3239904a8d33",
        "cursor": {
          "ref": "f799e303-b3da-4c55-96ad-89fbb74b573e",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "34a5bab2-8fdb-4202-80f6-91f8d5cfdcfd"
        },
        "item": {
          "id": "0b9af06a-acda-4cd1-bf81-3239904a8d33",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "08188ec3-021f-4622-b3ed-b1deaa05167b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6fdb51-8f54-495d-a240-ea72da0506e2",
        "cursor": {
          "ref": "d9fc7f3d-1e1b-4dde-86c7-5fc395e8e736",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "73d10ce1-fd98-427c-9186-9f3fc3249594"
        },
        "item": {
          "id": "8b6fdb51-8f54-495d-a240-ea72da0506e2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "210ac4f3-cf7e-48ff-ad01-a866607e52ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba12caef-9476-4f66-94e4-6a92bde16bfe",
        "cursor": {
          "ref": "8133397d-1c30-429a-a0e0-b14f30509d85",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "949f9ade-0605-4336-ba0e-6f4081415a06"
        },
        "item": {
          "id": "ba12caef-9476-4f66-94e4-6a92bde16bfe",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2a331828-6d2c-4c25-bff3-0ddf67c2be0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2615861a-a5d0-4020-935a-5c7c0817c256",
        "cursor": {
          "ref": "f515701b-467f-4e38-bb32-38714b28a84d",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9ed51130-5e83-4d4b-98e9-0c5151ff77b7"
        },
        "item": {
          "id": "2615861a-a5d0-4020-935a-5c7c0817c256",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "50b10fe8-be2f-4eca-ba0a-30249a7606cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9291b518-ce59-4062-b4c2-923e5858dedd",
        "cursor": {
          "ref": "2e6a6528-f867-4dea-aff0-b8970a1702d9",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bbae2078-198c-458f-a28e-187b34ab663c"
        },
        "item": {
          "id": "9291b518-ce59-4062-b4c2-923e5858dedd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1f9bce17-b137-4db3-98e0-780f29b5a9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ee2ba9-8097-4d52-a82b-c9f1c25fcb31",
        "cursor": {
          "ref": "25e77c82-1c88-420f-8839-06a73efd19e9",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a15efdf2-180e-42f0-b02d-6e87f1b414e8"
        },
        "item": {
          "id": "a7ee2ba9-8097-4d52-a82b-c9f1c25fcb31",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ff6dfb5a-5c30-4de3-bf79-561d4e396a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9a8848-b376-4f42-a4f9-4c23e97b9eae",
        "cursor": {
          "ref": "93a8107e-9216-4c23-9d32-ece9406e8879",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d8502e8b-0aee-467c-88d1-c05aa12de8f8"
        },
        "item": {
          "id": "2c9a8848-b376-4f42-a4f9-4c23e97b9eae",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3a47c1ca-7a8f-4d05-a6f2-96ed1f22eeb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79a2b7d-799f-4246-b5f5-4d61ec23e084",
        "cursor": {
          "ref": "ca2bd8e2-2f57-47ca-81bb-344f33bfaee0",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a863760f-8ae9-432a-be8d-f3b7c6bb90de"
        },
        "item": {
          "id": "b79a2b7d-799f-4246-b5f5-4d61ec23e084",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "05ca86c6-a416-49dc-b778-230e8e011d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cbe083-b722-46db-afa6-0df59cc3d564",
        "cursor": {
          "ref": "51acc8c1-e802-4031-b484-cc6531ba7d8a",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "539d7aee-40f9-485a-b434-77912276efbe"
        },
        "item": {
          "id": "08cbe083-b722-46db-afa6-0df59cc3d564",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9add0e02-45cc-4f0d-afac-f820dd87be68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027e0b2e-d429-4f7f-a022-366db931b4fc",
        "cursor": {
          "ref": "365d86b8-a9a7-4d14-b70f-73fbb0bda468",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f9de35c7-bcc9-4edc-8928-be8462488356"
        },
        "item": {
          "id": "027e0b2e-d429-4f7f-a022-366db931b4fc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5057b32b-bd92-4342-bc38-951acfb834a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64c99af-9e3b-4f67-bff7-02de612e74f8",
        "cursor": {
          "ref": "a4f016c5-787f-4e21-8ae5-18ac2db8cfcd",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "afb84834-efe6-4330-a3b3-2746999f6f74"
        },
        "item": {
          "id": "b64c99af-9e3b-4f67-bff7-02de612e74f8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e54d44f4-fbba-4e35-98ca-c127e03da673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5465d9a9-7ec6-4778-b6aa-7936ecdec12c",
        "cursor": {
          "ref": "8d186e69-7f52-4729-8300-685f280e3306",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "35586467-481e-4c17-a7e2-e47d3258395e"
        },
        "item": {
          "id": "5465d9a9-7ec6-4778-b6aa-7936ecdec12c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e2f29c8c-6f54-4eed-86fc-1c2d1d269e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3a7048-3237-415f-aada-5e01f43e88ad",
        "cursor": {
          "ref": "006fa9b4-a7cd-44cb-a29c-5e5ac22a4389",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5f26d3d1-edd7-4bb2-b545-e6d31c52bc76"
        },
        "item": {
          "id": "ac3a7048-3237-415f-aada-5e01f43e88ad",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c32ae923-2dbe-4baa-9ca4-e55a364832bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909ef0c2-e101-41f8-9d38-b208ea90d93c",
        "cursor": {
          "ref": "ec08ff5f-a073-4deb-a624-90805ede8504",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "97574eb5-a981-42cf-a696-d5c3b1b5c9b3"
        },
        "item": {
          "id": "909ef0c2-e101-41f8-9d38-b208ea90d93c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5fc832a5-d9f5-41e9-a441-0e17061ed23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792ecec2-99af-40ca-b564-d44e84229adf",
        "cursor": {
          "ref": "25fb43bc-2e54-4e6b-a441-3a9673d30c3f",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "20f58153-00a0-4aad-9c12-cf8dd7ec656f"
        },
        "item": {
          "id": "792ecec2-99af-40ca-b564-d44e84229adf",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7ca21f20-aca7-4859-9c53-32707b4965b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae4a43a-6a07-4970-a880-e52384ef9019",
        "cursor": {
          "ref": "03134596-27c4-401a-9709-bf09c57f7f35",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "05befb30-2b40-4f65-8bc3-74ebd0b5f187"
        },
        "item": {
          "id": "2ae4a43a-6a07-4970-a880-e52384ef9019",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9615f35d-565a-4856-973c-fd23468824f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a242ee-23b0-4762-9561-e3a76240dd3f",
        "cursor": {
          "ref": "37db75b6-a1b7-4320-a3f2-4656bbd2a9f6",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ca7f71bb-4eee-4ad9-b317-3ebf2ed1cd89"
        },
        "item": {
          "id": "c0a242ee-23b0-4762-9561-e3a76240dd3f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7b1f00b0-228b-4b63-a8b9-df935c81fbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c63d1b-47ec-4532-972c-cf5238b0c19f",
        "cursor": {
          "ref": "cad39edf-3558-418c-b152-3e84ac0c80bc",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9f523ba4-3f51-4733-a80e-26d6b246a32b"
        },
        "item": {
          "id": "07c63d1b-47ec-4532-972c-cf5238b0c19f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "89a15483-97b6-477f-bf80-5a26eb423d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6392b8f8-4e1f-4c8a-baa4-01302e9a2c72",
        "cursor": {
          "ref": "cbe8a6c6-a0b6-4a9a-ac9e-f00057001314",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "63e08ad5-ef71-4276-9278-b8235cdd61b7"
        },
        "item": {
          "id": "6392b8f8-4e1f-4c8a-baa4-01302e9a2c72",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6f20ecc9-0d37-4a7e-8c51-833d9186594b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9923134-0569-4b02-b8d5-30db2909284d",
        "cursor": {
          "ref": "bb8ca1e1-aa57-4444-9944-5d9e8723510c",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ddb7a9ed-a123-45c7-91dc-a7965943fe91"
        },
        "item": {
          "id": "e9923134-0569-4b02-b8d5-30db2909284d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "becb3ac2-65da-4c6e-a263-7a83699c7585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e5cb9f-a7fc-42c4-9a6c-3aab27b62390",
        "cursor": {
          "ref": "addec1c8-ce84-41bf-9807-4c4b66fa2f3a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c0672868-0c6c-48f3-82b5-a0d64f9b53e0"
        },
        "item": {
          "id": "f6e5cb9f-a7fc-42c4-9a6c-3aab27b62390",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b2eb90f6-033f-4fe6-83f2-e7cd1aa85b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69cdc06-6108-4e63-92cb-e0fcde1e83a1",
        "cursor": {
          "ref": "9bc4b7e1-d523-4bb0-8355-9977e54062e8",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "126070cf-c297-418c-826e-6b7536ecf459"
        },
        "item": {
          "id": "f69cdc06-6108-4e63-92cb-e0fcde1e83a1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "69c9a44b-58f6-488f-814f-140603f30c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e5a48f-fc39-45f9-833b-cd54b77c5ed6",
        "cursor": {
          "ref": "d58977b8-ddea-441b-b58d-785bd329c06c",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3113222d-4e76-440e-b74e-f17c0b14806a"
        },
        "item": {
          "id": "57e5a48f-fc39-45f9-833b-cd54b77c5ed6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4dd325ea-9b18-4088-954f-71749601224e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b80560-77f8-4082-8673-3e1afdf47312",
        "cursor": {
          "ref": "ea7f55f2-4512-40a1-a467-d093bdcd52c0",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cb40df2f-85d4-423d-bf41-4b58ec1cffaa"
        },
        "item": {
          "id": "a1b80560-77f8-4082-8673-3e1afdf47312",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "19b0d562-8a3b-48c1-b0d6-207674157b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97164fcf-757c-4e7d-82d4-20208512a282",
        "cursor": {
          "ref": "7ab0bf47-ffa2-4480-8906-bd2b8684f785",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "04a1ecdc-5e33-41e3-8114-29d24e51a0e1"
        },
        "item": {
          "id": "97164fcf-757c-4e7d-82d4-20208512a282",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c6a78227-4845-43c0-8bf0-c520649764c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d789a67-1b71-4a5a-9749-d003a084b8e1",
        "cursor": {
          "ref": "b1a2d04a-38c6-4c6a-ad8c-55da9924e8c1",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "079794b8-738e-46b9-90c6-5c75715d0089"
        },
        "item": {
          "id": "9d789a67-1b71-4a5a-9749-d003a084b8e1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "780eefbb-e664-48c2-b488-42cb03fd153e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5f7abc-dfe4-4936-be5e-5f4e54779d5f",
        "cursor": {
          "ref": "88f7199f-5186-465b-8c16-02c162b3338f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2d2681de-1954-49ea-a63d-74d9cf6142f7"
        },
        "item": {
          "id": "5e5f7abc-dfe4-4936-be5e-5f4e54779d5f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "53b891ee-fcda-4e90-97cf-9134a64f437c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993127c0-76de-4886-ae70-1fd4f28414d0",
        "cursor": {
          "ref": "50ba6dfb-8143-49ca-a1a0-bfa6445215ac",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "594dcb4a-719f-48e2-a213-af8b14cd525a"
        },
        "item": {
          "id": "993127c0-76de-4886-ae70-1fd4f28414d0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ddb528ce-5a8c-4401-b109-c1f204ae4e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5910a6-7037-49f6-a796-8008f379d496",
        "cursor": {
          "ref": "7e1c7c1b-a38e-419e-b30c-f72f5fe83aa9",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f8695a8d-4511-4b82-a8f9-11fabac68720"
        },
        "item": {
          "id": "df5910a6-7037-49f6-a796-8008f379d496",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f5220b8e-8457-4fce-ac6c-62aacd06b575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db40a034-4769-4672-ae0e-39d07b1c7f00",
        "cursor": {
          "ref": "ff4377bf-8733-4d5d-bc20-8b8870b30313",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "df179c21-b17a-421c-8dfa-1549ff71a4c6"
        },
        "item": {
          "id": "db40a034-4769-4672-ae0e-39d07b1c7f00",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ca6c0461-2c77-4bc6-aeaf-eb3207e93bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02de3b5a-59c6-457e-8021-2c6c4158f57f",
        "cursor": {
          "ref": "b4cd7c52-2080-4602-8674-84ee523c433d",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "731bec27-9c79-4ae3-8b2c-ca91630085d9"
        },
        "item": {
          "id": "02de3b5a-59c6-457e-8021-2c6c4158f57f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ed15198e-6cd4-402a-8ca1-5e967d7e8200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086c8875-afdb-4dbb-a4ff-346cf10dac1d",
        "cursor": {
          "ref": "2aaae22b-607c-46d0-b8b1-7c621d8a3601",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "407f24e1-4b40-4a00-ad3a-db1f93b1e605"
        },
        "item": {
          "id": "086c8875-afdb-4dbb-a4ff-346cf10dac1d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d9793186-a756-42b5-b4d3-67937b45e845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc10485-ff83-49a7-9fb7-c579edc0a95f",
        "cursor": {
          "ref": "496007f4-31c8-471f-8f3a-4ee70c865172",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6faf8ee4-525a-45ab-9235-1d0bb579a6d7"
        },
        "item": {
          "id": "8cc10485-ff83-49a7-9fb7-c579edc0a95f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e6782af8-9c7c-44cc-9e28-4f3ca63f4916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86addcb-df24-4ac6-bade-6174004617eb",
        "cursor": {
          "ref": "868e799b-9d7f-4a1e-af5a-88d96a78a5fc",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "aa46c98a-5228-43b2-8eff-cddedebe9b93"
        },
        "item": {
          "id": "c86addcb-df24-4ac6-bade-6174004617eb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "728d24ba-06ec-4dea-9c4c-2236cbd57d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a5b49e-bece-447a-b841-90b131707d4e",
        "cursor": {
          "ref": "82ee4f1d-423e-450e-a7d8-9c5e74d4401f",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "07a451a5-1ea6-4951-86df-9d1768f1cb4e"
        },
        "item": {
          "id": "b5a5b49e-bece-447a-b841-90b131707d4e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e4e37d46-566f-4fa2-8d98-3a44590b742f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050b0bd1-28a7-4264-802d-2fa8b32c4697",
        "cursor": {
          "ref": "5572b487-5761-4c38-89be-1b5f8fdcfbac",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ece58abe-01ac-414f-8cd2-e19019a29ed4"
        },
        "item": {
          "id": "050b0bd1-28a7-4264-802d-2fa8b32c4697",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "364b929a-dc2e-4f9a-8b59-2b1bcdeb9487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e60ef13-9a5b-45c1-b274-a2e365c30dcb",
        "cursor": {
          "ref": "08b875db-9a61-4130-804b-89f3784c5801",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5dac3e7d-7e92-4509-9fb5-4fa594bb8dfe"
        },
        "item": {
          "id": "6e60ef13-9a5b-45c1-b274-a2e365c30dcb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1b06df9e-8ba8-464d-81d6-f1e28b0adbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e2dd5f-a26c-422d-ba16-efac66e2e5be",
        "cursor": {
          "ref": "1e8b23d8-8d06-49bc-bf35-5385300c3d43",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2d159702-d063-47df-a412-e626f9fe5baf"
        },
        "item": {
          "id": "c4e2dd5f-a26c-422d-ba16-efac66e2e5be",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "85347028-d050-4cef-8d72-093c22e1bab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d629da1-8ea0-46b7-81ca-a0a42388c5ff",
        "cursor": {
          "ref": "c7ceb0ad-92ab-4a23-b307-da4fbf64dbde",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "662aa836-b38f-41f3-925a-56e46e718174"
        },
        "item": {
          "id": "3d629da1-8ea0-46b7-81ca-a0a42388c5ff",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "58c13c2d-c958-4fa9-9457-2dcc95caeed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81dfb259-82fb-4691-8c7a-842ad31514f4",
        "cursor": {
          "ref": "8484a5f3-e714-44d5-883a-b48a2f61473a",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "41a18863-8186-406e-91bf-97c33be76a97"
        },
        "item": {
          "id": "81dfb259-82fb-4691-8c7a-842ad31514f4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "30525879-0e18-4a28-9d2e-945406cacf51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2562dd3-f35b-4186-8f81-c36fd95a78dd",
        "cursor": {
          "ref": "e658005f-d410-4fa7-921e-da4413ca5628",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "727878aa-98ed-4409-897d-f0691cad8b4b"
        },
        "item": {
          "id": "e2562dd3-f35b-4186-8f81-c36fd95a78dd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4cc79507-3d60-407a-921e-9e6bc86f42f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c647801c-4de0-421d-a9c9-ecdb4cde785b",
        "cursor": {
          "ref": "a7890930-cd68-4a56-a768-905996577c87",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "01b64e6d-5b1d-4d1f-90e9-32f7ac98c975"
        },
        "item": {
          "id": "c647801c-4de0-421d-a9c9-ecdb4cde785b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e371a920-ca75-409f-b50d-7e306e37c32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe13c4f0-b9a3-46b5-8e2c-c3914a27410a",
        "cursor": {
          "ref": "5bf51095-2abc-4830-b9ef-abc6a2be4a3a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "981fff0a-c614-4f1e-a4f0-d965929d67ff"
        },
        "item": {
          "id": "fe13c4f0-b9a3-46b5-8e2c-c3914a27410a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "caeb266f-7eee-4232-ba7b-0d600cb2c77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613fd65d-008a-41a2-b627-5d1b70ea4706",
        "cursor": {
          "ref": "ae3a64bc-756b-4828-9674-4fc42e428eb3",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5e0d1466-deca-49ad-8ecb-4d67b74a6c83"
        },
        "item": {
          "id": "613fd65d-008a-41a2-b627-5d1b70ea4706",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "eaaf0aa0-a0e5-4c50-a487-70fa1869ead1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95155478-3931-4714-ab8d-bc6ad48d256d",
        "cursor": {
          "ref": "e9abd69c-f861-4470-98e8-cdac7503622d",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a8ef3ce1-5836-4421-b275-920d1370b9e8"
        },
        "item": {
          "id": "95155478-3931-4714-ab8d-bc6ad48d256d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8707d5e1-1e0c-4cac-ad25-d78711697455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ee6d84-c988-48a3-8e94-4a34a83bc1c8",
        "cursor": {
          "ref": "f43d768e-d9e6-4e36-9c01-97be1b02aac6",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "68d8c018-a58c-41a8-91e9-5f080be8f2b8"
        },
        "item": {
          "id": "93ee6d84-c988-48a3-8e94-4a34a83bc1c8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "46e30966-403e-4e6d-a5e3-be9f77645f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25193325-67a0-4501-98bd-b1fd74c09543",
        "cursor": {
          "ref": "69b8f619-f4d1-470f-882f-88ecaf692938",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "23db6fd5-4276-4f4b-89dd-eb022cbb360b"
        },
        "item": {
          "id": "25193325-67a0-4501-98bd-b1fd74c09543",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e91b6214-8a49-4208-8248-7abd241b45a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea7bcde-66c0-40bb-b9cc-090b449f3a0a",
        "cursor": {
          "ref": "261c62a7-265c-46e0-8d17-67176fc4cee6",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d6418122-c5e1-439f-acc0-44d11ba79d61"
        },
        "item": {
          "id": "aea7bcde-66c0-40bb-b9cc-090b449f3a0a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "47a88f85-6edf-4ea1-82e1-e4cdcea71bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa692935-4c47-4f0a-8af1-0d383e019c19",
        "cursor": {
          "ref": "c944e5d3-d307-4a94-960b-f539cdc15d2a",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e7ef54e2-9b02-40f9-a203-c8b795f71729"
        },
        "item": {
          "id": "fa692935-4c47-4f0a-8af1-0d383e019c19",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ec01f5a8-14d8-486d-ab57-735e7d82a998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a0ff05-c2c8-446e-adda-c4a17cc61d64",
        "cursor": {
          "ref": "ae403c81-9e0d-4dde-a343-acbdd9e29918",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "51abdab8-5cbe-47ef-8b44-5c0305107f34"
        },
        "item": {
          "id": "d2a0ff05-c2c8-446e-adda-c4a17cc61d64",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2ebae6f4-4e5b-4f86-8ce3-4d18dd50aa5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7574d131-db4d-476a-803b-1d7d6035af62",
        "cursor": {
          "ref": "b4b975e8-315f-4256-8187-160708af62b6",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "986003e0-b5a1-4db0-b49f-e08c52923b72"
        },
        "item": {
          "id": "7574d131-db4d-476a-803b-1d7d6035af62",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "132c0b04-9db0-4e7f-bf4e-aa8b277daa2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb8e8d4-7f3e-4799-b289-91eef6d22185",
        "cursor": {
          "ref": "c33102d3-5a51-49ec-afca-44ce805f4dbc",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "525263c0-8e20-4f1d-8ed0-e29d23f096ea"
        },
        "item": {
          "id": "ffb8e8d4-7f3e-4799-b289-91eef6d22185",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "23825adc-515b-42f0-88d8-2609d99e65d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e62ee1e-2d79-47a9-811e-28d3ba1f553a",
        "cursor": {
          "ref": "5ac05e4a-a00e-4f40-ab64-490549d32e1e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f06fe9a4-f6ee-4779-93a2-7e0659b1f86e"
        },
        "item": {
          "id": "2e62ee1e-2d79-47a9-811e-28d3ba1f553a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ca57ff18-43e6-46a8-b531-31228867c9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9532fc2e-6b3e-455e-9bdc-7dd2a927ef29",
        "cursor": {
          "ref": "3eb83f86-ba92-48a1-8d4e-0abc19388487",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5db900bf-4d40-4ade-b9c1-0b34e96f9385"
        },
        "item": {
          "id": "9532fc2e-6b3e-455e-9bdc-7dd2a927ef29",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b330164a-ca5e-4589-9e9c-2c5e264e8bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac067714-206c-4c8c-832a-6bac7e928803",
        "cursor": {
          "ref": "bd8fb18e-02d4-430f-b610-4a7e8342c3c5",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fb5fe170-8ef0-4982-93ec-dde71becc36f"
        },
        "item": {
          "id": "ac067714-206c-4c8c-832a-6bac7e928803",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7f9d2656-d29b-417a-b51d-3eed5c07f195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588b8ed2-2057-40c0-a708-172ca0f2d1c7",
        "cursor": {
          "ref": "3588eae8-4bc6-47f6-b6ab-5258416e5518",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e9c4c2b5-8eb4-4281-8be0-a12c34ba379d"
        },
        "item": {
          "id": "588b8ed2-2057-40c0-a708-172ca0f2d1c7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f9fc4d25-e31e-478b-af63-d4c3f5bb7540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84482a6-5ab7-4c5a-ab2c-d5a837bcfebe",
        "cursor": {
          "ref": "1e935018-c123-4162-9ab1-bc5762ec8ac2",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7dfa55e2-02f3-47f7-ab4f-685635d53a32"
        },
        "item": {
          "id": "c84482a6-5ab7-4c5a-ab2c-d5a837bcfebe",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "967f1cb6-b9f4-4572-85b6-2a3ffe43e36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200fec23-1cd5-4835-811e-c9fb6f19c39b",
        "cursor": {
          "ref": "a6b3b533-83d6-42f4-97c6-55f49e21739a",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4382d6b6-d0e3-437b-aabd-9ff82d571592"
        },
        "item": {
          "id": "200fec23-1cd5-4835-811e-c9fb6f19c39b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "84911ca6-bad8-4153-b0b2-b93458113cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0e60cc-4571-41fa-aa55-efaf86e0d558",
        "cursor": {
          "ref": "bc78fb88-c675-4c87-8f3d-7eb641b563d2",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c524a8a4-9729-4b67-9997-7615d45aad72"
        },
        "item": {
          "id": "ea0e60cc-4571-41fa-aa55-efaf86e0d558",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "76a92f3b-eb7e-4561-bc2b-9e3a2565a2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82aff04b-a49b-43be-b704-1219da2308eb",
        "cursor": {
          "ref": "496005b6-b40d-4a99-91f4-ea41c32e3653",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "de866a8f-ab2a-47d6-8dbc-36984ad215e2"
        },
        "item": {
          "id": "82aff04b-a49b-43be-b704-1219da2308eb",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7b231882-697b-41d0-826b-6b0bbfb5b17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04b5ab9-e27e-40af-b462-55f723606e21",
        "cursor": {
          "ref": "0b01de31-cdd2-4db3-ad3f-8a53a7f8c0c0",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4e9b901c-373a-46c4-930f-450188f24869"
        },
        "item": {
          "id": "e04b5ab9-e27e-40af-b462-55f723606e21",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1e9fa1bb-5087-4a5b-85bf-bed7b6ba23af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530f16f8-e490-4437-9d2e-82010d0984cb",
        "cursor": {
          "ref": "c5f757e5-6262-47bf-9b1f-b633e6e6102a",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "31b4b86e-7ee9-4bec-8c29-fbff7987076f"
        },
        "item": {
          "id": "530f16f8-e490-4437-9d2e-82010d0984cb",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "727a465a-638a-4a31-bd3f-3a3b0e1e92fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916d9937-4d4d-451e-8fef-aab71443d23b",
        "cursor": {
          "ref": "b11c97e5-cad8-49ea-b731-0936fed7a6f7",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6b9cf2a7-0783-472c-aefd-236015fce725"
        },
        "item": {
          "id": "916d9937-4d4d-451e-8fef-aab71443d23b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6595fb25-8451-4237-9615-64fbcce6e462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e6a11d-be5c-48bc-9bc7-97020c0eebc7",
        "cursor": {
          "ref": "1d674f32-c1fc-453e-8f66-37b3dd7ac013",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bcdc4a3f-68db-4781-95e3-1e16dabb101e"
        },
        "item": {
          "id": "63e6a11d-be5c-48bc-9bc7-97020c0eebc7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "839da21a-e573-442f-bb83-5907c56fcd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c29c93a-48e6-4208-9616-a2e3b827e9f1",
        "cursor": {
          "ref": "28f9aa69-ebba-4729-8695-40f2ca9f0f0e",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "28c3732c-12f0-4a36-bbe2-80594c7ae478"
        },
        "item": {
          "id": "3c29c93a-48e6-4208-9616-a2e3b827e9f1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0fc2f744-3342-4f3a-9e60-61dbc09cb112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0dbdf45-0090-46cd-8126-e2d8f57c53bd",
        "cursor": {
          "ref": "37905496-49dc-44d2-a1a5-b355b03a3d71",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c27a2366-7448-4de9-bb8f-a5e3fa1d611e"
        },
        "item": {
          "id": "d0dbdf45-0090-46cd-8126-e2d8f57c53bd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "175e8177-00fa-4afd-b42d-13655ef6303d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a433754a-8b86-4815-8422-018409e7491e",
        "cursor": {
          "ref": "35964910-4b72-43b1-9dd2-e9f613c4f46b",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "da4d5f1d-f79a-4b61-88bd-791b3b24842c"
        },
        "item": {
          "id": "a433754a-8b86-4815-8422-018409e7491e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "725026cf-eea2-4c00-9b8f-0f590a826435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f6bf41-1f46-4db3-a271-0c03a4388a5c",
        "cursor": {
          "ref": "4cf372ae-311a-4051-b08c-cfd7360c430d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0bcc5ea1-de57-4df5-b7f4-11aa57c14ea9"
        },
        "item": {
          "id": "42f6bf41-1f46-4db3-a271-0c03a4388a5c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "386f4012-e3f1-4c65-995b-04de63198315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7403ba-2051-4175-903c-6b5d6e224fb7",
        "cursor": {
          "ref": "2c668107-1c8e-480f-9334-5061c55514ec",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a97fdd69-38b1-44a9-a3e8-b071ef07688f"
        },
        "item": {
          "id": "7e7403ba-2051-4175-903c-6b5d6e224fb7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ffd68b44-2755-4322-8d09-7a0457e869b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b08a72e-875e-47ed-aba2-7aa89e3c9991",
        "cursor": {
          "ref": "5f01294f-f21e-4d7d-bf5c-ce4ac5ad0ff6",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e9358ada-1bd4-43e9-b340-9c7af7e31240"
        },
        "item": {
          "id": "5b08a72e-875e-47ed-aba2-7aa89e3c9991",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "25e7e71f-8af5-4501-af67-8df3f762c9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7555cba-3c30-4259-ac3f-0166f736d605",
        "cursor": {
          "ref": "763c14ab-8431-44ef-b416-80ec46f672e1",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "aad47404-6e46-464d-ac46-0da3144683d0"
        },
        "item": {
          "id": "e7555cba-3c30-4259-ac3f-0166f736d605",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "52795e5d-27d2-491b-8590-3e22db373902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e5342b-12f6-4cf7-9678-392f9f02af92",
        "cursor": {
          "ref": "539411ba-3b52-4026-9084-cf2d491fd5bb",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "94093b14-cf69-4286-b12c-396505a96aa7"
        },
        "item": {
          "id": "51e5342b-12f6-4cf7-9678-392f9f02af92",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6cd87cb0-5d75-46ca-ae94-d621d98102da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd191273-676e-4163-bc88-944e8e63fc1b",
        "cursor": {
          "ref": "2f1b0a05-87b0-4f23-8fa2-59fda8c263a7",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "59daf361-10e2-4911-a466-35cb7839f7da"
        },
        "item": {
          "id": "cd191273-676e-4163-bc88-944e8e63fc1b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f664d474-f800-4d78-ae9f-781267f2fe5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8238a5-0e02-401c-9f7b-6f82ff2574e0",
        "cursor": {
          "ref": "93c63547-2d24-41a4-bf1e-e70a45e92ce3",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d7951b14-3738-4a62-a806-0ae800fbcc41"
        },
        "item": {
          "id": "cc8238a5-0e02-401c-9f7b-6f82ff2574e0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "58aa5965-d6a5-4c75-b531-023f964756e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a453bbd-f99b-42ec-a3e4-581974af31a5",
        "cursor": {
          "ref": "90c4749f-8da5-4288-92e2-65c676d1e3a2",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "86ffbead-3da2-44c0-ab01-610c11ad28f1"
        },
        "item": {
          "id": "3a453bbd-f99b-42ec-a3e4-581974af31a5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "637c64be-86e8-4208-a934-31690b39c15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bb3ae6-8e22-4b00-a4c5-d7e85a52a761",
        "cursor": {
          "ref": "86774d34-b108-4795-969d-a358b13976f5",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b33b59fc-70bc-43e2-88ac-9c81d193c58e"
        },
        "item": {
          "id": "60bb3ae6-8e22-4b00-a4c5-d7e85a52a761",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1001f28c-1d64-471a-b8f9-1b547618cf9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c0dbf3-2421-46fa-ba06-582cd25a006d",
        "cursor": {
          "ref": "c695051f-231f-472f-b476-b1fa77e1c877",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b5244835-ab32-481d-94f5-95c10525f373"
        },
        "item": {
          "id": "19c0dbf3-2421-46fa-ba06-582cd25a006d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d2067c26-04cd-49e2-aa19-0102c4d2a974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908bd314-c212-4c81-9abd-c16a7609b4f7",
        "cursor": {
          "ref": "7849adbc-fe97-452e-8cb0-5f5aa87e3252",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "fc8165b2-3016-4c67-b889-bd005ab6e8dd"
        },
        "item": {
          "id": "908bd314-c212-4c81-9abd-c16a7609b4f7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5b510553-787b-41fc-b24c-6d52c7ee0cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db998f7-6558-4648-b34a-921314af44d9",
        "cursor": {
          "ref": "b9651e01-b2ef-4f0a-9d3c-56e8f3afbbd7",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d7e8e115-ec7e-4955-ba00-11b8fc95f440"
        },
        "item": {
          "id": "8db998f7-6558-4648-b34a-921314af44d9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5317c7c3-6a62-4140-af30-06002545716a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9786edef-78a7-4b67-adab-8248d1ceb56a",
        "cursor": {
          "ref": "d5697a1a-af12-4f23-a1ae-8d97b596a817",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2b344da0-a802-4c0d-abdf-25e7fabe880b"
        },
        "item": {
          "id": "9786edef-78a7-4b67-adab-8248d1ceb56a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b548469b-2f95-401a-80c5-51a8061341f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906d026d-2f7c-4210-869d-4c5b9c376b0f",
        "cursor": {
          "ref": "846292a8-01c3-4641-9197-7f861215716e",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6dd648a5-f994-46c1-b938-b12fa06f0ec3"
        },
        "item": {
          "id": "906d026d-2f7c-4210-869d-4c5b9c376b0f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3a1dafc5-3661-40ea-b49c-93598cdffe15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6bf54c-5b7d-478e-98fa-ad3bb8bb1b11",
        "cursor": {
          "ref": "4f7cc494-c9e9-4043-be9c-463eb4dd1f1d",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "77915422-5e78-4ca8-8dac-99b53d14fe3d"
        },
        "item": {
          "id": "dc6bf54c-5b7d-478e-98fa-ad3bb8bb1b11",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7ea50dd6-c2e1-4836-a290-bea00fb7e2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4c4805-d1d2-472c-aa6e-7fc3ce0ae360",
        "cursor": {
          "ref": "529b24b9-c6ab-4aa7-bc75-e332b4c44c25",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "52420fb4-7158-441f-9ffc-8f52d2724602"
        },
        "item": {
          "id": "7c4c4805-d1d2-472c-aa6e-7fc3ce0ae360",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f4df1c1d-14aa-4b6c-9511-ee49fc648d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5409f8-cec0-492e-b602-63f7e42a17c9",
        "cursor": {
          "ref": "de5cd140-5a2d-46d4-bc8c-a767b5dc4bfc",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ccb5659d-d3c9-4755-9ef9-9606af3ff697"
        },
        "item": {
          "id": "0c5409f8-cec0-492e-b602-63f7e42a17c9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9ddaac02-a347-4ba3-b66a-ecb5343c3352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3621b92f-04b1-4d47-80ca-c9c0e3550602",
        "cursor": {
          "ref": "db939440-4d28-4a87-a93d-a411735a3a51",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6cd25dcb-243f-41bc-bacd-88d34dd65d29"
        },
        "item": {
          "id": "3621b92f-04b1-4d47-80ca-c9c0e3550602",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5ac55872-c794-4bf6-a49a-462e043abd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16830ed-e8b2-4cac-b34d-93fc8c15b4f1",
        "cursor": {
          "ref": "45d286ad-e8e1-4219-b2a9-602b3d4242a0",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b103eacd-9b3d-4039-9fdc-4ba9342af910"
        },
        "item": {
          "id": "b16830ed-e8b2-4cac-b34d-93fc8c15b4f1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f0759fe8-7b03-4550-98c5-10d50483d6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dae833d-1610-4f20-b729-3e38c4585065",
        "cursor": {
          "ref": "b8c82495-8bed-4bc1-8c54-fd3b94b35658",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "dd9b2df3-bfc7-4c62-a63c-17d12396b391"
        },
        "item": {
          "id": "1dae833d-1610-4f20-b729-3e38c4585065",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9aff5a63-e03c-458f-9b34-127a2f290e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f78f2b-fe26-4a8e-9012-bd510ede4e30",
        "cursor": {
          "ref": "a78766c1-be24-49bc-bd1c-945744bb3f1a",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c603775e-0108-4975-a9a4-f6e0d35f3c68"
        },
        "item": {
          "id": "51f78f2b-fe26-4a8e-9012-bd510ede4e30",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e00bb275-0744-4fec-9ea5-8291c9423d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248e9e39-5953-4003-a42c-4cc835ba48f1",
        "cursor": {
          "ref": "ad29dfd8-dd9a-4f8d-8b6e-e4dd5e5bf5a2",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2b2b9af9-cde1-4a2f-b68b-a362c706e23a"
        },
        "item": {
          "id": "248e9e39-5953-4003-a42c-4cc835ba48f1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "49817344-da2f-44c3-b221-b32765c0c5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629819ef-2312-4165-966e-243cfc549a70",
        "cursor": {
          "ref": "700de1d1-ef05-4971-bc70-eb8ed568c7b3",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4bbcd309-2b7b-4836-849a-a63053825e13"
        },
        "item": {
          "id": "629819ef-2312-4165-966e-243cfc549a70",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5a82d213-d4df-4d5f-965f-9b08562bca5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495fa250-095d-4d1c-b3f2-a9ab76eb4db4",
        "cursor": {
          "ref": "94e74327-e53c-4472-b0bc-f7ff45936561",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1244db30-3254-413c-8165-d3ed1ea614ae"
        },
        "item": {
          "id": "495fa250-095d-4d1c-b3f2-a9ab76eb4db4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "040ebaf0-fa3b-4d1a-9f8c-9ef1c0475614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2f7c84-1825-4d24-aa13-058924fd0e8f",
        "cursor": {
          "ref": "0372640e-d381-4699-81f3-3b214b4588cd",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "db8c795e-4d68-4d99-9bf7-0c781af8d4bc"
        },
        "item": {
          "id": "0a2f7c84-1825-4d24-aa13-058924fd0e8f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c5111f7d-f9c5-49cd-9db1-8631942ae6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665c913a-5bd9-4f9b-8f0f-47539dbb9848",
        "cursor": {
          "ref": "aa8a2541-cefd-46f9-b661-040840a140e9",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e7f318b0-670b-465f-a318-62b85b6aab53"
        },
        "item": {
          "id": "665c913a-5bd9-4f9b-8f0f-47539dbb9848",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "23ecb0f7-240f-4bab-bbaa-ebeea07d2c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db975ad4-6ab6-42a1-8b53-c2979e467259",
        "cursor": {
          "ref": "926351ce-f3ec-4434-9939-d409effea077",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "174919e3-9f78-4b7b-98b2-3de8e857c9a6"
        },
        "item": {
          "id": "db975ad4-6ab6-42a1-8b53-c2979e467259",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f2dbd99a-0813-4cee-bac6-344aa2025b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd86203-bf6c-4bdc-9517-3871d9d18842",
        "cursor": {
          "ref": "903d920d-95a7-4dc8-9e10-9854d32ca3c4",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bb53d7d8-38a8-4d9d-b150-b57fcf46769d"
        },
        "item": {
          "id": "9bd86203-bf6c-4bdc-9517-3871d9d18842",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ff78b37b-36d5-4a88-94d1-cb5a0867fad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c2a106-b968-469d-910c-07e00ec0c1d6",
        "cursor": {
          "ref": "b1f3b793-20e5-4d51-b9f5-ac0880e8de38",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "47b2b70b-4402-40bc-8913-521e8f0feb0a"
        },
        "item": {
          "id": "36c2a106-b968-469d-910c-07e00ec0c1d6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9025606d-34d3-4a49-b1d8-970864e24102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ead3204-250c-43eb-9084-4fce8ded4487",
        "cursor": {
          "ref": "e5a3300d-d377-48d1-8d26-7c9e8bbdb881",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "591f25dc-66c8-4f2e-9b9a-2b3cc3ba8255"
        },
        "item": {
          "id": "9ead3204-250c-43eb-9084-4fce8ded4487",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c7fe5238-d9aa-4113-a937-40c04883ea3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd1b3a3-e54f-418a-a091-c94d35e6a493",
        "cursor": {
          "ref": "b615c899-4b3d-4d76-8f63-2f5902a78487",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4fb81eb5-fe62-4381-bc41-26d6c4ece987"
        },
        "item": {
          "id": "abd1b3a3-e54f-418a-a091-c94d35e6a493",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5c62cc18-6f64-41d7-8207-d6e929f018b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c968fa30-ec9a-446f-96d4-58f24b22188e",
        "cursor": {
          "ref": "416a9a4a-7220-445a-920f-6522e44b77b1",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "513022e1-6ffd-46fb-a54b-de12fcda5833"
        },
        "item": {
          "id": "c968fa30-ec9a-446f-96d4-58f24b22188e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "70bfb1fc-4893-4f66-887a-e0767eded94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f97c50-3128-4100-9555-29cac9e13f31",
        "cursor": {
          "ref": "cffa5440-e72e-47e1-82b4-3373d1f5f005",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "da5dcf98-27fc-4edc-9c7b-c7499653094f"
        },
        "item": {
          "id": "a9f97c50-3128-4100-9555-29cac9e13f31",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cffd21b1-9b4b-42da-b2c0-d689bc0273cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8d20a8-88f7-40b8-9ef5-c0cf1e6351de",
        "cursor": {
          "ref": "b7c3f9f9-2946-4228-81d8-d0a4d658e057",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4adcd30b-eafa-426e-906d-76da0f6bc359"
        },
        "item": {
          "id": "8d8d20a8-88f7-40b8-9ef5-c0cf1e6351de",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5ec51d53-d81d-45d1-bd2c-a9c439952e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3a1056-203c-408f-be9d-dad178dbc1af",
        "cursor": {
          "ref": "654c2cc2-b2b2-4272-96f7-a44604995bdb",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6f926841-f499-40c2-85f7-59b8a418687d"
        },
        "item": {
          "id": "ea3a1056-203c-408f-be9d-dad178dbc1af",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "81b03e87-39e4-42bc-baaf-273509c0545d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968f3584-1c93-4f9e-8335-35a78c6df2ba",
        "cursor": {
          "ref": "d1b03294-355a-4112-832f-b29f9084bf42",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ef074218-2e53-4e6b-89ee-6f3764f24ce1"
        },
        "item": {
          "id": "968f3584-1c93-4f9e-8335-35a78c6df2ba",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "35639bbf-c41f-4db3-8d24-620438671082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da456764-4e13-4452-b7f1-9417647d2622",
        "cursor": {
          "ref": "39440554-a595-438d-b6a8-be62d0510074",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "dfc57d97-d39f-42ba-ac39-c0478b37933e"
        },
        "item": {
          "id": "da456764-4e13-4452-b7f1-9417647d2622",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3d18f8a9-fbb8-4208-815f-60c0dd61d7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347e8df1-0fe8-43a0-b8b5-210f047aa635",
        "cursor": {
          "ref": "d3a6f14e-829d-406e-ac89-b711811f2379",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1f95229a-9cb5-491b-bcb9-615b10514fdb"
        },
        "item": {
          "id": "347e8df1-0fe8-43a0-b8b5-210f047aa635",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5a307eaa-f434-4bef-bec3-916684a9a8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8874f14-d44a-4400-8bb4-68cf11f689e5",
        "cursor": {
          "ref": "b69fdb32-5dbc-4d34-9661-be402276e826",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "bfe95b86-ab80-4136-a55f-2df2825e691a"
        },
        "item": {
          "id": "f8874f14-d44a-4400-8bb4-68cf11f689e5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bbafe270-df0b-4cca-9311-daabb091bb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28299ed0-cb47-4f7e-adb0-9d02e4ac4553",
        "cursor": {
          "ref": "2425183c-4048-4d65-8a8f-d20f23e1d245",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b0fc3bbc-f241-4f5f-a145-dcad852e2b54"
        },
        "item": {
          "id": "28299ed0-cb47-4f7e-adb0-9d02e4ac4553",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1629e827-e15d-4352-8da7-5d7b97be1af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbf3564-a9bc-4db1-a776-7ad06345f74c",
        "cursor": {
          "ref": "e575fc13-37e9-4f33-93fb-20a56f3a16f8",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1d6ff38f-d0c1-4b9b-88f3-71daf43478ad"
        },
        "item": {
          "id": "fbbf3564-a9bc-4db1-a776-7ad06345f74c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7c1851d2-1efb-447d-b4f4-b18443b8f127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99f06ab-3c09-4c04-8b14-701bc55d3961",
        "cursor": {
          "ref": "46e7afd9-aaf0-4a48-aba8-fff358cbfc30",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "17fe898a-ac9c-4029-8d46-c2331bdd9ffe"
        },
        "item": {
          "id": "f99f06ab-3c09-4c04-8b14-701bc55d3961",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ea5df530-5914-4270-a6bb-50b13a3c1baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3075d43b-6797-44b6-9c4c-0b9968398744",
        "cursor": {
          "ref": "86490f3b-802d-46d1-96f3-86390a8fadd8",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "61e3790a-bb0b-4553-9883-c050be5fc186"
        },
        "item": {
          "id": "3075d43b-6797-44b6-9c4c-0b9968398744",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6f477d00-7834-4a5c-bf5c-049bb1c411f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e080c765-9281-491e-bbf2-0e50f193823b",
        "cursor": {
          "ref": "6d6ff5d8-4025-4b6d-8b94-ee2eec498442",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "22949f06-da95-4027-8454-010402692c54"
        },
        "item": {
          "id": "e080c765-9281-491e-bbf2-0e50f193823b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f26631b8-d85c-4858-9145-764fecaeb8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fc8af1-8864-46b7-9c9c-458181b68125",
        "cursor": {
          "ref": "98c26648-e5de-4e03-9e8c-de5db97a51ac",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "6a42dbe6-02d2-49a4-9df3-d16f505bb1cc"
        },
        "item": {
          "id": "47fc8af1-8864-46b7-9c9c-458181b68125",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c0680cb4-8a42-4a89-95c3-cdecfe53e13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb90689-7a4d-404c-a657-9b7bff6a23d5",
        "cursor": {
          "ref": "c5d9fbd6-9614-4c75-b6ae-cdf7c4d2b49f",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "eaee2503-2445-4daf-b06f-22f0fe618beb"
        },
        "item": {
          "id": "9cb90689-7a4d-404c-a657-9b7bff6a23d5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c21227af-1971-4ede-9aff-5183fa6ddf35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a7597d-d93d-4794-85e5-622b887f8372",
        "cursor": {
          "ref": "f44bcceb-beb4-47e7-95e4-7c896a18808d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6c3d34f1-0045-4bb6-b903-5763964086ce"
        },
        "item": {
          "id": "56a7597d-d93d-4794-85e5-622b887f8372",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "35fcf9a2-ce91-4ef9-b5d5-24cf353c9282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ef15b9-4014-4c57-b17f-723057466693",
        "cursor": {
          "ref": "5877f24c-bf6e-48c4-b174-d7c64ed0a8d7",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "23ce3104-e24f-447b-8d52-d8611555ddb0"
        },
        "item": {
          "id": "16ef15b9-4014-4c57-b17f-723057466693",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9957e02b-1c90-4634-ba60-7f8b87a8cd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785129fe-424c-4985-8dbc-78731dfa8bbd",
        "cursor": {
          "ref": "5968151f-1616-45d5-a3ed-4c9500a4d50d",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "aef6b0b5-0067-4026-a0d2-ccf1a437deb1"
        },
        "item": {
          "id": "785129fe-424c-4985-8dbc-78731dfa8bbd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "af0aaf90-2808-432f-a506-6548e54422a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b53ba81-52cb-4dc6-9338-6fbf74043a18",
        "cursor": {
          "ref": "f556305e-aaaa-48f3-bbb0-739da357becc",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "70f362ed-26ac-4ac4-b631-e8e32f1dd6fa"
        },
        "item": {
          "id": "6b53ba81-52cb-4dc6-9338-6fbf74043a18",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "cd78577e-7e53-44e5-9a5f-1ca9b6c6f1f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b3a33c-7e77-4f7f-8e55-e82fccf11269",
        "cursor": {
          "ref": "5f69616f-d973-43e2-9040-e23d00fc4f9f",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e26c22ec-e934-400c-aff7-37908931f7d1"
        },
        "item": {
          "id": "23b3a33c-7e77-4f7f-8e55-e82fccf11269",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cfec2196-0f6a-404b-b6f8-7437d516da17",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab93249f-6349-40d9-8299-720fa3a53202",
        "cursor": {
          "ref": "2c6109f8-50c9-494f-9e6c-369f304c7709",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9b54944f-c847-4417-8129-963c341b3940"
        },
        "item": {
          "id": "ab93249f-6349-40d9-8299-720fa3a53202",
          "name": "credentials_verify"
        },
        "response": {
          "id": "49621bda-10f0-4db0-8126-73a13ec23a9f",
          "status": "OK",
          "code": 200,
          "responseTime": 1331,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d54065-d1bd-45ce-abf7-1afa9ecad766",
        "cursor": {
          "ref": "19bbe7e9-b127-4adf-9b39-33e8f5d38583",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3f508991-4c86-487d-a1f3-6d2c2d48f2c3"
        },
        "item": {
          "id": "15d54065-d1bd-45ce-abf7-1afa9ecad766",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "542a5af0-6719-4fdb-ad90-48e64b7d80d4",
          "status": "OK",
          "code": 200,
          "responseTime": 1272,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12fe3d9-7095-4d23-9515-d4edfbfa4ed1",
        "cursor": {
          "ref": "c4f7f990-7467-431b-936c-2830988a7d67",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "65e86bb0-23f8-4ae7-b469-ec08a5f0c72d"
        },
        "item": {
          "id": "a12fe3d9-7095-4d23-9515-d4edfbfa4ed1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9f2e030c-b140-450d-a0c1-d8747959a6ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12fe3d9-7095-4d23-9515-d4edfbfa4ed1",
        "cursor": {
          "ref": "c4f7f990-7467-431b-936c-2830988a7d67",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "65e86bb0-23f8-4ae7-b469-ec08a5f0c72d"
        },
        "item": {
          "id": "a12fe3d9-7095-4d23-9515-d4edfbfa4ed1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9f2e030c-b140-450d-a0c1-d8747959a6ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e66c55-b8af-4071-a7fd-43eecf0077a2",
        "cursor": {
          "ref": "b3384dd7-590b-47d7-9a42-ba3b32d7ee75",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0c8d9033-8153-43cf-b15c-c23623433474"
        },
        "item": {
          "id": "02e66c55-b8af-4071-a7fd-43eecf0077a2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c2003f5a-e436-44bf-9384-e698174cb710",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4d9084-0e04-4f02-9509-6f01865967c0",
        "cursor": {
          "ref": "e8b5667c-79ad-4469-a6f2-0c1574851bcb",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ebd60b56-7e5d-41c2-80a8-ae6677dd2a53"
        },
        "item": {
          "id": "ba4d9084-0e04-4f02-9509-6f01865967c0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b6e83e14-8f6c-4716-99ad-6e28e065fff3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}