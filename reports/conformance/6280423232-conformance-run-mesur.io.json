{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "12952520-b874-4b83-9939-0e3ab1479da0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ca84cdc2-0506-4224-9d18-f0035cd56c7b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2aa6cc5d-b666-4690-add8-4e32d29d1440",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "05f32b6c-90e8-4c21-a339-2e2d78b902da"
                }
              }
            ]
          },
          {
            "id": "d0870640-2343-4d50-b320-452d3847a9df",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d6808aab-f156-40a8-8159-54e14d1b264d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d8a4827a-e017-4399-bd4e-9356f808381a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a58ecefd-6dd0-4237-b2fb-138d2244dfa6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b64cc908-92c8-42b5-b5ff-249775b4db82",
            "name": "Positive Testing",
            "item": [
              {
                "id": "988a3642-b29c-4147-9012-39e2be7332b2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aceb476b-2100-4a28-833e-afbda9049dc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "376240b4-df3f-4912-81f3-646092da4c51"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "895e797d-6c74-4aa9-82df-67ad22a760fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "06d0c3f2-9634-4bcc-b174-da9b32e8aa09"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1cc75cc1-0d25-41da-813c-3c2d92d25085",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "76554f6c-98fe-402a-80f4-19037f928b31"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "37186fdd-d0fb-44e0-b22d-7f1aee5c076c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "12eaee9e-912d-4f1c-b36d-3d462bfd5e65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b69daeb9-244c-4783-ada8-5f1b210bec16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7a09800-c083-44ef-bb46-074944e8b5b7"
            }
          }
        ]
      },
      {
        "id": "6f2c1b20-32ad-4660-9371-6a726afed020",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ee2cc427-0e8d-4292-851b-32743720f41b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6225239d-730b-495b-aafb-70f6ff7232ca",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8a25980d-d5f9-4efa-8457-9a2642fd1b45",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cef87d2-dc2b-4197-ae95-f2a07c167e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58a9da4f-cac0-4a8f-a5bf-7a59c0620771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51305cb5-ff26-49a6-b821-2fe926f69421",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43126e4c-5a03-4767-bc4d-375246efb528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "482e91a4-db16-4ce3-a54b-d8507f75356a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b05c3d3-905f-4757-9ee3-dd9d1ba51898",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1153ced6-3063-4229-ae20-060cd5c65e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7bbb84b0-ea71-4c9c-952f-ae37b424c450"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "973b6531-adc9-4b64-81d8-26bb643533aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04aa3805-aedf-4d84-9355-98734447bbb7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcabb7f-92bd-4734-9cc7-dc1c94b1d92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91999d3a-86d5-4dc4-81c7-8752d49521a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82a2ea0-4bec-44be-a6b1-8813e4e6d4a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d1e357-58bf-40dd-88f3-a3d4129e99b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f8dc525e-0137-4f63-af94-aa53fe49f5b1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d4e9de79-a6c0-4c90-81bd-f0f51884a93e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb106624-e049-4401-aa74-1fd2b672ca58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f63414c1-432b-4ebb-85ce-b91fff836e7b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ae052a7-fdb2-4654-bbb1-761b885e3c35",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "afc7fa6d-42ae-467c-b8c8-11d8e1f8e1fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7473037-71e0-4e69-a365-cb063b1d2816",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a572f24d-8b2b-4ba3-a6df-86f2727fd824"
            }
          }
        ]
      },
      {
        "id": "8ac61fdf-97cd-46b2-b0b8-ddf45620d757",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "01f29f83-2891-4ed1-8ece-85520a63f459",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c31212f4-f71f-4b8a-b1f0-a293b912996b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b45f26ac-5b2c-458f-9b85-9d9c15bd489b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4162d8-ccdd-4eeb-99c9-52fe17a43dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e918d16-d650-4b06-b4a4-399a3935054d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47fb45d-e052-419d-8463-f5a24f3b83b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ceb9e21-4ac4-4c38-a0fc-82fba6fb0dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ed9959-515f-4f13-8c93-fa5969ce2cb8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1151176-15bf-4c5d-a524-45d079b83488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565779f0-a570-4d99-a3a4-881b07e09648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2ee022-2395-4cae-b137-f1db89c50619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37486feb-4820-4340-835d-95686cf0c658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012a20ab-90f4-476b-808a-0a065437a986",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06dd1a6-0dde-4eb2-8545-28fbd7a1d309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3526a13b-2b2b-4a61-969c-a89face84bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c09baa-3776-41fd-9679-f977b869a3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a557c09-c755-4a94-8299-a6c068532599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370550ce-4919-49d9-b447-340a3d80a76f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3f264c-dfcb-427c-9a0a-95763bcd146d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b1a618-677a-44f4-9037-ebe519d20bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f58cd3a-0e36-4101-8db0-5996a2ffab70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0441f08a-34f2-4652-8163-206e16901d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04791de2-46e3-47b8-a5d4-21458e2719c2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df6a66e-65f7-4ffe-878d-4f919b805518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ca9bba-1d7d-4e03-ba10-668864f68ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a808f4-aa9e-4069-9d1f-09b4c10c88a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "226e3538-283a-4e88-afa9-5cbaec73a6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3797a69-2673-4510-8fc0-b32273cc05ef",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93fa645-eddc-42e2-b3bb-c46f5072eec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dcfbbe3-8dfa-4c59-aab1-bbef47355394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fd8bd0-c0ee-4af8-8c80-c3b53255650b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8197c79-70af-4151-913f-07d4989a1a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2384abc9-79ab-436d-936f-a25c11af87ff",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ec7487-fc6d-4ccd-9925-0c5ed4094b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7968ff0-b71b-4a16-829a-97a99d176705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c05d03-27b1-4562-948c-78ead175ce9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2b902e9-e9fa-4d96-9f92-6ead8f4d5e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d53b58-0b50-45d9-8022-f627aa9bde7a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c19f20-a2b1-4c5a-b7ef-fc15e7c84425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b59137-5eb3-4ff6-879f-36d0dbf8d2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfa57e3-7266-45bb-89cf-fda0a459533b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "caada93a-c649-4107-8849-256bb484c72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cdd41a-1bac-4093-abcd-4e2f6b585342",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7694bb-9b0d-447c-ba83-c70cdc780660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7840b7-cb6a-46f0-bc31-3343ba45340b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c23ec8-73d4-43b9-b5e6-dc6581aaf02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24fd2777-839d-4581-b455-453a7e4a0c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9cf0a0-4a9b-4f5a-a01b-4cbdc0ab3702",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830e1fc0-69af-4705-bcb4-ced18c338a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8de497-a377-412e-89dc-bc7bc11f0788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0870c66-8526-4a28-8188-1f3d98eac838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf038174-1f56-4604-b665-fc14bd131606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20645c56-b952-4ee2-92ab-9d0d7e13cf32",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ec5fcd-d7e2-483f-974a-af4a73addd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7995ff-e00b-483b-b3c1-26f40d7eb8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df081603-99d3-4e56-a71d-212b5a961098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77a27e72-8ecd-48d2-8c49-c2dd8941dae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c59a9ac-59a2-4eee-af36-43490e34cd66",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a077f24a-f7a0-43d3-9684-0a2c326a5968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b2ff59-e32c-4f66-a735-afe4f37e67bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feeb82ba-10a1-4bbb-ada5-c84cdba9b1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "259a4d16-8bbc-4aa3-b136-e1f1bcb1c4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73411f58-ecf5-4f59-a094-384487a94fd4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8accf0-c391-4390-91a3-f88bdc44ef1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a596d993-54e6-4e21-beba-0e96cc43c55e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d584fbde-c3d8-43c2-87c4-02fcc86d0587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67b00e6b-bf80-49ce-8e98-dd20612ac329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1677575-b512-4af3-b987-5e6cb7cded1a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53afe1a1-d6e3-4e7e-b5a9-22d0e22ca2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8459e7f5-ef8b-4348-8889-2a1dc96ff475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83a2177-cdf4-4378-963a-b88c4ee40f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbbc21f3-534e-4144-badf-c16eac0bb51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbf0b99-cb57-43f5-b814-4e6ab3af5053",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a59fdb2-4775-45d6-a485-4565c48ace07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e91b89-5929-4b1c-b2ff-398ec4224d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d65b55-4881-4ea7-a890-731099a976ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94a2c586-6c4f-455a-b2e9-fab38e0437b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdd094a-a4ca-4d55-90c2-9640b9acef5e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d290ae03-472c-43ab-bbb1-2d2c9c2513d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4889f72c-865a-47b7-b7ef-ad4936fb0c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8de3639-8167-4f2b-a233-08e57e66822e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36dd1dca-e9cb-4d3f-aebc-82a168261dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fffc77-e333-4b4f-9546-12444b7ffbd3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ca9689-b94d-457f-bb48-6b1eb9111168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c926bc-f578-4709-b758-d681a5aaccda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c60d35-bade-456b-96bc-59cbbb41d8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaf2e3ad-2f5a-44d6-a54c-39f2a0913eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2291466-ff98-4758-bc38-503ed82b3cb2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae01a796-9262-4bcb-82eb-63533414734a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca1996c-1c95-48f8-a74b-2fec88572453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe3e65e-6f31-4085-b2b0-d87d066d300f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf40425-5465-42c6-8fbe-2bc05bb2c681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0934e100-5f99-4aa2-a6d0-87bebe3cb895",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e994024-d80f-4617-b8ae-49c78a95a5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0df9bd-c35d-4328-a783-069369aca295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab38678-5134-4709-92b8-0ec742c30e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d85eee89-d946-4ada-a502-9875b5a52e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c9aa24-273b-437f-9fb2-04c941bc83d4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8913e06f-f032-4560-a3e7-29a418b42df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8d28f0-8cd4-41af-9b69-e1e7654f7f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ad61b8-11db-4d6d-9d7b-06f0589196e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "842414bd-dffc-4daa-ab41-5b27d7644410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02643fd4-945b-48fe-ac10-bdecd9133085",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245e6111-47f0-442c-8947-29dbf8174ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10191fc8-fb55-4c2d-8326-25084a8b9728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9caee21f-8738-43dc-b86e-87cca8584194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f60dab31-b3a6-4f0d-8a71-8ea9e94f3d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b6ffd0-4ef8-4e81-810a-15be5c6d2065",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e67975b-9f91-45ee-b6f0-843f83b298e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5851f7ba-0fbe-4fd9-b7b3-63f7aee2414a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57c9cd6-bdab-405b-a43b-a156ce76ed5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0273410-f9f5-42af-8b82-8114b03d8db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2062eb40-2d44-4332-b5e1-45cd5e49ed6a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b2c064-2f92-4fb6-a2c6-c56ae3e34db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469c234f-fa38-49c8-b315-62ecf2d7174f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed37f23-f4a3-4bc9-ba98-75b9fc849949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b541e6-46ba-44ec-8f4f-d0ef79a7f033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ceabfda-87b3-4ccb-83f0-5a1af84b3a99",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0ab6d0-388f-4213-a2ee-9f83c10312e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5de448-c2a9-4e6f-8b9e-65ecad0d6c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfc8084-feb9-455c-be9a-cd5ffcc90ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "939dcb22-c3b0-4e71-bd30-e7a62cadccd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677c7ce2-eeee-492b-a774-d500fc14e226",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f120f6d-15b2-4c8e-b832-590520f49162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45727bb6-688e-458b-9b38-6e113a1204cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f2ca12-8705-46b7-aaa2-b771bc9fc02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5229c8b-dc23-47bf-abeb-31d14473800b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea5288a-f6e3-4b44-954d-54dd855956f4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9293b7b4-5540-44c7-99ad-6a781d56cede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed63762-ea60-45e4-ae73-aa849238d617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc080a1-69e1-4ddd-b912-965975178d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d673042-00a2-43be-b037-1bfd2f88cfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31e8d5d-fb38-48a5-b6e6-ea26011652f5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5014985c-f834-40cd-8cd1-908f4a83feec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71cc7a34-1061-405a-b901-32221db71978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0bbfbe-fa49-4f0c-8aaf-2567f3052844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b32f5e38-31bf-4e18-83ae-93a4e876398e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375ea7e8-7756-49f1-8776-7f73c1299b28",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd7b6ca-ed6a-4b27-93c9-dcd5f74b4011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b74c1c-b22a-4ad0-802a-01f363d4f27f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a05cb35-e09c-4608-aab7-7b00870ac4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25bf7779-a234-441f-a425-3f2d31f64821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e57a1f2-9119-4348-9645-b44055fc347c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4ee83b-4010-40ae-901e-a222cb1f487c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552b00cf-ac9f-4ca2-846f-8e8c2b4b3a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030ef18b-1556-46d2-8520-61dcad4baabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3595e5ff-c04c-4738-b4ee-e66fb0e87684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e9147b-5f71-4eec-af3a-9a4325763e67",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f30f72-03da-4e4a-b214-2d2802a9c211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c5673c-7df5-41a3-b9c0-3efc4bd7b646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba29c99c-3161-4847-b839-1dd946ad17eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd85f54e-8c6c-4a92-b8b0-afdef542dc10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2296a76a-8bd2-43ff-b1a5-76ed5da94259",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81aaabf-7e16-4ca3-b981-a738154dcd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4174c8f3-0a59-453e-b325-6c4e3d3819f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c58eb7e-883b-4dd0-bd4f-6afafaf679bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b480c14-c406-472a-b6a7-a696f689d033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb7abf8-3b6d-40c4-93a7-b9ce4bef253b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc86dfb9-e92f-43ea-9ba0-94e96afc752c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b076ba3-359b-45b1-bcee-bfff34d937e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f71aed-724e-425b-b138-5923fd87d4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb7651b-a5a4-44ff-89f4-6cc09e3003b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2299d7af-150b-4340-8aca-7ca300032114",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c132388c-c2e7-460b-840a-8f46aec476eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ea20b5-08d2-43f0-87a2-70f464aafdfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358f1959-9b35-49f6-80f6-36316c77747e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc36593c-971d-46c9-914f-c6d7f31534fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b383b8-cf09-452e-9041-afc6b27dbd26",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59541f80-6faa-47ba-8881-d268ebbda719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c6bff9-56a2-44f0-8572-4cd15aabf2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81a010c-2f61-4997-a697-07be87bb9c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e80fe661-b097-48ac-894d-d1dbca23e12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f40f11-0175-4a40-bf0d-02fe64645639",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67297ea-3d76-4154-9272-fffd3d0f83f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "facd76f0-94ab-43b4-a381-6e691dfe2746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5501de-c350-4b42-a17e-44a0dc10777c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a034ba27-bcc0-4ef0-b340-10e31a2b0151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1bad54-b92c-41dd-ae35-45c3db182de3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ab8f55-6573-47b9-9375-017e4a29f9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5926e8e4-aaef-444a-8e08-afcfee705e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e2d5ad-90c1-4abb-ad2c-040fa6653f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25babae3-0fd6-43ad-b763-017ddc7bdf4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9f17e9-35a2-41f5-a3fe-9499577bb0d2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd650b9b-d285-476f-8a22-492675570c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb879bb-6c81-407c-8656-0d36649c45d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef48f30-2e0f-40b1-8b80-aa5ad65ceabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd24de2-9747-4558-8c74-56d0ab18865e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c14594a-8848-4c70-9269-b1444ae7e95f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d154048-e928-451b-9ce0-2418c1021273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3039418b-fd15-4d79-a644-b943722adf18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57094eb-deb1-42dd-a277-18df5e028e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "57457c0c-950e-482f-a032-ed99ddcb1ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ee9458-0916-42c3-b29c-7879ba98590a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6a95da-7d47-4702-a605-7367e936466c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e176ce5b-b534-4d74-9e7b-6794b1d4249a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d36e125-d915-4d86-a459-dd799901be67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c72964f2-cf44-4783-b124-bd037e2882ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a4a47a-b1b9-4d3a-9bd4-1f28fbc0abbd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb5846f-ed12-4fa7-81eb-6369e6710ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61118d2-367e-43b9-b7ed-b8235a7f928d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b34e0d-4e74-490b-8293-fd314a5d7411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa3cc85-d701-4ca5-864c-074a84c6458d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3ef61e-cc70-4cba-8cb1-ad510c3f004c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe7e63d-dcce-479d-8c1f-4ce2a06f3e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be348caa-3854-4e73-b5a0-6ea625e8f47a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c08888-a671-40d3-a72c-c5770a680ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5bf807e-5537-4b26-9d4c-bd5e9eb5a3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51745f3-0c61-4412-a98d-27848c523703",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf49fc22-6b3f-4ba2-9fdc-37c57ce1a7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a1e75e2-6b50-461a-bab4-7e7c2c98d28f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc710f71-6142-4cba-ac9a-0f6fbdd4401d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "27e731c7-87e0-44da-ad5a-373df305cd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5911cb3d-37b7-4527-8ee0-e416f57aa119",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c31bc4-f4e1-46a3-a434-2d34115fd743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db44636-1545-49a7-8d9d-e8b86a6373bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a9bfcf-fa01-4718-9f31-cef5ff5442ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "37c1c4fe-770b-4f1d-9c47-d080675e0862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4d50ff-4223-49cd-8733-ffe20c8c5e67",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70aa4c3c-4039-4d45-b68c-ddf6d0f12b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9c6d4c-cb71-4896-a15a-24d994d30104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7a2acb-2189-4b32-afb6-cc6399015de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5bb685-afc8-4351-9ab2-bdad471da19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fee10d-219a-4b20-91cc-211bf6116a8e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7644f9-314c-43a6-ad35-1fc3f746f176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac42fb1d-1876-4cda-b2af-92b34232891c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05ebca5-3054-4618-8ca1-aff7bda768b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0078e552-6ec5-4c72-9e3f-1d5116831dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408dcbfe-262c-4e41-ae6c-54740af933f1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4ff446-fb2d-4bee-b0da-b69108126031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc591e4b-da73-4b99-9c88-41ba85fd485b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17762bb1-70b1-4265-9c2d-059139840e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20f74cba-bf91-49c7-941a-ce2b55874370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529fc26b-22ad-43c1-8f27-768598c685b0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febce411-e9d3-4336-b3b2-f56a8552afa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac96919-83eb-443d-9ce2-50220730654e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1fcedb-baf5-4f93-abaf-cb52237b2b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b450a08a-0af0-4750-a3b2-71c59c9ad2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f8b07f-48a9-4e91-81ca-5055b47e6b7b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9d474f-bf90-4f2c-a48b-dc47caf21d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148c22f4-b462-4acd-a0f9-da64038261e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55192360-9dbe-4b6b-90af-d02b9862ef1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51b5d715-93c4-4953-a72c-e82e71906e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5e10bd-0c9a-45ad-91e7-6dec83eb401c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e868881-9e5c-4f5b-8b03-d870a88a7d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a442f0e-30ad-42a1-9f99-7440be57433a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11543dcb-fb34-400a-a111-38b914acb0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d007e394-ff54-4523-8d72-ac8d795af097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f273e31-d08f-4697-88e1-6ccc8e330214",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502dab34-e251-4281-bee8-2e1dd502e1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198037d2-162f-4c41-ab6c-34fd4b345391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a339efea-9197-41da-9d29-07736a3fc7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3861bf84-4da9-4ab2-bc15-9b7dcb940981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0da8c8-0fdb-41e8-8c28-1695b8432fe8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ff7b30-b9e7-4987-b936-b7c63e324608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1b6f24-45e7-4b14-b495-b35f2ce42ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fc52a7-8c2e-49b1-afbe-585cf6e38119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b34fc089-8a65-4c93-956b-02ce6fbe174c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dec1f9e-c5d9-4e23-9392-425f014073fa",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b771e03-3837-481f-b227-6725408d62a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe3ee44-f6ed-455a-92ce-1bd62603d2a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5be1f95-d9bd-44a9-a9d0-b25af4d2a7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24f9132a-7b07-40da-a494-c704d9536f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea6b06a-ab4c-4eca-8290-fb8f8523ba55",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51088ebe-5096-4f84-8ca4-2c01ca5c6cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3d0ad9-f644-40c0-85fe-9dcb41c08d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cfc0ae-dcea-41ff-a4a7-b132cd8ca7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "570565ea-9bf7-43be-b702-3f8d5208a451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ba9708-fd84-4d86-8ecd-594fc45fa3e7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5b3543-9620-44e4-ab00-3e6b886f749e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f468a651-76eb-4aac-be91-474155a2c1d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f57dde6-3d5c-4262-91c1-ab9bf99e091d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "037b2af6-2eb1-4712-a7cd-ba07e2c2d5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363b0a4f-40d1-4e2c-aa2b-5ed6ed23c2bc",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40eb497e-0a39-42d8-864c-4fa4420e4665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e5c421-2f10-4f74-ba5d-c5c5ccc0debd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b43c8a-1c60-451c-ac48-8de2f94bf872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b02adcc2-f87e-4852-9a8e-4f37ed6d9c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00420ecf-3d74-4698-9c5b-7662e20fd6b5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db817b4-095d-4881-b352-d9d85e70959e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19cb6663-0aea-477b-8c3e-62d3ff7f504b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3625f96c-ac3a-4867-abc4-20b89bd1894d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "caeb8b19-7a8f-4af1-8053-6826ad18a233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70dcea28-942a-433c-8970-6af4d7e11185",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a20785-bcca-4a77-9990-cef8498f7d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc45deb9-f381-49a0-a5a1-b55db910eb05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcd2383-feed-43ef-b786-36ed0c48edb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d5dab8-7667-4105-8fd1-2151b2f49b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6c0eb5-3a64-4374-a10b-4ce9e1ff9a99",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868d5b79-0198-46e9-b690-d52c9a7d02d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7441eac9-fb01-48c5-b724-b6833e8548a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc2edf1-dc6d-4dbd-af18-cc0b596180a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0191c05-7a02-4285-87d5-67d6f7242cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708e4429-4441-4c0d-ac27-b7eb3d518d85",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45aaf7bc-817e-4a04-a0f9-6175a11f78ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49cd2a2e-5a7c-44f0-8e25-ab7f1c52e2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3352b1a7-7606-4a92-b193-d1e2baf9c57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e81f1c8-9cc6-432a-94ca-e58be33ef395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5990bd-6a66-458d-9963-c20274241b41",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f41c52-4d49-41d9-ba5a-7eafdecb9e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b47171-6d5d-44fa-834a-dbb6cd5872a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe01af6-6547-4779-b0ff-6169ea5c340b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a64c0c2a-d51e-4156-8103-058a1e4948da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535db9d6-20eb-4d91-9ae8-e6dec2b64a72",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d62a6c-b416-4834-b81d-736569f93800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e01d47d-2ed4-4d9d-96ac-82df2585382e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656c0e34-8fab-4f12-b765-f3c975bb5536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb54533-e9bf-40cb-84c5-09899db41fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efc87ee-80fe-4eb7-902b-61f9314ed256",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85baf442-777b-424e-8d73-38f2a382bd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0363c2d7-a9a1-4e10-8e55-ae39bdea2407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8182f665-d07e-441b-b9de-8e6e1e83ada4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "868c8def-cf70-46e9-b575-f079aa6db09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ece5ad-28bd-4036-abe4-9b2b1826651e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1622e09c-5ff5-4bfc-ba39-13c96c339f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a46d243-a985-4998-95ba-c0b32309bc55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4691feb3-45ae-4519-9181-b7306febb195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "010707c3-9497-4f41-bbb6-1bea989f723f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff776c4-8ce2-4c0a-8526-079f177744b8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6929372e-4b7f-45a3-8797-37cf353bcdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ce0b06-9595-4fa3-bbd4-7559c734b98a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a7bb46-e572-46d3-8aed-e66d440f09f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "178c5828-b1cc-491e-904b-bfef251ce471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01eeeeed-99e0-4f2f-9d4d-3868f5cc7988",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc92cbe0-df3f-4c2e-b64d-e7e85fa5704d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32bcecda-3b7c-45b2-9aee-d043058f5197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c9f541-53c9-43e5-8601-2c3e3325982f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "034e4717-4a3f-481c-afaa-17a8f5f7274a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67beaca4-bb24-424b-89b9-5e3efead43ca",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2f7510-c0de-4433-9f5c-7fafa987af59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0f406b-a264-480d-976a-0f458e01f348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520d7790-ac11-47b6-aa9c-03bff06844c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca709dbb-2f45-42e7-909a-45d1a4c975c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27acc867-ac95-4e40-af39-9505be8f6c0b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1277910-f21a-489f-85ce-f58fb249fc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7c0102-cab9-4c87-8349-9ec05ecc6202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fda69cf-e62e-4307-8a6d-01e2784f8ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df6ba174-6fd3-440e-bf5b-406b33f9497f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e62fd15-fa18-4266-a249-2e96a219bda9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b4dae9-2bd7-4f7f-a3f5-78948918b778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04a2451-ca88-4bb0-9f73-2e53213a7a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d682de-7fca-4f95-84ff-50a93b1d59f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f10e99f4-fb87-4145-90bd-1686024d45ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a124b97-7cf8-463c-a544-f9c0b2da65ae",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ae685c-89df-4e38-bb51-0616e7dd30dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99852cc-c3a1-40d1-aa04-e7684c2e1475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26bc00d-2964-4cc9-8201-5b5c670a6047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8edefc13-6aad-4529-828a-ad2f5d2030f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9653d3e-26f1-4899-a5ae-65057ac570be",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19e8184-1edb-40fb-93f6-e0126a912c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37df0e81-5232-49df-808d-b1245b27705f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fe9584-1884-4097-b860-851873b8e2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0017ebc3-e478-4cfd-8273-ef594523c72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e555d7d-b53a-4be4-8439-3d9333e03005",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec8d77f-4e58-4668-8961-3db52e843df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c2a7ce-974d-4d73-8829-e4fdfcbd43c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4039db-3a93-4690-9282-42e774d2f503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab954fa-0244-4273-99ce-7ea1aeb85ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c391a891-2b5a-4a7d-9637-f6c1b63644dd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4fe6d7-94d1-4f11-8760-42f3c9900f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a363d0f8-96ba-4da2-aac3-5ccb11f3e3d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430f290b-7dca-45e9-913f-d6a623ff2582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3f45a2-6d48-4d51-a510-5b3bd9423965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fb80ee-747c-40f0-ab6c-93342af57d7d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb9ba05-b405-4670-b36c-bd2917ad00a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b065f2-762b-484a-9ceb-d95a63491015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a385ad1-bb87-4c18-b192-894e503ac4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e948948-1b3e-4fa7-a1aa-813f3e50a1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cec8b75-dc65-4a05-8b24-9e1ac2d408e2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c0e4b5-d681-4566-b29a-abd7845d336f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a152085-abe9-425d-ac6a-b672e534daa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cf0514-3f2f-405b-b69e-d340c3dbb5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73667c4e-a128-4c6c-b4f7-638981fc3d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173e55bb-3e5c-4dec-ae8f-07cfdafa28ba",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be682f42-ff47-49c5-a4ec-ffcb82a1c7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d90aa5b-ff50-436a-a07a-9d956ff99766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313c9505-3c9b-4c4e-944f-3859adfb415d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "79b8a4fd-2f81-4a38-b2a8-8d6968f5fb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4d6e55-d0e2-457c-893c-463073471265",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c62ca8-23be-44d5-9105-3cc3e1a1337a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8c7b19-1013-4266-aaad-48a80c52c39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1106143-0faf-412e-82fd-20e70431f7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "290beb36-8129-4a79-9970-7540a25d99e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddc0455-174b-4123-84ac-5aceeb7d50f6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29559674-a53d-437c-8e67-9b60037ecee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a510ee-3220-4430-b6e5-46f725ebf4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25cb614e-0bc9-44db-916a-424a1a45ea45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e272770a-59bb-4974-8624-ce0054b0ffd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2871aad7-812c-4983-b94e-8d01436e3a78",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89229b9e-8c5e-4198-9bed-fa94eb962164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d18f2fc-f125-4b2e-8fca-85f0e812ed4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f5d60c-902f-465f-93b5-72114a167ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c99969-f7cb-42b4-a333-7ad2372b4053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22a26cd-8459-4f40-9694-b7ad4b07b9fd",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439b0427-32d1-4f8f-a06a-ba962f1fc83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3beb66eb-8843-4586-8029-ea169b405eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0c45a8-adb6-4f26-954a-85d109c235b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a392c2c0-6e82-406a-9942-bb8bbaf660b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fc3d53-48fa-45f7-8d80-0aff7953c0f4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1911a3-8381-4eca-882c-c194896cd918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d8d680-cfac-47b2-a37b-7da5a52c02c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8216ceaf-f118-4b51-885d-102d5d8fdea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "accca64f-0afc-4472-bfe8-59435026dbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec79517-05a3-47a0-938c-ff1476333321",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44745148-2a0c-4406-9faa-574e17e0b68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0454bd62-d25f-4b0f-87cf-e6d77bbc57fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4253e550-4c6e-4e8e-86a1-f19c0ae29b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a016e1-84a6-47f7-8f76-419dbba26d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c5966e-4102-49fb-9bcf-5621c17ac5c8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab66e142-e086-439c-b39b-dc6dd3f60eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb3e609-bf96-4977-9478-6d65d98b676d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c501c02b-bc56-402a-b232-33177c38d7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d855569-845a-4b99-9762-828aba2faa97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1c8704-c275-454d-b397-1d71ab0d5b05",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4201dae3-2c79-4319-a724-31f2b4bd5329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33032388-1084-43ef-a03e-7b90c72bbb61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2506bb-45d5-4f27-83a1-4c29679505c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afa31888-a5a4-492b-8551-f8694677fa13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9508f0e7-af7f-4849-9939-5bb5e60d6cec",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57c31f6-705a-49a6-9a0d-d7bacdae5d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe70dbb-64b6-40df-862c-4f5a537942d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce71754-24b4-4218-a471-db21d0b7c742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2aafbc1d-36f6-4abd-b93c-dd96e7d818bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9865c198-e8f6-433e-84de-896a7a207e22",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93412b3b-efe5-4886-8f5c-dfc39bf34006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bad5607-3923-4184-9507-ec29ea1343f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3490fae-7289-476c-b228-531e0b0ec53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02cc780f-fab6-49c4-8fde-489ab80b3db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2479d6e-7763-4168-bdb4-3d4a840a5dea",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafb5b6b-ea12-4177-82bf-9bda908b47da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8462b1f9-9500-4b60-b69c-251cc62f9a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d99267d-e5be-4f3c-809d-df519af32abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53a4691a-416d-43b8-b5ae-663e48db31d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5774521-1f33-49b0-84b8-d678c1e87793",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbffc2ba-009a-40c7-bc11-08cc527af70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb159a8-77ac-4200-b609-b5c95b467d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ed11b6-1eed-4dae-ad21-19dcf69f107d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9829205a-9d3e-469f-8a21-770952612536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90358f17-fb48-4d2d-af8d-312ac9460be3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49d3ad6-fe49-436b-bb50-2916cfb9b7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec33d658-3262-4ced-87f8-014a614ff0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0888c5-ae34-4a42-9b64-6d8b2fccedc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "551ba52b-0539-420b-b574-e4aa299e459d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cebb0b-6169-401c-b58f-f71ca061ba8c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2c2e86-5009-46f6-8629-cdb71eb1112e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5304ae2-aeed-41e9-9c8e-e84e79052c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd232582-f6e0-4299-8483-33ced89e524c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "29b6f098-b004-40e0-ad29-7ca3519bc0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8faa79-1ac5-4c48-a754-7849af59906d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1743d241-ce67-48b2-8f87-6d96226c4d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9f460c-d8b7-47f8-9593-7658754df490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ea8f44-d334-4ea0-86de-a7d44bbf2b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c105bd8-d881-4f92-98ae-da872fc1136d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec350ea-fa13-4eed-b89e-5e6d71872966",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe1e946-5db9-48fb-b5b2-b45efd086230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0b9bcc-eb0c-4855-b3a7-4b601d5971e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995fab7e-555f-45f3-ae3c-ec08771f3b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a856a475-d149-4584-b4f3-67ba1a8c14f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4f033a-06bd-4fb7-a733-8c749980692f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdc8042-e870-4dd5-9a1f-30bffa0ffa31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "aba3f168-1990-47a5-af93-3e00780feca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541cced8-1ab3-4f64-a2dd-a71312902973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1857cae-a9e6-4149-8f26-5d27004eae46"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ccebf86a-9691-45a3-ab3a-8a91fc264c5a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c7b9c0f-b41b-4a40-8c67-58e7629f0898",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b16c113-c983-42ae-bfe1-13efe90e1865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c65b23dd-022b-46a4-a33c-bbd166f7f260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4c6463-7bf2-4f36-be37-b263fb77bac6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "170bce4a-39fb-4a5e-8f2d-ac888a57f15b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d40a0a50-02d1-47d4-b0c1-badaf01b6fd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd95312c-e187-4469-83ef-571084e72614"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12667eb1-e88f-4376-979e-70cf997d95ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2dab8c96-7f98-42bc-9e50-f24ea3d5977a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "674421b1-c48a-4dfe-9a7e-2dd371f6af27",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "397f067e-8011-488e-b8be-35ce68ed9b65"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "02c8455c-32bc-4f4d-8f98-ffb3f46a4470",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe8c1208-beac-4177-aa54-b05e03fe1443"
                }
              }
            ]
          },
          {
            "id": "4449381d-4754-4f58-b66b-962d3b712042",
            "name": "Positive Testing",
            "item": [
              {
                "id": "acd15e84-627c-4ce4-8417-da6fbbd6def9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65c41be0-9af1-4078-8201-0af742d971a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40482758-9424-43bc-9752-72794b84f603"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5b3cfbf-15ff-42f5-b169-76b2acf0a26f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "de184cb2-8a57-4fab-a26b-b936b460dcde"
                    }
                  }
                ]
              },
              {
                "id": "c19194f9-8414-4e20-810e-e0442184284f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a443e06d-fa5f-43db-b1c7-bd8897e43e87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0728ba5d-21d5-4e9c-afae-1f13f53840d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "850276a2-d4a3-49ac-99d3-f95bf7725262",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "93bd864e-82da-44aa-acf2-2cbd97a15168"
                    }
                  }
                ]
              },
              {
                "id": "7f12773b-adc6-4eef-932d-f62e9f2eee84",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da9b2153-95a0-437f-a2a4-a00418bc6f75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a832e1c-ff12-4f63-b4ff-015041041e1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4309ffe6-3825-499d-b7bb-5ad375f9151b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "73e47a56-0c43-4a72-9279-e0e93859ccb9"
                    }
                  }
                ]
              },
              {
                "id": "0cd63fba-34df-4bc7-868f-feaf2288531a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53d45ce1-bb5a-439f-9821-97c7e0af5723",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c36c24b3-a91f-460f-9b82-b33acf5157e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd3ef609-a7a1-4eea-b10c-c83d05fa3054",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e7abb1d1-6f86-4e5b-95a2-abb5d2f0149e"
                    }
                  }
                ]
              },
              {
                "id": "d01ccc41-5218-493c-8baa-96ff4f91a602",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e67117de-c529-42b2-aece-1e094bbce810",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7517ef68-4fad-4022-98ab-ef18885bd2da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ea81b40-1852-44a4-89d6-37a49d82427e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3dd1277c-9d1b-41f8-9f91-d1b6cec99670"
                    }
                  }
                ]
              },
              {
                "id": "2958ce85-cb44-4049-91de-e5f379af6b34",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cfb68e9-cde3-4d81-88e3-6d678fcbf777",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4cbc7a38-8eef-4028-b620-666b82a3d74c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6c7779e-33ad-4117-9e2a-68e173a37402",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "03234056-2ba7-444a-95fb-30491e2c16fe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "efed9afd-8d02-461b-a7f2-8cacd48f6f2c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a7c3222-dac8-4e8c-8625-4efd8e23f414"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dc90445b-6f1d-4918-ac9f-b1d1f8f522db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1b24087-98af-419f-9851-df4e19045dd7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72985315-1673-43a3-80fd-d18046b98fb7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "abe65d22-1b14-4f38-982e-0903a0018b7e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d52dcb6e-083f-4f4f-aa33-ea6dc1a82aed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1d2481fa-746e-4468-8562-01374026d375"
            }
          }
        ]
      },
      {
        "id": "c56eb8d1-177e-44ca-afc6-7f594da5fc5e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a254705e-9238-467d-a59b-5825caf69b03",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ac16cd9-0d9b-4752-809c-cbe2804ca107",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "18b9c5ad-a37a-4639-9868-99800ca4338d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0a0599-99e8-4163-a1ca-e1812e95ca6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3c448a-12d8-4b94-bb8e-b2c00e2d42e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a1026c-c35d-4744-863d-0b21aaa49f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b648b9f5-8207-4a1f-a102-8bf0b47e26ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02222326-90e8-4161-ad51-bfecee09e181",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c608a3-2622-4cbf-b12d-220ded4b6fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc98e365-ea03-4289-bff9-ee00178fe60d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2e6df9-a26b-43de-90a8-094f3b48734d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a210fd7f-3790-4fbb-946f-e2107af78c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39148f22-2f11-4498-9cc5-2c3fa0690c21",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446b4d2f-9b5b-421b-8e26-4beee6a3e3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556bfbfa-1d8b-40ef-970a-aaab2d1fd70b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9122b7-537c-4ba3-99ac-4d7293e4ef6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d48d4a4-3ed9-4f6f-8673-f64a3160f805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec93443f-fe4f-4ef7-b139-feffe9000cf9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d82effa-9df8-4b89-b3f7-a5de1a5e629a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957a0dab-ef3e-4b10-a00b-8e9532192c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877c08c1-8d7c-4d42-83ed-1923c773f450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07623242-53b7-4020-8ec7-19591bbc814a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324dc469-1006-4211-a3eb-5caf7518dc8b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5318bc27-c509-4554-a97a-270ecd4e261a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a0c15d-6c90-4542-95cf-1ab03679b657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd97d07-a4f5-44a0-8b08-4eb24fb7c0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d4ce684-501e-4480-bcb4-82d7516e21f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cacaaaa-09ed-4fcc-9876-b05240fa4ced",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0baea751-9e49-48be-9801-04f8da19563b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca610e80-4e60-4cf1-b900-7355c1d5b7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcd5111-b591-4037-bd86-f6583a1219d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65e9bd99-efd8-41ce-9258-fe55c3a6e50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c7cd09-68d5-49cd-99ea-3e2cd8d43913",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57c6b76-9e7b-4fee-a28d-991827394e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4598d85-53ad-415d-a5dc-7e49b0b171fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0c4dac-52e2-40e2-b883-514b29618a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b910e6ec-937c-4258-9d83-1865bad0e134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a52b51-3bca-4e2a-81f9-42a961461949",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef2b45c-75ae-4efc-8278-1785bcb15503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8607de1-06d2-4142-bc5a-0e5ff581f9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962b5e1c-bf28-466c-95be-91a79b7ea173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10fe158b-1dcc-4cd2-8829-3647dbff4e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e63b5d-40ea-4011-b342-839cdd514e8a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52045f1-be9a-4ee9-b647-6cfa03557074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed50e0d-d6b7-497e-bb4d-b2c6d0518f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4fff77-7f76-4d6b-9107-ea78c739319c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60788427-ca3f-4a29-9196-d2b03ea2c9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe5abb4-23da-41a9-892c-40b468d160e4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e8508d-cc73-402b-ae0b-05b93667e0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc444bc2-dc6c-40b0-8fab-e7487cada201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbed275-50ad-4273-952f-7d2cdc442df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e3e44f2-358d-4cca-a488-d84661147755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5da6a5b-ee61-441c-9387-f5de3cb3266d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3921f894-d2e0-4e21-b12a-07546c406db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68c05ea-c9a0-4976-a6e4-9b3b18d6993d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b08ab2-b23a-4888-9703-21c1458337fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3dfe26-901a-4840-9b7e-23a24ee92cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501683b5-b366-4f2e-ba8d-f8da632724d8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e2c651-6e04-4e37-9447-1aad132f8a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c50f336-9d8b-4bf9-b07e-503ae59b4e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e2b832-4be0-40ee-922c-ca5435a7318f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "170ef32d-d4f8-45fb-9217-d6d6673f582b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2669ab-734c-41b8-ad22-b6a398352eab",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6925d837-c840-4e51-8528-54edeaff9f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a5e8bb-5f2f-4e98-9f78-81ba284e8518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f82047-02f5-4f95-bf47-5c9643657f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b930f0b-0754-4375-ace2-2923404fd3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a72ca2-524b-4bda-9601-7c956c3f8e7e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49316337-46e8-4791-a45e-3b14ec2f340f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc8057e-d609-4afc-8b32-0eb5357c76cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e76f53a-9431-4c98-91c3-4fe9289acf41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3098e864-f16e-4ccf-aefd-d6832c5b5320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3c5509-cb15-4047-abd5-4a4aae3146ff",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674f8726-5e35-4fe2-b535-71fb5819cef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aed5ae7-e90a-44f6-83b3-de566aa75abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bad06a-a097-41b0-ab9d-86c77d6ca03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "81c461e0-5db2-4e40-b2ec-64036af4b179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff2162f-11e4-44d0-988c-459e41e12f29",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "006d88e6-fd20-4cb7-ae72-f60bd7cce3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575d383f-b0bc-441e-9edc-93d33b1b8edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74168fc9-c16b-47cb-9b6c-37adf5408dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf6078d-e5f0-421a-8e77-01b2175bb7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64327328-9fb9-4b8c-8588-e6edd5979bc8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6683149-c7f7-4e50-aece-e3563e775b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68cd68ea-c08f-4c69-93e6-5677449eb408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15140da-1658-46be-814b-782c82bf0436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "29a2a68e-1186-42c9-92f1-bd9d108a30e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b667a7c1-4e8d-4be3-9d6f-dc49aedac260",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2897e310-8969-4352-8fa6-7392d4bbdce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a15bc8-e494-4933-8e67-e9e9b789ef93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5387963-39d2-4a08-82cf-4630d7d79ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0477bf-0403-46b7-8046-56f8b0a422fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55f7ce4-c452-4f55-9a6c-842efb69a1b2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b702745c-92eb-4f31-a21c-6cc070cf2181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b8b94d-bc45-415c-ad97-7dcd924a5772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a41af5a-130d-4de5-83be-b3685efa6afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4a0db6-034b-4b64-82f5-32595ba2b943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95546b4-bf66-4508-ad21-52a0e07e6d6c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7253a704-3fac-4f5d-9775-33e1a641fe0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f73901-90f5-461c-8ae9-eab2003ec912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a528e0-7111-4dfe-9265-c0fdb1c06df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b135a8a7-6666-4a0e-aead-9becc2d1ec0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa30206-007a-485b-b564-bf327e001153",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d8f40c-0eaf-4b9b-a82b-0b6b485e7f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8218894-7358-4d76-a1ff-f9a1270cd872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654ac7c2-4914-4858-90f8-b291fae3a32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddaea046-4c1c-417a-b44b-bcfb879a34dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2af937b-ac89-4a17-b39a-dc2e40f2b0b5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0816d6-bff4-4784-902c-1685572aaa90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b960a3-463f-41f0-a32c-9145f5899acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d300ffa-5427-4c3f-a905-86ddb2425cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1230c9-18fc-4a33-a685-c413aaf36ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f301ed18-d2e9-40e5-ba5e-1a9c414d9c91",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67941a4-8367-4a42-b6ae-42d94ced40b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d24e338-007e-436c-bfa5-93a5a941a70b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13b5ddd-a919-4d92-8b91-7b9a2d1416d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "635bf716-6224-46fb-8872-66f093505efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464c88ae-a913-4718-a628-9f5d21c56645",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cf109a-6cf3-4407-914f-3920e52f2503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41be47ce-50f0-4147-96e9-16e6505c16fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f297d2-82c4-471e-bb5c-fca83eea8953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "247cd40c-cb90-4bc6-a146-41fa52e0acaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9939c94d-35c1-4295-925a-a69620032c1d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0aba91-b19b-463b-b606-9dca048212b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb4cfc4-a302-4695-a8d7-f48aef423a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6af243-4814-43a5-8786-9526b0102bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a6cf888-d86d-4da2-bd98-c94d5d08c4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c88196d-40aa-4568-b98c-49140652c115",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed9fd93-ff20-4776-993b-58a6792468e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea33faa-29e7-487b-9a3e-b96f419d9b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834119de-a74d-480e-8566-3b4a724c0ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd930e1-08ad-44ca-b0f0-51f0c162f17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7aa5c6-2448-4c16-acb0-68227111eaee",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6587b0a-0c0d-4d95-95f0-39749ef3c797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd30650c-8ca0-4c82-bed0-65aa8ce08ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d934d07-b841-448d-9917-031219fe522f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adae8905-b7c6-4754-aba8-f6fd2185220f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54238233-8d66-46a6-95dc-5309294ddc4b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2398b372-9bbd-4125-a6a1-1a06e8478e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67623763-b748-4c79-bd69-ad3fe2243e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b0d3b0-a987-44e7-bf9f-69fd8e0bfbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a6e09f9-1053-4383-b11a-4862eab63cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed8b979-a4a1-4e98-a245-3d6dc2873fe6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3418b631-810e-4182-9957-037b7575a6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991d3e37-57b0-4e6e-b1f5-c962ff45fe60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d425bb9e-7c72-4d86-aff5-24ca31d2d0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8236e2-40a3-4720-b880-24d536e6b216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fdc71ec-ff83-4842-8f7c-58efd27bb656",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d445c43f-7476-4176-9ab6-c89e21a7c821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16371331-9f53-4a55-9e18-4f7e8a6dcbde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c508cd45-1ee9-4e2d-baef-bddd20db04a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e2d3c33-aa15-4266-b603-8ef6a05feb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695f0ff2-c109-46e9-bd8b-a68bf550da70",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85c99bb-9ff1-4d51-a9de-ceed0aa7930d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4597d14f-6b27-46dc-81bd-9587b70471b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd76fc54-e75f-40d4-a513-3a7880c59a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "766bf9e7-00df-4d3f-a14b-c54e8466c945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab51cd7-9467-4248-bb45-df28066fa1a2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2b11d2-e255-4cf8-8057-9ba3af309f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18954529-2a77-46f1-8aba-542448552353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19c7b09-5313-4d8f-8341-8d614d7afe33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2db88ffd-1eb8-4e2e-9a6a-17e9ba1c4969"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "836cd8cc-9120-4acd-89d4-e4f7d0468ce0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c6f9522-6faf-496f-9521-f4bca3df6041",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3341beb4-c7fe-422b-9af2-7e06e8e97504",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb62599-ef25-4b1f-8022-e00011f14f14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe53f160-d932-4e2f-96b7-9da2cfb0f3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31c5c07f-7160-4687-ba05-f8d25aebece8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fc8f9e8-1017-43db-9c74-d77aa91244fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7dc3ca6c-3b13-49d6-9b00-a220e42c2b48"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "acfc85fc-8f87-4ba0-b91b-75669db555b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c725e362-ad67-494f-8838-162a3c225e6a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec08d295-028e-4ad3-a431-44243e6f2379",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4754b751-9077-4ba4-841a-f588c1c14b76"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc703608-a2f3-4078-919e-2d5ee0f05194",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d24f54f-9094-4b57-b23a-b0b5d081e734"
            }
          }
        ]
      },
      {
        "id": "810bd9d9-7cc3-47c5-8a75-b309d3a5a365",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a8579627-5399-4ba8-a93f-23fdc16e6f45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18fcf7ef-4b9a-4d53-a88f-4de8ba8cb990",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "579c3451-9abe-497d-880f-4cb1c8298b2f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c24201-2085-4546-853a-8defbf0e464d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d94d5f1-71c8-41c4-a886-0ce15b0252a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e83d748-fe9b-4f56-b901-8e599077032e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f27287b4-c25f-41d3-96f5-230cb47edb90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0726b1b-c82d-4942-812d-fb9baf2c5e4e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e723a86-81f9-4de6-b2ae-436a88168f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae01c384-e3fc-48be-bdee-7dc3c4eb15dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01bcc75-cd57-4b29-aed5-131f9aa3a4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b59281-a535-4a3e-9d2c-69108328323e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe116c5-41f9-4566-9a3e-d7a2fbb19205",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a5ffbf-1c61-4c0a-8de6-7b93fb006ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c80ead0-5be7-4b0c-b491-df7ed9c43882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5e9393-d79b-435f-a6c2-92700f40506e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e19b5bb-b5e1-45f1-900a-a7b808db8996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c336ec78-24e8-4dbb-ad61-92b7e73ef1da",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcc206f-9592-4f98-b557-d758ae4962ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245aab2a-04ac-4d8f-b819-4d3f73dc172d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11049ab-7b3c-4f04-9ce9-024aeb0894a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17e3f64f-0a1e-47fe-9601-ec062778e16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa68975-aca4-42cc-a6d1-3b59873de23f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e740a95-c1f1-497c-bd6d-dfc522b12274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66da9ac-0fb9-4c90-8ac0-66d85e4c63a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1254ff9-26f3-4efa-ac03-6367e010f6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6e88cc-a52a-487b-8b79-60cf0cb99f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7142fd9-a720-4a03-a2d2-2233e20b3199",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56550baf-4f6c-4afe-a932-6c5970da5e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b982e098-1729-4676-9ed8-945f3b100194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d400032c-1e7c-41d6-a9cd-884557a8edaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "995aba93-0f41-414c-97ad-00b4ab91c913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f596d915-1280-44c4-8d30-2fd3fd88b926",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa56f33b-ce57-40fd-8cb1-b21dec8e5c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c1f145-7d63-4634-b1f6-c204f05c18dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cdf480-7ca6-4dc6-8aef-742d33b05066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2af4719b-8fb8-49a8-b08f-af4c51b70300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332df196-9334-4ee1-8595-e6034d6a56a7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4209e8ef-eb55-4679-9f2e-8f2b6972460b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0fa76a-0481-4ca9-bc6b-eaea1731d376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6b3797-dba4-4a15-8950-34217c905d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d466e94-1e7c-4fc4-8726-bb0f2c38d5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91b9e55-32c1-48e8-9a41-cf555d175915",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2aee367-5fca-4820-91ee-6635af18b53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8bc0630-d4a1-475e-b56e-3b9eb07829db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03867003-70af-492f-8e95-30f18b147b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2bbe520-3d1f-43af-8ee8-47449dd400af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660c9194-4f30-42f2-926b-e9d796f4c28b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2199b570-bfdb-4b5b-9e2b-ea2abdfe426c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56bc770-f6de-4c13-800f-9d4970cd27d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5f4867-300b-4cd1-83a3-1adfa5e76ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c6ae070-1f66-4afc-8ae5-aacc001752a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff24b0c-fe47-4654-9402-5bd8f8ed1695",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2602405a-2ddf-4082-a4c9-54c7f841ea00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72bc5bf6-cb4a-43fd-90a1-a091924bb8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3ed1a4-796c-432f-834a-c681068156dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d4c011-7b0d-4906-92b2-ce5a2f8a6a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0297dc97-fccb-499b-8a23-db6d4c3eedea",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33931b8-65ce-446c-be26-7b4110a0bd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0dc0c8b-045b-4742-a616-d207fe896787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea5576a-758d-4d3e-901b-897366bfd606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b78f1603-a7f7-4d9f-bd3c-3990e27c66e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e84fdc-1cf7-4880-ac11-b0d5abed7bdd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8f33fd-ff47-4487-a3b6-ebf7a01f26ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4f67f3-d55a-430b-a44e-a42451950ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb6ce9f-37fc-445e-a16b-9786813d4479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "47bcb441-41ae-4312-93a5-3f300bb70563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123acb61-8bed-4d76-95e7-6689f3d793aa",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0deb3d31-bdf6-43a6-b904-b0a6b2f4c069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab654253-092e-434b-a172-4bf234ca88e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2828de-4f68-403e-82c1-955a0327355c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9319059-723c-4bfd-8313-61bd0a56491a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de87b62-bad6-4523-8236-fb29d83c6d3e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460deb7f-3392-480d-ae8e-84f9b43259e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f5d899-d16c-49e5-a4f5-24821ddc6b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c96e23-a14d-46f3-af1b-aa6ad8575198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "20e33970-fb01-4ed3-9db1-e2ccdee6040a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7f141e-028a-4a4d-abcd-f8521ea6cea1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb35e03-43ac-4a80-b608-6bd509952bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417d1cdb-2961-4815-8286-1ce1854f9e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4810dfc7-6403-47c1-a72d-a25af18812e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee131085-2d0a-4aab-a0b8-529b1e15c3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67485862-5b80-46ba-a5a3-3348f883e55b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9beba27-cd08-4612-9c97-e0d96e50e758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1045276f-6e70-41af-a772-941aa788e47b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea54713-c42c-4fe6-8bab-d825051de98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "30be5139-8f0b-43f4-90b2-3c0b4a1a81a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1c6492-8057-420d-83e6-a715b44d25de",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f919f89f-9394-4795-9794-23b9828a8100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f9713d-6eb6-46db-b471-f4b18abc08f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3d5485-0687-4000-9cdc-915486f7c908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7601dd-848c-48b4-bbb6-d9931d2dbdfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1870e0c9-5aed-40be-964f-cc9c7ad079d3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540691dd-2041-4724-9050-272cc0435b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbfc5055-b6aa-4992-8724-a5588b496663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ff1ec5-6f13-4645-a963-f081122853b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d680c2b7-e372-4057-8af6-8caa6e5b6d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf0cdb2-be8f-4312-988f-0c2a2a8f43ef",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5ada1d-fe90-444a-b19b-8febf8c2b68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c1f59f-9202-4948-b371-4080354f5015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798896d8-c183-4e5a-a23c-2063aeb295cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b183a53-7067-4ac8-ade5-9de892d86df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7793f8-7669-4cff-9d67-0a35206d880f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ceb2380-9c62-46bb-af86-89d327e77bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09feb75-1553-4508-8df8-6ecf8cba1f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d588bd1b-3176-46ab-b2be-9d7b692e6f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "053d392d-c1fc-4a1e-84c1-bec9c3a69016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b9f2ff-c01f-4ac0-8a9b-0c52b049abed",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b898090f-8dcf-49bf-9f80-7eba88db1278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d53379a8-6b1d-48b2-9e6a-381b26bb39bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b853afb6-041c-40b3-83f0-7f4056ebafc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "848a4e1f-2667-45e3-8c22-e329bd86f13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acb22b0-38d1-4941-8a6e-0e9e7237fd23",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d03d2c-72cf-47ae-a531-30c297bd39dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c903a7b8-704a-47a1-9501-8921d4710faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245a57dd-6890-4be9-81ad-ec2448dba71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9341cc3f-f3ed-4a73-bef6-00392e61a4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6db90d6-3bf9-4007-82ed-f1c7dd891034",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c449c16b-aca4-4b68-90e9-2f3a1068daec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1216c09a-8377-4e62-bfac-f1db65657098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef816f7-780a-402a-b65e-258ebfe4f4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a07c30-458e-40db-b674-8e04281721aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccec8c0f-53f1-4d67-adda-f01ae3e4ec6a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5691305a-5295-4d00-a98e-fce1e92cba95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18706e92-6f73-455e-b07d-1d2a255c57db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa58694d-4e69-49af-b3d5-d05ebb98e56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e432e17-4ddb-4ac9-9296-ff6bfa6a723d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6270fd2f-1ca1-4828-9f17-6028b3959791",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f777306f-9abf-4e20-9c5e-faab2bfaff5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2046528-6842-4467-be3b-7fa52d75e4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3548b834-b846-40db-8807-770744711810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64ee5fb8-e21a-49fc-bb38-7c63e6d12b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b35c71-349a-4846-b1e4-5a5dc6a095ad",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541a4bd6-30a2-4a1b-bb54-92b8e5f68685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3cab08-dae7-4e8b-b595-400e5687f9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76864728-87d1-4f0a-8a04-9efd880b5bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00648eee-43b4-491d-bb3f-e07d55d8ac8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485dc9f3-b1b5-410d-a443-51ab556ef0b1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c21d407-3db4-4e52-900b-4b2500c4dbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a2471f-9897-4c93-a79a-cf8021da8a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73156562-9819-405f-86b3-443b577ba5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6349de08-f256-405f-aff2-97b78dd38382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4814b5d0-f0d4-4161-9ccb-18f5f39d6d41",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1feae184-dba4-4c37-9c99-8084c03c3ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ca9e00-74c1-461e-bea0-426af9a2f006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b20ee6-f82c-408b-979f-26b981e602e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9363bd4-3d96-415b-b562-4fb9254ea85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1179c7aa-4fcf-4a67-9fa8-0c25d91e8ca8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1467bfec-bc5a-47e5-a8a8-e5341a8e45fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb461a0-0189-4240-89e8-6e3e45ad72ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47ea1fc-9555-4321-81e8-ae6b637d08ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "547eb201-3e35-4154-9d6f-b0ba57765c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c2592b-a1c5-432a-acf1-bd8a92e9ce86",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0390bc21-4e43-4aa2-ac9d-116d124d8090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b83f71-a380-4663-a2af-454607eb5af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49717cce-db0d-413d-8820-500636d5dc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24064427-9fd7-4fd0-b2c2-558d42bb109c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3e4ea4-b34d-4d49-9f5e-76d80e2d78ef",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882132e0-c7ba-428c-b13e-ecc0fd72d06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf5cfe9-bdef-4ecd-94b7-b97585aa0ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d720e9e-2e73-4c8b-802b-a1e012d03d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb9abfe-ceb2-4646-a762-f9ba5d997617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12ca185-d2e1-451e-a70d-1b2e27a432d5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c2e201-d8b5-40c1-9e16-c9c23e938f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74bc7d1-79b0-4a4d-b415-e89f3122c34e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40a505b-6faa-48f9-ba0b-8699c09628da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de604077-27e2-4580-8372-39236d514c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4988cfd1-598c-450d-9b7b-f3d4f9f35fc4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f514486-374b-4f3d-950b-2ed2fef1135a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a09f8b-c09e-4d41-905d-d5587aee8cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621887d2-db2f-49d0-8428-90868f04fe83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6faf39d-ab85-4d60-a78f-03a37996d9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191151b3-b96b-445e-b90e-0af7d2eb6897",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9247ce2f-23e6-46df-97ab-248a947df256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec30128-e3ec-4626-9674-33fed9660ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e750fab7-ad91-4737-a656-fcaf3b138f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c10a19-aa53-4603-8c2e-55a7a7531df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5ac777-2f41-4e61-89db-1b6896f5ace2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a349d772-c277-45b4-97c3-b8a0d15bd9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c1b924-6a95-481c-9e6e-5c16a39108c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bab5ff-757f-4885-bfca-4cccffb91f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad596a41-1fc2-47e0-b3c3-1157cec26a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848cae55-1a73-481c-8f28-a23759d45a81",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de92420-e5bd-45f0-af09-9203dd8b5fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa026ac-e6e0-430c-b22e-5d541e69f5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b77cd7e-21f7-468e-8fe4-18946490cf41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8e9f06-9ebd-4dbe-9fec-29bf0becab9b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0745cd72-072a-4a3b-967a-be879fbdca75",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be530e84-eea6-4896-acc8-442e8ce8df9c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a3edc7-6543-49b1-9852-52f07196759a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "557ab637-7cb0-400d-91ff-d9f98029112a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6c8e41-f976-4ba3-a376-bea8f38086de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2992f103-ddac-4a7a-8f8c-a93674eae2e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6418f052-df09-4eca-a269-d2b9e5360d2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0139f9d-de02-4a56-8cff-73ecda834415"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8783e3f2-eafd-4d93-976b-1403bdc3a6c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a43e1847-aac6-4210-b33d-b1a983b8005f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f24f0052-546b-4df3-9698-e40bac8d82f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6b7fb710-3463-4498-ac13-d92875613f66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "086096cf-6d9f-4021-80f5-d3da78d1b4f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68c4c4b3-0634-43d2-b070-3a1934d69644"
            }
          }
        ]
      },
      {
        "id": "94d8e073-37d9-4394-ad45-1a36c72f4ed8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ac616d6a-b63a-4dec-81a9-936d7aded31b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "12a0fed4-8192-40a7-81e5-c89680a12be1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7cfc2fe1-f31c-44d0-9649-8913da98ad33",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fa3ea9-4c71-40b3-b0e5-c454304bf829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc4a2eb-5a2d-4a3b-a8d8-810fd817c98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5091f00b-d0e1-4762-965a-bafb1be2f5bd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6439773e-8645-474c-882b-155bc4f3c895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7109d6a-c77c-4939-b2c9-ec41c592f4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f71363-003a-4d9b-b6ca-313a5b7faeef",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d099b9a-7240-40ff-8d25-748228a60a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9978dd9-2471-4498-b123-3a3c279d712e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4d710c-74a6-4ac5-9357-3e256aae4df6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ec9586-c36a-41c7-977a-d7a81b8deb7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61efec59-68dd-478b-a616-79eec7193443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e99f54-2ced-42d5-985e-34b6d38ab77a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c339a69d-114c-4d77-9da5-bb53f98b6312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4317774c-0189-493e-ab40-93de17e40e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39e114f-9272-4460-9778-cd699a7ed987",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaef7176-f0d1-4fd1-899e-2b5bd4c988ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98580fdf-699b-413c-908c-46c6c5d659f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fd7ac7-31bf-4413-a504-e14a27dd9fb9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4915796-9206-4918-a470-5920cd3d41ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3396813c-e1d7-4fc9-bcea-c08e5697ad20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf2a9d6-081e-4e47-a1aa-fbb6b79a2754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd390374-ba7f-4940-bf12-49c90f7a34e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcff11a-eeec-4a2c-98c1-ef26f7e6630e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e8c0d7-ee48-488c-a17d-f19b2fec84fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c302fb6-3f69-4f63-99e2-e3464f1e3eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cd3b60-2974-4736-8638-af8dcf8bbefa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee3ade7-63e2-4641-ba5a-1aa8b69aaf9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1dcd32-450b-446a-931b-eb374d9fb876",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb3139d-7f4b-45a0-9ac4-33b1373a9d15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e88e92e4-f4d7-4dad-afa2-986dbcde83df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "522b921e-affd-49ac-9286-2dd6b7b7162e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ce7ec3-2615-496c-8e1c-1c91a7d46e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e677e501-667d-48c0-922a-c04ac0145793",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f916a4ec-3c6f-44e5-8064-384a23061f6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3619423-ae8a-4125-b12a-4e858ff49960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7904c6f-ba42-4093-9e14-9b193934880d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba2721a-b8b3-4674-b894-062c4e718a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f9ad46-4f13-41d3-bd36-9bf274e51196",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ceb7cad-a00c-4c09-977d-59eb8e1940fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d58654-5014-4390-8769-f71966bc947d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9427b382-939d-4de6-aa86-f4a5c94df02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3700afe-f6db-48e5-947a-1ef3b6d3aa14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187756ed-3642-487a-9010-1d6e0e60e133",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f77c55-a147-4cdb-9de9-4e9053632d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25cdf7d-8a24-4f50-becd-1c5c8b901b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "025366d6-be5f-420b-b301-db574337e759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14029900-55b9-4d9c-ab5f-f639350f45c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe7c9dd-af6a-464f-baa6-634abf5233ac",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5d4c4c-24ca-474a-a3ab-4484d5bdbca8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "984d107f-b569-4ed6-a7f8-14b42799ea1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "948de421-cdc2-4b0e-951e-cd199188a998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a87d3f-d746-4dcc-8811-4d366b7053e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ddd3c7-2c4a-4b6f-a01a-fad7d26287f4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84514b01-d352-4d2f-96c7-8d8614c9dfd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76b409fd-bc1a-43bd-82a5-ed8ecfa34215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e05ac9a-ea56-40bf-a8db-b197d477f209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d7ffc4-a797-417f-bf01-78daf23d1055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef54c05b-26b7-4547-9e11-010198734235",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc551eb-0a75-4286-a35a-d9e78a90bc2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "decf1ed0-f5da-4be8-aec5-6c6b5c323bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa165c5-4999-4ff1-b11b-eddf4ef73e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a20041-af72-4779-8ef3-7262aaca27a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0989912-b4a2-419c-926d-b04552e39618",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e259108-9805-4733-b159-39b3bdf7119b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d6bb3d7-0686-4259-beae-f5dd4f5330b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85a7404-cd63-4f9d-bf2b-641975b12e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7040340f-6026-4ac3-85b0-1478999ee141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead330dd-0e0a-46eb-b0af-279e9694479d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d986f3e-4063-49e8-8be4-a5fef0453569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a600ec13-d361-4a62-8457-633e853bd0a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e130e602-1aa8-4296-a7df-aced09381b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a825e6-f70f-4ca8-b3f7-c1987c5fb04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1baec1-688d-41f4-8ecd-c859733a80ff",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b954aa-de03-451d-8324-fc0c3bdae959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa70626-51d1-4120-98dd-80c4b3b73c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c0f1fa-d3fc-4029-993c-362bb571ae62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f3a464-4c23-4c5e-96eb-940e1c4aefd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4d178d-c6f5-4962-ba31-f4c59bdecdde",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4eae39-1c16-43ea-9434-370e92e5542f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99b3aac-b870-4bf8-b38e-6c93e034d238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4656a0-f875-43d9-9b55-7dc7043cd322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9ae464-08e4-47f6-aa6d-b5eeae9c616e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1e638b-1c42-4c89-8c3c-aa7512adbcec",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79960c89-a9e5-433e-b202-7f8127af6332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7b3810-3065-4064-9d82-39a0f87578a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5be37a-e3c1-4e27-9a1a-e06f05db2f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ea3b9a-bdcd-4482-96ea-6f9cc0363e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8490c696-f1d5-4084-868e-32f427495e32",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1620d328-4093-4834-8022-6119cda18792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55670e45-abf4-4558-8df5-c814566d2260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bfeffd2-8c28-4bb5-ac59-52b806a0a868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc1e443-1d25-4c4b-bfba-5b704be076e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959327a1-d7cd-487a-97d7-87a1f0ba4844",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c2aa86-de52-4f73-892a-9329c2cdc7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a90fd0-c5dd-4a99-9d28-0daea1f97eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21dfd5a3-d2d3-40c2-b326-0de8d7a354b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109715dc-46a6-4a82-a621-5a92579fa64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9aceb30-98b8-4b0a-970f-aa829a0831e6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9876f4f-12d4-46e7-8df5-22a498d6e760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4c55e6-1764-4534-8ee7-574e3d28cda3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b8b5fa-9d34-4e77-93be-d22eaf1f3c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91935ed7-2c2d-489c-9381-0cdf0e7262d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3e5ba9-e968-4c4c-b040-ed9ba8a57742",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebd6d12-75c8-4363-9858-e1cd820cb9a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "184471b0-8ed8-4487-96e5-d151551cd126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0d23bc-ae01-4ede-b63f-f5ab32432745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da66624-6cb8-4625-97e3-7c44efffb87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbc906c-b423-4aec-8305-25e38c9926a1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e495d0-ee61-437f-b97a-cb3609787995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29e17016-5c3a-426e-ba15-7ddfc58f57c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffcc98a-4c5c-46e5-b05a-6b76dbdf6c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9769823-47b1-4377-a4aa-1ed0aef3fe50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91910aec-e7a7-4fc7-a0cb-41305785c535",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe1c7f9-3539-4dcc-83f9-747fb4558c0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "447e36a7-be7b-441c-bad5-a7538e959297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0880dc18-f34f-482f-8a3c-7f5271168eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943bc86e-82ec-4919-979a-fad0940dbd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc47056-02c2-4a03-9f7f-b0725f7d1601",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb82c5e-c114-4157-aa43-0b2fc645b20c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58e1e280-06b5-4b07-834f-f14e3ee0db2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4ee51e-15fd-4495-ac05-1de4a30eaf6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80158340-4a58-4629-8a49-1a98ee3aab8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b49ae62-0eff-4ae2-834a-1e70f6d28352",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b08776-fa09-48d4-8f8e-5b5db65d13ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d98201-3985-4555-ad06-05413e02b193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "870b19d7-0789-4fee-8885-17f8ef43bbf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31cbc577-f24b-4998-8fa2-979143de057f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ed8843-5622-49de-a4e8-fe08a7b2d9b1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a197f4-b279-4048-b732-8c13346bbc51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e998813-dceb-4f1a-b6ac-1349d113d916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56193106-1bf0-4dd8-8892-1b8d7c81db42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c2970b-f7f9-4e22-86e0-328f8ba993a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b65c990-4d5d-4b16-a392-d3a1b7336f5e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2185da4f-9266-44c2-ba12-33542de45fcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3151c899-9be6-425a-a5e4-94fed5f74a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8adb8d-c7c9-4ccf-bbdd-ef4c0bacd226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373388ac-1963-49b7-8cf9-9dafe9d7f011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d69808-d901-4c1e-a0d6-c023872ae079",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5deb09-6b02-41a6-866a-00816837593f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7898092-e8d1-4249-be51-e42642dd8467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "956cd715-1e48-4608-87dc-953110b3ceae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf927f0a-77f2-4c8b-a8f6-a723126095e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882333cb-e07c-4f5a-82bb-25455383ddd7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9c6948-a13a-4b86-98a5-de7f63dcea64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2b4412e-fde8-4cb2-a71d-4bf382408d5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2a0967-a6dc-4d3f-9268-07d372bf0b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1376f26d-c9d6-4839-a394-4bc002b5be4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a727156a-5c03-45d3-891c-71debf6b4cb7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5181533f-0a8a-4874-a235-0a06e2915664",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe38c81a-15e2-4ba1-b54b-f263ee968d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa0a148-c906-408e-86ba-9e5ba2225a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2159f85-535c-414a-87c4-efbfa4cc7fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97cc2071-9629-4437-b170-12dd6ab36f3c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aabf29d-339a-4d01-b887-2a40b36f7fb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "487fc929-b597-4573-b13a-2ebb1ecc3261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a277ed1-c58d-4c1b-9fa8-b9ae75677687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55a4e63-9219-4807-9e50-c7a5a3609a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3ab5c1-957d-444f-8ccf-d343fc2c8826",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ee9b4c-8a82-4cd4-b724-5b4dd692fe07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42673350-7bb7-4201-925a-b7ad710ac3c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d3aa6a-3b35-494b-9a6b-233323d64294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b6b080-2862-47e0-9981-3f53983b6008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b196b42-1319-4611-9cb3-466aa93af672",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d08c15-6f75-490e-9bc4-d25d9ab42f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c679ffb-9328-4b10-bb94-191445f90232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfed7c7-1a70-4e47-ab44-52c0a19a3ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7c53dd-e1aa-4a22-a3db-2ce615b8f206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232f242c-6283-49f2-9ab1-ce991b17d10b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca422a1-3bc2-43f6-af7f-230cb7dca6a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ee35e4-cbce-48df-9067-c4c7c2c026c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb36491-9584-4872-9f4e-041c205dcf42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7f108a-b039-4adc-8c96-78aaeee00215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6764998-9793-48fe-9cb3-45992a3e7799",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc07413a-450d-4f46-9a76-0cccc5d3361b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d7e28d-6691-4b71-bdb1-af094d35845d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0318299b-1e4d-46d9-9499-d0d3c38e6c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f27ddd6-3a22-4415-b464-f117004f71a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e841f68-c6ba-4e6a-8611-4be1273c11f1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173e5b1d-77a8-4282-9830-7822d5423a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91babe58-c42b-4b97-97d6-2c43d1eb2bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0aecc17-d14d-424b-8a6e-d004be6d890a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ed580c-b277-47eb-b33e-2795875fd338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7dd5da8-28c5-4512-95e5-d8972729a3b8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c893a773-ba42-4ecc-a7d3-2e24607ae7e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b3703f-f52e-4b51-8071-4cd1567101e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f0140b-3209-45e5-acb0-72e0b534e81c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e518d0a6-3f9b-4082-8f6f-1096071c20b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28d31df-9455-42f2-bb0b-a364b1dbf050",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343c6b7c-c9dc-498e-9ba0-0caf6d72d18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a11d401-7d12-4174-88ec-709d7273c0a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "958b5f11-0580-4405-acc6-5893f8ec1ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb632f3-3b13-4c18-9970-173b795623c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06632acb-378d-4b4e-9d36-6968bda605f1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb66108-5783-4032-bd8a-255ec39fdaa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7af6b88-7a4d-4821-9a31-8611df8211d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89a166d-3fe8-4888-8cca-6ba4acbbe751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ee3105-586d-414d-8740-ea4eb51704d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cf9d75-56dc-4116-a305-f27bbaa9f01a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48936b40-de83-45af-9410-77211c910e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2d1952-aef4-4b11-bb84-103b7b598485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "322f2a62-413f-4aab-bb86-ba76ffc9cd19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e925023-9ce7-466c-9645-cd2aa1ab9a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b55514-6ff9-4a2b-8400-ffae64f3d488",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829b0fa8-d500-4835-91f4-8903c6034625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be05e2cb-024a-4d41-9f87-f08d285d3fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff18e2b-b178-40ad-9127-428f40c1f278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8cf9425-24f5-446f-90ae-88bb10a1a7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c686345d-d8c9-47c8-ad7e-fc6cbf11a009",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536cd3e9-485e-4b62-afaf-8728f88476a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e26c6d2-46c0-46b0-a698-119404e99a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09a7b12-8531-4c1a-8108-3cdc289d4951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c72b9d-d4af-4dac-bded-a38d0feeb0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92e564a-7fbc-4322-8291-4b899c15fc1a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b709fbf2-9310-41a2-8bcf-b59b3dd0d0b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f5108b-4da7-4844-8b99-6bb07d63fece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45a9678-2ae8-46c7-ae3a-b306a65bb1eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4336bf-0bde-4e66-aafd-18879d55bf8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd04e6e-64c6-4643-bfbf-cd78397fc18b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4197420-d6ee-42c4-b612-b9f0569c6402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d845af6b-32f0-4d9a-ac87-198f7e726a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a4c3ef-8e26-4314-bcc8-83d7a5220c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08be5a4-177d-42e0-961a-c0accb3e248a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebed1d70-7e4e-48b3-9cd9-0e168f2f1bc0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef25627-97f7-489e-b0c0-1e97ee18dc1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674a5ea4-583b-45af-8b60-52c3245aecf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90943eb6-8d89-4ccc-a48c-7de213f2884f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958a037c-41fe-4c76-a0a4-d2b66b39ab94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2a593d-ecdc-455c-8ec7-9a0faeb6ea12",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd23722a-407a-4577-be3a-c799850bd876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b9db80-fdbf-4fb5-bad5-b13a9c84bfd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2ff59c-98ff-4670-91d0-c4d73cbface5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4034b2-3b7f-454c-a80e-2f730c3a1c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc24039-f5e3-428f-aba7-37ece3339e30",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b16034-7103-49fc-a195-ef66a699be10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0ed313-a51f-4516-8fff-39ec87c9715c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64dec6b6-e371-42dc-af95-eacc9ae27501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a323b8ed-5a15-4cb5-b7df-48fac1ba1d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19c9904-265f-4019-a8d0-d360e907a8d3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4282dbc1-c04b-48a7-8e2f-7edc7eca9a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04028394-9d4b-42a7-bb8b-0bd4eb804874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bfe9d1-4962-4b77-9644-53a580f041f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295a79a3-0364-4e9a-8756-384caa2c43fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60b30e1-d699-4416-afd7-6b80bb5200bf",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e8ea63-b538-46b5-b538-92ce6e69294a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0f4f0d-39b5-4399-8fbb-4d00b95c9f1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63488e0-faea-421f-8066-ca3d296147a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cff248-40b8-441f-ae4d-8cf06d7be042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9833f1-3a91-4c94-af6d-1f464edf480c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa3bf0d-30e1-4459-9431-96a388f17f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0332ef-e1f7-4340-af97-30a815747384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fd7a34-5733-4171-a2de-6a1c423e472b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab34d1b-413b-45c1-b1d6-e43b8a673f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60abaf94-5a9d-453f-9292-ff5fc2b7bf66",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c341d162-59e5-48e5-9811-2fac803fd559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50169e1e-588b-4844-8363-352c00f5b1ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cee75fb-ba89-446c-8fea-addf52d2d5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69c4f7c-129b-4fe7-b2b3-60689b8181f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7614b5-21e6-4e6b-a929-22da04dc290f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aba3f9f-23d8-48f5-97b6-b47cbc781ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5993c6c-9eb1-4983-b921-2918330a73de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42199657-89f5-4d0f-a7ff-52f02b825eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68fb9e1-dffb-43d3-9100-6772a9e3f201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6505cc-8e8a-4b38-891d-bf9960a28e8e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70de7ab-d80a-4ab8-a7e9-71f050fbfccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc85139-7e49-47cf-8739-1575455dd4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3efaaa-9894-4ddb-96f0-9ba5961c3502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd3b3ee-b429-4351-8601-37f7ce0ca6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f94b7c-8e8e-4627-8c1d-aa4ddaa39d68",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25c2ed6-75d4-422a-8b51-27bd00f314c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ddd502e-e99a-4292-a6f8-091ad68639e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "587eaafd-3ed0-41be-a1df-ace1a4eb5b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ac9324-cf8f-4c23-9655-d679b62dccdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea7233c-8a54-4d70-ad51-a51d57997222",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa837f9-9157-4eeb-8e8d-47d93cf00ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f1d00e-8955-4d51-bbed-57c275201337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c33d35-8cb7-48d7-949c-786d8435d381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ec3839-57fa-4005-a724-e39428e0441f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7f1f34-da7b-4d65-8da1-89b47748ff41",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07fab08-7e22-4f2b-b100-884bc156c8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a124fc-6518-4a67-8fb7-d9f9b95ab548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcca3e58-a9b6-46ab-9e8e-bb368c480d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730093dc-781f-422a-a834-0db350146675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803b2084-e81a-4e6e-9671-0e30c5bcb392",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa9529b-b99c-43af-b215-d8791865eab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0462bf9-c5ba-4e70-9f22-0d9cc9a7acba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d923438f-46d3-43c4-8d38-dd32edc46972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5fcaea7-e08f-4361-9aa9-8134e4dd3858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf4e8d1-51a6-421c-813a-30d9df7954bc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b650bc13-c11a-4ab7-aae3-b3c472f77b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba7150df-7df5-4084-b236-ded13d424eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f489c3b-a95d-442a-95e4-7d55451af2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa78251-0b90-41eb-b64e-305e5d3a3bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33617292-198f-47bc-8bb8-621577e566fa",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f0db56-6953-499c-bb01-3f6d340ac97c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88a77ad-83e4-426c-b226-e802792cf1e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07876587-358a-48be-9072-26f4b7296171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58cb5d17-fa27-478a-a552-110600bb4177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f3c101-1045-444a-8102-b1e90fe55228",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a72e3d4-6b9c-4054-86f6-94aef064429b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e7aae7-729d-4be9-b145-1f953fb55c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a79e989-6f3d-476b-ae45-f025b6f6bb8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "633b4df4-8f82-4922-b759-7d8548f14679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ffb423-aa4e-4a1e-8c5d-ce7312542f2b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b7101a-209b-47db-9ff5-9839206813f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c023493-9916-4c8d-b39d-8a4a9c491d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc6a5bf-2a1a-422c-870f-65b72c3a4287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852bdc72-f95e-4a36-9710-b20eb709ceeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f423e1-5bc5-470d-a022-bf64b814ce84",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4360b6c-fd73-480c-9157-397600a0b8d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d7c4099-ee76-407d-916c-5565abb1eed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef15c84c-2f31-4af6-bc23-3b21e78f9611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e32b679f-8482-4ca6-89fb-c083dc36990d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0ff393-c94e-46e0-95ed-851b11b7fc51",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d288a77-c166-4b83-9feb-aec3ff857d4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c10e4456-d24c-45f0-876e-6193b8f5bd35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9464ba59-dffb-4ec9-803f-4dea2f7f7134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04aa31f3-1cb0-48b5-88e1-20d34fa0092f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e46d531-db56-4c52-bbb2-31054716ba8a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586deafb-f8d3-4d17-b923-1e3833e7001a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cdafd96-d7b2-43b0-9959-1a7bf6a706c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae3e587-8c67-4b69-9264-0ae8871b6dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d969b3-e69f-4f0f-bfe3-3cfb0d8a228f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c27f48-16d1-4d98-a54b-70d260318e86",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a5b8d1-e9cd-4695-91f5-01de9c017f09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c3bfb1b-9fac-4b00-85d3-8b8e600ebd38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b4b31c-ded1-4153-b4ad-55c6c4092085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1633ecf9-b267-4042-9bea-98d3948edddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726150e5-2d8f-4f9a-8015-b6b071c0f9d1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4866709-4904-4347-854e-1b263bfb6fe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a012cc4e-9077-42e2-b26f-51a0842e3c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cda655-21c3-4846-9c18-d17a7672bc17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767a70f6-5b39-432b-b158-a0880d241b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29462f3b-b7ce-454d-9c28-e02470dfdce4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b822b71-3ee7-4539-ba08-610b796c8d30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f718bdb-56f2-4045-9ba7-b7d7df85deea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1944ce3d-4479-48b4-b30b-e2dfbb46d141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dabc580-f6b0-43bd-8fd3-a734eadc6de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ac8066-c2b2-4ebd-8901-3a25e60ca6f9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31dfaad-1f7c-4ce1-a3a6-4a6a42f5dbc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15001dab-b21d-4fcf-8c1b-1b086e294bc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e644999e-8305-40e7-aecd-9ebc625f7b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce76dae-5ee1-473d-a2c3-69a77d5d94d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877b0c8f-a891-451a-b904-e51c05cb2c08",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd71e48-7c5f-4dc4-bf0b-e11e812da935",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85599e0c-de93-4904-89b8-bc47b0150ba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f616535-4008-4f0f-b97b-4c2e9f241eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd7da03-161f-4f82-bd3f-05bcb70e9388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30a7270-e32a-46af-b680-a08bd0a751c6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5cca1ec-6a36-444b-b5ca-548fe08238e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dc0e8fb-2d64-42cf-b8a4-39c13fea861a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca5089b-4c8d-41e8-ba01-96596e0b7842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5902757-fbb7-4b1f-801e-d6fd4ab52a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4617b9cd-3e69-4ee8-928d-bcf03c8b016a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f687e546-6f65-43f2-a3df-825ecc54036d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd9797c3-1bdd-4f06-b36c-ea6072316e54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd1eeee-202a-43f5-855f-ce53b6c13adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f9066d-d388-48b3-a3bc-57b92c229d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf11c32-6fda-424e-89fa-c55cbd4e81d7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9ff31f-04a4-4e7b-ac08-385ed42a399f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f96bfbc-a32f-48ba-b080-cb938047c7dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "112d7a15-001a-4965-bf0d-cb33efbac4cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5471c85-a558-422b-84a3-097d3dd24719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6c0613-0fec-43a5-bcce-e31d976c5fba",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99dcf427-edc9-49a7-91a3-7af651eed42e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b7cdd88-590f-466a-95e6-6566a5cfdd8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0fec53-ea48-4429-922d-c3ce256f0c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000a3bc9-a1bc-4b7d-b4ad-1c6cea10b0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1f7f08-8401-45d2-af2a-26799f2a091f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870e98bc-1c38-44f9-8761-8a2a0a42027b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "300d0118-ea8c-4135-9860-734c139fdab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffc8122-e8ed-4c26-94a8-b77f3c14e6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20765da1-9033-409d-b194-9a7b87d5734d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91dd1ada-b3f9-466f-b6e2-770971d3cf97",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4d522c-acb1-4f62-b60c-bd33c4ebf535",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e5dbea2-a043-48dc-869c-ea6778c2710c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e75b24-0ff7-4a79-a8e9-11cd1fdeecfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8815058d-61e8-45b1-a1f8-7510f034273b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf4e772-d097-4f8a-86d8-c1be34bc7e9b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9566045d-ee07-4e5b-b9ed-00a7f7d8c2f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0371a65d-86c9-4893-974c-7f8d65f072b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d19b7b-586c-40ad-99ed-4b9d719925ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e72828d-c9b5-45ea-9c46-0f5ae4955e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453351f2-5005-4a79-a106-0a15386ef7f4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825e77de-8e5e-4c55-8ef6-bfbce9d59e31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16f196d1-ecfd-4693-a0ad-27f412d519ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17eeb19-83db-4a73-b818-60056de224a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fac2386-d674-47b7-8baa-a067cf64cc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f4761b-c688-4e3d-a0fe-e5a39f4dc82f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fd8e1a-957b-41ba-bde5-e544cfe41301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58fb32ca-81b5-413a-91f9-bf7f704df709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97afe37-5662-4b7a-8763-8231575ae53c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c342cc26-65a2-45b0-825f-e40068c019cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f55824-77fb-4b27-9714-12f1db23f3b4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089bb27e-0f7c-4794-b2b4-7607cc8063f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e79bfc9d-8b89-4002-93fc-dc0e9feca629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f98d3b-60bd-4f3f-9738-4b8bd2719688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47dd21fa-5063-4651-8ad2-a5f0b6846b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997ebe0c-deff-489f-9e12-87e5c1e17ebe",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fe7926-a7b3-416b-a9d6-c06e28f1b7dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9193a63a-8c85-4735-8719-dc22e65a6769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "318b524f-5ba9-461e-b607-21a1b4e538ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe95ecb-9a6e-47b1-ba80-1f96a72851e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0113b2-85f3-4ffb-8174-065a71a33f7f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ff5187-7d1b-46e4-927f-f05d3629131c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b2c0912-afba-41d8-8573-ae7268244afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9829363-1a28-4287-a667-39930598e452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831836da-4f90-4226-b7ed-d1b2e2358e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf880327-4831-41fa-b027-4622cc0a413d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f963779c-6eb7-4750-b735-305cad3a32f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5d98517-a5ee-4e6c-b38c-417c9be81fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8479d85-34c4-4ac2-b269-b49520ffc63b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e4498cb-a4ff-47b3-a9b1-1d2e97a005cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0650394-590d-4448-8b4f-5ed598e50ab4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1adfe6-7b95-4567-b0e7-e100e18f5bc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b2a1285-ca1d-4601-8a2f-f31eac2aa957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "343e2c69-bd19-47ab-8bac-7c5ab2affa8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8118fb3-b650-4706-99d5-5a35c9a21148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ac4463-d346-4ab1-9958-cc0615e0ae65",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c92b6c-5f6b-40bf-bafc-60e954a0ab1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f29ff201-489a-475e-b23a-8343ee1c8b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b145d7-59f0-4ab9-b21b-414c655e4749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac696d22-178f-4682-ae09-e4e37cd3bc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694d36fc-4c0a-4c98-bfd3-e640d82489cf",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae20001-3f38-4e78-96f1-c9f65286935c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53179616-3e05-49ca-b1b2-77eca3a99aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb6ea0e-5ed5-4ee4-9533-6a2fc7507571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85be1a0-78d2-4b3d-a024-c6ae311349d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d32d49b-2cf7-443a-8a86-9cfd2bc5aac1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae222aec-0df2-4f53-a343-03427f9f8183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cd74974-59f2-4648-a694-8c0b8a8e654e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f67660-5873-4e50-ab0f-61fd4d26c17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f438948-b1c3-4284-b5bb-26eee7c44084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c0f295-1bb1-4df4-a182-5de9d85333ee",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17eb2dc6-bd40-4e3d-9e27-d50c44c16af9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b703009e-c7b0-45f0-9e53-44a40c3bf5c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6615ca9-a3c9-4aa7-8614-919400638ad5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b825b4-cb31-4bb3-b5bd-10aa62036d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8dcfe2f-b288-48e0-81d5-9d4f69de1ddd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43970045-6b5d-4e28-b4a5-5601be3711c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "603bb77c-2266-42bd-94e6-f4d92249604e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b2d026-ac91-4a31-a869-5a8c7b55f42c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af278f3-9c15-40e6-b0cb-939a969a54ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9268bb4-2ee3-49fc-8bc6-0f753b2c5c78",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcd5421-1f6d-4b72-9a93-bcc199a7e752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbd77b3d-7a48-4211-b84f-19a6e7089cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7441ec6-fcd0-47fa-860e-068290d5fc73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03473a7-2b89-46f1-8f98-870f27e78779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b85a4d-20a3-4ee9-9172-e095b8ef09e3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb796951-ce54-444a-bf28-02a8d0f7f686",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "764d5823-7752-41ad-85be-62fe835d59da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46ede18-3f02-4d7f-a56f-7173ec3b22af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f59ce2-6be9-464c-9a0e-5c3b88179722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f179b26-c4bb-4b7f-873a-0aced47f25c8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa65e075-67f5-4960-aaf6-e46e303b6ab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bf26330-341d-44b1-9a47-493f6c6ab480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61979b5a-004d-4fa7-9c32-62435f8e3d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b85814-572d-40e8-b330-95c39c3b46d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09033ca9-a105-4dc6-9d4e-ccf3d1bb7e5c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027ec3c1-701f-41c8-8aaf-a1b41d759d1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ba73b8f-09ba-4499-a4b8-35aebdd87768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c939323d-4ccd-431a-90cd-c25b1a1e7657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90626bb2-39ad-45dc-96b2-7d67087b64d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1e06bc-d773-4ab7-85d6-1d6950082428",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0ec53a-0cb4-4278-b659-a70b66ae6d70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5a7025e-575c-4036-8a36-de72eb57ff1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "066f0540-6d9f-41bc-a642-9d7de06f21bf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497d5987-5c1e-4ca1-ae0d-1d8705383f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8202d646-944f-45b4-96e7-b9a2a6f5df40",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3adcbcb-059e-4e67-bf07-680a481e4b9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbdd4de4-a80b-4355-8a92-6a4d9d9784a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a2804e-eb3d-4d85-a7c3-2a758b0befbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5713ee2c-31d1-4531-8e8b-7b0797a36965"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "654d3867-a682-4275-8264-6f94fb4ff122",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c38c1cb-42bd-45d4-a3c4-82f3ed492c36"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0dd853f-cc2b-4407-b87e-6965a32611d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2ae2aaa-8e5d-438d-9dc7-e60b06f32c8f"
                    }
                  }
                ]
              },
              {
                "id": "76c4cd8d-2742-4dca-a32c-49b70e4b69ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a7a6f67-7ab2-46c5-a33b-f8c6293e5d28",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cbc198-6dc1-4a94-a8c8-2b864c0c0292",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7a5a362c-95b1-4781-b46c-e846b1c5b71a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b5966c-bba0-4772-b2d6-de510e355e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e72b3d72-64ef-4020-a5a3-cff87f5340d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "668992a1-79d7-4618-9fc4-5aea43e89918",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0bd930d-2c82-42b1-be25-58cfdb7a5de9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "964a0b53-974a-46d9-a2f5-6138adef3503",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5e1cf4a-0358-42db-8d30-e6034d415cbd"
                    }
                  }
                ]
              },
              {
                "id": "e4f3f157-3e40-48a4-99ef-bd87e235fa1d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "37abe717-0acb-4bcd-97bc-411bc3f51b13",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cd6b55-1f76-404e-b1d0-f02ec7d3f10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b69394f1-fc47-435c-b118-139573c1411e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c9da43-9c3e-4b43-8bca-1339c1bad8de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60388991-5f93-4c10-bd87-f205e7aaa010"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f5ea61cc-3690-4f8d-817c-72b120b5e4e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2dd40bab-b6b3-4495-9bbf-059cca183c8a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72e4f989-06ee-4e63-af98-817347c2366f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "07f9e809-ddfb-49e3-ad87-a5be53c974d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fade3afe-a455-4e9a-b204-a61f568cdc69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "383805cc-55c5-4ffb-bb91-fc1d07f15e73"
                    }
                  }
                ]
              },
              {
                "id": "84778222-65fa-447b-aac1-489d34161ceb",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e64194ac-92ce-40ca-a937-59575c1734cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6dc14a40-87ce-465b-93b1-0cc2ecbbbb3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7de936c7-3554-445d-9de1-a722f4f3177d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b842dc72-d3f8-48e7-b56a-6b696c467684"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d5e900e-1ff9-4770-90ef-5b8eeb0253a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8448fa75-c085-490c-80f6-e3d15008b7ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e3d9970-7319-4b07-b13f-2c62e5b288bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a1f7a7f-a8fb-433c-aa63-ce6a53fabd10"
            }
          }
        ]
      },
      {
        "id": "44d0ebdd-e2f3-4074-807b-3a16612033ac",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ac60fd24-b604-466c-884f-da78375c664b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "698c7eba-a66b-461f-8397-8195cc7cb3af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb9b220f-fe5f-4023-93f0-dd2e2ad3dbc8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6402a62-f3be-4cfa-b2f5-2312f0b61514",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6088ea52-b565-47d1-8bb4-92404b7aca41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24320df9-4479-41f2-a674-498bafcb6923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e381d242-0b51-46fb-9edb-3c2333a09299"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba2becb6-57b6-4fe0-a024-ab5f7c4c8205",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9973fb6-de4e-41cc-9d3d-d7d2f4e6fcc6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e1c53fb-ae8b-462e-9935-e79eb754c397",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67b377fe-c040-4937-9bd0-044ea8b14532"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d643c68-75f7-462f-9f04-e725542322f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "59dda724-4ee5-4cd2-8da4-66be0ae61888"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bfcb4643-73a0-482d-816a-dba24a6ae7a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2c8f202-2015-4cc8-aea1-92afe2713fa9"
            }
          }
        ]
      },
      {
        "id": "37cca720-7c4d-4336-aeec-749e1bd0dce6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "257791ab-e1d8-43da-8c4c-b69832a37963",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81567f39-a487-4458-a7dc-4329df051213",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48b0316f-50c8-41af-b472-0d817f6f8a5f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ce29e1-c8df-4f74-b877-debc93c717d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "680afe49-45ac-4a4e-9841-640f3cb5c5f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ed7edb-013a-4c41-a378-ca17f2934480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8f5b5e8-cddf-425a-b9b3-ebc67532b7fd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a93a68f-76b6-4591-bfe2-0034897fad1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "121a3b33-c1a4-4028-89ef-bb1125b709ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2ca6941-3f5f-42e4-b725-601c82dd885b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6783d499-4372-42bf-8ee7-184982e4e67e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "277eca3f-126b-4aec-af74-56396d83d752",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dcf35d5c-a916-4cad-96b8-37a49e1976ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e89abb3-2942-4661-9598-d25a3579e776",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5517fac-c1fd-4584-adb8-1859fd4e7c60"
            }
          }
        ]
      },
      {
        "id": "d48680f4-8647-4551-9785-dfc6a5408182",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4112607c-90ce-4ae8-81c2-71012a031163",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08e6023e-bd7c-4558-8190-a8f94d82da5f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8865115-ba5c-48b0-b7dc-d8cdfeaafd7b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c800b43-2e22-4812-a306-cc113611c232",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db488325-e644-4cac-9603-f9b1cab4a562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5985c0ef-395b-4a58-b72d-4744552117fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "796fd021-f22a-4289-9e16-f9a394f23104"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a678d3d-747a-482b-8920-dab3a3435658",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3a05ba2-09cd-4ef7-a7d8-d2c3ada1679c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6db0d02-6e2e-4074-b128-154e9904f73d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ad1d183-168c-43c6-94c3-8c2939a0a3f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ed67d8e-a7b2-459f-ba76-16d446b6dd14",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "92011088-118b-4e66-9fcd-c261c5c6bbaa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a2b9191-eb44-42cf-90e3-8b9fc5ba65df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c318f3b4-8dae-4526-ba84-4a666fc65ee0"
            }
          }
        ]
      },
      {
        "id": "676ead09-8b65-4777-94a5-ec0ac914a7f3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf6f5f19-3d14-4cd3-8112-fd01174cec3c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2553d692-984f-44b5-9ac4-997c64c56c95",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5044c285-43f8-48cb-bc46-fd8562d7f668",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67e77bf6-fa40-482a-9706-e93f3eaf6e96",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50947226-5da7-4be2-b931-b50d91e9c850",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.105633802816905,
      "responseMin": 3,
      "responseMax": 230,
      "responseSd": 16.121767170846077,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695429105054,
      "completed": 1695429118458
    },
    "executions": [
      {
        "id": "ca84cdc2-0506-4224-9d18-f0035cd56c7b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7adc9abd-23be-4f50-93ab-69dbb19adcb7",
          "httpRequestId": "cb347322-f1f8-4bae-9e70-dcb4d6ccb7f2"
        },
        "item": {
          "id": "ca84cdc2-0506-4224-9d18-f0035cd56c7b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "86c223f4-bae4-4e9b-b139-7135f8b300d4",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "d0870640-2343-4d50-b320-452d3847a9df",
        "cursor": {
          "ref": "dbef5870-52f8-4bf8-8406-8005ce69de1b",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ef6f18d1-19e4-433d-b6fb-dcfb6f853c67"
        },
        "item": {
          "id": "d0870640-2343-4d50-b320-452d3847a9df",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "301c9e06-840e-4de1-83fb-a919e3593a81",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "988a3642-b29c-4147-9012-39e2be7332b2",
        "cursor": {
          "ref": "09b278bd-4409-46a3-8a4f-cfcc51514966",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a26200b3-050c-4be2-bfd9-f937857777de"
        },
        "item": {
          "id": "988a3642-b29c-4147-9012-39e2be7332b2",
          "name": "did_json"
        },
        "response": {
          "id": "88632b2a-addf-4ece-baae-25e49e4d3cbf",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a25980d-d5f9-4efa-8457-9a2642fd1b45",
        "cursor": {
          "ref": "1c39af60-b121-4ba4-8a15-27f518bbc2cf",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dae976f7-5c10-41e4-86de-f057cc8251c5"
        },
        "item": {
          "id": "8a25980d-d5f9-4efa-8457-9a2642fd1b45",
          "name": "did:invalid"
        },
        "response": {
          "id": "ae4f5363-ae73-4a27-8187-94a47f2381b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a25980d-d5f9-4efa-8457-9a2642fd1b45",
        "cursor": {
          "ref": "1c39af60-b121-4ba4-8a15-27f518bbc2cf",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dae976f7-5c10-41e4-86de-f057cc8251c5"
        },
        "item": {
          "id": "8a25980d-d5f9-4efa-8457-9a2642fd1b45",
          "name": "did:invalid"
        },
        "response": {
          "id": "ae4f5363-ae73-4a27-8187-94a47f2381b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51305cb5-ff26-49a6-b821-2fe926f69421",
        "cursor": {
          "ref": "5b022bc6-201c-4a9e-b45e-779189cda360",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "88f996de-9ba4-4ff3-ae89-4a78ca56b9df"
        },
        "item": {
          "id": "51305cb5-ff26-49a6-b821-2fe926f69421",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f4c9c114-527b-4f74-85ac-f677d7bd85b3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b05c3d3-905f-4757-9ee3-dd9d1ba51898",
        "cursor": {
          "ref": "6f2d0fa1-304e-47b0-890a-c2253d76994b",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "59dc49f8-3e29-4911-ad00-e966dd6bf6bc"
        },
        "item": {
          "id": "2b05c3d3-905f-4757-9ee3-dd9d1ba51898",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c9995d2b-4368-43c4-8248-ccefdda6255a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04aa3805-aedf-4d84-9355-98734447bbb7",
        "cursor": {
          "ref": "06a81337-abef-48e5-8005-5257ce5bca59",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "18352ec2-5851-4a42-becd-e4ea937fd5d7"
        },
        "item": {
          "id": "04aa3805-aedf-4d84-9355-98734447bbb7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a925a580-7ef9-499e-9a56-b7ff52e2e6b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e9de79-a6c0-4c90-81bd-f0f51884a93e",
        "cursor": {
          "ref": "fc45dfbd-8104-4e98-8c29-010b209f59e5",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "76d151d6-9710-4b39-a68c-393fda0817c6"
        },
        "item": {
          "id": "d4e9de79-a6c0-4c90-81bd-f0f51884a93e",
          "name": "identifiers"
        },
        "response": {
          "id": "14314a99-80a9-4aa9-94a7-3168ff1a99ab",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45f26ac-5b2c-458f-9b85-9d9c15bd489b",
        "cursor": {
          "ref": "85099451-8b28-48bf-ac84-f92acd8dce35",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3f850c62-cdfa-4ec7-8636-e5ea488bf025"
        },
        "item": {
          "id": "b45f26ac-5b2c-458f-9b85-9d9c15bd489b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "15b32a56-6848-4bb8-9fa5-6b36d74e0454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ed9959-515f-4f13-8c93-fa5969ce2cb8",
        "cursor": {
          "ref": "72b7bc56-b75e-4df4-925b-275be1303d0c",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9e71cdf5-e12d-4b0c-9bcd-b0697ad1c6f3"
        },
        "item": {
          "id": "f0ed9959-515f-4f13-8c93-fa5969ce2cb8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "89c58837-60c4-4d90-b698-80bebc583fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012a20ab-90f4-476b-808a-0a065437a986",
        "cursor": {
          "ref": "e50aaae2-b38d-4614-86ff-d84c42fb0699",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "331c34c4-4c51-4988-bc7c-b731a50715b3"
        },
        "item": {
          "id": "012a20ab-90f4-476b-808a-0a065437a986",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f52c4cf3-86a7-4d6b-9d29-8a7ce421ec14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370550ce-4919-49d9-b447-340a3d80a76f",
        "cursor": {
          "ref": "5f9e4730-bb90-446a-b6d5-eecb8242731e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6a655281-11dc-4b13-97bd-71b5717b34d2"
        },
        "item": {
          "id": "370550ce-4919-49d9-b447-340a3d80a76f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0fb1c7bc-5a95-44df-9c29-78abcfa0efea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04791de2-46e3-47b8-a5d4-21458e2719c2",
        "cursor": {
          "ref": "410b6489-ddc1-41c5-8e42-bdcb309b0163",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "903f0c57-4230-465c-8c42-aa10515cbf78"
        },
        "item": {
          "id": "04791de2-46e3-47b8-a5d4-21458e2719c2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1da0e4a0-7026-4ac4-b03f-bf3750204f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3797a69-2673-4510-8fc0-b32273cc05ef",
        "cursor": {
          "ref": "88abee5c-db6c-42f3-8d07-8a4ca84d7330",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e58a114d-ef36-4c42-9253-062295170642"
        },
        "item": {
          "id": "c3797a69-2673-4510-8fc0-b32273cc05ef",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d06668f8-76f4-4f9f-bcdb-770099123000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2384abc9-79ab-436d-936f-a25c11af87ff",
        "cursor": {
          "ref": "5b58e882-90e0-418c-b4da-c9db33cd6f04",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "92a6199c-4a99-4adc-a95b-d55599058584"
        },
        "item": {
          "id": "2384abc9-79ab-436d-936f-a25c11af87ff",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "403b42ae-5889-4d8e-90ed-87515dc1b3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d53b58-0b50-45d9-8022-f627aa9bde7a",
        "cursor": {
          "ref": "fadb7135-3395-41a7-8cd1-85b06baf1cca",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4655f92c-3599-42b5-a7b0-b2f489b09478"
        },
        "item": {
          "id": "39d53b58-0b50-45d9-8022-f627aa9bde7a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "077a3e33-efae-497d-a0ef-97700b3e5bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cdd41a-1bac-4093-abcd-4e2f6b585342",
        "cursor": {
          "ref": "beedcc3c-8d57-410a-8c30-b75645afbdf6",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4768b991-23d7-4e2a-b791-b7e810b29fbc"
        },
        "item": {
          "id": "99cdd41a-1bac-4093-abcd-4e2f6b585342",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3609299a-97cd-4153-b8d3-24fdb047b798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9cf0a0-4a9b-4f5a-a01b-4cbdc0ab3702",
        "cursor": {
          "ref": "a06d9c8f-c8f3-4313-99ce-dd9140f3e137",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "586fa754-e004-46b8-89e1-9878210c39a4"
        },
        "item": {
          "id": "2d9cf0a0-4a9b-4f5a-a01b-4cbdc0ab3702",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5e46f914-8b34-4504-bc69-b5345ea48b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20645c56-b952-4ee2-92ab-9d0d7e13cf32",
        "cursor": {
          "ref": "f439096c-e818-4d65-ab2f-8db80711456b",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9f07bb25-2427-4c43-be7d-1a6f69a80d3b"
        },
        "item": {
          "id": "20645c56-b952-4ee2-92ab-9d0d7e13cf32",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "791ed4f4-840a-44c5-85bf-651deb4f94ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c59a9ac-59a2-4eee-af36-43490e34cd66",
        "cursor": {
          "ref": "87ad6061-de57-4907-b7c4-c556a3646c33",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7cb7f794-8006-4e99-966c-369e84c7b21a"
        },
        "item": {
          "id": "0c59a9ac-59a2-4eee-af36-43490e34cd66",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ba8d1b33-b1ca-400d-b2ef-e81537e8afa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73411f58-ecf5-4f59-a094-384487a94fd4",
        "cursor": {
          "ref": "865390ed-d6a3-434c-b5bb-2d484e363eb3",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6abe5693-9a02-4f27-8dd6-10f67c82bab4"
        },
        "item": {
          "id": "73411f58-ecf5-4f59-a094-384487a94fd4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "dc57ff9c-4842-4de4-b6c7-2a0da6fb4f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1677575-b512-4af3-b987-5e6cb7cded1a",
        "cursor": {
          "ref": "2b8e8604-097f-45b6-bc3e-2b0404ce83ea",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "19c6447d-29dd-4fef-95d9-5528c2332243"
        },
        "item": {
          "id": "d1677575-b512-4af3-b987-5e6cb7cded1a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "346f642e-49e2-4d2a-82cb-5320f2ac3427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbf0b99-cb57-43f5-b814-4e6ab3af5053",
        "cursor": {
          "ref": "e8adec95-6426-46ba-8e72-4f5dffa60fab",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a65078b2-d8e3-4558-a9b8-6f5f548e1c1e"
        },
        "item": {
          "id": "4fbf0b99-cb57-43f5-b814-4e6ab3af5053",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f955e491-dff9-461d-9be5-d4552ef13b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdd094a-a4ca-4d55-90c2-9640b9acef5e",
        "cursor": {
          "ref": "b113c074-da19-48ce-af36-bc04e2c1f7ac",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f5c6cbf4-8429-443f-b8fb-a3b05f5bb735"
        },
        "item": {
          "id": "5cdd094a-a4ca-4d55-90c2-9640b9acef5e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3159bde1-481b-46ca-9a50-43ca47426475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fffc77-e333-4b4f-9546-12444b7ffbd3",
        "cursor": {
          "ref": "5a6cb3c7-c8a8-4f38-ab71-10f8fe4aa9d6",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5dadcce2-1074-4aa0-8bb4-f264289a0612"
        },
        "item": {
          "id": "11fffc77-e333-4b4f-9546-12444b7ffbd3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "92880caa-60b8-49a1-81fe-8a8faa873f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2291466-ff98-4758-bc38-503ed82b3cb2",
        "cursor": {
          "ref": "c61e884d-bfa9-4d4b-b9fd-051b8a95b62c",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5e0dcc77-4d70-425e-a3c6-f471665b7c34"
        },
        "item": {
          "id": "f2291466-ff98-4758-bc38-503ed82b3cb2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3aeefe4c-0494-4b8b-8fa1-352ffe63bd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0934e100-5f99-4aa2-a6d0-87bebe3cb895",
        "cursor": {
          "ref": "ca97fcf4-5a00-4710-b2e5-6b80dc71981b",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d1bbe77a-159d-44ca-ad7a-6aa27fcd69f7"
        },
        "item": {
          "id": "0934e100-5f99-4aa2-a6d0-87bebe3cb895",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6850f5fc-3a09-4aa0-9355-e6cc5af0745e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c9aa24-273b-437f-9fb2-04c941bc83d4",
        "cursor": {
          "ref": "4b8a366c-1145-40cf-a669-23b16452210d",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8d71df87-b8fd-45c8-9947-e490ba5dfc81"
        },
        "item": {
          "id": "70c9aa24-273b-437f-9fb2-04c941bc83d4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7c329645-94de-449a-8fbc-9e9e573b9ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02643fd4-945b-48fe-ac10-bdecd9133085",
        "cursor": {
          "ref": "6fc8ce8b-6392-4348-98f2-558fddf25cab",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2e0aa2fa-15dc-4d8b-b1cb-8b97dc370865"
        },
        "item": {
          "id": "02643fd4-945b-48fe-ac10-bdecd9133085",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0ffd1602-1534-46e0-94a2-7b8c60639141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b6ffd0-4ef8-4e81-810a-15be5c6d2065",
        "cursor": {
          "ref": "0c3ad188-69f8-41de-a655-6f3dbba10f34",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "93f2b4d1-d8a5-4cd3-9207-979d11aed006"
        },
        "item": {
          "id": "b4b6ffd0-4ef8-4e81-810a-15be5c6d2065",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dc7a28b7-9d28-4855-9941-922f9d23478e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2062eb40-2d44-4332-b5e1-45cd5e49ed6a",
        "cursor": {
          "ref": "c6fa19c1-33c6-4eb5-8a9d-14a4c181fec2",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "aa570eb0-02cd-4399-afa3-18b99ea6ff57"
        },
        "item": {
          "id": "2062eb40-2d44-4332-b5e1-45cd5e49ed6a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "85c06a3e-886a-4e4b-90e9-9eb4fb281b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ceabfda-87b3-4ccb-83f0-5a1af84b3a99",
        "cursor": {
          "ref": "e6bb65c0-89b3-4bee-896a-84e0d7e119d7",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ddf43360-6cbb-4f9f-af07-9aa94eb90e98"
        },
        "item": {
          "id": "5ceabfda-87b3-4ccb-83f0-5a1af84b3a99",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a6cbb8b4-590d-4322-8a0b-ff8d4db00e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677c7ce2-eeee-492b-a774-d500fc14e226",
        "cursor": {
          "ref": "0e8eb13e-bd7e-4fa5-a527-cd042c873c5e",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a53fdd3a-78fa-4166-945b-8a300bef2c71"
        },
        "item": {
          "id": "677c7ce2-eeee-492b-a774-d500fc14e226",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "19da429d-0656-4c2d-adf0-89c29c96c6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea5288a-f6e3-4b44-954d-54dd855956f4",
        "cursor": {
          "ref": "b411f67c-ae5e-498c-936b-b73f2af32168",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "739832ff-44e6-45f8-867d-95c540cb7aca"
        },
        "item": {
          "id": "eea5288a-f6e3-4b44-954d-54dd855956f4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4f8b4c6a-1363-4bf7-8006-e54d54f5566d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31e8d5d-fb38-48a5-b6e6-ea26011652f5",
        "cursor": {
          "ref": "6d90673f-b766-4133-a5c8-f0eb754c19f9",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e361c014-8369-47e3-bbd0-de1f4ad78fe8"
        },
        "item": {
          "id": "b31e8d5d-fb38-48a5-b6e6-ea26011652f5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a6630697-2bfb-4520-9814-33569da51fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375ea7e8-7756-49f1-8776-7f73c1299b28",
        "cursor": {
          "ref": "0f0be8aa-c4e7-4b06-8d00-de6b258bafd9",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5ee740d6-1dc5-404e-8063-64b8d8143d87"
        },
        "item": {
          "id": "375ea7e8-7756-49f1-8776-7f73c1299b28",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e31bc99f-4d84-4553-8fc0-b0c34b40fa7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e57a1f2-9119-4348-9645-b44055fc347c",
        "cursor": {
          "ref": "5a62855f-c706-4fa3-b4ad-f378d2f90ccf",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f3f094ee-1708-42a0-aef1-043218252fa1"
        },
        "item": {
          "id": "8e57a1f2-9119-4348-9645-b44055fc347c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "34fefe63-3b1d-4b59-a58c-6fdaf2f23a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e9147b-5f71-4eec-af3a-9a4325763e67",
        "cursor": {
          "ref": "3791e149-7ac1-46f6-8e49-c534c3b990d8",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "bbce64b3-967a-4f64-966d-e15435d0dcd1"
        },
        "item": {
          "id": "90e9147b-5f71-4eec-af3a-9a4325763e67",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "449ff13a-c707-4772-90b4-db1098fc42b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2296a76a-8bd2-43ff-b1a5-76ed5da94259",
        "cursor": {
          "ref": "40a30a15-840e-4a04-a0cb-7ae16faa9db9",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "db130f86-de69-4e11-afde-fc725a7a1b5c"
        },
        "item": {
          "id": "2296a76a-8bd2-43ff-b1a5-76ed5da94259",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fb0030be-b75c-4963-ad1d-050ad9adce5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb7abf8-3b6d-40c4-93a7-b9ce4bef253b",
        "cursor": {
          "ref": "4bc29d3c-2e78-4a72-8a69-08441b3da026",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f363a311-7fc1-4230-a66f-bc75c71a9b6c"
        },
        "item": {
          "id": "acb7abf8-3b6d-40c4-93a7-b9ce4bef253b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "39e5604e-18b7-4464-ba79-785114bcc8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2299d7af-150b-4340-8aca-7ca300032114",
        "cursor": {
          "ref": "f5f8adb7-27fa-438c-918b-81c3e842d88a",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "faf3680b-c131-4fc6-a674-ac87fa1169af"
        },
        "item": {
          "id": "2299d7af-150b-4340-8aca-7ca300032114",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4cd08002-5b89-467a-9999-19c6374dc13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b383b8-cf09-452e-9041-afc6b27dbd26",
        "cursor": {
          "ref": "0f4d67e1-03f8-46b7-a9e9-b380f7d8428a",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3ea550c3-cff6-4391-8853-01ab0b506264"
        },
        "item": {
          "id": "25b383b8-cf09-452e-9041-afc6b27dbd26",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "13a31c57-e06f-49af-a5e6-35b0696d18c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f40f11-0175-4a40-bf0d-02fe64645639",
        "cursor": {
          "ref": "44011ee1-53c9-406b-b320-2767e706c8fe",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b33830cb-8991-4207-a74e-544a1fd45cef"
        },
        "item": {
          "id": "78f40f11-0175-4a40-bf0d-02fe64645639",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d81b0cd4-4e78-4784-bfa9-432178892ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1bad54-b92c-41dd-ae35-45c3db182de3",
        "cursor": {
          "ref": "6d3945de-9f92-44ec-a474-6bc134a93834",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "66f77084-26b3-4482-a1a3-a1c39a38abd9"
        },
        "item": {
          "id": "bb1bad54-b92c-41dd-ae35-45c3db182de3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b6898b75-a283-46df-b5ef-f7d55c5a5b69",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 20,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9f17e9-35a2-41f5-a3fe-9499577bb0d2",
        "cursor": {
          "ref": "bbc1e41a-32c7-4953-94fc-179a369c613b",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a907baa9-2a77-4312-889a-7c36c870e05a"
        },
        "item": {
          "id": "dd9f17e9-35a2-41f5-a3fe-9499577bb0d2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8afa30b2-9d70-4d17-bb7e-6ee3e58d9a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c14594a-8848-4c70-9269-b1444ae7e95f",
        "cursor": {
          "ref": "0d1ff9a9-56d1-43c1-b886-87c653d17935",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "21ee4da4-8ab9-4fa9-abaf-bf465db9ffad"
        },
        "item": {
          "id": "8c14594a-8848-4c70-9269-b1444ae7e95f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3dd6e155-9354-4091-bb64-014f7cbc0bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ee9458-0916-42c3-b29c-7879ba98590a",
        "cursor": {
          "ref": "a3033a9e-9c12-4226-bb3e-1c9f8a86003f",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "66babd57-3857-4416-a010-25ff1312a669"
        },
        "item": {
          "id": "87ee9458-0916-42c3-b29c-7879ba98590a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "19981f59-64d1-497f-8903-c54e69d68175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a4a47a-b1b9-4d3a-9bd4-1f28fbc0abbd",
        "cursor": {
          "ref": "672f264f-5afb-4323-a326-6c25fdba6faf",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "dd86fb30-62ec-4d2d-abdb-13a8136ca05b"
        },
        "item": {
          "id": "a7a4a47a-b1b9-4d3a-9bd4-1f28fbc0abbd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "38d1a88a-d991-4c62-bd14-11a23507557f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3ef61e-cc70-4cba-8cb1-ad510c3f004c",
        "cursor": {
          "ref": "45c9a389-7b5a-48a8-9848-f6acf7ea3be7",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "74b7621e-323d-4eb9-a5e7-def10b015cf5"
        },
        "item": {
          "id": "cf3ef61e-cc70-4cba-8cb1-ad510c3f004c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "77606f80-8bdf-4e35-93a3-4a062b794b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51745f3-0c61-4412-a98d-27848c523703",
        "cursor": {
          "ref": "4300195a-94a7-441f-8b53-bda6a9b5d813",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "078dd42e-d0e0-41ee-aa74-aad59a3a2901"
        },
        "item": {
          "id": "a51745f3-0c61-4412-a98d-27848c523703",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "03790f7a-9f61-4aa2-beab-a02b66bfdba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5911cb3d-37b7-4527-8ee0-e416f57aa119",
        "cursor": {
          "ref": "bfa95ef4-e629-46f1-b83e-cbcb95b9a19c",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a31ffe38-fcf9-412b-a7ca-71451e41fa28"
        },
        "item": {
          "id": "5911cb3d-37b7-4527-8ee0-e416f57aa119",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3d6ac526-f641-458e-a5d3-cc40726f5f8d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 20,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4d50ff-4223-49cd-8733-ffe20c8c5e67",
        "cursor": {
          "ref": "34622fb2-9a83-43ce-a97a-aa0848698c85",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c564cc58-1d65-4c82-9b62-b338429d194a"
        },
        "item": {
          "id": "9b4d50ff-4223-49cd-8733-ffe20c8c5e67",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6450e067-033c-4a3d-ab57-a31139690425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fee10d-219a-4b20-91cc-211bf6116a8e",
        "cursor": {
          "ref": "466dca7e-14f7-43fa-9c62-d7310a211292",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "073dd541-9ee7-4d15-82fb-73f068598854"
        },
        "item": {
          "id": "b0fee10d-219a-4b20-91cc-211bf6116a8e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "76aed280-d8da-410b-af3f-29a6d069cc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408dcbfe-262c-4e41-ae6c-54740af933f1",
        "cursor": {
          "ref": "a60f0a07-eb45-4864-9e70-e9a939dfbcd1",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "be3627da-b454-4300-92bb-f691b5145bb5"
        },
        "item": {
          "id": "408dcbfe-262c-4e41-ae6c-54740af933f1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "567ad354-2916-4db8-b9a6-9f26745f3685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529fc26b-22ad-43c1-8f27-768598c685b0",
        "cursor": {
          "ref": "b7e48fd9-f9df-4cc4-b39e-965c79fee89d",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d56ec41d-820a-4524-a24c-e4442e5702b0"
        },
        "item": {
          "id": "529fc26b-22ad-43c1-8f27-768598c685b0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cc8031cc-a028-4f77-8817-9904ffec5e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f8b07f-48a9-4e91-81ca-5055b47e6b7b",
        "cursor": {
          "ref": "a934b646-9644-40f6-8f2f-2598b1c53440",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f3cfba3c-09fd-457b-83a9-6a7d14dfbaee"
        },
        "item": {
          "id": "90f8b07f-48a9-4e91-81ca-5055b47e6b7b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2c6b7af8-c5e1-4f5a-81dc-97879f33e403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5e10bd-0c9a-45ad-91e7-6dec83eb401c",
        "cursor": {
          "ref": "297febcb-0b6d-476d-a8d5-ec2d6819be64",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "21242a18-d7b6-48aa-a7ca-1de8d1570ee9"
        },
        "item": {
          "id": "0f5e10bd-0c9a-45ad-91e7-6dec83eb401c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "291e0459-ea3d-40b6-9467-20d5853310f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f273e31-d08f-4697-88e1-6ccc8e330214",
        "cursor": {
          "ref": "07e5ee42-dbdc-43dc-a69e-08ccf62c2b67",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d4e1fcf8-a37f-478e-9e08-9d57d51ed2cf"
        },
        "item": {
          "id": "8f273e31-d08f-4697-88e1-6ccc8e330214",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "77097f37-b9e7-44c2-94ce-a171b45c2e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0da8c8-0fdb-41e8-8c28-1695b8432fe8",
        "cursor": {
          "ref": "320351d9-0ce2-4193-b4a7-9fb0ec1d50a1",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0195c132-4334-4d1c-bb89-bdd3c2d10bb8"
        },
        "item": {
          "id": "5f0da8c8-0fdb-41e8-8c28-1695b8432fe8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "dbae8f82-d151-4628-94ce-e22e6b235beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dec1f9e-c5d9-4e23-9392-425f014073fa",
        "cursor": {
          "ref": "c105d310-e3c8-4b33-b996-2c5e75428ea2",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cf5855e8-fc2d-4385-b8c4-0b615c82fbcb"
        },
        "item": {
          "id": "3dec1f9e-c5d9-4e23-9392-425f014073fa",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a0e90174-d22a-42f2-9e7e-254b37a40566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea6b06a-ab4c-4eca-8290-fb8f8523ba55",
        "cursor": {
          "ref": "59d6de23-8854-4fb9-82be-b57c26f01aa5",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ca66b58a-cfc8-43a9-a536-1fa2b18c1ee3"
        },
        "item": {
          "id": "aea6b06a-ab4c-4eca-8290-fb8f8523ba55",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8824b4a7-48f4-4e07-9386-f4174db5dd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ba9708-fd84-4d86-8ecd-594fc45fa3e7",
        "cursor": {
          "ref": "82615ed5-7cbd-46b0-9719-270417856f78",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8496fa74-59e6-41ff-ab65-26ac740286e4"
        },
        "item": {
          "id": "f8ba9708-fd84-4d86-8ecd-594fc45fa3e7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "03f9bc0c-a88b-4ba3-af18-f0339669e039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363b0a4f-40d1-4e2c-aa2b-5ed6ed23c2bc",
        "cursor": {
          "ref": "3c0e9a4e-302f-45d2-80c3-af72a2937fc8",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f4b64bb5-52a1-4155-a8e7-42b25b20661f"
        },
        "item": {
          "id": "363b0a4f-40d1-4e2c-aa2b-5ed6ed23c2bc",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "742bd43c-5efc-4f75-aead-19f47e32facf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00420ecf-3d74-4698-9c5b-7662e20fd6b5",
        "cursor": {
          "ref": "1b62045f-6317-4514-bf89-fe9d37708e54",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7d466909-35a1-4a86-9360-e19aa59aa487"
        },
        "item": {
          "id": "00420ecf-3d74-4698-9c5b-7662e20fd6b5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a0fa07eb-8351-4a6d-9da6-7e20f202eca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70dcea28-942a-433c-8970-6af4d7e11185",
        "cursor": {
          "ref": "76c7508a-0a97-4f4f-a4cd-58c8a8f6f493",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "eb25919c-f3b5-42b5-bf19-6456b0f27355"
        },
        "item": {
          "id": "70dcea28-942a-433c-8970-6af4d7e11185",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a7d886be-ba72-4fc5-a051-6f91fda2c3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6c0eb5-3a64-4374-a10b-4ce9e1ff9a99",
        "cursor": {
          "ref": "782b81f5-c375-4045-9807-a6aa3b2dab39",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9cf3ad18-87db-416f-b999-3519b552b648"
        },
        "item": {
          "id": "be6c0eb5-3a64-4374-a10b-4ce9e1ff9a99",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b87eded3-0952-4875-994b-245794730d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708e4429-4441-4c0d-ac27-b7eb3d518d85",
        "cursor": {
          "ref": "683ef1ec-76ee-40c1-8054-b54380060ff5",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c0ef8908-4ddd-4d0e-b80c-1a6f58f4b533"
        },
        "item": {
          "id": "708e4429-4441-4c0d-ac27-b7eb3d518d85",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "60e71f07-cf4a-418c-b600-f6854a31e50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5990bd-6a66-458d-9963-c20274241b41",
        "cursor": {
          "ref": "78e565a8-de0e-4e0f-86e4-782901a5a5d4",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e8fb8c51-69c7-467e-a258-ff672a5d06ce"
        },
        "item": {
          "id": "8d5990bd-6a66-458d-9963-c20274241b41",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1675b3e8-aec4-4a40-be35-9d63d9892339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535db9d6-20eb-4d91-9ae8-e6dec2b64a72",
        "cursor": {
          "ref": "0282d243-eb2e-4130-8493-04ce26b0e1d1",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c8b199d7-5bbe-488c-b203-2558b1631399"
        },
        "item": {
          "id": "535db9d6-20eb-4d91-9ae8-e6dec2b64a72",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2066e5c2-0b01-4e58-b17f-fc75d5b054f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efc87ee-80fe-4eb7-902b-61f9314ed256",
        "cursor": {
          "ref": "89d71c31-0cce-4b89-a167-3691d83b2cf8",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2461cd66-f519-46bd-b117-7e0e91f2168f"
        },
        "item": {
          "id": "9efc87ee-80fe-4eb7-902b-61f9314ed256",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "53386996-6bd4-4955-876b-cd3124fb5e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ece5ad-28bd-4036-abe4-9b2b1826651e",
        "cursor": {
          "ref": "22e21289-98d5-4e36-b34a-2918a0d4715d",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ebb1c88e-36ec-4213-b9b6-0c1f772fdf15"
        },
        "item": {
          "id": "12ece5ad-28bd-4036-abe4-9b2b1826651e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "50a4343a-f105-4457-b71c-d06b844b06b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff776c4-8ce2-4c0a-8526-079f177744b8",
        "cursor": {
          "ref": "570df1e0-a78a-4fb3-91a2-5ae7fac1b440",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e00174a1-ccce-46ba-bc68-420d432d378e"
        },
        "item": {
          "id": "cff776c4-8ce2-4c0a-8526-079f177744b8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1b40560a-3efc-42cf-8bdb-4328cb37f4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01eeeeed-99e0-4f2f-9d4d-3868f5cc7988",
        "cursor": {
          "ref": "ef7377e6-2097-46b8-8b82-6553370efc47",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cae6ad55-b30e-4695-b016-cf9c97d84d30"
        },
        "item": {
          "id": "01eeeeed-99e0-4f2f-9d4d-3868f5cc7988",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f9fb9458-38e5-459c-a1a9-5c31a4a8f514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67beaca4-bb24-424b-89b9-5e3efead43ca",
        "cursor": {
          "ref": "3a66b68a-0ddf-48c0-93cb-d3d720f1e7fe",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0c45df08-b0fc-4332-89aa-2dd8aa2ce5a2"
        },
        "item": {
          "id": "67beaca4-bb24-424b-89b9-5e3efead43ca",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b1bb6f5d-4a24-4fda-9ec5-0980444c65a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27acc867-ac95-4e40-af39-9505be8f6c0b",
        "cursor": {
          "ref": "a77fde1e-2cbb-4da8-a29e-fa0f497ad384",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d25ea948-95e8-49b1-a61d-a86b2441b760"
        },
        "item": {
          "id": "27acc867-ac95-4e40-af39-9505be8f6c0b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "03001645-e3dc-48af-a17f-6f87c4612d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e62fd15-fa18-4266-a249-2e96a219bda9",
        "cursor": {
          "ref": "69e5d290-1448-4a5d-bd2c-f9d458713b5f",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "703cd2b5-eefb-4615-933c-d65025144ce5"
        },
        "item": {
          "id": "9e62fd15-fa18-4266-a249-2e96a219bda9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a0fcab90-c2e5-4944-867b-7c3014271d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a124b97-7cf8-463c-a544-f9c0b2da65ae",
        "cursor": {
          "ref": "2efea727-0be6-4f97-a7f3-0950632ca403",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cb8f15a5-7e1e-425e-b9c0-323d004e523b"
        },
        "item": {
          "id": "5a124b97-7cf8-463c-a544-f9c0b2da65ae",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "dcd4e1b5-d204-43c6-8064-83078fda672f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9653d3e-26f1-4899-a5ae-65057ac570be",
        "cursor": {
          "ref": "49e0259f-cb87-46d5-877e-48fcc05c59e8",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b0e0d3a5-9c36-45ed-9b81-3042b50aae63"
        },
        "item": {
          "id": "b9653d3e-26f1-4899-a5ae-65057ac570be",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e92a8c92-8e7a-4ecd-b100-96588e21adbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e555d7d-b53a-4be4-8439-3d9333e03005",
        "cursor": {
          "ref": "ee16b6a2-5e9f-402d-9819-09f7f0f40914",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "79dd26cd-8a78-4cf8-b27a-4262052d7bee"
        },
        "item": {
          "id": "9e555d7d-b53a-4be4-8439-3d9333e03005",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9b92bb4f-a6c9-48ce-b621-f8cc6d246edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c391a891-2b5a-4a7d-9637-f6c1b63644dd",
        "cursor": {
          "ref": "a963ee2a-93e5-4b9f-9d2f-a4c1b70a4cba",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b2df2b32-bc03-473d-b407-1f991db3e248"
        },
        "item": {
          "id": "c391a891-2b5a-4a7d-9637-f6c1b63644dd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "460692c8-bba5-4b20-8c7b-a296e238115e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fb80ee-747c-40f0-ab6c-93342af57d7d",
        "cursor": {
          "ref": "d2d5a652-0ab3-4ae7-b7aa-5a5e0af0faf3",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9edfb26f-a116-465c-9717-832831d4746c"
        },
        "item": {
          "id": "00fb80ee-747c-40f0-ab6c-93342af57d7d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1fcfbee9-d26f-4368-98ea-6a037bfeb006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cec8b75-dc65-4a05-8b24-9e1ac2d408e2",
        "cursor": {
          "ref": "fcc5fbcd-a12d-4500-91fa-08b5d285add1",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5b595a90-0c33-4b69-bab3-ac07a320a5a1"
        },
        "item": {
          "id": "4cec8b75-dc65-4a05-8b24-9e1ac2d408e2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "62f458e7-a77a-4248-99ff-9a3ce31f14f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173e55bb-3e5c-4dec-ae8f-07cfdafa28ba",
        "cursor": {
          "ref": "13424f66-31b1-4669-9a44-2fd2cadb17db",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "77181d7f-5348-46f2-ad2f-e9a533a7a7f5"
        },
        "item": {
          "id": "173e55bb-3e5c-4dec-ae8f-07cfdafa28ba",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "173d70ea-c6c1-4ff2-ad81-7d1f191084d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4d6e55-d0e2-457c-893c-463073471265",
        "cursor": {
          "ref": "d2757b1b-9188-43b6-bacd-5a2a6d80f6e9",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b3e6d587-ff17-421f-87f9-45804782da83"
        },
        "item": {
          "id": "7d4d6e55-d0e2-457c-893c-463073471265",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6697d5cd-0bad-4c39-b44c-fa8917ded6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddc0455-174b-4123-84ac-5aceeb7d50f6",
        "cursor": {
          "ref": "5c7f6a24-9045-4543-b322-336b853b075f",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0a9b7ba6-ce93-4f86-a4a1-c27f99f4cd3f"
        },
        "item": {
          "id": "8ddc0455-174b-4123-84ac-5aceeb7d50f6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "dc90d467-3aba-4b1c-91f6-707da6d3cf7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2871aad7-812c-4983-b94e-8d01436e3a78",
        "cursor": {
          "ref": "ef53bd55-0915-4436-b5d3-dda435261018",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "71c284ac-f419-4e83-ae81-77bc433b05d6"
        },
        "item": {
          "id": "2871aad7-812c-4983-b94e-8d01436e3a78",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9966b5e4-2c3c-4145-9f14-fccf60501960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22a26cd-8459-4f40-9694-b7ad4b07b9fd",
        "cursor": {
          "ref": "2329768d-e0ed-4557-8649-669bdafb1708",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5e5791bd-0c25-4317-8201-aaefb7a28b41"
        },
        "item": {
          "id": "f22a26cd-8459-4f40-9694-b7ad4b07b9fd",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8b3e182e-bda2-4aae-9802-929b88a55ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fc3d53-48fa-45f7-8d80-0aff7953c0f4",
        "cursor": {
          "ref": "e09fe7ff-12ae-4e85-9191-d5bc0250aecb",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1390433b-c955-4ed1-9120-2d4fcec62fe3"
        },
        "item": {
          "id": "f8fc3d53-48fa-45f7-8d80-0aff7953c0f4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ce219afe-7e24-4cc8-96e4-fc08a23853bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec79517-05a3-47a0-938c-ff1476333321",
        "cursor": {
          "ref": "5ef0540b-7e0d-4de6-8974-3836a5391482",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "56d498fa-6fd6-4eca-81fc-0160b460885f"
        },
        "item": {
          "id": "eec79517-05a3-47a0-938c-ff1476333321",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0df1900f-58bc-4677-b45a-0a94abe44939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c5966e-4102-49fb-9bcf-5621c17ac5c8",
        "cursor": {
          "ref": "525b2eca-88a6-4645-8eb7-75f070006b97",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c34204c2-cd17-45eb-9aa7-8d68a810d772"
        },
        "item": {
          "id": "c0c5966e-4102-49fb-9bcf-5621c17ac5c8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "58b606ac-de82-4ff0-bf89-234b29468e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1c8704-c275-454d-b397-1d71ab0d5b05",
        "cursor": {
          "ref": "baace4e9-96c0-4b7b-af8f-d8fba6b13451",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ee50164f-7ba0-4bb4-9a75-96a503781f98"
        },
        "item": {
          "id": "3c1c8704-c275-454d-b397-1d71ab0d5b05",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "519bfdd1-f459-49b1-bfb2-b1afdc67c780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9508f0e7-af7f-4849-9939-5bb5e60d6cec",
        "cursor": {
          "ref": "20b89ece-8679-4abf-9553-8a790f47447f",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "62851f58-2fb3-43af-8ddf-2d1687472edf"
        },
        "item": {
          "id": "9508f0e7-af7f-4849-9939-5bb5e60d6cec",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "00fec4b7-ea5d-445e-8e17-192c1c08710a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9865c198-e8f6-433e-84de-896a7a207e22",
        "cursor": {
          "ref": "604c0b39-42d1-4979-9fb8-c17d9db46b23",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5415ea3e-04a0-4dd3-8df1-edc1cee83670"
        },
        "item": {
          "id": "9865c198-e8f6-433e-84de-896a7a207e22",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e100ee3e-2aba-4dd5-a36b-4bcd4ed14f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2479d6e-7763-4168-bdb4-3d4a840a5dea",
        "cursor": {
          "ref": "b1cc3fa7-5293-4bae-b72e-b3e7f45f4114",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c8a91ab0-6c6e-4948-9a0b-a96380702d41"
        },
        "item": {
          "id": "b2479d6e-7763-4168-bdb4-3d4a840a5dea",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fffba9c3-fe0e-4f43-8e44-c6a8683ee85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5774521-1f33-49b0-84b8-d678c1e87793",
        "cursor": {
          "ref": "52ac3e92-b484-4269-91b6-fa60ba8f2034",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "14729161-4868-4b6b-acb2-a2fa0d855ee0"
        },
        "item": {
          "id": "d5774521-1f33-49b0-84b8-d678c1e87793",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "270ae0f0-9eb3-455e-a784-fc6d8493c796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90358f17-fb48-4d2d-af8d-312ac9460be3",
        "cursor": {
          "ref": "076f38c5-f1f4-4729-80f4-e782fb343e7b",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "744e7dff-df4e-4041-84d9-6446fd8e5f5d"
        },
        "item": {
          "id": "90358f17-fb48-4d2d-af8d-312ac9460be3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "506d3265-3429-4c4e-94ed-0f201cb19e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cebb0b-6169-401c-b58f-f71ca061ba8c",
        "cursor": {
          "ref": "1de63b60-7a9e-4d0a-aa0f-5545e22095ae",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e577c23e-1add-45de-bf5f-1f1b2f97d5d4"
        },
        "item": {
          "id": "c3cebb0b-6169-401c-b58f-f71ca061ba8c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d26416cd-7049-4dad-985d-c422d920b875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8faa79-1ac5-4c48-a754-7849af59906d",
        "cursor": {
          "ref": "2b193007-31ce-41b8-af39-e1ae73c02325",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d8af6fda-ea89-47c7-8167-05518f19b392"
        },
        "item": {
          "id": "ec8faa79-1ac5-4c48-a754-7849af59906d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cc1c6619-b11c-4fbf-9b2e-7a37d8fd80fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec350ea-fa13-4eed-b89e-5e6d71872966",
        "cursor": {
          "ref": "6e6ee395-c776-4e48-ae48-f7f85d5e3582",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "53f295bb-7129-4f1a-b211-e88608c2acf4"
        },
        "item": {
          "id": "dec350ea-fa13-4eed-b89e-5e6d71872966",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "64113949-f532-4b7b-91a9-c3f621ae14c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4f033a-06bd-4fb7-a733-8c749980692f",
        "cursor": {
          "ref": "cc704263-56c7-4442-9dd7-6befcf57d07b",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4ac3db05-4199-4708-b5ca-4a9398483c71"
        },
        "item": {
          "id": "9e4f033a-06bd-4fb7-a733-8c749980692f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e578627e-33f9-45dd-8b83-154e81d7c6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7b9c0f-b41b-4a40-8c67-58e7629f0898",
        "cursor": {
          "ref": "375560ad-ddc5-4b22-8896-41fbb82895d5",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b164d264-806b-4ca5-9605-03cae13d5fe8"
        },
        "item": {
          "id": "5c7b9c0f-b41b-4a40-8c67-58e7629f0898",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a9bbaaef-3f8f-4a20-9470-85fc7dbcaa68",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd15e84-627c-4ce4-8417-da6fbbd6def9",
        "cursor": {
          "ref": "b2b1c11a-2329-4c99-b4d0-531bbdf5d1d7",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f6fada6a-a35b-4bb2-9331-00ce5e1c8aeb"
        },
        "item": {
          "id": "acd15e84-627c-4ce4-8417-da6fbbd6def9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dd2f1a02-89ae-4808-bcf9-3e6304d72377",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19194f9-8414-4e20-810e-e0442184284f",
        "cursor": {
          "ref": "38cfbb7f-26b9-4803-9d2d-25a99ee25819",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "73892561-1f13-4647-9d31-96fa04f80945"
        },
        "item": {
          "id": "c19194f9-8414-4e20-810e-e0442184284f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "af295504-f28c-4405-8256-45d1fe3e288d",
          "status": "Created",
          "code": 201,
          "responseTime": 102,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f12773b-adc6-4eef-932d-f62e9f2eee84",
        "cursor": {
          "ref": "dbd94d20-da2c-435d-9879-e751d26af414",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fa68f01c-bde8-421e-b44f-2509ab508c03"
        },
        "item": {
          "id": "7f12773b-adc6-4eef-932d-f62e9f2eee84",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5719f2be-786d-4e3f-bed5-bd6c01c707f9",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd63fba-34df-4bc7-868f-feaf2288531a",
        "cursor": {
          "ref": "6472f566-18d4-4534-9ece-7a17a0985985",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1ccca1a7-6999-4ef6-8986-8a7c2d382f17"
        },
        "item": {
          "id": "0cd63fba-34df-4bc7-868f-feaf2288531a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d10d59df-0ecb-4635-a7f3-24cfdbbc5960",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01ccc41-5218-493c-8baa-96ff4f91a602",
        "cursor": {
          "ref": "3af150cc-84f8-4783-ab46-70617100c21e",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "08f1a671-48fe-4d0c-8e80-6770e291e451"
        },
        "item": {
          "id": "d01ccc41-5218-493c-8baa-96ff4f91a602",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fcca6f5b-931a-4e01-bb97-9eff478acf4e",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "2958ce85-cb44-4049-91de-e5f379af6b34",
        "cursor": {
          "ref": "09dee860-9976-40bb-b9e9-15939152c21e",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4c92bb07-edec-4507-802c-20fc17ee6e35"
        },
        "item": {
          "id": "2958ce85-cb44-4049-91de-e5f379af6b34",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9a77dce8-f049-4ffb-922e-f623b6ba9339",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b9c5ad-a37a-4639-9868-99800ca4338d",
        "cursor": {
          "ref": "88185983-2ea3-43ab-972f-aaf1dc12814c",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ddd4137d-cc52-4bc1-bd06-9c0d39660244"
        },
        "item": {
          "id": "18b9c5ad-a37a-4639-9868-99800ca4338d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "89c13506-74df-4790-895e-d748dcbf7bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02222326-90e8-4161-ad51-bfecee09e181",
        "cursor": {
          "ref": "a617989c-35a1-439f-8e9b-9a743f8ff37d",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "06df9535-a5ae-405a-90f1-eae35515d6e3"
        },
        "item": {
          "id": "02222326-90e8-4161-ad51-bfecee09e181",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c7fed44b-8408-4f74-bc2c-6b7a1f4bf9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39148f22-2f11-4498-9cc5-2c3fa0690c21",
        "cursor": {
          "ref": "8ee05e6c-facd-4536-a9f4-8ca5d777c6ef",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "feea46b0-061e-486d-8e10-a493b6d32fef"
        },
        "item": {
          "id": "39148f22-2f11-4498-9cc5-2c3fa0690c21",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "42ad3e11-c0fd-439c-9085-aae27434a149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec93443f-fe4f-4ef7-b139-feffe9000cf9",
        "cursor": {
          "ref": "2d11fbd6-4b4b-41ea-affa-2c62feaac3a2",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2fc2a3c2-70be-415f-8109-51acca9aabc5"
        },
        "item": {
          "id": "ec93443f-fe4f-4ef7-b139-feffe9000cf9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d6bae67f-d3fd-47d5-9006-4f4242a19626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324dc469-1006-4211-a3eb-5caf7518dc8b",
        "cursor": {
          "ref": "6509d16e-337a-4ef9-9c5b-bb013254fbec",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9e1ed875-f6e8-4790-a3df-2eb7b4b20ee1"
        },
        "item": {
          "id": "324dc469-1006-4211-a3eb-5caf7518dc8b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dcac56b0-2301-430c-8f7c-c7ba05488f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cacaaaa-09ed-4fcc-9876-b05240fa4ced",
        "cursor": {
          "ref": "0013ab1f-556b-4c93-8357-bfff23e1003c",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "47a8f929-847b-41a5-a7d8-94e37d9500a7"
        },
        "item": {
          "id": "8cacaaaa-09ed-4fcc-9876-b05240fa4ced",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dccbb81c-12dc-440e-bcfa-396ea2153408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c7cd09-68d5-49cd-99ea-3e2cd8d43913",
        "cursor": {
          "ref": "38dc31b5-10fe-4ad7-ab5a-88858e3b2316",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "615628fe-4baf-40ef-9875-24791262191b"
        },
        "item": {
          "id": "c5c7cd09-68d5-49cd-99ea-3e2cd8d43913",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6ad98b18-b697-46b8-b519-2b18311c93ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a52b51-3bca-4e2a-81f9-42a961461949",
        "cursor": {
          "ref": "d9ed9810-fdfa-4d4b-98c0-6281a06d7b8c",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6437e233-52bc-4857-91fd-1d46b9c94e2f"
        },
        "item": {
          "id": "32a52b51-3bca-4e2a-81f9-42a961461949",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d0512bf4-2c37-4cd6-bdbf-9912a74eec85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e63b5d-40ea-4011-b342-839cdd514e8a",
        "cursor": {
          "ref": "b9a09a12-73e6-4597-b708-ec0c0b283301",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "219ff4b1-7c03-49f1-9499-327f716f4dce"
        },
        "item": {
          "id": "78e63b5d-40ea-4011-b342-839cdd514e8a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ae3ad0c3-9a89-41d1-9aca-6bb27e4780bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe5abb4-23da-41a9-892c-40b468d160e4",
        "cursor": {
          "ref": "88b7cd03-1548-422b-819a-b6d0383d9541",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c32c1d01-d0e5-4ef2-9fb0-358e645c3369"
        },
        "item": {
          "id": "fbe5abb4-23da-41a9-892c-40b468d160e4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "eb28bd44-26e3-41d7-8d41-50a40b769103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5da6a5b-ee61-441c-9387-f5de3cb3266d",
        "cursor": {
          "ref": "25de0a53-33d1-4d09-8982-ec189b5f20ee",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5f68612a-b593-4aa8-9805-ad8770dca75f"
        },
        "item": {
          "id": "b5da6a5b-ee61-441c-9387-f5de3cb3266d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "219fd882-cab4-4d67-868f-1014f8426c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501683b5-b366-4f2e-ba8d-f8da632724d8",
        "cursor": {
          "ref": "b4c78cc2-e561-4099-ba8d-f8486bbeed30",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d098516b-a954-4d30-a7b3-ee1238e0a42b"
        },
        "item": {
          "id": "501683b5-b366-4f2e-ba8d-f8da632724d8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "11eda3ce-00a0-47b1-90eb-15427c5b81e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2669ab-734c-41b8-ad22-b6a398352eab",
        "cursor": {
          "ref": "59f71080-37f4-40e2-9ecf-11f428dfa123",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "58a31af7-ba68-495a-9ee8-0483ccaeb370"
        },
        "item": {
          "id": "dd2669ab-734c-41b8-ad22-b6a398352eab",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e1a101b0-95f2-4533-a2df-bb6c7cd31179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a72ca2-524b-4bda-9601-7c956c3f8e7e",
        "cursor": {
          "ref": "cd181580-8de8-4ef3-b3ce-23a44f3f2e93",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c89db27d-dfaa-429f-8d36-e69976b5ad81"
        },
        "item": {
          "id": "a5a72ca2-524b-4bda-9601-7c956c3f8e7e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8122d04d-fd6d-44e1-a0c0-6ef860547d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3c5509-cb15-4047-abd5-4a4aae3146ff",
        "cursor": {
          "ref": "f81bab19-d607-4d9b-ab9a-fbcad0fcb688",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "371bbdd7-2d9b-44c1-9abc-747ffacede0e"
        },
        "item": {
          "id": "4e3c5509-cb15-4047-abd5-4a4aae3146ff",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "17547bdf-555a-44da-b83d-397a3f3c1507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff2162f-11e4-44d0-988c-459e41e12f29",
        "cursor": {
          "ref": "ab324288-a3de-467a-b6c5-e15d9d065d4d",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "315a5da4-b4f9-4fa5-b2be-fa78a05dc764"
        },
        "item": {
          "id": "dff2162f-11e4-44d0-988c-459e41e12f29",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4910bc46-d0b7-4632-ac33-d1fa08940e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64327328-9fb9-4b8c-8588-e6edd5979bc8",
        "cursor": {
          "ref": "6635cdef-bb91-486d-b96d-9ce498d6c7ae",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d50d20f4-b96c-484d-8625-891c9e0590a6"
        },
        "item": {
          "id": "64327328-9fb9-4b8c-8588-e6edd5979bc8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "318551d0-9709-44b9-a818-5f05fd7a534b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b667a7c1-4e8d-4be3-9d6f-dc49aedac260",
        "cursor": {
          "ref": "5b0431b3-c81a-450d-85a7-80911a898dcc",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7c23abfb-8f36-4362-a24f-6b10eb88cdd4"
        },
        "item": {
          "id": "b667a7c1-4e8d-4be3-9d6f-dc49aedac260",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b4b19446-37cb-48ca-a57b-9522cdf77564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55f7ce4-c452-4f55-9a6c-842efb69a1b2",
        "cursor": {
          "ref": "3cedafe5-f106-442b-b0b7-7de35d47c2d8",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6086d81c-8091-4d97-bb60-4adef41240e4"
        },
        "item": {
          "id": "f55f7ce4-c452-4f55-9a6c-842efb69a1b2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "08af9ef5-6b1c-4be7-97c6-0befc0cc8980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95546b4-bf66-4508-ad21-52a0e07e6d6c",
        "cursor": {
          "ref": "17b06e13-5e74-41d4-ae68-161252c37882",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "968f201e-c2dc-445c-a21c-a8a9677a194b"
        },
        "item": {
          "id": "e95546b4-bf66-4508-ad21-52a0e07e6d6c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d70fa2ab-47d9-4c1e-bb83-be268de3740b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa30206-007a-485b-b564-bf327e001153",
        "cursor": {
          "ref": "a0b84dfb-c91b-4aca-a8b2-14af4acd072f",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2489987f-2aa8-41f8-8fbe-dc8e7a7bc81f"
        },
        "item": {
          "id": "efa30206-007a-485b-b564-bf327e001153",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c59971af-44e9-4938-9c49-d98d45b8ce7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2af937b-ac89-4a17-b39a-dc2e40f2b0b5",
        "cursor": {
          "ref": "5b181e6d-4b5e-4b14-94fc-5b3f94ab797b",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b8b26ce7-79cc-487d-a60e-5cb6f76d2810"
        },
        "item": {
          "id": "e2af937b-ac89-4a17-b39a-dc2e40f2b0b5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "79e377d6-efee-44dc-8d10-5cc971a50802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f301ed18-d2e9-40e5-ba5e-1a9c414d9c91",
        "cursor": {
          "ref": "dee0968d-a476-4184-9720-0c7849fe6cd0",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ff93f499-4325-45ce-a593-87986ba8d7b8"
        },
        "item": {
          "id": "f301ed18-d2e9-40e5-ba5e-1a9c414d9c91",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "989fb54f-adb5-402e-b7b7-5f0fc0a9590a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464c88ae-a913-4718-a628-9f5d21c56645",
        "cursor": {
          "ref": "fae860ff-f8cb-4c39-81f2-a160a13a2a45",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6a3f2285-f543-44f5-b386-fcee1db291a4"
        },
        "item": {
          "id": "464c88ae-a913-4718-a628-9f5d21c56645",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7015d17f-4df5-42ca-8814-7dec3a93d2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9939c94d-35c1-4295-925a-a69620032c1d",
        "cursor": {
          "ref": "1a3b04ad-a825-434c-9d96-840d23026e03",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4f62e4f2-abf4-4e88-bd99-8ca3fb434e1f"
        },
        "item": {
          "id": "9939c94d-35c1-4295-925a-a69620032c1d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d93281a5-57c4-43be-93a1-60affe491753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c88196d-40aa-4568-b98c-49140652c115",
        "cursor": {
          "ref": "119965cb-76a9-4f10-8d75-73706c5c8af2",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d4cb38cb-95ab-455b-ac50-72c1e59347ac"
        },
        "item": {
          "id": "2c88196d-40aa-4568-b98c-49140652c115",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2c5877b5-b9a6-4532-b4ed-190112ff2881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7aa5c6-2448-4c16-acb0-68227111eaee",
        "cursor": {
          "ref": "85ce2e47-dd90-4008-80e8-334781f923b9",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5de14e2a-ef7b-4654-bf44-6e0f30d4ca7b"
        },
        "item": {
          "id": "7d7aa5c6-2448-4c16-acb0-68227111eaee",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c12bc21b-0082-4fed-8d6e-2ac78eb26b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54238233-8d66-46a6-95dc-5309294ddc4b",
        "cursor": {
          "ref": "004d2ff2-474d-4ef6-a4c4-8ba8537e268f",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1bb9d612-e911-4dc5-b618-7a593643bdec"
        },
        "item": {
          "id": "54238233-8d66-46a6-95dc-5309294ddc4b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dfb8e808-3682-4d3e-b9d4-745ae0a52442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed8b979-a4a1-4e98-a245-3d6dc2873fe6",
        "cursor": {
          "ref": "e82b0832-dd17-45a5-af03-b164b6f3600c",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "28a43081-a351-4686-a70f-3b415b27da2e"
        },
        "item": {
          "id": "5ed8b979-a4a1-4e98-a245-3d6dc2873fe6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6871b544-3806-434e-b799-9b7b85dcfa09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdc71ec-ff83-4842-8f7c-58efd27bb656",
        "cursor": {
          "ref": "b15993df-df29-4ab6-96de-a7c32fdeca81",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f7a7152c-f944-4c28-838b-d68b7e680b4b"
        },
        "item": {
          "id": "4fdc71ec-ff83-4842-8f7c-58efd27bb656",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "54c66bc2-ae69-447f-8d78-7607e40d527d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695f0ff2-c109-46e9-bd8b-a68bf550da70",
        "cursor": {
          "ref": "48e4e8fa-43ca-45c3-a798-65f95b333882",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5ec9667d-b543-4fea-8fab-ceaf26c42f54"
        },
        "item": {
          "id": "695f0ff2-c109-46e9-bd8b-a68bf550da70",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "645d90d2-d046-4641-a90a-46333e81de6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab51cd7-9467-4248-bb45-df28066fa1a2",
        "cursor": {
          "ref": "0ab65e92-8119-4ec5-8575-4f73a891c548",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "11e7c753-199c-45d7-a763-616e25011e11"
        },
        "item": {
          "id": "7ab51cd7-9467-4248-bb45-df28066fa1a2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8374ae5e-d562-4379-a90b-3bd71560a25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6f9522-6faf-496f-9521-f4bca3df6041",
        "cursor": {
          "ref": "2c6e6022-f794-448c-91c6-79f6b2e7406e",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a5c76314-17b5-48df-af27-f284bfb3abc1"
        },
        "item": {
          "id": "8c6f9522-6faf-496f-9521-f4bca3df6041",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d648b17f-5ef1-4cf6-ae6a-205de2447fd1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579c3451-9abe-497d-880f-4cb1c8298b2f",
        "cursor": {
          "ref": "051d8560-1019-4e2d-a60f-b22cd14c4ae1",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d22c41c6-0419-4974-bb89-57235182f4bf"
        },
        "item": {
          "id": "579c3451-9abe-497d-880f-4cb1c8298b2f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b72fb577-9082-43a8-bad1-99b1ce102042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0726b1b-c82d-4942-812d-fb9baf2c5e4e",
        "cursor": {
          "ref": "df84524d-ebd2-4882-8cba-df1c8cd77515",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "80f26dc8-31c6-43e5-a971-a8bb87b73e7a"
        },
        "item": {
          "id": "b0726b1b-c82d-4942-812d-fb9baf2c5e4e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d5ab08ab-c991-4341-b32b-7391f28aca49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe116c5-41f9-4566-9a3e-d7a2fbb19205",
        "cursor": {
          "ref": "bf27c28f-1632-4d5b-b45f-c454fcc1dc47",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "35ac1ebe-1f92-4bcf-a8b0-f2dbd5345f4b"
        },
        "item": {
          "id": "4fe116c5-41f9-4566-9a3e-d7a2fbb19205",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "21600695-18f8-4df3-b07f-3071ea45ca66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c336ec78-24e8-4dbb-ad61-92b7e73ef1da",
        "cursor": {
          "ref": "f30fe8ce-9d77-47ca-95bf-e9f7ebe64992",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f184f7b0-0da8-4e64-9cec-604ef85effd8"
        },
        "item": {
          "id": "c336ec78-24e8-4dbb-ad61-92b7e73ef1da",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b446a767-ba05-41ba-93df-8f3991ef7fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa68975-aca4-42cc-a6d1-3b59873de23f",
        "cursor": {
          "ref": "9a385ee0-8ffa-4a73-b9b8-2f1ebf817de5",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "357dfce4-f6b8-401f-819a-e5251a29cc26"
        },
        "item": {
          "id": "daa68975-aca4-42cc-a6d1-3b59873de23f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2cb4e6d6-cdac-4b55-bf99-26fb07aa7197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7142fd9-a720-4a03-a2d2-2233e20b3199",
        "cursor": {
          "ref": "a2adaf36-4810-43cc-9150-1f899dfd7cf5",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "36e43c47-c3f2-4799-b898-762726d9a8a6"
        },
        "item": {
          "id": "a7142fd9-a720-4a03-a2d2-2233e20b3199",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c0119ac4-bd68-472b-9da8-dd1b1fd5c4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f596d915-1280-44c4-8d30-2fd3fd88b926",
        "cursor": {
          "ref": "63aceea6-95a3-49a1-973b-4e07cd53f29e",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4d7f9400-263a-4980-b8eb-1d83d2fefe10"
        },
        "item": {
          "id": "f596d915-1280-44c4-8d30-2fd3fd88b926",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1f5c234a-71e8-456f-b8a1-84082a8717ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332df196-9334-4ee1-8595-e6034d6a56a7",
        "cursor": {
          "ref": "c2b804e2-0768-41bf-a134-ec9f658e179e",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "416ba393-1baa-4fd8-a9c8-f396b5f4361e"
        },
        "item": {
          "id": "332df196-9334-4ee1-8595-e6034d6a56a7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6ed15d5c-73bb-4c50-91af-ea852fd4f930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91b9e55-32c1-48e8-9a41-cf555d175915",
        "cursor": {
          "ref": "43647847-ed47-4044-8a65-02bb1a2bc4bd",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "08c296b6-fccd-47a4-9136-60bf8f68fc88"
        },
        "item": {
          "id": "d91b9e55-32c1-48e8-9a41-cf555d175915",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "21b848cc-37b8-4e2d-9d49-c259990efad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660c9194-4f30-42f2-926b-e9d796f4c28b",
        "cursor": {
          "ref": "adedbc3d-a4fd-45ec-832b-b2a7ab08aa44",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ddc102d4-ea46-46d8-b91f-b477edac588f"
        },
        "item": {
          "id": "660c9194-4f30-42f2-926b-e9d796f4c28b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c6d18847-77dc-4782-8388-b36d170a8284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff24b0c-fe47-4654-9402-5bd8f8ed1695",
        "cursor": {
          "ref": "b7064c6a-689b-4d60-a3ba-73127016e0b8",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7ecd7330-e496-45c4-90be-7578d3b399b7"
        },
        "item": {
          "id": "5ff24b0c-fe47-4654-9402-5bd8f8ed1695",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bf7a3eef-9ca1-4742-a77f-551b7b513699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0297dc97-fccb-499b-8a23-db6d4c3eedea",
        "cursor": {
          "ref": "581b2cab-8392-441d-9903-39872d35847c",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d44b64d0-7f9a-4d0d-be82-54a0fa0b51af"
        },
        "item": {
          "id": "0297dc97-fccb-499b-8a23-db6d4c3eedea",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "414b6c1b-58fd-497e-abfc-5bfeb6805a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e84fdc-1cf7-4880-ac11-b0d5abed7bdd",
        "cursor": {
          "ref": "6245a004-b8b8-49c5-8f10-ad146a76488e",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b35794f1-00a2-4966-ab9c-771b80bbfb44"
        },
        "item": {
          "id": "65e84fdc-1cf7-4880-ac11-b0d5abed7bdd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3017161d-af2d-499e-809f-95dc42ffbcbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123acb61-8bed-4d76-95e7-6689f3d793aa",
        "cursor": {
          "ref": "2e6cec42-f19a-492d-830c-8936729433e5",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4929e608-d39d-4a8e-b093-86918e60ee8a"
        },
        "item": {
          "id": "123acb61-8bed-4d76-95e7-6689f3d793aa",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "82beb4f0-de76-4c0a-ae11-0c9537521079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de87b62-bad6-4523-8236-fb29d83c6d3e",
        "cursor": {
          "ref": "78e13ea6-5517-4a6b-bf4a-7efc46fbce40",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6f701a50-5375-4871-91ed-fc921108311e"
        },
        "item": {
          "id": "2de87b62-bad6-4523-8236-fb29d83c6d3e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0b40ba1d-3c91-4d9e-8ba7-2851c1553ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7f141e-028a-4a4d-abcd-f8521ea6cea1",
        "cursor": {
          "ref": "d6ce0299-48a6-4089-8571-84e851b6a5df",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7396ef23-e673-441b-8767-1e2113c46bf8"
        },
        "item": {
          "id": "6f7f141e-028a-4a4d-abcd-f8521ea6cea1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "11b2697e-d294-497e-957b-4539ecfce90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67485862-5b80-46ba-a5a3-3348f883e55b",
        "cursor": {
          "ref": "c8f4c9ab-2bb4-42b3-a68d-f03971e383ed",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2dda0092-53fe-4a22-9f99-de51adf0de44"
        },
        "item": {
          "id": "67485862-5b80-46ba-a5a3-3348f883e55b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "77fcf6e2-ef8c-4ccc-87de-3f66d5b89c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1c6492-8057-420d-83e6-a715b44d25de",
        "cursor": {
          "ref": "4468be85-e56f-4a91-9456-75767dcd1d66",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "33fb5402-ad01-44f1-b86f-06054020b810"
        },
        "item": {
          "id": "dd1c6492-8057-420d-83e6-a715b44d25de",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e83d6ba4-a137-4fb2-8066-59fb598594f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1870e0c9-5aed-40be-964f-cc9c7ad079d3",
        "cursor": {
          "ref": "bc5c6297-9f12-4904-9365-d89eb06abf70",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e205b987-62f1-4314-bd7f-624598bea9cd"
        },
        "item": {
          "id": "1870e0c9-5aed-40be-964f-cc9c7ad079d3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5a1496c3-3ab4-47fb-9015-3c5c1e682f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf0cdb2-be8f-4312-988f-0c2a2a8f43ef",
        "cursor": {
          "ref": "7aa3faba-d13a-4b67-b87d-0fac82060c10",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8ff24b0d-250d-4707-a1be-71896a3ad257"
        },
        "item": {
          "id": "6cf0cdb2-be8f-4312-988f-0c2a2a8f43ef",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "41649a46-03af-4006-9c23-89cfd3e5c971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7793f8-7669-4cff-9d67-0a35206d880f",
        "cursor": {
          "ref": "b3cdf51f-a16b-474e-b667-4eca09140f5c",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6b6ce30a-a345-44a6-93e3-1b6e6ccff5bd"
        },
        "item": {
          "id": "fd7793f8-7669-4cff-9d67-0a35206d880f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1825fa60-6bbb-47bb-b531-3e8e26a39cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b9f2ff-c01f-4ac0-8a9b-0c52b049abed",
        "cursor": {
          "ref": "73aa64a4-f5ff-44ed-9e2a-4708b9dba34e",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4e39e406-cce7-4597-9a30-5991fd416558"
        },
        "item": {
          "id": "e6b9f2ff-c01f-4ac0-8a9b-0c52b049abed",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fce04af7-5347-4b4c-9b7a-c652e3716e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acb22b0-38d1-4941-8a6e-0e9e7237fd23",
        "cursor": {
          "ref": "733a60a1-33ed-4e61-86ce-078fce3f8f46",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7defece9-8a13-4de8-91cc-fb6640d4fb0d"
        },
        "item": {
          "id": "6acb22b0-38d1-4941-8a6e-0e9e7237fd23",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1cd47476-e0df-41f8-88c3-d16d4534ca0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6db90d6-3bf9-4007-82ed-f1c7dd891034",
        "cursor": {
          "ref": "767175d0-273a-471f-adfd-9bd4288884f3",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cbfe0c59-ccf2-4282-becd-a40a3d461379"
        },
        "item": {
          "id": "e6db90d6-3bf9-4007-82ed-f1c7dd891034",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a6f31ea5-6c9b-4488-85b1-71833759519b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccec8c0f-53f1-4d67-adda-f01ae3e4ec6a",
        "cursor": {
          "ref": "81d9a984-4afe-43eb-9fba-31ed35e59abd",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3afb6f88-3b66-4e9d-9890-8f1b7209712c"
        },
        "item": {
          "id": "ccec8c0f-53f1-4d67-adda-f01ae3e4ec6a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "19a59e15-b31a-45eb-8a67-d08a44b0a813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6270fd2f-1ca1-4828-9f17-6028b3959791",
        "cursor": {
          "ref": "9cbb0aba-56a3-41d6-94c0-fb241eb2d7f0",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a2e7a37c-aba6-4302-87ae-ab4fea106825"
        },
        "item": {
          "id": "6270fd2f-1ca1-4828-9f17-6028b3959791",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "06502c5f-8611-456e-8577-c3dfc7537c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b35c71-349a-4846-b1e4-5a5dc6a095ad",
        "cursor": {
          "ref": "bec1525f-656f-4f59-9e21-f243c4ba1223",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "680a5ef4-e30a-45ff-9a4c-f81e761b748e"
        },
        "item": {
          "id": "05b35c71-349a-4846-b1e4-5a5dc6a095ad",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b0c4e47a-88dc-4975-af6b-087858794cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485dc9f3-b1b5-410d-a443-51ab556ef0b1",
        "cursor": {
          "ref": "ca2458eb-1c12-4e83-ba60-5b65ce5f5d4e",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ca7e1168-32c9-4de8-8125-7f76ec2c734e"
        },
        "item": {
          "id": "485dc9f3-b1b5-410d-a443-51ab556ef0b1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "433447f4-ef3e-4515-afac-258f0281c011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4814b5d0-f0d4-4161-9ccb-18f5f39d6d41",
        "cursor": {
          "ref": "21b0dfc9-001f-4f50-92ac-87d5af5842e5",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "76706cca-4e07-4cdf-9114-debb40555b17"
        },
        "item": {
          "id": "4814b5d0-f0d4-4161-9ccb-18f5f39d6d41",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "624e0c89-b5e7-4eb7-ab5d-5a3ef34e7194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1179c7aa-4fcf-4a67-9fa8-0c25d91e8ca8",
        "cursor": {
          "ref": "491e2673-b506-47ef-8668-4d276df4a26e",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c0e14624-0aeb-40e5-ade0-2a04f7b82aa8"
        },
        "item": {
          "id": "1179c7aa-4fcf-4a67-9fa8-0c25d91e8ca8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cd338efa-56ab-4acf-a2f1-122df8216130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c2592b-a1c5-432a-acf1-bd8a92e9ce86",
        "cursor": {
          "ref": "4d59bf2e-aec7-4f89-95c0-63fa0bb7c279",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "dd4b6a1d-20d5-4b56-83f5-6cd5dd580e0d"
        },
        "item": {
          "id": "50c2592b-a1c5-432a-acf1-bd8a92e9ce86",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ca836635-7da7-4616-8a2d-79e53fea2132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3e4ea4-b34d-4d49-9f5e-76d80e2d78ef",
        "cursor": {
          "ref": "a003f6f3-99ca-4200-8e1d-1b1f0b602b3f",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3a51f818-000c-488d-90c4-8c06b6b93ba3"
        },
        "item": {
          "id": "db3e4ea4-b34d-4d49-9f5e-76d80e2d78ef",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a77128c7-855d-470f-b321-a71d312968c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12ca185-d2e1-451e-a70d-1b2e27a432d5",
        "cursor": {
          "ref": "32dffc07-50e8-40de-be4f-eb5450956a30",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "53e95fcb-8804-4c73-850a-933a4d590394"
        },
        "item": {
          "id": "a12ca185-d2e1-451e-a70d-1b2e27a432d5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4a4622ce-4bf7-464a-8196-1faa3ddeb001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4988cfd1-598c-450d-9b7b-f3d4f9f35fc4",
        "cursor": {
          "ref": "590fca57-7213-43b0-8a0f-a2072588ee5b",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1eed27e7-4cf0-4828-ab65-9fda71edb864"
        },
        "item": {
          "id": "4988cfd1-598c-450d-9b7b-f3d4f9f35fc4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2a2a6421-22c2-4210-b03b-cd6e5206050c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191151b3-b96b-445e-b90e-0af7d2eb6897",
        "cursor": {
          "ref": "0d63dcbb-bae0-46b4-a872-1e98e38ee45a",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "51369ab0-f860-4dbe-9383-9edc2b4e7040"
        },
        "item": {
          "id": "191151b3-b96b-445e-b90e-0af7d2eb6897",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e867b400-d904-44ac-9f21-f1bce51c4f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5ac777-2f41-4e61-89db-1b6896f5ace2",
        "cursor": {
          "ref": "ca5f57e3-4085-4236-a441-a16fd3ae469d",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "38011302-b91b-4cdb-a1fe-8204d62f947a"
        },
        "item": {
          "id": "1f5ac777-2f41-4e61-89db-1b6896f5ace2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6a738d12-644b-4722-b1ee-475cd057c67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848cae55-1a73-481c-8f28-a23759d45a81",
        "cursor": {
          "ref": "abb00fb9-1f22-462a-9218-4cb494523df3",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "39215d9c-07ea-4ed1-960a-955f256fec0d"
        },
        "item": {
          "id": "848cae55-1a73-481c-8f28-a23759d45a81",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8b1fccc1-392e-4f85-8dfc-033e57a88558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be530e84-eea6-4896-acc8-442e8ce8df9c",
        "cursor": {
          "ref": "15a976f7-5996-4122-8fc0-a82944f3f93e",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "48fcac64-e3fe-45ea-8496-ad4f9bbeff56"
        },
        "item": {
          "id": "be530e84-eea6-4896-acc8-442e8ce8df9c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5af2b48f-e776-4d28-b44d-f71a3cff2247",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfc2fe1-f31c-44d0-9649-8913da98ad33",
        "cursor": {
          "ref": "d60b86b3-b748-4f9d-8f5c-368c6f558e66",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5df4fb4c-f749-41c3-bec8-029ca425dccb"
        },
        "item": {
          "id": "7cfc2fe1-f31c-44d0-9649-8913da98ad33",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "894e3a6f-5178-4d39-ae98-96d8c9006747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5091f00b-d0e1-4762-965a-bafb1be2f5bd",
        "cursor": {
          "ref": "82e1d7cf-fb10-487c-9e9d-67159f679eaf",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f78e0181-02b2-4ccd-b3a5-8ae016b07823"
        },
        "item": {
          "id": "5091f00b-d0e1-4762-965a-bafb1be2f5bd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f062bfc2-7a34-4be9-be3c-3e09f7bc0df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f71363-003a-4d9b-b6ca-313a5b7faeef",
        "cursor": {
          "ref": "5abd41ba-5878-4942-91f0-0b7f15eff02a",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "154c3c9c-1867-4df8-9dc0-4562934737af"
        },
        "item": {
          "id": "89f71363-003a-4d9b-b6ca-313a5b7faeef",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5ccc42a4-4660-4875-aee6-cf07616efccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4d710c-74a6-4ac5-9357-3e256aae4df6",
        "cursor": {
          "ref": "56fa5af5-650d-4388-baec-91927736238c",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "111ba0b7-9559-48c5-a8d5-d2792eaa7f54"
        },
        "item": {
          "id": "9d4d710c-74a6-4ac5-9357-3e256aae4df6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b610ddb0-8c8e-4239-8c03-e3162af0fae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e99f54-2ced-42d5-985e-34b6d38ab77a",
        "cursor": {
          "ref": "073dbc40-124c-4762-b703-f0da1a5759f4",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fdd7c92b-36f9-440c-8862-0fefe8349ae9"
        },
        "item": {
          "id": "12e99f54-2ced-42d5-985e-34b6d38ab77a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8e10830a-d3e7-4f31-87ac-e43ed9e826be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39e114f-9272-4460-9778-cd699a7ed987",
        "cursor": {
          "ref": "72e94d63-1dee-4c38-b8e3-88d16d1c642d",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "87e1aba5-4ac0-4e4d-ab11-4c827e6703b7"
        },
        "item": {
          "id": "d39e114f-9272-4460-9778-cd699a7ed987",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "23280a21-2a46-40ca-8736-6cf549766c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fd7ac7-31bf-4413-a504-e14a27dd9fb9",
        "cursor": {
          "ref": "dff5dac7-8865-4eaf-a84c-7fb06b24974e",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "84011a54-26e0-451e-b2aa-d5cfd1850b9d"
        },
        "item": {
          "id": "d1fd7ac7-31bf-4413-a504-e14a27dd9fb9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "eb09414b-d196-476a-9c1f-7c55d3f5f949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcff11a-eeec-4a2c-98c1-ef26f7e6630e",
        "cursor": {
          "ref": "4e99098e-4a23-4bf0-bb56-d8f45228c32e",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "91910378-2236-44e3-93d9-f2d00750cf9f"
        },
        "item": {
          "id": "cdcff11a-eeec-4a2c-98c1-ef26f7e6630e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7caeae52-fb10-4b0b-a1d1-21b972bbb94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1dcd32-450b-446a-931b-eb374d9fb876",
        "cursor": {
          "ref": "7d6dcdfd-4529-4368-9479-e07feeea6d5b",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8b6fac51-51f1-4504-b88a-0adf51f51f64"
        },
        "item": {
          "id": "1f1dcd32-450b-446a-931b-eb374d9fb876",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c6ea58ef-9231-4775-a89e-05c428a2f691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e677e501-667d-48c0-922a-c04ac0145793",
        "cursor": {
          "ref": "0774e5f5-2a6f-4b30-95d5-1023e045c150",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4bc3c51f-3fa1-44f3-a7f1-3a495e884ece"
        },
        "item": {
          "id": "e677e501-667d-48c0-922a-c04ac0145793",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e2c65a69-c434-4e92-8b8c-a44a36827e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f9ad46-4f13-41d3-bd36-9bf274e51196",
        "cursor": {
          "ref": "29ae33f2-d0fd-4481-82d2-1494429b3416",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "70813c11-32de-402a-a18b-28c8f3b7e808"
        },
        "item": {
          "id": "d3f9ad46-4f13-41d3-bd36-9bf274e51196",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0202e2e9-78ed-4514-b067-8c755c67a3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187756ed-3642-487a-9010-1d6e0e60e133",
        "cursor": {
          "ref": "c1bf2c43-436d-4cae-b842-8768c73cfa8c",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0a1cc8be-8bdc-413d-ae90-7920331ac4dd"
        },
        "item": {
          "id": "187756ed-3642-487a-9010-1d6e0e60e133",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8948c892-1889-4936-ab32-d6dc8cabb4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe7c9dd-af6a-464f-baa6-634abf5233ac",
        "cursor": {
          "ref": "493eeb83-01a1-484f-afac-e7d784cfe355",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "64bafe26-68c5-435c-a019-5809a77e3bfd"
        },
        "item": {
          "id": "afe7c9dd-af6a-464f-baa6-634abf5233ac",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "407c3f93-4724-4d5c-b072-225d0a511dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ddd3c7-2c4a-4b6f-a01a-fad7d26287f4",
        "cursor": {
          "ref": "593390f8-e83a-4fe4-a2f1-edec3035b2eb",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "942f5094-421c-404d-8f71-35110cc469d3"
        },
        "item": {
          "id": "87ddd3c7-2c4a-4b6f-a01a-fad7d26287f4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "05660392-563a-4b5f-8234-fcd973574995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef54c05b-26b7-4547-9e11-010198734235",
        "cursor": {
          "ref": "84ddaabf-3461-457d-899c-43fe48579dcc",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bc3f1739-648a-4cfa-b5f5-9787d7c199e2"
        },
        "item": {
          "id": "ef54c05b-26b7-4547-9e11-010198734235",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a893a141-8c44-40bd-8723-67553fe4397a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0989912-b4a2-419c-926d-b04552e39618",
        "cursor": {
          "ref": "c069c9ec-3dd8-4690-83fc-5d36a116c37e",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d9782fff-bdaa-4a69-beff-1b3a082736ca"
        },
        "item": {
          "id": "f0989912-b4a2-419c-926d-b04552e39618",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "52073ac5-1a8a-4ffa-b828-e7cdda882e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead330dd-0e0a-46eb-b0af-279e9694479d",
        "cursor": {
          "ref": "4d325b40-2473-44a2-9247-6380b1cdd4b5",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5d8b003c-02f4-41af-b4da-6077a0410405"
        },
        "item": {
          "id": "ead330dd-0e0a-46eb-b0af-279e9694479d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "44ff678d-137e-4478-a6e6-9b407b5d0153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1baec1-688d-41f4-8ecd-c859733a80ff",
        "cursor": {
          "ref": "c050d70a-2212-4361-bf41-260c198f9cf8",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8b740655-77da-415f-96e0-543e3fc808db"
        },
        "item": {
          "id": "9e1baec1-688d-41f4-8ecd-c859733a80ff",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a6db5db4-8673-4d54-ba03-a1ca02026d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4d178d-c6f5-4962-ba31-f4c59bdecdde",
        "cursor": {
          "ref": "add90673-61e1-4907-b43e-28f765623b83",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "82640813-64d7-403c-99a5-1284da5883b5"
        },
        "item": {
          "id": "cd4d178d-c6f5-4962-ba31-f4c59bdecdde",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f11a3047-b89d-411d-9048-eb651bc91db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1e638b-1c42-4c89-8c3c-aa7512adbcec",
        "cursor": {
          "ref": "f2b1d64d-4c27-4b76-a0c8-ac27a554b75f",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7fd13995-0c14-426c-bacf-476628107aa7"
        },
        "item": {
          "id": "df1e638b-1c42-4c89-8c3c-aa7512adbcec",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4170d032-1e4b-410a-9b19-9ecfc76e2e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8490c696-f1d5-4084-868e-32f427495e32",
        "cursor": {
          "ref": "04556396-e471-4284-b18f-f9401637fd1d",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2a8e1a78-0d0c-4d0d-8806-e87078ed8a85"
        },
        "item": {
          "id": "8490c696-f1d5-4084-868e-32f427495e32",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b722bd17-b015-45b9-9c56-5c9b671a4186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959327a1-d7cd-487a-97d7-87a1f0ba4844",
        "cursor": {
          "ref": "433d8868-8361-40fe-b271-d9749139b7a9",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b8df0efb-6511-4bc4-bfc2-b1963ebe307c"
        },
        "item": {
          "id": "959327a1-d7cd-487a-97d7-87a1f0ba4844",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1c037b7d-0513-4ecf-972c-75367524b17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9aceb30-98b8-4b0a-970f-aa829a0831e6",
        "cursor": {
          "ref": "17c52134-bfb8-4c77-8f89-61c7669a827a",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9f353928-9495-4876-8df2-824cd053608f"
        },
        "item": {
          "id": "a9aceb30-98b8-4b0a-970f-aa829a0831e6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5930cb84-b0ed-4cc2-bf01-bf4dd8401ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3e5ba9-e968-4c4c-b040-ed9ba8a57742",
        "cursor": {
          "ref": "99caf070-8510-46e2-a487-abfb1570f94a",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6b011f2c-0a3a-463a-b046-8cc423d0585a"
        },
        "item": {
          "id": "4e3e5ba9-e968-4c4c-b040-ed9ba8a57742",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c487bf42-59aa-4cde-9b61-d358de9c4a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbc906c-b423-4aec-8305-25e38c9926a1",
        "cursor": {
          "ref": "296d8e13-5658-43f7-abb8-3dc565b687b0",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "062c73d7-f69b-4a32-b006-7b3d6fa11632"
        },
        "item": {
          "id": "5fbc906c-b423-4aec-8305-25e38c9926a1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "19305f5e-055f-4307-904a-25e0b76fc380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91910aec-e7a7-4fc7-a0cb-41305785c535",
        "cursor": {
          "ref": "57df4893-57f1-4bb1-9513-792b02c50e07",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "436dbc74-6788-4bcf-b9d9-3ab780289632"
        },
        "item": {
          "id": "91910aec-e7a7-4fc7-a0cb-41305785c535",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8fd5b5a3-59e4-4fa3-b064-15215d9c6e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc47056-02c2-4a03-9f7f-b0725f7d1601",
        "cursor": {
          "ref": "cbaba153-8d03-4345-a3b6-df24217f9804",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bd87f74d-1d5f-4845-855a-353cb6f89f23"
        },
        "item": {
          "id": "8fc47056-02c2-4a03-9f7f-b0725f7d1601",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e4c5a3b3-3223-4f15-a88d-7be66a4966ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b49ae62-0eff-4ae2-834a-1e70f6d28352",
        "cursor": {
          "ref": "325e294d-a9fd-4e14-b022-0fb95905f315",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2bcbb845-a7df-43af-ba46-4a6b43f14a4f"
        },
        "item": {
          "id": "9b49ae62-0eff-4ae2-834a-1e70f6d28352",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4a443183-a4d2-4d0f-a35f-eba7441915af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ed8843-5622-49de-a4e8-fe08a7b2d9b1",
        "cursor": {
          "ref": "f59cab1f-9cbe-4fe9-ae93-dec13bb19be6",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3e6d1018-f17e-4785-867e-301f5410b627"
        },
        "item": {
          "id": "02ed8843-5622-49de-a4e8-fe08a7b2d9b1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2f5b3e45-6387-421e-aa13-5901ec619f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b65c990-4d5d-4b16-a392-d3a1b7336f5e",
        "cursor": {
          "ref": "73bae6b5-4125-4e68-8d70-2f7eeaae0289",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "045a90d8-fbb7-4fb1-a35c-b46fa86b6341"
        },
        "item": {
          "id": "1b65c990-4d5d-4b16-a392-d3a1b7336f5e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9066daf1-1475-4f5e-973a-678e24d177c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d69808-d901-4c1e-a0d6-c023872ae079",
        "cursor": {
          "ref": "1cb8b576-c41d-4214-9c62-c64b14aef9a5",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c72bd6d4-7e15-42d8-8bd2-1680bdd098b0"
        },
        "item": {
          "id": "47d69808-d901-4c1e-a0d6-c023872ae079",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d684c80a-94c7-4859-9826-c8a10095f9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882333cb-e07c-4f5a-82bb-25455383ddd7",
        "cursor": {
          "ref": "75f55167-434d-4be2-8011-77d53fb7093b",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e0da9c39-8ad4-4c20-8e8b-06e3216d53f8"
        },
        "item": {
          "id": "882333cb-e07c-4f5a-82bb-25455383ddd7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "da5d4f10-9c33-42ce-a055-33c08e29f436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a727156a-5c03-45d3-891c-71debf6b4cb7",
        "cursor": {
          "ref": "ebb0e997-e405-4e20-8331-f35913cf51bc",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2db66d6a-fa34-49ee-af74-cb7da231fa06"
        },
        "item": {
          "id": "a727156a-5c03-45d3-891c-71debf6b4cb7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f42ca7a6-1782-43d8-bcf0-8faf841113e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cc2071-9629-4437-b170-12dd6ab36f3c",
        "cursor": {
          "ref": "101d07ac-e638-49ff-bf46-35f70ee85379",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0c8aa972-7cb5-42e7-9bfd-62f0f1d5cd31"
        },
        "item": {
          "id": "97cc2071-9629-4437-b170-12dd6ab36f3c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2c261aff-389b-4042-9d7d-4c2e8bb80201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3ab5c1-957d-444f-8ccf-d343fc2c8826",
        "cursor": {
          "ref": "6cc4feb1-a64a-4aa5-81f7-228f32da1829",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "56a310e3-7779-47ca-9c23-0451e97eee85"
        },
        "item": {
          "id": "de3ab5c1-957d-444f-8ccf-d343fc2c8826",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c6928bd1-2cff-4c9d-a134-4cf0b3b1643d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b196b42-1319-4611-9cb3-466aa93af672",
        "cursor": {
          "ref": "b8f925b5-26d5-49f1-a4e6-cfe0907c1c20",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7b0f0de4-f49f-4b7e-a90f-432f9d92d470"
        },
        "item": {
          "id": "9b196b42-1319-4611-9cb3-466aa93af672",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "31bf03ab-1996-4983-b21e-4c45da192898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232f242c-6283-49f2-9ab1-ce991b17d10b",
        "cursor": {
          "ref": "7534038e-108c-428c-a113-310495f3f9eb",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0938c9d4-2a69-4191-aa26-2b4d82921d79"
        },
        "item": {
          "id": "232f242c-6283-49f2-9ab1-ce991b17d10b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1012c2b6-e016-4157-8845-c06aa37dc88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6764998-9793-48fe-9cb3-45992a3e7799",
        "cursor": {
          "ref": "f636c183-abe2-4281-a823-19f072dc3290",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8d4253a4-12b3-4839-8a1b-379a051775aa"
        },
        "item": {
          "id": "a6764998-9793-48fe-9cb3-45992a3e7799",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6e0f3fb5-c93b-4b01-a04d-dbdd9154df82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e841f68-c6ba-4e6a-8611-4be1273c11f1",
        "cursor": {
          "ref": "6ff73383-802e-4f5a-a4e6-568860ea1b94",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3f35c802-51cb-443d-a915-e9c102b9d264"
        },
        "item": {
          "id": "3e841f68-c6ba-4e6a-8611-4be1273c11f1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "46601775-c891-4090-a0eb-6ce46c6e580f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7dd5da8-28c5-4512-95e5-d8972729a3b8",
        "cursor": {
          "ref": "578f8b59-e78c-416e-b151-cee5c14a970c",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "98cc04bb-3bcd-46d9-8516-177f72ca8fd9"
        },
        "item": {
          "id": "f7dd5da8-28c5-4512-95e5-d8972729a3b8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "12bac682-c7c2-4c04-ad63-1da7345eaf74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28d31df-9455-42f2-bb0b-a364b1dbf050",
        "cursor": {
          "ref": "8d6a7c75-1009-43ff-9c3e-8f10f5cf10ea",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6468c791-580b-4831-8135-c57c059b3bdf"
        },
        "item": {
          "id": "e28d31df-9455-42f2-bb0b-a364b1dbf050",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a6346949-b162-4b02-912d-0a9ce9f9b3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06632acb-378d-4b4e-9d36-6968bda605f1",
        "cursor": {
          "ref": "8a69f3da-907b-407b-aac5-b8e934753449",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b5cc3c31-8bb8-42fe-a5fc-4beefb0e757a"
        },
        "item": {
          "id": "06632acb-378d-4b4e-9d36-6968bda605f1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "319ed3de-731c-407c-85fe-31ddd23afffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cf9d75-56dc-4116-a305-f27bbaa9f01a",
        "cursor": {
          "ref": "fd7054e6-408d-4251-96df-f3e9b6c30c22",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ab3c9583-7056-4c32-95da-8fc8c25b97f8"
        },
        "item": {
          "id": "19cf9d75-56dc-4116-a305-f27bbaa9f01a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "aaaf3849-c760-4c6e-9333-0d2031384409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b55514-6ff9-4a2b-8400-ffae64f3d488",
        "cursor": {
          "ref": "5b01e7df-3fe4-4b27-924d-c06c9e2d7836",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "809c3ca4-9f5d-4e60-933d-109f668064c2"
        },
        "item": {
          "id": "f5b55514-6ff9-4a2b-8400-ffae64f3d488",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fbbb7356-319d-468d-afd6-2b70a145f9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c686345d-d8c9-47c8-ad7e-fc6cbf11a009",
        "cursor": {
          "ref": "2b03210a-d345-4d2a-a63b-7b906616a767",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "83a7b19a-c69c-486d-a50b-2f4ab1cf15e2"
        },
        "item": {
          "id": "c686345d-d8c9-47c8-ad7e-fc6cbf11a009",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2237c59a-a005-45fa-b14c-a5c9a79d69e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92e564a-7fbc-4322-8291-4b899c15fc1a",
        "cursor": {
          "ref": "4772fbee-b0ed-4dea-b670-d180ac9874c5",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3b3a3f58-02b8-4189-916b-d17b0259de36"
        },
        "item": {
          "id": "f92e564a-7fbc-4322-8291-4b899c15fc1a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "dbb99435-b926-496e-a369-a77fa820032a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd04e6e-64c6-4643-bfbf-cd78397fc18b",
        "cursor": {
          "ref": "6f6060dc-5642-4ece-bb37-e09215c6101f",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "bce2f74c-6d7a-48db-9f87-cb63ca5b54bd"
        },
        "item": {
          "id": "5fd04e6e-64c6-4643-bfbf-cd78397fc18b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0fca3cc0-b9ce-45cb-a65e-45b9b6172f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebed1d70-7e4e-48b3-9cd9-0e168f2f1bc0",
        "cursor": {
          "ref": "e093dc2b-5f48-4b5a-a6f5-79cd97d284df",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "06c6f3d1-2ecf-4a79-9163-89ded29e7842"
        },
        "item": {
          "id": "ebed1d70-7e4e-48b3-9cd9-0e168f2f1bc0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "386ab853-fe66-4ee9-9358-ecb30c5bb066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2a593d-ecdc-455c-8ec7-9a0faeb6ea12",
        "cursor": {
          "ref": "b61bc5a2-4591-4630-8768-c0d61f4f2bd9",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c124f7d4-6ebb-463f-a30d-07d7c50d371e"
        },
        "item": {
          "id": "0b2a593d-ecdc-455c-8ec7-9a0faeb6ea12",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a5ee533c-740e-402f-bf96-da968a8c1b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc24039-f5e3-428f-aba7-37ece3339e30",
        "cursor": {
          "ref": "702d2294-8777-447c-937c-781c406a3631",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ed1de442-ac33-4df1-8d3e-4653a35c01fd"
        },
        "item": {
          "id": "edc24039-f5e3-428f-aba7-37ece3339e30",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "40096471-0bde-42da-a34d-ee81b017bf81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19c9904-265f-4019-a8d0-d360e907a8d3",
        "cursor": {
          "ref": "a844d2f4-9062-4158-b591-9d1266b2d42b",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fe4d4c7a-3e29-4fb0-aaf3-02db9eff865e"
        },
        "item": {
          "id": "f19c9904-265f-4019-a8d0-d360e907a8d3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "032d113e-695a-4bfc-95ce-2f1f2cd33277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60b30e1-d699-4416-afd7-6b80bb5200bf",
        "cursor": {
          "ref": "abcfc953-ed63-47e9-a395-eb9c82ab7674",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2f1975aa-2bc5-454f-994f-8b76d6a2090d"
        },
        "item": {
          "id": "a60b30e1-d699-4416-afd7-6b80bb5200bf",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "00c309cd-cd95-48c1-ba38-5bbae4b9ba71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9833f1-3a91-4c94-af6d-1f464edf480c",
        "cursor": {
          "ref": "a797d683-c5ef-4eee-8971-a6b4d0c4effb",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ec42fa7c-fd29-40ab-986a-c9604d00d6b5"
        },
        "item": {
          "id": "9c9833f1-3a91-4c94-af6d-1f464edf480c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cea4e8c7-e66b-476e-b408-dd1004cf554d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60abaf94-5a9d-453f-9292-ff5fc2b7bf66",
        "cursor": {
          "ref": "61f54864-a1be-48de-bc9d-760c0f586a3a",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ff76201c-a098-4d62-b9d6-b233d1629416"
        },
        "item": {
          "id": "60abaf94-5a9d-453f-9292-ff5fc2b7bf66",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b17856fc-56e9-4649-8c05-f6d75f179caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7614b5-21e6-4e6b-a929-22da04dc290f",
        "cursor": {
          "ref": "ac965f5f-9ea2-483b-8f6e-3a0487867027",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "134ad3e8-66d4-4979-bbc6-039d3e032a86"
        },
        "item": {
          "id": "7d7614b5-21e6-4e6b-a929-22da04dc290f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d5c41140-17c6-49d7-a61c-fc242feb1ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6505cc-8e8a-4b38-891d-bf9960a28e8e",
        "cursor": {
          "ref": "685490ce-485c-4bc3-bce0-47e9fb1e81f2",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b1b7ee95-fcee-49f8-a008-7bf88db4fbbb"
        },
        "item": {
          "id": "5a6505cc-8e8a-4b38-891d-bf9960a28e8e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e8301c4d-6e40-4e33-a629-df07f9cbe5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f94b7c-8e8e-4627-8c1d-aa4ddaa39d68",
        "cursor": {
          "ref": "73a22c82-9aef-4105-b1a7-e6e961c62cf3",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "31921911-7854-4661-8ff7-2425d72d807c"
        },
        "item": {
          "id": "44f94b7c-8e8e-4627-8c1d-aa4ddaa39d68",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0bf605dc-5e17-4c0c-9346-0ebc0916f8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea7233c-8a54-4d70-ad51-a51d57997222",
        "cursor": {
          "ref": "a2e8373d-dad1-4bc1-9f60-f434172d4c97",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e3e49326-0fb4-4101-b7b0-658d56f60da4"
        },
        "item": {
          "id": "aea7233c-8a54-4d70-ad51-a51d57997222",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "975c62cb-b3d4-4b34-a473-a525a8ccedd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7f1f34-da7b-4d65-8da1-89b47748ff41",
        "cursor": {
          "ref": "849758c6-b6a7-4cba-8010-52f6dc6cc8cb",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ea254a20-95a8-496a-9a58-921ace17565e"
        },
        "item": {
          "id": "4d7f1f34-da7b-4d65-8da1-89b47748ff41",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e64e0048-7d64-4405-b661-cdfb33119487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803b2084-e81a-4e6e-9671-0e30c5bcb392",
        "cursor": {
          "ref": "7c53378e-c554-40db-8876-1cb995de09d3",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "94123d35-2411-49cf-86bd-6dd5438c4759"
        },
        "item": {
          "id": "803b2084-e81a-4e6e-9671-0e30c5bcb392",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "661b5225-10b1-4db0-b9bd-b5b51e991296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf4e8d1-51a6-421c-813a-30d9df7954bc",
        "cursor": {
          "ref": "568b9a6b-9460-4a35-809e-ba693f4af12f",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "90968bee-d157-4df5-a9d9-f9ca6cbf8c1c"
        },
        "item": {
          "id": "bdf4e8d1-51a6-421c-813a-30d9df7954bc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4025aeea-0af3-4e89-adf5-ff3c629e12ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33617292-198f-47bc-8bb8-621577e566fa",
        "cursor": {
          "ref": "104d707f-0a02-4ecc-a5f8-5a36817df5fa",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0b7d3395-68a5-407a-b7b6-9829049278ec"
        },
        "item": {
          "id": "33617292-198f-47bc-8bb8-621577e566fa",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "609bdccb-f989-4e23-b045-5b52b2fd3dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f3c101-1045-444a-8102-b1e90fe55228",
        "cursor": {
          "ref": "39b71833-30cf-4622-b5bc-545e424bb386",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "950c51b5-bbd6-418c-bb71-d3c608e72161"
        },
        "item": {
          "id": "a2f3c101-1045-444a-8102-b1e90fe55228",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ba59850d-6957-418d-933a-9634f3233f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ffb423-aa4e-4a1e-8c5d-ce7312542f2b",
        "cursor": {
          "ref": "e8e3f065-1d1b-404c-9299-34d41d4f020d",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7f300fef-2528-450b-90e8-8f3dcc6333c1"
        },
        "item": {
          "id": "13ffb423-aa4e-4a1e-8c5d-ce7312542f2b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0fe81bff-8754-49df-84c8-d90c9163ab29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f423e1-5bc5-470d-a022-bf64b814ce84",
        "cursor": {
          "ref": "de488397-33e8-44d6-bb06-fdfc2543f20b",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d06e031a-13ba-47f8-9d99-5ede3eb9b0e3"
        },
        "item": {
          "id": "90f423e1-5bc5-470d-a022-bf64b814ce84",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c6ceae84-ef1c-43d7-a28b-1db573befdc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0ff393-c94e-46e0-95ed-851b11b7fc51",
        "cursor": {
          "ref": "5eb4ed2f-2f0b-49a2-8ec9-8ba0f50a63ba",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a708afd8-6e08-4a3b-99d8-72a8516733bc"
        },
        "item": {
          "id": "3a0ff393-c94e-46e0-95ed-851b11b7fc51",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "106453c1-872f-4472-a6fe-d12393fc3b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e46d531-db56-4c52-bbb2-31054716ba8a",
        "cursor": {
          "ref": "21482b40-a158-42d0-9986-98fa5c2d1391",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "715fdb72-84d8-42ce-b45d-ba5ae50d22b7"
        },
        "item": {
          "id": "3e46d531-db56-4c52-bbb2-31054716ba8a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ca567b36-cc83-4478-9d35-70547a138b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c27f48-16d1-4d98-a54b-70d260318e86",
        "cursor": {
          "ref": "333cb9ab-ab6f-4409-b93d-f9552b786b05",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4d919ee8-e228-4ff6-90b0-4a4d4b0cf91a"
        },
        "item": {
          "id": "67c27f48-16d1-4d98-a54b-70d260318e86",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "96f7ede2-ab96-45a0-babe-d1a6d1daa0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726150e5-2d8f-4f9a-8015-b6b071c0f9d1",
        "cursor": {
          "ref": "702602c4-5314-49a8-a75a-e51262e013c4",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "79e187b7-6bed-45d1-806b-7f71df310a85"
        },
        "item": {
          "id": "726150e5-2d8f-4f9a-8015-b6b071c0f9d1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "66a46d72-553b-4806-bca0-4f0214b58368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29462f3b-b7ce-454d-9c28-e02470dfdce4",
        "cursor": {
          "ref": "898883d9-00ef-4ee2-aa45-786dbdabb4fd",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "eeb2c0d9-875c-4257-a2cb-1750562bb4a7"
        },
        "item": {
          "id": "29462f3b-b7ce-454d-9c28-e02470dfdce4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b4949a1a-bd67-4f65-942a-b1f03488e527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ac8066-c2b2-4ebd-8901-3a25e60ca6f9",
        "cursor": {
          "ref": "39ff7c4f-469d-4c73-84ba-d43ceaa6c939",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6f71ee66-068b-48fa-a030-16390bac52d7"
        },
        "item": {
          "id": "e1ac8066-c2b2-4ebd-8901-3a25e60ca6f9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b4d5151b-c248-4166-9a0c-c4cf6633190d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877b0c8f-a891-451a-b904-e51c05cb2c08",
        "cursor": {
          "ref": "c47aca5c-8466-440f-b2f5-c31c818365e5",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4584381b-e14f-4a60-925e-d624ac603cbf"
        },
        "item": {
          "id": "877b0c8f-a891-451a-b904-e51c05cb2c08",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9eae9600-e7a6-4835-89f7-898090ea5df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30a7270-e32a-46af-b680-a08bd0a751c6",
        "cursor": {
          "ref": "e018c3b2-5ff8-4630-88f0-8c1bd2a41372",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b86925ac-86a2-4943-853f-c0ab02bd6f86"
        },
        "item": {
          "id": "c30a7270-e32a-46af-b680-a08bd0a751c6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4324c6b1-665c-46f4-a549-6aed5d9c6073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4617b9cd-3e69-4ee8-928d-bcf03c8b016a",
        "cursor": {
          "ref": "1060e51d-1d81-43db-89b9-4355487a169a",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3ebab330-78d4-46d6-8f65-1d122472df12"
        },
        "item": {
          "id": "4617b9cd-3e69-4ee8-928d-bcf03c8b016a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cfcfb593-8221-46b7-a191-1c9c9af83580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf11c32-6fda-424e-89fa-c55cbd4e81d7",
        "cursor": {
          "ref": "e1724f0e-eea0-43a8-a28f-240fb1d55021",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "20e2ff29-910e-4ad5-bd75-e3a8bf8bc31b"
        },
        "item": {
          "id": "3bf11c32-6fda-424e-89fa-c55cbd4e81d7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "750bc2d6-c42d-49ba-b69f-dcbdfda3dd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6c0613-0fec-43a5-bcce-e31d976c5fba",
        "cursor": {
          "ref": "949fe6b7-d408-46bb-a0db-e48b3b4a50cf",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "66454418-3c9b-4fbf-80f5-b1c61244ab0e"
        },
        "item": {
          "id": "2b6c0613-0fec-43a5-bcce-e31d976c5fba",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "dfc8b1d2-8d16-4fcc-8baa-b6be15229767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1f7f08-8401-45d2-af2a-26799f2a091f",
        "cursor": {
          "ref": "d75dd3f5-5d05-4a00-9a07-c4a68f7950a0",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d5a4af97-0443-4423-8758-ea5c0596c73c"
        },
        "item": {
          "id": "2e1f7f08-8401-45d2-af2a-26799f2a091f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "da77ae8c-02e0-4854-9135-495034f33658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91dd1ada-b3f9-466f-b6e2-770971d3cf97",
        "cursor": {
          "ref": "d83db403-1aa5-4c23-905e-6187bd35635c",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b9e31240-fc70-42dd-872d-30ee0fa9a53b"
        },
        "item": {
          "id": "91dd1ada-b3f9-466f-b6e2-770971d3cf97",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "473d884d-989a-4992-9ebc-3e10834a2609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf4e772-d097-4f8a-86d8-c1be34bc7e9b",
        "cursor": {
          "ref": "dc8ac3fa-c8b3-4b82-afbc-430f44b2ae98",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "05654acd-dbde-4dd3-a856-e90f17b18e34"
        },
        "item": {
          "id": "bdf4e772-d097-4f8a-86d8-c1be34bc7e9b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9e3ba2a6-9e6d-472d-8db3-9c5411de7439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453351f2-5005-4a79-a106-0a15386ef7f4",
        "cursor": {
          "ref": "e7036556-020e-4f89-86e4-053e1bacd1da",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c868952d-51b9-4a27-b1ce-823c9d67c87f"
        },
        "item": {
          "id": "453351f2-5005-4a79-a106-0a15386ef7f4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8f340b29-d68f-400e-8406-dae94feab412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f4761b-c688-4e3d-a0fe-e5a39f4dc82f",
        "cursor": {
          "ref": "31ad3b11-b95f-4eba-b70c-65c826ad6a01",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "357e43df-2bea-4018-94cb-8cb785010cb3"
        },
        "item": {
          "id": "47f4761b-c688-4e3d-a0fe-e5a39f4dc82f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a81ccb2e-b795-4d70-a4d2-31376cf23b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f55824-77fb-4b27-9714-12f1db23f3b4",
        "cursor": {
          "ref": "61856d8f-97ca-4ae6-a49c-0dab630ab6fa",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "615f7611-dc48-495f-b4fb-cd8dbe498ce4"
        },
        "item": {
          "id": "97f55824-77fb-4b27-9714-12f1db23f3b4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0c86df68-8599-47cd-a4dd-41ac94940de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997ebe0c-deff-489f-9e12-87e5c1e17ebe",
        "cursor": {
          "ref": "6564a3e0-afb3-4487-bd4e-888a17aa117e",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ee96dc14-eec0-47b8-a773-51b44e074755"
        },
        "item": {
          "id": "997ebe0c-deff-489f-9e12-87e5c1e17ebe",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4b8751e2-40ec-4f01-96cd-f39feb70fe1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0113b2-85f3-4ffb-8174-065a71a33f7f",
        "cursor": {
          "ref": "629cb2f7-2846-45bc-982e-3cfae785066a",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "16017969-5ff0-4810-96e6-ae8dbbc6444c"
        },
        "item": {
          "id": "ba0113b2-85f3-4ffb-8174-065a71a33f7f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b1eaf07b-c42c-402e-9dad-41c6d0ac808b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf880327-4831-41fa-b027-4622cc0a413d",
        "cursor": {
          "ref": "57dc1ce3-5e08-4e0f-bb1d-3ae86159a3e3",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6993f156-6176-4854-819d-9ccda6ccd11a"
        },
        "item": {
          "id": "cf880327-4831-41fa-b027-4622cc0a413d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "45eae1d6-f921-4cd3-b162-1f19953137d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0650394-590d-4448-8b4f-5ed598e50ab4",
        "cursor": {
          "ref": "7bf05a52-83fb-4ae1-a415-d4cbcfcc98ec",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6a8b0c6b-05c5-4f48-b6bc-4ac8ef761fa9"
        },
        "item": {
          "id": "a0650394-590d-4448-8b4f-5ed598e50ab4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6778499e-ac5b-49d6-b3dd-f28dd86fb66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ac4463-d346-4ab1-9958-cc0615e0ae65",
        "cursor": {
          "ref": "765cc729-7000-43b1-840c-2cbf044f1afb",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4af8ccd4-e430-4d7e-a36b-2e1a43d8800f"
        },
        "item": {
          "id": "a8ac4463-d346-4ab1-9958-cc0615e0ae65",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ca4ed669-f686-4e8c-9824-bbf3337d1578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694d36fc-4c0a-4c98-bfd3-e640d82489cf",
        "cursor": {
          "ref": "4211d1a1-2a36-4ee0-94e6-3b5c6ec61ce5",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "112ff9c1-eb8b-4b9f-9c03-2a7a7309c6a2"
        },
        "item": {
          "id": "694d36fc-4c0a-4c98-bfd3-e640d82489cf",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6daa3665-ac67-437f-8fa6-acc96a9dd5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d32d49b-2cf7-443a-8a86-9cfd2bc5aac1",
        "cursor": {
          "ref": "9aee2686-20a3-487c-a8aa-e512c40d579b",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c3d09116-163d-4d5b-bcb9-013bc67cddde"
        },
        "item": {
          "id": "7d32d49b-2cf7-443a-8a86-9cfd2bc5aac1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b199fc11-54d9-423f-b303-99981daece3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c0f295-1bb1-4df4-a182-5de9d85333ee",
        "cursor": {
          "ref": "c2475326-cadb-4377-a67a-19f549b097d3",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "62e27ad5-8ead-48c2-ad3b-7c2cdb3a1a67"
        },
        "item": {
          "id": "e1c0f295-1bb1-4df4-a182-5de9d85333ee",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6a662d96-214f-45b9-860d-235378434f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8dcfe2f-b288-48e0-81d5-9d4f69de1ddd",
        "cursor": {
          "ref": "ade02604-2a84-478a-bd11-efbec9737be1",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "785992a6-eeee-4c5b-9b29-5443dbd49f6b"
        },
        "item": {
          "id": "e8dcfe2f-b288-48e0-81d5-9d4f69de1ddd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0cc62f1c-8b82-42b7-8a84-b14894fed325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9268bb4-2ee3-49fc-8bc6-0f753b2c5c78",
        "cursor": {
          "ref": "0a578849-a180-4b53-8ecd-4b5f3a2eff55",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "5e7973c9-616f-4d9c-a4a9-3bbc7b549a5f"
        },
        "item": {
          "id": "b9268bb4-2ee3-49fc-8bc6-0f753b2c5c78",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "286bac7b-a23a-4f33-bf44-e5a62a721c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b85a4d-20a3-4ee9-9172-e095b8ef09e3",
        "cursor": {
          "ref": "66eace96-1493-4b4a-b286-a37f2719c03e",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d2f47b93-9468-4059-b27d-3a5434039409"
        },
        "item": {
          "id": "e0b85a4d-20a3-4ee9-9172-e095b8ef09e3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "10b68cdb-8014-4ac8-babd-f42b90156bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f179b26-c4bb-4b7f-873a-0aced47f25c8",
        "cursor": {
          "ref": "c29a080e-70bf-47d3-9eab-fea102792619",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e0d6f1f3-a190-4ba5-a262-4450e9fdb18f"
        },
        "item": {
          "id": "6f179b26-c4bb-4b7f-873a-0aced47f25c8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f911e3d7-7efd-45cb-b976-bb7bcda0bb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09033ca9-a105-4dc6-9d4e-ccf3d1bb7e5c",
        "cursor": {
          "ref": "602df3c6-f37d-42f6-8949-54a14351b381",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a4d33384-129b-4744-a420-b6a3ebe8fc2b"
        },
        "item": {
          "id": "09033ca9-a105-4dc6-9d4e-ccf3d1bb7e5c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "de9b0a86-eff7-4900-85e1-dcdfa7fbc83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1e06bc-d773-4ab7-85d6-1d6950082428",
        "cursor": {
          "ref": "5799ea9a-8fe6-4dc4-a069-a08cffdae97c",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "cf4359ee-f28d-43c1-9927-8a61fbfe82a4"
        },
        "item": {
          "id": "af1e06bc-d773-4ab7-85d6-1d6950082428",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "03f24545-3538-4bbf-8c50-c6e34012a5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8202d646-944f-45b4-96e7-b9a2a6f5df40",
        "cursor": {
          "ref": "b00abf35-b828-4f91-8682-4241cae7cc84",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d477bc68-d636-4ed0-82af-9f2b815460fe"
        },
        "item": {
          "id": "8202d646-944f-45b4-96e7-b9a2a6f5df40",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a681544f-3fa9-48c1-91cd-6c296ad92b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7a6f67-7ab2-46c5-a33b-f8c6293e5d28",
        "cursor": {
          "ref": "db745b46-295a-471e-9099-48b6eaf392ca",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "18a20b25-8038-4ab3-a338-8df14113421e"
        },
        "item": {
          "id": "0a7a6f67-7ab2-46c5-a33b-f8c6293e5d28",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "aa384be7-3ccc-451b-8cf7-c5d0d6aa32aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37abe717-0acb-4bcd-97bc-411bc3f51b13",
        "cursor": {
          "ref": "72118bdd-c027-4f22-bf85-c89478eb8092",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d3d35880-dbe8-45e6-b007-6f143903ca44"
        },
        "item": {
          "id": "37abe717-0acb-4bcd-97bc-411bc3f51b13",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ade16fad-6fd3-4ea6-9561-df7b5fb2db80",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd40bab-b6b3-4495-9bbf-059cca183c8a",
        "cursor": {
          "ref": "f414c4bb-6869-4964-9041-e3ca355b228f",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "783205ee-9634-42a9-bade-eec3d9abdfae"
        },
        "item": {
          "id": "2dd40bab-b6b3-4495-9bbf-059cca183c8a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3432caa4-3326-4adc-9806-40485f162ec1",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "84778222-65fa-447b-aac1-489d34161ceb",
        "cursor": {
          "ref": "f7cce5e6-be9c-4a19-9a85-1f57b571661f",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "23ed9d0f-cb04-42e0-aae1-e347f2ed4e03"
        },
        "item": {
          "id": "84778222-65fa-447b-aac1-489d34161ceb",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5acfc913-0ac4-49f4-8664-31e32efa3c32",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9b220f-fe5f-4023-93f0-dd2e2ad3dbc8",
        "cursor": {
          "ref": "5ed5c57c-6e6b-47b0-9534-c1730a0d3028",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "207a2967-c758-4f2c-b1ea-ed8c84730e09"
        },
        "item": {
          "id": "fb9b220f-fe5f-4023-93f0-dd2e2ad3dbc8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "64abad89-fdb9-433f-9202-5b93a2dfd602",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9b220f-fe5f-4023-93f0-dd2e2ad3dbc8",
        "cursor": {
          "ref": "5ed5c57c-6e6b-47b0-9534-c1730a0d3028",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "207a2967-c758-4f2c-b1ea-ed8c84730e09"
        },
        "item": {
          "id": "fb9b220f-fe5f-4023-93f0-dd2e2ad3dbc8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "64abad89-fdb9-433f-9202-5b93a2dfd602",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b0316f-50c8-41af-b472-0d817f6f8a5f",
        "cursor": {
          "ref": "076aa452-755c-46cc-b0f6-a2354d5e5085",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4a0fbd98-ad23-4642-b655-361ea2d90515"
        },
        "item": {
          "id": "48b0316f-50c8-41af-b472-0d817f6f8a5f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8abba7e0-2e5b-4484-878d-280ceb1b64b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8865115-ba5c-48b0-b7dc-d8cdfeaafd7b",
        "cursor": {
          "ref": "7708ee1f-2817-4368-a919-2a2e61fd0b5b",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "de9abdcb-296c-4a75-b0d9-2e71851e0dcd"
        },
        "item": {
          "id": "a8865115-ba5c-48b0-b7dc-d8cdfeaafd7b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "29db3611-f4b8-4a37-acf3-43d991ff3925",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}