{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f31c1a5a-3bb7-4521-97de-3026392e1790",
        "name": "Clear Cache",
        "item": [
          {
            "id": "603cdc13-ee8e-4ef8-917d-b63d4bf9e951",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b50d8738-b4e4-4ffd-b6ff-241f0c57d110",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c1538c56-6e11-4912-a838-287349f7a62e"
                }
              }
            ]
          },
          {
            "id": "8165950d-d528-477b-b146-8e13dcbf8808",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "10196859-85ee-4b0a-9f17-2ea0046c18d6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f3767a05-aa77-45a7-8913-14411952fa33"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d2d4ff67-2a8c-4bb2-9356-30a4b7100f7c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "196a76f2-e26a-4f54-bab1-e6f7f1441913",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4166be54-8564-412f-9466-d58adb090026",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b37b8e83-2135-468c-a6fd-1d6e47a6d10d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "873cc83a-091c-4687-a6b0-adc092ace91f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0cc4a495-96d4-4f58-9468-6f5a46712243",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9251f0cb-6ad0-4886-8cc4-a2449ec2d23c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d2e1de59-a17d-45fa-93e7-ba767461b379",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f184e501-bbb8-4a26-afb7-93a080500338"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad8a5e84-00bd-4355-b32b-fc144d88d031",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ae1abedd-c7d9-4c23-8348-435f39292cfc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7049eb2-9083-4257-b05e-25f45ab6af29",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c99ae685-fcd6-47f0-be40-48c94ebbe9a2"
            }
          }
        ]
      },
      {
        "id": "9e29e9d9-7267-43c8-84e8-d3705720d1a1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "61573d24-6c69-4f51-b5c0-326c42a41aee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3295b69b-54dc-427c-bf90-3cf3905994e8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6579671e-2e07-48b7-a5ab-0919f18abb32",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8f8e35-8c28-4718-b2e2-6d2f97d41737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94ebf181-136b-47d6-b601-97a8c9a6716f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a7c92b-55ef-4da2-a1cf-43bbfbd08fe9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23a114a-fc5b-45be-b37f-169ab2ff9bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29c59227-decb-45ab-ae44-e9b8d33f9131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc98fe0-789e-4810-9f73-8ab1c7c2c5bd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b4433e-f3e3-48f6-a2a6-7bb2006a7116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "692442fc-ad1b-4ad0-a271-3fbd2b57b58f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c1544d99-7db2-4b3f-b2e7-9358b876aa2b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d79311e0-708e-4410-b628-e27b5ce67d93",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e4d9b2-38fe-411f-b7ee-596900c923e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82228360-fc3b-4154-bbf8-76234f4bf498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242d29ed-f9f7-4912-ac61-e8028a9c4586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a148dee2-27ba-4526-ac47-e7b476ead7b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f1a5fe04-d617-4c9b-96d8-a33889a35499",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d8845c5c-7ecc-4f99-bcfd-9cce8c17a735",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ecfc758-e41b-41b0-9de9-f0fe2f77c0fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "feae3e3c-0c70-4406-bb0e-f0b880ba8bca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20748f8a-db69-49a8-8700-bd6bce6747e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "800ea54b-bebc-4302-ae9b-1f06dc352198"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "287ea1aa-8d0b-4eb6-bda3-d3d246f72987",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01f66cad-4d16-4b72-96db-4d68033c6dce"
            }
          }
        ]
      },
      {
        "id": "c4cd20f2-f546-4b29-a4c0-a590257ce948",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bf9c734f-fbe0-4dcb-b5e6-1e358e479d74",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9eae9821-f752-46d9-9760-e6e7c66861a6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "81cb138f-8676-4374-9af7-132de17f9101",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c214a1e-755a-40ff-afb0-0478b094c6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f97cc2b-0061-4840-be25-8e28564e8745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e0ca12-90fa-4bb5-a2f7-d1a0395b8357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67ef44cb-07ee-4f85-bec5-5f689dccd095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda2d05d-8630-43dd-a693-d848965f49de",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a86281-3961-4a64-88ea-6d3a9c3df77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf83b72-4ec2-48b8-88c8-18a4b18d2537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332bd13b-f52a-4874-a2ff-6b908fc92ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3aaa8eb-e50c-4100-95ff-f5aa7f3b20fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c420ab31-db8f-41b6-8e5e-d7e4e9aa740d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d02bec-6a01-41d3-b9ee-c9a3f79f2766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "170f11e9-3ff4-4945-b7fe-41ce3b4f387c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d17f8bc-9522-41f0-83f1-c6cccfa5dd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1da7299-3687-4408-9ba4-f7670d48d622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0e7631-2330-439f-b596-0f16c2211fd3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9cf053-b427-49f3-a2c0-4186b593bf80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad35deaf-9fb7-4510-9c23-0435056d9acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dbd6c3-9603-4cd4-a1c7-7851d7e99a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8aacc75-3fb3-4ef8-9951-bdee9d3c1f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a6701e-dea7-4d0d-9533-1a5aef064ff7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf6c2fb-0602-4d3c-9061-3fd747418456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09df0914-270b-42af-80e0-73a3535593e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742ec2c0-3d77-42ef-9a5e-c3b496aba745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c44f5021-4ee1-4ec1-8a29-6efee2bf25b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94583d0-887f-4829-a49a-a45c055f230d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42abf553-c27c-43bb-ac8b-f6a4a78be0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84bf79b-9bb3-42ff-8e84-8d98cbefa729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae6a889-e13a-464f-a22a-e110128b8852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82b6e004-a4bf-4d70-9098-092cfb730fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4f7484-1dbf-49b5-b613-a425d6c9d657",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6ddbf7-9025-4d02-82e0-0f6dc64ddfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3543709e-5368-4883-9048-a510d5e9b812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5825d4-a2ea-4d1a-8428-95bbd3c5cb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1775ca9c-0ea5-4237-93e6-a98a799225b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabbdf0b-20fb-4fea-8f61-a6436b358429",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7a2901-5dbd-4cca-ad24-86efb03641f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8440a60-8633-4ffb-878c-d5033743af59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340b163b-f9f3-4342-b43e-82f636c07e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17b48f01-36d0-427a-9d5a-8c4c937ee185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5d103a-65cc-4113-81de-4010b566c47f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3a4688-daf9-4c0c-8c09-7df967ce02db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69384881-8e0d-4cd8-af48-a1a54a09b190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4b5003-c424-46cd-9f8d-359b5f30bda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a74a079-82ec-41df-91ad-11b6fd086d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a910aedf-6a03-4abe-b23e-fb9fd1c16531",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b11b890-0474-4ca2-8b09-400d6cbbb7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4843246-77ae-4e64-8c9c-1da6bc0c9201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6c4bd9-8a64-41d5-a1e8-b27c724f8d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "116b9940-a2ec-4e4b-aa0e-c0ecb5614e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355cfcd5-ea25-4c68-9b30-65cf46354ddd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed800a17-afdb-4ce8-ba04-8f8875d60f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9267ba45-2e49-48a2-8760-ac6823b05d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a728eb-44d6-4c2e-899d-b56b0e39473c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28aa4464-2aaa-4f22-bfe6-b3d30dfc8281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4da2154-635c-417c-861b-ab502a0f973c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa3cde3-a59b-44bb-8b65-2a7e4b2fdd36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19906217-d7bb-4076-92e1-6c0a6d2f0252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366c3770-c546-4245-ad08-24599eea550e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c705182b-5d83-4cee-8db0-96ee8bc1f7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4bfe67-16ea-47fc-9460-0ab7dea6f5be",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1624f4d-ab6b-45b7-b930-3004c8987060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83f66611-ecdb-4417-9f86-76c31a681d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bb3173-3c4a-4032-a3b6-201eb61b641e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83fb746b-8cb4-42e8-a7f1-98d26c58cf5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decae516-e2b8-43db-9222-3a4353fdef36",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15666a96-6e0f-4134-9a21-5dd51aa7a4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb10c4a5-bd75-450e-8c29-efe5dcb9933c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9493e7c6-a3b4-474d-8bfb-dec8869e0960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf9f57b3-31bc-4d0d-807f-3450eb03c62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416032b1-8977-4b72-afe3-2ae86a57093a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93931b84-663d-4bed-a400-3d934aebafe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308a3efd-80f2-410c-8483-8fd3bee3311e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ef9582-2117-42f1-8c99-ceddd492c8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41b42fec-1d16-4fdd-9478-5bb24279a793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11c0598-3ff2-4157-b6ca-90adb9d0ce07",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ccf3f2-d167-4444-aae3-273797c0790e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304c9fd7-097c-48e7-ac40-ff6f1e1c8f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d4e800-8c34-4f07-adb7-d6efe4a37405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3e8ad32-1729-4892-86bc-f363dca68655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606538fc-64e1-41f9-b156-6c418ac11340",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d583e0-d70b-47ec-94f1-be861ba43f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2829cde-f9a5-4ecf-8069-ce8b1696e9be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93fab64-d242-4a03-b365-4aca6af5e408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1eb79fa4-1a6d-4b20-869e-801247503aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042f741d-36c0-40c1-abcd-a9f34e914666",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a85fef2-fe06-4c28-a228-48db2d903583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0befff81-c3a5-4ea8-8003-18ecffca93a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5e2fed-938f-405c-8fc6-75395ee7141c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad71386-efc8-4696-99ae-17518a0b22be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abeb168f-b8ec-47e1-9dbb-3231fb88e795",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f800ef6d-fae0-48c0-bf32-a4a697c13200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d81a97-e78b-4a17-a500-1bc3429c1a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ba6e2f-1e01-45c3-b4e8-093a6b1bb8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3207bea-872f-4fc3-9fef-885929eabb74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049a6bf5-b106-43f5-b829-fa1b50e231f9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdab323-3bbc-420d-b054-31f7d91aed58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f98b928-0b9f-4902-9b6d-320c37d0dcb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9adf320-b406-45fa-812b-96b47b8cfcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0bf31fa-a835-4d9c-9306-5717b146d2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec803fd2-c40e-4016-a9c0-417060520599",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b33f11-ec63-4389-8864-33d21df25250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d30000-6d02-42f9-ba51-960faf76750e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9614a0ce-143b-44ae-8407-f59a9d741abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8fa5f6-aeca-4ca1-b297-bd28e8bc1b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1acd9742-e9b3-41ff-ab69-d0c170af17fc",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1ff158-e662-45d1-b783-59e6289fcbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b705e221-bda8-48a2-94a3-89ee9cf72e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b42a13f-f5a6-4a77-9403-44de3541b8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04f7f7b4-f979-4656-8af4-98b2794533f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9bed4b-5d9a-427c-bcea-c4020c50fad8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb443708-5f01-43c2-9b67-c30e629e0eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec392252-05a6-4b03-9b10-3d6c8a1b8f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1ff866-98e3-45c8-affb-ea705596679a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1539ec0d-f174-4af0-9895-0c0a6a8b83d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe30528-6627-469b-98bd-6221cd2c01e7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954e1e42-7852-4e8f-ad1f-4680efa8ec8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b4467e-aed1-4aa8-972a-54dd2f126db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c95f74-4bde-4bc1-9abf-0af310d61a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff21dd7a-a8f6-435c-acde-36167a0e52e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f07d8e3-4b03-4bbe-93ca-cf9c26c39981",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c108e01-03ba-4558-afdd-26137253b418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a263d4a-b1e5-4d62-b085-4be161fad88f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7958f0-abba-46c5-86d0-354679b2707e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa0fb73-f03f-4c64-b111-3ed7f085adc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04634b05-fc02-4518-ad45-2e3b5095a46f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bbc1a5-b29b-4ba9-a9ca-5acfa8b165ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d66ad9f-2a4b-45c3-ac2a-cfbe32db9be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f35030b-c88c-48f7-a190-b0a84506fc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1968b9b6-4a1b-43e3-8352-32a1c940590f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846b31f2-2536-45f0-99df-86ae7da7c934",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b9f487-af54-4785-85d7-e035c70f3e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17dd8a99-4746-40ca-9783-17d472e27ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3033ec78-4d4e-437a-a24d-ef597d28f458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f94ba5c-0e8d-49ab-b7a9-991318c3dab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9837e19c-dc1d-4ec4-8d7e-4ff1df562857",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e08d82-8be9-498b-be45-77ebfe96761c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b0929cc-db82-4018-aa63-59c84de09570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311c544b-2d06-47f6-98fa-445bcc7a1e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea953a5-0006-4837-a4f0-c555b721b824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520c9e6b-b9e4-48d8-a739-2781acc05704",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc9e738-b846-4050-9653-b206243ec58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61e5c32-cc45-4fa6-b163-068bc7e39131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402408a7-7006-416d-bc3e-39026c3093e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f63732a-ad96-481c-8573-3018716f395b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac36574a-dfd0-44c8-825f-4a9639dad309",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665f50c0-3500-48b1-8ef7-3af8472eff62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472252ad-6e4c-45a4-ae2a-6531ea4a9049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c6bcd2-7651-495f-8a81-610d1d7abc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "00f3bf4e-a5b0-4d8b-aef9-85a86df2ed80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629196f7-be8a-4029-a45c-819053f27cf9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72a7b75-7d3a-46bd-97a1-3270aca86287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea59867-1668-4163-b8a3-cf06f6b377cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094cb135-d32c-4866-b090-a1646f5503d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24a440bc-4285-46db-be9c-891d38cb3872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03192d1e-0cf6-43cd-853e-71edcd268fbd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c0d420-8d27-47e0-a981-7fc178f58490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4885b9-6ad8-4ac0-820e-6079da8c5e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727f69fc-857a-4dd0-afcc-358f0a47ba47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b27cfa08-b2d8-4d27-9597-c013c2319f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054bdf7f-8be5-405e-a6ca-0afcffb50d25",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93887786-e85b-4d15-997f-7c8e2a5d7cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f2a6273-5653-401c-bfb2-2aa418d44f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13dcfcea-2dcb-46ba-baa0-b49b786146ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aebc09c1-843a-4d10-a616-a1e044ab2419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d11d43-f463-48fb-b7c2-9b2353b48a51",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21edb4d-bf49-4146-8b29-80dba6310b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05ace89-4605-4c69-b735-e5dbcf464462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1e403d-04fd-4ae5-91cf-b0f49d1a7482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11dad4d1-d320-422a-ba4a-6865873c011f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f68414e-6b7d-404e-b3a3-7c24f99ef5fc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96f71cd-1032-48e2-9d7a-814a7337fa14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c87c122-2903-48d8-b06d-da261012e55e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb925568-6565-45bd-bcce-6589131d6966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c130a2b4-a350-4df1-9884-1d339e371e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e510077d-801f-435c-9b06-23896fcb0df3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e4fc12-40cd-45fb-8139-9cc1341cb0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "260fda04-0963-48c4-883a-dae99c99df5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bef3dc-baa8-4028-924d-1f46c95c603c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d05500f-d7c6-4e87-915d-e85e845bb843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5599178-21d4-41aa-8790-d0faa13f9619",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31f106a-e02a-4c5a-b890-53f1a1f50f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b5b373-ff58-4e54-932a-d728e7a8897c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ae9cd9-a692-46d5-b9cd-656a6632ee5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56696d5c-7090-41c7-b525-463850c4fb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6ebd28-bc96-4f46-9388-b972cb039b00",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39372cd4-8ea2-4d70-af45-13707b8fe659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "758b9cab-e811-42ea-99fb-7ee4c13cfd98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932164da-c008-4284-b768-07ead89fe139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f962c0cb-69b5-45d4-ad15-9b191f6f0399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d791821-b457-4c45-be6f-d437b68ce0e6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce513815-62e7-421f-a7e1-bea2d46daaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c640ee-229b-44cf-a0e5-86d0fd5e48c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206256d8-ac5e-4b48-9d05-63bb889d42a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "13b17084-1246-4911-ae8f-9f2cb69b035e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2890aae-eda1-4b10-8bb9-45cb28572ed8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f827b7e-c7bc-4031-93fe-d0147c0f278a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b47dc55-0262-47b4-abd6-a5e869a269ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80aaad1-4f53-4282-949e-34eb6b545651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8be1a79-69d5-440a-ae6b-be5893082b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ccdb8f-b82d-44c7-823d-206b3f8e37e3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b63439-3655-4b6d-9249-0f4562837d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939b3321-9a5e-411c-be8d-19b2ad286227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0858d78-d923-4587-b693-d1b902272acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "578d2976-316f-499d-924a-3475ce35be12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14892deb-a19f-4ae2-a678-29a413ad06de",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f628827-2d42-459b-802f-041413dfef04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e7d80e-f46c-470f-9dd7-5d11f257de96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2a036b-86f2-4dc8-9cec-9ca4258aa47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9127e3f9-cdfb-4f80-a40d-d1268092b586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682944b0-2c64-4c2f-9ed9-1d81c76f991d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c8957d-5327-4ae3-aad5-4e0fbbd10db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb215af4-3949-493d-95e6-c7f00d301318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa91846-c017-4235-b794-1697f5f95a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "831624ea-3297-4198-83ae-cf7ca272affb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cbcc17-eee4-47db-827f-6dba6d496b8e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24bff9c-4802-4069-a2ac-d527d4510f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840e53a3-45f4-49ff-8fe1-2f75f88694e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc67ca8-50c8-4edd-b98b-f5d68e570709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3e186b-d7d3-4282-86c4-a2a3a1bd08d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a4e328-3a8d-4844-807c-8d95c95b7984",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d296f4-519a-42a3-9c39-0d70db0b976d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6436ab-d00f-4995-9136-0d3a74f5be36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55493237-9b9a-448b-8746-ab8ae57bf483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a10b35a-8ac5-4516-97f9-a8991ebde3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a57a45-e198-48da-98cd-ea02b4e00191",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4083cd26-b214-4033-bac5-cbbec31b4a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6058b90e-d509-4d0b-bd7f-cab1fe2fec83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7748b235-0a57-46aa-a9a1-00a898fe83a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1458fd4-0e95-43fc-9eeb-997da84c83df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95ba095-f0b4-41cc-b758-3eba7e4e89cb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68fe8f7-3dcf-496b-ac9a-b5e2eb30cbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066f9f27-e533-461a-9c96-dba4d5e615d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6974664d-9e3b-420a-a5e4-6418591f96ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "741e86ab-618d-4489-b33b-0270d988780b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c1484b-de61-444d-8c15-e6e0804ca273",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d46c51a-feba-45e0-aa2b-3cb630ec2422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31314309-f1ae-4ad2-a3ac-c197c53624be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b5a080-3042-4e35-9b65-d35ff56acaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f1a6abf-a947-4d3f-983f-35fb43c989f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51362469-4daa-435b-8166-fe2a92fd0031",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f878f0-3aaf-4f5b-a10a-fa23044fcf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07bbe45c-bf3e-4087-aad4-cd0ecf2f7ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3b622e-25a9-410c-8e23-e8d7df8deb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "581cc38c-21e7-49ea-909d-86f82bb9d841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7e76e8-5274-4c85-beb1-440fee4b8677",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfadfcbe-569e-4489-af42-0f4dfdfce57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e620a5f-e29f-4195-81b0-ff8d342c040a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083ca736-5131-48cb-b159-11351d8bd848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea45365e-de9a-42c0-9114-175a1bc3bd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7789e6-da2a-4c49-9578-589ba30d61f7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33515e39-2370-4cbf-af19-dc1e1c88d89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d38c10a-24d5-47b6-b8a4-b6613e27015a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e710f47f-b825-4fba-9916-87221a57b376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a81c4490-65ab-42c1-9534-c3a79f8e538d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c6a3c6-4f6d-42f0-90f3-86b32f00aeef",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da24a00-2fbb-427d-8d08-3f5fd9df4300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26dae4f5-4e90-47d4-9c95-5c782353955f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3a5431-1d0c-4f49-914a-342a55026524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1609f846-e392-4d78-a5c8-d99ac2585fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2b607f-6006-4a17-be45-7fd36c5fa480",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf890355-fe19-4f39-9b62-91ff70f1dbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ac3425-9639-43c0-ae42-231917ae928e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e8c9bb-2f16-4ae9-9acb-00b25e2dd95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "442696e0-8378-43da-a6eb-567eec3930b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52029124-ce84-416e-976a-3786d7726b80",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9a09a0-58e2-40eb-b2ce-67c83b2ab579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9f9c94-cd26-4ba2-9ac1-236e8580f3ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ed694f-3b03-473c-b881-a0dc65b9e708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b6baeb-32e8-49ec-9d4b-3e998a68bb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c76fa0b-ec7c-45ef-b7e2-19e937d33f0f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ff4f4b-509a-4647-95b9-4f524405bcdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ff18de-9229-4abb-8bac-36b41e95f5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3723151-71e6-4da6-bd2b-b7d67b501b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd538bbb-0057-434f-882a-9b1563af1106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375e6c84-da13-43b9-90b7-6b5bf1ec5e56",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944e9db0-18fb-4dad-b606-9afd208f8dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3fe9cfc-0aeb-40cb-8ca6-99f3958e7b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1517f8a-72d6-4f59-a33c-7e7aa4238833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c5831fce-536e-4ac1-a45a-c36cef8730a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89599b6-be8e-455c-b032-ef3ad812b9ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82338f73-e38e-4aa4-bc95-ee00d1c2bab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0860b81e-fc1e-4f3b-8181-c46d557869e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75094e12-d1be-4780-a15f-406aefa96ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "775b7045-14a1-479c-a5a5-1396ab217ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65f4827-bfdc-4f15-b091-7a05ab589f17",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbeb0e94-dba7-4405-b279-2f4b1a4da7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9312eaae-7b54-4c16-9596-2b8f5773894d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04598885-2144-448f-87de-f52d6873d8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef57883b-1701-4bba-ba3a-2520229234ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308baa4a-5d30-49c7-9e96-d709f47790c7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260a88ca-b7c8-48a2-bf8a-209eadb11710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07d5379-4bae-4d6b-8bd7-1c414bfc7cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d53231-9f58-4b9d-a40a-bcfbd54d24db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2410f30-a32d-4132-9435-ad55707b089f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5439177e-759e-410c-ab30-d700ad9f1118",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e350c90-beae-47a8-bddb-a68fa77662b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234c2616-b13c-436e-88f7-8f87da559700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfab714-f13f-4d35-ab45-8e47e49c63bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8d5683-131d-4697-9b64-6c17ed6c1f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cad140-5c1c-4cb9-afce-116870d46172",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a2e71e-cb0c-4a6a-a3d6-32bc3c4d7f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a8096f-1012-4083-8867-0c320280277e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea070fc3-55dd-4cfb-b27f-5931bc786f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "323388f7-82db-4403-a0dd-b795b86b5731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10595f2-b46e-437b-a70d-d7a7182171ae",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb09eb2f-5dc7-4431-80b0-768eebe30767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01954bb0-50b0-4466-b1fa-85ba3f8e3ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a4c9e2-64a9-467c-994f-b52c11468513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "579dd194-d3d4-4e3c-ae8a-67309c40a822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9c4b12-bdcb-457c-bf80-83293ec8458b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c782a22b-bfdd-4d6e-acde-135ea11b387e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aff0ff0-bf15-415b-9bc4-b009fe4819c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a25a55-a87b-4ffd-aba2-658cce8b86ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c99aa6-e50a-48b7-a018-2661f62d4d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe97906-c189-4aff-839f-4ff4c0ea69ca",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c3269d-ef46-4025-84fa-ea74f5b91e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03497776-02f8-438f-b6bb-48905526a4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c89048f-2ff3-4550-bf91-4793c492b537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b920d7d-8f13-42bd-b1fc-ae42e5e9c0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a19eac-ab20-426a-94c3-bd88d1952b1f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30bfb21-fee3-4862-9da1-e3d23416349c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6cbe6a2-3c8a-4bf1-8d74-a5aa742fda4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66c1e2b-f689-4970-9a35-b4257f2e1023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e147ac-ddf5-4dbe-84b4-fc21126e11d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bd1768-8143-4eff-970e-ea48ad5f8220",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b0acf2-dddd-4503-a37e-642dbbda60d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57eac23-c5ea-44fa-b6b4-84c7b9acb6db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645f9856-4520-4341-8b5d-a1e5524df8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a44b1284-0567-4148-9acb-f810c767b8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73661846-eb55-406d-8d4b-ee46c51a14b9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ef5487-928b-4804-a431-50aa08641a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c67fab3-f79f-43cd-bc1b-003c8818a4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f1efd8-7e4b-4c1d-9e31-737e8486f5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0578bc-be7e-415f-8ede-adf63a74fbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd6bbaa-5f72-4bd1-b447-29883ce8f6e8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454d10df-7c39-4a42-8a25-11edcbb7dc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "295aa671-fcb5-40fe-91aa-dc5f85975cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4abaaa-23a3-4405-9cff-861dfa3c81bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd187737-ad39-418e-af3d-6b795384ed62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299e7782-26e8-40d7-87d0-2fac539d2132",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e2f531-4d6c-4704-94e2-1c2ecf57f76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfbbba59-bfa1-4e68-8ac4-54aafc920661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77939882-4cc5-499f-a6f3-0c3b57711b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "031ebe1b-fede-4753-8fe9-3ce7685b3991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aacd1ab-23e3-4be5-a092-9ab8211d5483",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3bf3a8-e646-4fb3-8fbe-c84ae8a8ac6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00847e89-7b60-467b-b869-d98b01134c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac825657-3f00-45b3-a905-48fe9ccf5792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d296e2b3-afa3-4423-9dda-0efca7eb4a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56aa5625-bce7-412e-95f5-26c7482a1a51",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11056f9-e175-40f4-9cf1-f77ab163c68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66ba087-8f05-4f29-996e-5f12893386bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a591e8a-f2a5-4f05-bfd1-e02ad91ded9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "588e1cfa-4a4e-4be4-a486-ca74fa30c0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19d930f-3c11-44b2-8479-422b2de37c67",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536e1701-5f2d-4f80-a7d3-ac756d599a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e22a26f-2e8e-4e32-80ae-3e5846cdc27f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d634bc-50d0-4965-8d94-60b47605c816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24f8aa84-80ba-4dd8-a2b1-1dbabaca289a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9b1aea-07e0-438b-90d5-cdd2c1edbabd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65dfbbeb-48d5-416c-ad41-8b2e714e3c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a9a504-b868-40de-91d0-35925b4e5199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8473a4ba-7b68-478c-a850-05dcef908d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be55e33a-9142-405e-a0c7-6851031d2bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862f36c7-1e35-49d7-9ae3-9e3a6215ceec",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982c372b-385d-468c-a298-b6af96d80ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40adcb96-0308-4bb1-8283-07dbbdeb4412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe801282-ae65-4f19-8933-3348f48f9654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7365bfce-d2c3-4ec4-a970-ab84ecf1333d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d8b0d6-b85d-4b52-ac78-f026c36fdd5f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3482e8b8-9849-4fbb-b148-da3a2dd90656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae01befb-c817-4cac-8dc2-d2ab5c802320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe4287d-cc84-4e7d-a916-78106839d44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6faf70-6ebb-4b9a-a9e9-45c48cb776cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cc5585-8c70-479c-accc-4fc53c163664",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecc4dee-82e8-45c9-8415-b9332ea52cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b15189-d071-4a87-9173-8aaff8e38d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba27f1be-1d72-4c0d-a28d-2d06e12c3adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61f1261b-fa60-46f8-8c9a-5bdf67a0c828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad35e83e-e24f-45ff-8dec-d68f971d62a5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994a948b-eeaa-424c-98ad-12b63f2e742e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8937159e-bec1-4c95-b52a-e36851b86c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74873e21-ef3f-4ccf-93bd-7bd4ed34e5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf2e904-0866-4b1b-a0a5-b011a62d23ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c9591e-fd93-453d-b57c-3e717f6f34e3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819ae6e7-047b-4628-a758-8ec7f23d52fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952b03c4-cdf0-4a76-91da-7aa8b075b8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c6af34-db3d-4464-98c8-54da735d7384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80309c3d-18b7-4586-ac7b-a3f4aeac360d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1466ad05-1cdb-4f20-bfb3-f5f0599ec247",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8173dbce-f224-4ced-93ba-ca7eeabfd949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d982d1ff-f6df-42d0-8f2e-11c1a8b6ff04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f075c961-c74b-4ac1-8e95-47466aef85d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cfb9ada-0d13-4738-a679-21975d7661be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6e2f36-aa61-46e9-8428-712e6d1c0b42",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e997be07-f877-4b0d-8f88-31004a7b2173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b2dd3b-2f50-4479-9d3b-3e01a2bfd808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd0541e-b034-4df8-82e1-357da60bc6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d14c60c7-d259-4aca-bf3a-2ceb2f3f72ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7437a8-2c93-4edb-9eda-8264887d6e77",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74bafe9-f37b-418c-8f2e-6a90b0a3570d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad2d2af-d695-45eb-b788-9b12b39d96de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486176d8-9f97-450f-ad16-69338727ff27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "412a2a0a-5926-4736-bcea-f0c25b1237c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f169c04-960b-48eb-922e-5c5c39f7ecf6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352c7b78-a9aa-463e-8258-c5ef33128166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1e8856-02b6-4aa2-8d3e-00752f08e13f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed45614a-470a-47ca-ac13-116656072473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7eb5c4-6a13-4002-a8f0-2bd8430eb7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5095dee7-6ef3-4a60-86bf-5ee5f1672326",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e2acfb-38be-41c0-a9b3-91998a264425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e8c20b-8337-407b-8ae9-fb703370b0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346466fc-04df-4f95-956d-414c99b402f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98944582-0427-48c0-a9b8-c14356d3fb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d003a27b-c0c3-41f7-9b21-d0060f6c1cb0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50cc59e-fc9c-4f5a-b95c-ba0155acada7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b202cc61-67d7-4152-9dc3-e25f8e732b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b77fc5-3bf6-413b-95a5-4b9ca3412cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d00e42b6-61ac-4c97-9f5b-fcef602e2b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df65f9b-f9d5-4f11-9b1c-9030c4f5c510",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1016f3-5ba8-4d72-bfa3-2511ec08568f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e56b54-6798-4f30-924c-5c3a86686461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc15e2ea-2a70-40c3-aa37-9374414d661a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4010b3d-4a86-4b5c-be69-06f745131644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef2cbe2-047d-4304-9fe2-e0df93f4db3d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b48fe0b-5912-4696-8d2e-b6ea6213d281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4851a3-3e92-43de-888a-97dcbc91fa46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994123d4-ab29-4cac-bd7e-71b78d822d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "496ae768-70c0-4436-8fbb-55bf8d0aff53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab25c3e-bb67-46d8-963f-db2ba79da83e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d09bd8-2ea0-4c82-bcb3-76143969e0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18eb7a10-a622-416c-b21e-f5c8bba200b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca6f7d6-9df4-4721-af0c-a9d98829129e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "20854372-2080-4885-aa2e-94ebb04eae90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f011aa1c-e51b-4c90-bcd1-353a948d9866",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1979e99-1096-4559-812e-2920f396d78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8cf5e39-bb20-4a85-9ca8-446014098b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f957c52-9ca7-4d57-907a-d4e8ae6010a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "03fa2b76-9da0-4c54-b61b-1ee70ed1aa76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b000a5c3-4ed1-481e-a65b-a5d7a3263136",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ab756b-68a0-4982-a54e-f7bf583bfe48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92c406c-1141-4487-99ad-6fc62df88e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941b7059-1eb5-48da-becd-803a11805ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6790f616-24c9-410e-87c7-e0b41f335334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b41451-505c-4f4b-9f1b-1ed2dad61fec",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51b5f89-4191-4c97-8eab-80877d07b380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf465b2-3d29-4844-8b41-6d9c6ae50e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099846a3-a790-4c57-8545-cfb7a8bcdc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "add74803-36f3-4d5a-873c-325f6f63ce1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d41cdf-d479-4ccd-a4ec-8f9c837b8793",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94180978-9399-4925-9674-567edb0efd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de348689-42ae-444d-9edd-356d08944e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996aa9fc-ef56-437e-a814-fddc6e36f411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "179464ad-07a0-4a80-b69b-bb8547dcbb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c73a026-38d6-4374-89a7-f509b29347d6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33f52bf-9250-44ef-a43b-d21687cad575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3ea2274d-b57f-4b9f-a54d-87075e90e7eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b2ca0a-4820-4600-885c-aa2bdf695ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "19db589b-5af7-4d7a-8816-893c18996fe6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "62ca4f92-4b9f-4fbf-95ec-972dcd527e9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4c0925e-3d69-4c4b-b40d-7b373c86deb8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff511a1-ef56-48a7-816c-d953995b850d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4caef56f-6a27-4af7-9943-a58b845fcfa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d439167-fab8-4f18-8003-7cb2220e1388",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "656d8cbe-c891-417f-aaaf-fd384a89f541"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "602af2b8-e948-4864-98cc-e3ad888458a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b201ef8-13e7-42ac-91f7-97544d13c155"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "964d0f6c-3218-4376-8453-9f4e73030c55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5abb88b4-4ea3-4d1d-bee4-e72f4afe1fe0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aa41afe2-1cc5-44f4-8db2-777682102ebd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "783120ab-5401-4bef-8c24-60a4c98a0ef5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2887ea18-305e-4659-91a3-10e338b5ef30",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a83453e-4de3-4801-82af-692f62ab748f"
                }
              }
            ]
          },
          {
            "id": "b22f9e24-4846-42c7-8519-ada0d5db2915",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3858195a-71b9-4a34-b739-7890f12e8ac8",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ac54ae6f-8777-4308-8999-e409c8669c3a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684a0854-5931-4e96-840f-1190381d5315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "88811ea9-5464-4a1d-be3e-6bd7b6dba1f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5d6540-86ec-4018-9495-87620607ca5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575cc88d-5568-407e-b2f7-0875bceaa00b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4307711a-74b4-4bbf-8f3c-675bd828b621",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd457157-def3-4ec4-959a-88cabceca19e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70b11da3-3264-4d1d-b02d-a55732a06da3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f63e3741-5ba9-4dec-b257-177a8e15e18c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "786b6dd8-3267-4a2b-be9f-3fcf253a728a"
                    }
                  }
                ]
              },
              {
                "id": "715a9be3-bc85-4c7b-8838-9dc1cde38936",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb615b30-4bbf-4841-ade2-7cc2de438121",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "029e172e-c7a1-4b78-8e4e-401f3ca09ed0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3faedc86-b039-4b80-81d0-51beafcb5cd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5ad78b2a-11a6-408a-b184-1f8836482164"
                    }
                  }
                ]
              },
              {
                "id": "bb589192-2003-4204-a9fd-1d6f15cff025",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "832a27d6-d1a0-4b58-a748-b7bc5d38d0b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c67c01d1-669f-4994-8933-da0dcfc8925c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bc26468-81a9-4706-a8e7-6fdfb7e33f6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "76ac2ac7-7db9-44cb-85c2-69598a815f9b"
                    }
                  }
                ]
              },
              {
                "id": "1a1ba379-788c-4285-83ea-1e1008b3c77c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87045d22-fab1-46e1-9ef4-cb7e0831ebe2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40793322-57aa-4451-b99f-8b505f436839"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6ed9ae6-530c-4f4c-96f1-149150e5a8f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "820db2d2-bc38-4f0d-9167-0c333fc6fbcc"
                    }
                  }
                ]
              },
              {
                "id": "d0593fa4-6ffe-4c24-819b-a1e97f1db97d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c3bcb4b-39f6-4ff5-9565-71a62c9cec6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5aaa47bd-894f-4626-943a-9bacf1b43a58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd84352d-0eab-4760-a8e7-b054eb948cf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "56ba9582-1596-4dc9-a78a-037fb8fab6a4"
                    }
                  }
                ]
              },
              {
                "id": "e7d9e27d-8504-4c84-8f9c-a144212e0818",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05233a54-682d-40ed-b5c8-573fe2c224a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b50ae184-abb8-4786-91c9-664bbca6dec4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5465adf-0a76-4011-a59e-b0ed434a5793",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca6b1bcf-e408-406e-96a3-381de0e51e29"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3595d730-72cb-491f-b1d9-3ce79567dcf2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "93ba50e5-312e-4228-914a-2f4585925dbb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "32fa9153-7cce-42a5-8dfa-f429b2492674",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc38c142-c74f-402d-86af-3b5f85c2e40e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d6ca6a1-446b-455e-bec6-3bbc7b5b5a32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "12f030c1-2495-4e18-9af7-9964575ab6c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d80bbf64-bbe0-4ae3-b50e-860404d4be56",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8332b645-dd0b-4347-84cb-389c77bdcc1b"
            }
          }
        ]
      },
      {
        "id": "a0e5c457-3db4-4a94-b506-c3891e77020b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "567bf0ce-c6b8-4dc1-a699-6ab8d1f45f87",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb2e225f-c635-48f4-a870-12e0cc60be33",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dd579b54-1b3a-4d37-9911-98c621f570c3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33af7838-63f0-4990-966f-98422ce2a765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e66e9b7-629b-4b04-bde8-aa85c239983a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2590e340-a947-45ad-8009-64f7c903efaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "13829abd-4c69-45a8-be32-41b014c525a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f24251-4867-44bf-aa24-efec5ed79d4b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49be23ad-5a56-442c-a9ab-732c8ab4a30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3f2a89-a471-4dbb-b012-2f085bf6ac96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2265247a-9702-4893-8adf-1b2945cf98d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de51ce40-5996-4d3f-b9f0-35e1c40d83fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0aee5f-d466-4cf2-a4f1-229b4c1762f8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b00171-0a93-4341-9b5d-72b7ef997d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0eabf6c-095b-4a85-9fe1-6cfe2363c575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f176a58-ac92-45ef-bce4-864e57d49bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37135894-44a2-40cb-8d2e-2989e59a9dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cc4a48-ec46-403c-905c-1401ea0b5ff2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e87c89b-5e10-46aa-a482-330f07a6f902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62667d60-58bd-4df7-8981-ea36c7479967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb4744a-d721-4f4c-9056-d5ae80ba4b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c60e30f-3929-4a4f-a1fe-025558d4f025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48de759d-9732-47cd-a22d-b98614553f2f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75df7a9a-1bde-4469-9e53-f352d833ecaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a30529b-75e6-4ac1-acfc-59d48d668edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1cc820-7cdd-468a-badc-7e5e744845db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0442bd57-b527-4484-bef6-243cff53892e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46c4a8b-04d7-4dff-b938-695cc09fa24c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20af8ae8-85a4-4134-bf6d-c95d1539beed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5686c04b-cb89-4fcf-9726-eca8ff0f6afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4dae9dd-f403-4b5c-b490-c4e86600f3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f21f7e0a-7b9f-43ef-a383-6341b4da38e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d68556e-7345-4471-b56b-f9dfe1d4cfb5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68098b7c-416e-45f1-8fb7-ebbc95cc09bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189c1b8c-f28c-4cca-ad94-f29605783795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d71aa9-5c4e-4570-838f-4801e3d11876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "20e8903d-df0e-48f8-8c3f-c37e4c5e0d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5dd5783-8fd6-4dab-a963-7c08826315a1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02986435-e590-440f-a9c5-501a053605a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef32877-a95e-412a-815f-14d96da17b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9501064-5efa-44a9-9722-7e0d8ffffc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "981dec6d-f82e-4622-813e-e592638b75aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a89229-2cd6-487f-b242-3b40d15c8be5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff85fe5a-f272-40ca-b97e-9bb5d51adfbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098adab2-f370-41ce-aef8-7f32633a45c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4510dc-7e49-4d78-b8fe-1db4d82c7e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e425227-2234-40d5-b03f-9608a68a5f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a233054f-46cd-4b10-8e96-26047a46b45b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c836d8cb-6335-425a-9e78-2cdddf084822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068ef30c-0e7c-4b3c-ae77-71c9b8c1f6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333feacb-9e28-4f89-b929-24a2be52ebc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4219921-bca7-4fd1-8b7a-c9b395d957cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c216275e-fbdb-4c3e-8bd4-54f832bba672",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13119960-9189-4730-9359-dbf3c78fec66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed243f6-172a-4628-ae04-a6f67df123fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8310469-e31f-440a-aacb-accc6109a18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d00ec0aa-b5cc-4ff5-8fac-ede45c45deb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce10e23-38bc-41c3-983a-859b6d7807e8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "520f7831-426f-47c7-93f8-82d30e66509c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb33ff2-479c-4c95-817c-b3b5220e83b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4423a65d-984c-4b0d-8ac4-d6eb8fffd9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4de84d-925d-4158-9064-e8888f337b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8332843d-549b-4f74-ac2b-b25a10ea4248",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5eeb18e-5bb3-46b5-8d4b-b2e5462e0c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1249a647-df1d-40b6-866c-4e2592319f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9322a00-ac80-49b4-b036-cf7046e97c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aee3740-1e55-4c29-9f20-0d29bbe65fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bc5985-93a4-48dd-9c83-78962dfa0e9c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c1e34e-1736-4681-b0b3-986f452d8053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5cc2b6-8126-4d5d-a7f5-c0b90a506884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a06ccc-78f6-4106-85c8-7fc7351be428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5118b919-df3c-42f9-89af-e59b7d32e395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f685c2-441b-4d03-b2ee-d3e805398e1b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7927026e-a286-4eef-9369-a69a244ec2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b1214f-070a-49d6-9021-a49954b380b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ad74c8-d664-4902-98c4-6a02b27029db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a306a768-89d5-4e46-8853-4e5434d214fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83157b48-6698-4841-b972-6866b9568d58",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82f4341-b6d4-4a15-a0bd-2c24dd1d1179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "292e9948-62e9-4701-b72d-cc15c40fd024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7168a1-1db3-4db0-8014-f1e531462c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "06eeb150-23e3-4054-a1d2-5559a603a55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0553479c-8cad-4bf7-aaf2-6ef456477417",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190a4fc2-aa5f-4678-9698-f2736e821fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40309f3-87e7-44f1-abe3-27ec7b7916c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943232aa-95e3-4585-ad26-222495172672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "34476672-6a31-409d-be11-7aa4d4c81d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee02ec7d-18be-4202-86f0-90abe1cb6ef9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10655ff-6689-4d5a-b433-55663c569d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e336bbcc-eb0a-450b-a63c-33d48955e568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d5f4e8-8a10-4dca-bebf-763ea63aefec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e74bcfe4-5ca9-408e-b266-8ecdbf4250ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75763318-07aa-4130-affc-6b3ec824020a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6751da6f-1874-42fe-9b3a-93a2df545827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c6dd35-4dc6-4934-b3ca-be618855df53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf70bf27-c0cc-4ef4-856d-f16e080f1a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebd26d4-982a-4b81-b0a1-e70282e69ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f89dc31-88ca-4877-ae41-82542d1692cb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69292c16-63ec-4588-a50e-d155cfbb02d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38e7b7a-c780-402c-b99f-2fa1f028fffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1c0a8b-89e7-47aa-bfce-f079b48283cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e36e2b3-8d5c-4254-a085-9edf78e9cf9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8475a6-5cd8-4cd3-b8ae-5f2441da6e93",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c9a332-7cb1-456d-bd0d-0db376defb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e96a991-7ec8-48cc-b9a8-20abcadfe5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a0d196-ab6d-4422-b546-d9cb2ac276d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e619c972-fa52-49a1-ad05-5f4112d0fc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0c8e84-d6a0-4630-89d6-3565bbc7a651",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1e36eb-08d8-4860-a1ff-7eab526908c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6879ba4c-29ba-463e-b0ec-4252299a12e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558c7b4b-1840-42f3-b6ce-faeb6241f7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11e81751-7b25-4cd8-866a-2efe3739dab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe3b66c-f741-422f-915f-94253854fa25",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76988528-df71-4791-bda4-22ba6e99a720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89366374-95a2-4741-88d7-a1d88353ef4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f389b9c-2350-4b89-b921-2760bb7d4678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "420adf06-dbc7-4fc5-9935-9876e192cf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db07688-18c2-4cbc-808c-e7afb3cd2ca9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55154b17-9591-4ac2-b0b6-89dd4a5c7b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "768acfa8-09ad-4b5f-a790-6ee211a01999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8744d65-232e-48e8-8ce4-b987717ebf6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8253163c-5dfd-4242-bd65-c73c130e6a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a67dada-acf8-451a-a786-4ae30736725e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935da220-60f7-405b-aeb7-44687a8aaacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc531a5d-68b2-4751-9043-49fbf280eac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57930eb-7345-4582-a2ab-10f9130fac50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d77d13eb-6ba8-4d92-986d-628c8b535406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4512b43-7de6-4768-96b5-398600c0607a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4587530-4e31-4409-ab5e-a5befd9f41dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca66739c-2dca-4cf6-8b4a-7d043f9cbf30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a038ad41-e54e-4e1c-87bd-ea30cf0c3919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85454d45-483e-475e-ab73-a9d004926efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f680916b-8e2c-431d-a134-f6e3a9e2bf22",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5ff67a-4c8d-4d37-aa11-3890b43634db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059ad303-da04-43c2-94ee-908931a5dd12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a784a59-0460-4879-b092-be7fc2848644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d38d7c3-965a-4446-8b8f-e5c5e3b300e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aac1b0d-88c5-4867-aea1-aa33ddbe017e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e16d89-df1d-48a4-87ea-e869a0416670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb4a4d92-abec-4a6d-9d98-30600aae0875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c9a366-90a3-4252-b00e-8e38a5de0143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6768efa6-9502-4941-918e-ad52442a9102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8738d9-6def-4f66-9d35-7c4832e2f7f2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb93562-0817-4031-a63b-c180b520d373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1caf229-97a9-4ef1-985c-28b99a27f605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8afd776-c22f-4b62-8e82-eb5ef28f6d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6efdf529-ded8-41c0-9259-c93d50118bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac9dea3-92c4-437c-8a9e-3afbab834302",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8950c0da-b707-46a2-8ce6-87135a443885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900e3ceb-75ae-4f94-8f70-a4dc729af18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281fbd96-6d23-4c06-8acd-41af8dc99ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "540259a4-e951-446a-826a-ab2ccb18b58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f15c97-3bda-4d57-ba58-d426576b360f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3b0c26-cf51-4884-afc5-a1a53e8133c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961f1e89-e369-4223-af27-c3e495659726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82dad31-7c71-4422-9cfc-bbdf3d5b9d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "678bd537-2967-4ed7-a0f9-8973f1c55ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743f6af5-e828-4aed-a9f9-31ad292ac673",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e377b9-e733-4ded-a8af-dda598d04091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16292137-363d-4711-a106-fbd0dc640b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3c7cb3-8afd-43ab-acb4-6742007e6cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7c09fb-574a-4e25-aef6-2edd36977203"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e1d5420a-eae2-4458-9232-5b4d3697fdf2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f27222f8-a404-4ce2-92da-d41d5fcfd006",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08933c1-8f78-4c84-b8cd-ceb43c13f848",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd289b7-c2af-4789-b0dc-53648382e83f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bc87e6-6657-47f0-8229-b46b3a1bf73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d58a9f4-caaf-4a69-af13-d329a6039180"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6f3e3a2-96bb-4cce-be0a-8e7eaaca1d18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4429831-41de-48d8-be98-b8096691ddaf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac020615-fe43-4ea3-a472-d1b0599cfd9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4745102a-389a-4ccd-aeb0-5a9ee9c00dfe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d65fbfe8-9edf-4b10-9ac0-71c304803330",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c6029cb5-5704-423a-b773-70a273d78cd5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da61c452-106a-4ce5-9598-5dea7261e06e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f57f6003-ce10-45ff-a105-5554a9d99202"
            }
          }
        ]
      },
      {
        "id": "c9b18ee6-3ea7-407a-bb59-c5e92c4ee89b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "fdaae1a7-f16b-4496-85c0-914972a5b414",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec675516-e52c-4559-be4e-d11cc70052b0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "add723a2-25f4-4583-ab03-54c07e37fd3c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f41c3b6-2ca6-4370-b179-40a39611c360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6199f571-f931-4ec8-8966-daa996334c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9116ec27-ae3a-459a-88e0-4c2a824af449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6baa023-f0d5-4031-9010-3855b03b84d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10355db6-26b8-43c5-9ca9-24ae3a76d43a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290cbb4e-f6c8-49a9-bc33-94fb998314d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da568b1a-7dd0-4c46-826e-c96352128699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f892ce6-1b9b-4c98-8354-0886f81b7057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "06635773-0674-447c-a3d5-bfaef26c8dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e17977c-1e85-4694-af6c-367bfc045ed4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e13349-6e44-4f7b-b249-9fe90adfde9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0c108d-a1d2-4cee-aa92-cc8016119365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e23656f-72b4-46a2-931a-d2c021e7f6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "140e1661-f193-4189-b4ff-7e5d987f1808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714b96f7-e859-42c3-af27-fd8aed81e6f7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8febc3e9-147a-4869-b098-925f909817d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a560158-4629-4128-ae16-09b07dce9b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c108fd-73f5-49e8-84f9-c90ac6378df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa368c02-0701-4714-98bf-30cb495607c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599f59f1-9087-4d77-ac17-9c1348d96320",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0150e689-3754-4949-a341-6ad9911dc10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566e20a8-f463-4070-bc41-76bc6a8914e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867900c2-233b-43f6-a822-e87a25866777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80789fa1-09ae-4d55-942d-10b79cc33d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d35ef68-3fd6-4101-ab33-8e6a2af0a60b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3badc2f-21a7-407b-9891-79484c78f710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbb5c7f-0d20-485d-9df7-6940025aead8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55880c1-a944-4ad1-9659-efc985e977e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9afb627e-8762-4ed3-921d-1df699775da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4a7e1d-f368-45ef-9564-df69a1ded3f1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd49f73-4596-4799-805b-5449dc12405f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc98c2b5-bf12-4f6b-8681-3fc8edf2f9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3b9faf-72f2-4e17-90d9-62ab4eb49e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a1faff-f82e-4cf3-ac8f-a953d2c7acf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095d7e67-d726-425e-80b6-0175d0a3243e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2881ac1-edfe-4d2a-b7b6-a16fbd9e8156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3c106a-1915-495b-9481-1121490304ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89273a6-afd9-4eee-b834-2a90c8a3f3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ab1677-12b1-4b72-b8a7-0899859db563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98172b7f-7f82-4084-a4e1-7c955e4d0f3b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ae9bca-2fc0-43c1-9c93-24f7565c49ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398504a8-e340-4ef3-9f76-19af8e273eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f587212b-b1b3-4d18-9f0a-b842a6b6c4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "389cb2e0-1805-4cbf-8b43-15a17b1479f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4650f8-b7bc-4f2f-8a30-2dda2c0a295d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5125d45e-5b3e-41be-aa8f-8a2a740d31cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d607c938-997c-47bc-9086-7551bb76eb1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbecef1-dcdc-4dff-ab82-346599b60556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cde7936e-f701-4b17-8139-2af4686b3be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea7dfe6-3e14-4f47-b0db-6f4e75798707",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eeb0714-a8c9-425c-9c10-c4aa7f249e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df41454-3a9a-452f-bc3c-b59f4e391c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabec463-730b-46c5-8efa-3f1a530fe994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e015d8-ab2e-42dd-8e1e-6fed02a47039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fdf22a-69c3-4aeb-aac1-5f96a1f68564",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288faed9-c4f3-4985-bc1e-38678dfb79a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2bc258-089f-4e77-8a77-88886560ed80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128ebba7-d3ff-435c-8e94-10b4d51e0a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db6cb144-7a77-4581-8399-dfe42dbcf9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d53b64-a1e4-455b-81c7-128fc2dec62f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab581f6d-a59c-45a2-800e-725b029984cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a65f37-7eb1-4f75-b86a-1e3a7dfa62fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29e4c22-87b3-43d3-babb-ba84b8bc3b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f655cdfe-ce26-409d-a9fb-db2cb24ceebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f33a5a-1ada-408a-b898-f79da178b47a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66502343-460d-4297-8da0-b50707a710c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5ba769-d540-4a73-bbbb-2a4d0b8295c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7635015d-05c7-4995-b2af-8cfc37652abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e342bf38-b42c-4f7b-8f43-431bcfc6065c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676fd43c-375a-4793-a62d-7f198c1e2c62",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82089a27-1029-4c76-9568-93bbd38c5df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ad96e6-3ba7-4dd6-a781-38b54c8138d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7274bd1-9cd1-41fb-bcb6-dab5f19a8104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd95d919-2cd1-4534-9b55-84d3f1570e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945fa84e-3f1f-4a89-8631-0597074aca47",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24a4c30-bab4-4c3c-9823-cd82aa7ef56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ffb2c4-e691-41ce-889a-65d7600767ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20b4ee6-4763-4a90-9dbe-b0133c94c4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7efb6f3-6ace-46c1-8f11-93579f337fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d849e8-e7ee-4153-99eb-98a4fc9d3b81",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c0257a-c926-45b1-a9fd-c8a35db021c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8280bc1a-736b-446c-85ff-0c829ef63ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b4604b-cd84-47f1-94b5-ee802be888e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4607b3-2ff1-45b0-870f-3ce8fbaa6891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78672080-b089-4dba-a8b6-9c250be538db",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abf0f35-0789-4dc6-97b8-f905ebf7b9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43744db-400b-43b5-8441-1c27e9175c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad92377-3167-443a-99e8-9565a4eeec43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b70c52a8-b6c6-4a24-8c48-471372765b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ecca3b-8bb7-4753-ba11-e16ae2553054",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1e4b42-6815-4603-8fe1-1fca79449e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275d17eb-6226-41d1-a6c8-77b358102433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd22ae54-dc99-496d-8222-644bc85c3824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61fe430c-79d0-4b09-bd8e-e597f895315d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8069c0e9-43da-4320-8c16-9a8e94a61cd6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1d606a-77a1-4a45-a5fa-53a30ed93bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398ce2ec-fcfb-4205-a1f8-fd93981b8996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31824295-d23f-48a4-8e9f-4d947a726e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e09a2e28-3fb3-48e3-af2b-25ee5932d035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9add403-1544-4424-9b42-30caa20f7533",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ac4303-2ecd-43be-bf8e-bf5172e0ccc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa28e51-dc7a-4bec-9a30-410e16c78660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fed1d4-db1a-4b92-85d0-226103a2f805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca307142-544b-4411-ac2d-a8e4882fc5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefecc97-ce6b-4b1b-8076-b4bf98484e4c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e949d3-6b9a-4369-b2bb-78b95f49b7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be0764a-b397-4463-ae37-d10e531222de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783f56fe-db24-4c00-8a32-3f3b8ad15247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc3e8e5-fba1-4fc5-9fbd-3085f4820e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8df774-33d8-4cee-ad9b-48cf9408dd65",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f04310-dedd-411f-aad7-5f9dc5be0ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5968e2d-4a4d-44c3-839c-e02b94e38331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e92fb2-4b2d-472a-9c26-fa49b5df1314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a01641fc-8137-4624-940b-c5849990382e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a4abde-9467-4381-8ffd-41f9c2a8e25d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15638767-9e8a-40c9-8ee7-677d6abd5a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03404ffd-4afb-42c4-8b8a-462a6c5bafb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f9425a-0110-4faa-a677-d1547023b5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49d2758c-8bf0-4e50-a525-65f84ff6ca37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4cbec0-7dd8-46af-b092-dceb7b8c5819",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1940ff37-67ee-42fa-b5f1-32d8a2d01ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf12de7-f171-48bf-8dab-c579cb6b0a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50762b15-fda9-4d29-ac7d-79f53f6089ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2588676-8beb-4618-90bc-3218b79a0f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8874ddca-a8c8-4df2-8dfa-30c3e04f438a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df711198-efda-4945-b367-02a3b1d445eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2e1447-cd27-4096-a724-832327d30532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39243618-1841-4f31-b7f4-21587178201a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3386743b-f1c6-4f10-9cdd-d9684266e3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e2ad5d-8a89-4d7b-9026-dfdffe368134",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffe7ddf-f648-4e3a-b24b-54aef19cd9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52726bf-e500-4078-8eed-e55d52df5b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fbcd2a-8327-41b9-b06e-eae0c44afd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d80e8ec7-db2d-4f16-8c68-84129f580f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c00876-090d-4166-a196-333cc8eb161b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6051d053-638d-41af-a42f-5a1a4f0adac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efdc3308-f70c-467f-8411-f29e607ee934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9188f243-bc94-4b7d-9ad9-39925a229aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c5ce35b-d353-4e85-9d62-6733fa07d3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96355a81-30a4-4511-a7a5-3cbe76b6d877",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add89fab-ee56-4c66-89fa-8a2ccd5b2531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c2f0df-0b9e-4098-83db-7e42c02d1f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a6f0fc-0154-4acf-8c51-7b5ea656c549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f59519b-1c07-486f-aaf2-17500a48f90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2e17c5-466a-4b63-8dfc-003a2854a3b4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c248263-9956-4381-8275-6d1a64187d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e08e56a-d788-453c-837c-448f66ad3118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c6212e-d4a9-46db-8fce-2c1f8815a978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae46b24f-6173-4d06-99af-d2c55ca7c0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6add3b-ae87-4c56-bbe3-b6d2de67ed56",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8759440d-03e5-49e8-bc72-8c27fdd5c684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e175678-8783-4bd3-b0e1-a34dd2c3de9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8d6e31-08e4-4496-a9f5-2a22d557a651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28796dd1-64ab-47d6-b998-5ee5f4cf69db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bc0881-c15d-4b8a-9db8-2cd81c25cef2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529f759a-9380-477a-a208-5fc69d6d494c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0183c90-7a93-416b-99f5-3765093d1a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5262438b-6708-4122-a751-1187ac1c830d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52134c26-30ef-44f5-a49e-da67fc4ec1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6328714a-3218-4fca-8077-59d3b076420a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edb4ef2-7f15-4d35-81a9-5c325e6b30cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6bb8914-8d93-42e2-9855-7494838b6f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169a05b1-6fbf-444b-8bf6-ce6c6dc25e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d98260-6a2e-44c3-bb3b-a7adf7970992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b4fbea-7fee-4c44-b194-6d54e32ecb51",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efbc0c6-d21d-414b-bda8-f6ebe70b05c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d82dc3-5cd3-45c8-aec5-42623ddf0041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2026669e-c155-48f5-80d2-07957f110c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9af60486-e9e6-4bbd-ac25-e2d7223f7f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f154d4-f00b-4dfb-bbfa-13c4bd45895b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58d7432-8825-4958-8890-8af401f823de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01495cb1-b0d5-4827-b638-7962e98ba5d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566bf142-5f12-48d7-b465-81dea2faffde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c50daa6b-b35f-4f4d-beaf-2c120d07ff55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022597c1-e28a-4401-953c-adde7ef6177f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757d8b15-fa4e-439c-bbf5-9021bcbbf579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ac95ae-7ab8-4cf9-b9dd-502d79ece7a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d403ba-8abf-4547-8382-5d0d7e70c699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f915593-38ec-4a80-a124-72fe46240ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6cdbf5-8e44-4e1a-9c1e-f09288a329dd",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2d9013-01aa-4c2d-b124-7ccc19df6d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7cf8fa-aa01-4fa7-bc04-0836a0d7a6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128f3ce5-3761-4d55-85d1-809842b72d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c416ad21-2aaa-4b63-8769-c7ba7614065e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da9851c7-f3fb-4dcf-afc2-d1341c42b097",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f617ff1b-b7ff-4b6f-8da1-3d2906ee8935",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a2b908-225a-4a60-90ff-c0bbdc63a131",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "22841e53-3942-4d26-8208-aef9c9ee8a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d738ea-9106-4f3e-8251-38441bd73730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47027366-96ef-4a87-80ce-b3f79be24e13"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7288aeee-a1b4-4487-91dc-045d738475ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7eabdcb8-3960-475c-a9ba-ffab97bd2931"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a729eb0f-2ab3-44e8-885c-1f8fd997cec6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d286e5eb-c842-4975-b7e8-23e22bfba908"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58c02f62-2902-450e-a0ce-3dc858d68d6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f2bf672d-d100-4b41-8edf-5d835599795e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "006e3557-a122-4a53-9028-dcb212549f63",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2eed7095-32dd-41f7-829c-02721c4bb8fd"
            }
          }
        ]
      },
      {
        "id": "d6da7614-e67d-4b81-9043-9d7ef1f2f4a5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1becbe3f-c96e-45a2-a71c-8d3b7e640622",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bbb2a3e3-1842-43dd-8f2f-f2b2dd93854b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "16b64828-75fc-4542-a113-8e1a08c3f27c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c43c56b-2862-4122-9e09-039e7573fabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3583d2db-2c40-4a68-8a23-4513f2183d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ecb9ff-41ec-4e4b-9a41-34b0b521c97c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3ddb02-096c-44a9-9f5c-a450116ecd0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3705f30f-f8ea-4551-9d72-b18f93705af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f34048-e209-483f-9987-d56bf465d213",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ab5c4d-f0e3-4cc8-8532-037fba85a72d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ffd501e-7204-4160-a13c-7958406818fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e83772-a373-4afd-aa42-690cf8a6ec72",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905cc50d-b5cd-4ad1-8f88-fcd47fa52e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab8d878-10c3-46a6-84b9-d65fe97a45f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07dcbd88-f830-4fde-b212-c55a567c1098",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b3a879-7984-4c74-a8b4-94af652b8c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6b133f-755a-47f2-99b3-832b90418841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbffc67-1df5-4dac-8137-4bce7a85de2e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e698e3-27f2-4516-8337-cf4e59dcdd2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f00dbf36-e0f3-4911-ab1e-95ec86fe6728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a45dc45-db2d-4146-afa1-905683cbf39a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864038f6-03e8-4954-8853-7b6ff04e65e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9858319-b516-4a1e-a665-1aeac2e4fff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87678b7a-ef6f-435a-b849-579f2df021b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b0f4d3-bcee-467c-8bb0-15e28b7e0ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc241155-cf3c-4f96-8752-dd2eff8ccab5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055e4aeb-0908-43f5-a9b9-c262d0f2cbed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12d8b8e4-2df8-4618-900a-7c4665341a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76ba1f4-8208-4dac-ae00-3729a2b2d4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eccec844-3b8a-4b0d-b05a-9db450630153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038a7f14-4790-4381-8411-72dd1c7392e7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c004839-7596-4c50-b1f6-23f631662f9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bb9ad24-02e0-4fad-9586-056fe97dab5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e224546b-d3ae-4678-9ab5-7c88af4eee2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "292ef24e-8913-4b8e-9673-feddf5efd041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68537cf-5cfc-410e-950e-8fce5a6164b6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66543ba7-a3fd-4145-b0d4-a033fc36c98a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "732cbcae-8c8a-430a-95af-a5fb938e01ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5592f8b4-5787-4211-832c-d2b1127fb0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abea3c73-634d-4471-9bd7-9e45de063fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e93095-436f-4077-be49-fbb61c086ec3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6e537c-a694-4f2d-810a-0ba186b23033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e871f88f-59a3-4f69-b08e-3f114d8c3850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e64eedc-0d6f-4238-9ee5-6aab50ba4d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4a2b7e-84ba-4795-9a43-e261d9cdea2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4747c1c5-cf90-45df-b4d6-93f61e1c37f6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88123abf-0d76-4e7e-aee1-ed64220e9f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab2e352-a35e-4b3a-8685-28201bfed7e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e9a618-e136-471c-bb1f-620690edc1e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbab6e85-43f1-40f4-a7d3-97614ba4286b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031bec90-bf7d-4f75-a0e4-58192ef66c36",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12a802a-10d4-4e0a-8a6b-2a497f2519d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ba8df4d-68b1-482b-b3ac-c6776331f6f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748022a9-62eb-4b94-929e-0a0facc7cf49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf96f39-79e8-49ed-b94a-b692ee351187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81c32ec-a7aa-4af8-886f-c44255923c34",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0110632b-7202-4742-85db-27dfc2df2cf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15560b21-f07c-4594-abfd-83d3bb887060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "385c7f65-ad32-4a7a-afe0-2eb8e82aba8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6be53d-232d-4085-9f7c-c1bd17928abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d729a0-85bd-4118-9f35-53b628a20c7d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb2e0dc-53ad-413e-a22b-7e05694643d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "368821ef-e59d-4a1b-b1a8-d7364a271f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94b8375-1c8b-4524-963f-86645ae4dfeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11da4d77-dd5d-4401-984d-1f80e844e7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500c5acb-0cc8-4084-9c59-3c6f03b9c7cb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012c0cd8-5ad0-4fa3-b01f-b2b10ba1f1c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "598bdb7c-92d6-4a11-90a4-e4c92b4901ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "221d35ac-0c42-4633-a583-9379e1aa0df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f22161-aef3-415c-9341-5abee7da0b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2367713-d714-47c3-8ecd-567dedd762d9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a52e4c-1ec8-4bdb-a080-181f5b146524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671530d4-4364-4216-b828-34e782c964eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab638023-4944-4ebf-855d-25d7641f59b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae4f330a-1212-4ad6-923b-0b7b4b462f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a281cc21-f6ba-4298-b08e-7cc769c1e615",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb0b798-be5c-417a-b716-aea1adab72d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850383f4-b2fb-4c1f-b120-4ed179dbceeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e43625c-2f0e-4cf5-a6ec-22a1dbd2382a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205b4b62-a943-4c87-9865-e3ece99466a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74012492-e1f4-4e20-910e-fb9e06a257e3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e16604-6564-447d-b9be-90cb74982742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207cee88-7272-41ea-9835-cc495f180351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "751e83de-e29a-4dbc-80c7-28a698ffcdab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d5e952-5dea-42f5-abfe-8c8a45458d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf91944e-0142-4c52-adef-83dc3fc9f736",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6deea7fd-9a53-4ed8-b71d-09bc083d3a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4030244-fd1d-4dfa-9e6a-3e0fb182c677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7715d09-718a-4854-a506-fabe38b23420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e909ff6-67cd-469e-b66f-d254b9ac97e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0089fb-f185-404e-81b5-484cd77a2c26",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4e4411-d794-499e-a482-71b9e9d7352f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf01e13-deb9-4f4e-9cf2-69f3acb757dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "279a8f1e-abbc-4f72-a91a-c2350c8b8dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6fd4fe-b1ab-4ef2-8020-efc1dd9d6f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599b95eb-f245-4b3b-8c75-55d7251bbba0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f78fa6a-66f5-44b5-964e-0ed63a9643c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21eb7c65-5b7b-4eb0-9235-a5b164c446e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f624c224-e32b-45ae-b4f4-7fff96fada07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032960c4-a9db-43c4-b770-2344ee59273c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33bae803-1b58-4a3c-afd0-b7990b1fbbad",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72af03ab-3a97-4685-bd1a-961ae926a4f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39361e2-7dcc-47bd-8293-da120b58da96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11302928-8718-4225-a712-4c1239422d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3c1202-929f-4ed5-a765-dc3e1374aaa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3470cd80-19f2-4fa7-89ad-bb581212d9b7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77d0907-1c91-44f3-a687-64a342aec07f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83912d51-606b-4b4b-b858-780cdb33d015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783f1c83-9626-495a-969e-b56922d16927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825ad4e1-9c86-4a37-92b1-7caec87eed25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255f5f92-e152-4641-a385-851072958daf",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cea3741-6216-48b0-8db5-2b55b1ff358d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3764a25-b43a-4ed0-838b-5526315894f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4bfe15-adbd-4327-a19e-270a9aa73e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c40968-a0a9-453d-9b3e-6997a67cd18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c9d74d-aa6b-4a09-8286-895f8c41ae49",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b4a7fe-ab31-4032-8217-a42fc0809d67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4adf579c-e0ab-4fdd-b81b-c6a5b57253b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "697b9721-27ab-40a3-aa11-c3a90120c28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d5c43c-4c55-468d-8495-09816d085cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6561ec1-8af2-491c-8bf9-5ebb5276538d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b83acc-f5b8-4122-9687-8aab44617815",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b5d69e-4b7a-44c4-9559-bd0125d3272b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f760a6e0-6e9b-416b-8d56-7d1c451cd220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7a028a-1129-49d6-93e5-37700b1a9888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af9c6a3-5ab8-42d5-bbd3-d6b5192266f2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee4f154-7077-46fe-a535-dbe4ace4f3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a8adde-2f31-4f9e-a5c9-b86b40444d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52490a0-b1e7-4303-a6fe-e34a466caeb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a6ee81-738b-41f8-b8bc-1c55f47afd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6cb23a-8bd7-4768-b8fe-6695d8bbae07",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06a735a-27c8-41e0-86ba-aa1ecf535f3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ef2bfae-7c38-46ff-96dd-8f7d2a16888d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f08a56-f966-413a-83ba-d1f67c4635e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31be2dce-4ffb-45e7-9d3f-3248f484250e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eec0410-c5dd-4c25-8fcb-79108939214e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c0195b-0e25-45fc-b0be-05a7f390ff76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fb4b64b-90ee-4847-9f2d-183f91d46fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24ef826-a88c-4440-b50d-5bac23a29704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d88b949-0090-4bdb-bb9f-97f6f1cdac15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86f5a3a-3696-4a3c-bcb1-caf21f133a80",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ca09af-47d8-406a-b910-5c498daaf126",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aea376fa-e6dc-43cf-8dfc-6014ec0eddeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1383de2c-1b0c-4aa3-acb6-cceb779045df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93011ad-4549-4a88-8ac5-c4e5c0856ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e56865-321a-4df1-8669-50fdc542d764",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5266b912-573b-4168-a9eb-41816bc37e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aa69cca-a7b0-4685-9a74-ddc50d907c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "963347aa-a366-4894-bd82-ef5b21a6891e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca22e3f-7408-4716-89e5-1bf5adf6a51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ffcd18-a553-4aeb-bf20-aedc7eb39c18",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc551662-75c2-410a-994f-b822650080a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fabce1b9-524c-4ed4-af18-893b99752c93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfc8792-5266-4277-b026-9c80de4bbfc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26523078-9d0f-443c-8f66-9f4da113ac57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4542200f-12ce-47ed-ac9b-a35ba8f0e322",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a79a4f7-e227-46f1-918f-eb160ef9d1f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d125b7d-7042-43f4-aadc-4ca654462a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ea75b7-5b5d-4709-a987-414d5ecd5daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a43045-3b50-4c16-a942-1721adb82740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72a528d-f81e-48f2-9196-e3f6123cad0c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46ef3dd-3fe9-4e61-8744-68e98316db8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8181966-8098-43a0-8f11-3958b7ed363d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2462483-8947-412f-b81e-e4d0e5a3d755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ac804d-5bd0-4798-a6b7-0bbcf10e6d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112273fc-04a0-408e-9841-c6ce32303c6c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd12403-0787-444f-aadd-51a9b1f23319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5a1e3d-e5e1-4e68-b663-3de5e14006e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4766ce-4e24-47b7-a3d4-5102986d6cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d5f248-f83e-4af4-9c9a-dae60c8b1f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921fe2f2-efaf-43a1-940f-d5913e7768f3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17325f76-9670-4cad-bbed-5b899ded9c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5730d098-7e88-44f4-a123-d79930ce7e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04be8d9-680f-4a80-bd4a-1622d54b087b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86df8bdd-29f9-41f4-acaa-d87ed6f6218f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a19f86-110e-4d4a-8ae6-729cfcc7b1de",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579b573b-4bbb-4977-b4e9-28938dadf8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7afb9116-9d22-49da-8a40-94efca484551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e0015c-8ae2-408e-9748-35d6e3148ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a645d3c6-4acc-487b-bf70-79ecd551e4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffe0a5f-8cf1-49f9-bce5-bb82d84adb77",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c6c243-5cf5-4ed0-b91a-d53df6b53375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e19489e-aad2-4b71-b3f6-ef53f74ae8e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb41ab6-c841-418e-9056-21cc407ab01b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf564e2e-323c-467a-b6b5-0d340b19b89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30dbfacb-1947-4bd0-abd3-b538eeef945b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6031ea-ea91-4bc8-8bde-ca0690de384a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f7a1cc-a806-4a08-8916-eba669549aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b22557-6aef-48a0-bc3b-b27024e10087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0d1144-5751-4944-aa95-5bcf5c0f35b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51c91d4-e8e9-4429-9696-c51e2257d31a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0b2fbd-6795-4e0f-b0dc-215dc63f979e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde85223-12af-4c65-9b18-19d672dd3b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2028eb08-3047-49f5-8d4f-6f256ef29cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a83949-a3e0-4466-b14b-0491f371e881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839c4004-48ed-4b33-8ff3-087b99c1b482",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972d8a74-28f0-4581-829c-df5107958755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213b1a92-ebf5-4554-9087-e281c30614b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d01d2d-34c4-44ad-8c71-896b76d29d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40cf141d-6032-4bd6-9a61-903ff4ea27f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93e7b3f-b3de-45fc-a5d3-ef385312221e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449dbd71-a546-42bc-a91a-8ce240c8227f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7fb8a22-4174-481c-bba6-efa68175f53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8daa98e9-069c-4971-9e4d-93167d39de73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39da95f-52af-44a6-a7c0-410b244e0051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abf4d47-b115-4f84-b848-14f72e2a905f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730f86c1-fb60-4a44-b583-8ba86790d139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419ca4bf-d1a4-4bbb-af05-30a5b20e6786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d56088-974a-45dd-99e7-d342d6706cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220f05db-4e88-4788-aa98-8ab07ae583f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6517d511-1fa1-4052-9512-ca1e18c5eb78",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b640d3ef-e247-49ec-a7c0-05f0fed6dce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a57fd31-acbf-4563-b5ba-8b14861ea800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8906b766-d461-4a17-8b9a-a17dfbf2ccfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ad6c1f-42a0-4df1-a47f-706312ad5669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0530d2cf-b745-4d77-95e0-f6b4cfd14ec0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6489ada2-527c-4fd9-a607-ec7adfb3e1eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "773ab2ba-2d20-47ed-99f8-f6c0045a3d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6106c50-473d-4d11-a73a-008397a905c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02aa6aaf-d8a5-470c-9e55-b4032c5d39aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03c80e7-b2fa-4715-82e9-f035abbe8fdd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cae5f3-64af-4c14-aea1-f4a749b07a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c801671-a5b2-4177-8917-5f6a7054f0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c5c2d2-a89b-44f6-84bf-9d89c5d61ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a80ba23-73a5-435d-8da8-b35b65bef11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4d6c13-2efb-4106-b20e-fa663a2e6d72",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3dd815-db7d-4ed6-b241-45f07c5cd207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2411b5-4719-41b2-b279-8a4e7d81f8d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e326f5-7bd1-4810-8344-96a543c9d754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3454caf-b78e-4216-9095-e9bc2a11f247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9702926-ad4d-4aba-8a5c-81953fc2b520",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe806c6-30a1-4e5f-8930-0e7daf4a7eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b6a4cb-6428-41de-a37e-8cb59d05b2f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f21bfc4-7430-4be1-a8bf-4ef3cc541303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad96af24-cec0-4c02-b263-ed55b4993179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab178aa-409f-414b-9a64-881700c7f9c7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc3d651-cdcf-4ac9-b0e2-16a84bb638ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bdb99e9-b359-4606-974a-4e6a9a590c96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc7f2d4-cc27-45d5-a584-ef5450864483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3740c8-1617-4eea-bbb9-b2793e42e3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2e7b87-b336-4eaf-9e6b-45205ca43312",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ec50aa-e5ab-4cff-9466-4018f1c84b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e93765f-132b-455c-a096-d3e8c1246543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfd46ce-8258-4849-96d3-cc4cb6138771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4d712e-0242-461d-8cd0-8eeb12c02676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87c950a-d83e-4483-a243-94c757bcc3d9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d58a44-d704-4685-afa4-317c1ef1eb4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e61ff65-6088-4558-a811-1c7b3393b4a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49f780d-8352-44de-9e1a-2e8912c719c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b3844d-dc9f-4dfc-ba8d-142ba357918e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65dc946-0b84-430b-a7e2-0d5b278b26ef",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bd95a5-f9ca-4968-9e60-818f64ee8cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314ddd4b-25dc-4e80-b307-1ae8ae5f03f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2493dcc-d5bd-4e42-b75f-5d801644206c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88a7ecc-36a7-49c7-a97f-757ea10d77e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7224ce29-928f-4664-b683-9ee11bfc2fbb",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bdd188-9788-4c45-a075-842b0b79f120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de98c47-f052-4813-9a37-8364b1f44a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f595b07-1f8f-41e1-ab7d-2c6ea713532a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7ad056-bb57-4608-9f25-3ec40ed0d426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcd944d-852b-46e7-adaf-78b84ab47313",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a8aaa4-8bd4-4002-93bc-200ba6d6e12b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1955da1a-c3cf-42f1-8935-27b0b0a81de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2502a724-55f3-4edc-884f-180c125a80e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190f56c1-e735-4e2b-a802-13d967d8b89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ccc72a-b671-404b-99c0-fbed88eef6d6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f45800-72c4-4c4f-a3fe-d90c4709eed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d1f4b0-d97b-44c5-836f-eca305579d8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed8b41a-d6b4-4fe9-be0e-ad85f04b33d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b267d9-3dc8-4cb9-abb1-60b04749143c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed45bc8c-69f9-48d7-a5fc-d612cca4804b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39226bf6-1865-4713-aa11-f9dd07860acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc13a6a-6c04-4f71-b54b-974cc2184997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da07b7e-6aec-47f8-a2dc-5e777948a2bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3daecd20-d9a0-49b9-a093-2172d9b1099f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4fd72a-a820-4f9e-9adf-be823389f163",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a9077d-5e32-48cd-8881-dff862eea833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9fdc7c-8299-4912-8b9e-8e50e5065143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d450c9dc-c6d0-4157-9bf7-b1e2bcbddc7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47699220-1bbd-4441-a981-af6e6ecd69db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cfe8e8-e1b4-44d0-acf0-9c7cd1fa52e1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a60f54-6fce-41d2-87f2-0a954a760cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631b81b4-7afe-4df3-95c1-c92a6a3a241b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7010ddc3-dd0f-4f7f-a7a9-742c28d7b061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ceda0d3-1d6c-49a2-9d50-2110b70d7b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3641a2ee-89b1-4e07-a534-abdec29cde5c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43724d4d-2ebb-4cc4-b9cb-6e720fd3dd41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89937883-378b-44ac-a8dd-f25a2c3853e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac3506a-f463-4f31-8dca-0c8d0581e264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65331855-2556-4c0a-af3f-146ae28aeb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69ddee9-621c-4a4b-9e28-b68fc053c6f9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141376ed-43eb-476b-b97c-49dbe4fd20b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f98886-2945-4b0f-b7dd-b39622126476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfea3355-7921-4ef8-a75f-c207b3441b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ee09c3-e372-4658-ad85-59602b198ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4574ad14-0374-4876-b4f2-81e67da5f94e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97030de-9f38-4788-b6a7-ccf4ad3c9347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c410ba-5ebb-4fb0-a1b6-59b29c4cf3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3abd74-e484-4327-86f5-fabd5b6f8438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b22cd0-d65e-4f7b-97d3-5a33ffc32907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef74ec2-56b1-4004-8c39-a27d485b870c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c573fafe-fac3-4722-9172-eba91fdef062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c09a672-0875-4ad5-b178-1cba58008d99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc34db1-10fc-4f28-a48b-f00efacd493c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf6c756-7a7f-48e9-b241-0faeb790fcdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a98f4e4-d7a2-40f7-bd66-2dc19835fc7c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329c7a20-285d-468e-badf-4d44b7024918",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a35b5895-93fc-452b-b4ea-a183ca4f751c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3080bea-3604-46df-8d5f-8de83cf32090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972d154c-1c0d-4d73-ac12-6bc4186d72f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe555c56-d04e-47a7-9923-f14212f30f24",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f94c442-0163-43ff-b41b-83e5fd687c91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1574cd4-743d-44af-b9c4-a9cae274b341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "961926d6-a669-44cb-9a52-daa61ec01507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2798b113-50df-4758-8a3e-d4039431a3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6a1a2a-8ec9-45a4-940a-ee306dcd2f27",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dc85e7-f36d-42d4-a82b-6b7d8f9c048e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69cd9435-be04-46fe-b7d0-c3970cf50c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7195e56-ea69-42d5-9295-5f7c8444238d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938c3486-4978-40df-bdbd-062975330ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e33e27-bcf7-4d50-987f-dcec9f461f19",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6236e20c-b619-4cd9-bc54-350d6a313a03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6c02aa4-8ca2-4e96-9118-bb11eb38bd07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe73510-f3c4-45a1-80e2-cc144d789c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c459fbaa-475c-44e4-96ba-54fc881c6b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4804231-35df-48a5-971f-e1959735d445",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115060e3-9a9e-45e1-99c4-229e23315d28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e619669-d06b-4e51-b41f-66a2f7f38637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fe9fee-4d77-4581-a217-5e1a43f48908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda473be-3b30-46a3-bc29-7a8bb3b99473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1259fff-8d82-4e5e-80c4-effbdbd63a64",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acda1bce-9ecc-486d-ae3e-dd8d5d87ff8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ad1c59d-042d-4574-81f5-f28f53f3e333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6189e89-29eb-49ed-a667-1fe5290b3785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcbadf8b-3fab-43c5-ba30-13a6c31a5d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d30da0-469c-4c82-9a6a-71a043dd7f50",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc963ee0-a55d-47f8-80e8-4c2e102c0956",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b72b5fd7-a4cc-4c0f-8a1d-d96c85ca34ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5c4020-5a34-4949-b709-ee42f4dbab6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "909ed2f8-17d5-43f2-b0e0-bfd9864f0848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b4bc1b-6f66-47b2-a89b-5a74c7861f0c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005c8399-f7bf-4dcd-86c6-275b1829cad1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d32f0f04-5219-49b7-ae5b-2779f6c50980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e06d42b-01fc-495e-a729-bfe04eed816a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc02f0a-6a23-4e12-a549-d7aae2790aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86312d6c-2b50-4b10-bfb2-2930dd052c26",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27e12f9-36f3-4654-8b40-2fb9608ac3b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cf63f97-578a-413e-86ab-cf8527b8cfad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66000a0-eb63-49ba-b342-50ba0f2f8166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37952c9f-9568-4edc-b706-bdcd6abd4f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b3644f-048b-4d9c-a736-39f326caabbe",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72edb2c-1d53-4ab4-8d63-f10415a4f3a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1946c4c9-c9e0-4837-b262-0689ba8fa5b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbba2da-d8b9-444c-8354-e806efc524af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b87d5a-f3e3-4326-9df6-bd8e74759bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa9b58b-efea-4ecd-861a-f2b91cdefd32",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7972d5-16a8-42f4-a64f-35ba53a53244",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea890bb2-2c87-410c-9d56-8b04086ae85e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc321b0-4e67-4c6e-a442-31ff82255868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd04629-541f-4b8e-bb96-4980a2dccdf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75c2dd4-0717-44ca-af99-6cfa5dffd45e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf6ace4-0d78-4618-8d43-867b89ea2413",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "becec73e-d8a0-4960-9a24-4071aa8bc5c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f428b9-d060-44fb-955e-5a27f4b036a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9fe225f-9d89-47d5-acf3-844ec2b80bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1695f96-dfd4-4617-81ff-748771325222",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c471d182-609b-4472-9ae6-dcb8cfb8b1f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30b85611-8dd5-4227-83d3-e33cfed7da21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66676547-4301-4ebb-9090-5ee3e1e96850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d925fbd-a570-45ad-8f02-6723c29fc6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efd5a49-952e-47c1-a1aa-62df6598fc9d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f629c1e-1865-42df-a2c0-3129ba3c0896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e775e56-5575-4a47-8bd9-327bfd78b7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57d082d-474a-4994-83c5-19328ff57cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1d4580-7037-4faf-a0ec-3b03b363170e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e863cd-bca8-4b68-9c39-f3621814c8e2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23201dbe-2619-47f6-8187-45190e040cc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83a70114-11ba-44a8-9bdf-574a92d9c628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f412818-8680-40ec-b5a4-10307381371b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432c2cdc-1b00-4f4d-b888-977700ffb6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39def9fb-4bec-4978-ae05-62be5977fd0b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f397d404-d192-4ab5-a9cf-981f89e8d241",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fbe06fb-25f6-46c1-a723-fe01e5f6981f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10620784-f34c-402d-b4ae-c224b9ebd5ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ff323b-262a-4d6f-8b41-38e87937478f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83697c73-de5d-47b7-9c47-b7fbd7ef2c6c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0639ccb2-774c-4ff6-a38f-fe84b29c0df6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d137681d-a969-41fd-8dbc-587c544ae302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9de086-8a32-4ecf-90c2-a559e23f9a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a19f8a1-9268-4952-8264-66d8f1e61960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea81f118-d534-470a-a554-f1bcd50334f8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf310ca-a598-4604-9c24-cbca63e22c36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7699c1cb-3e56-4ac2-9917-4a45a135ba79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "128a418c-4167-4ea7-8143-ce1bf3352452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d0e2b5-d2c1-458d-9cfb-eb6c012e6956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db44c53-2651-44fd-a5cb-17648fbc0074",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28123f3-e8dc-4102-aa22-1bb4ea8e2b98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8d6d641-1a79-40db-912a-965f2284792e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d181216-a6f5-420c-81ca-186473acb27d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e2386e-52c8-4d0b-a400-4cf43b0d45ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8576d5-9848-4359-a888-d5fe519cc578",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb57182-9daf-491a-bc78-57eebb59fe95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1f99b47-1601-4052-ae27-24cb99bc9acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3b68bc-d736-42c1-b6f2-4fb8fb462fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7e9f55-128f-4692-a867-689bfee75957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159578c9-4372-42c8-9291-b3417d00fe9e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28e9860-e705-4111-a61b-81ac99525949",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81494298-0134-4b08-8eaa-7d4141181aa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbd5d44-384c-4e92-b70e-54f018549543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9e5d17-1a96-4587-941d-3ca490196fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad092126-0c9e-4ed9-8ee2-8701ad282a0e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a37edd-ce62-436d-9918-d33a560c293e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88773919-54c7-4e9e-8eb5-f4a8cf935b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8a537a-5cfb-447c-8d18-e4bc7af9842e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0efb5cf7-3b6b-4c88-975d-41724cdeeb1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f78d3ec-9146-4ca2-a3dd-68fbb4b5abd8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae424d6-09c6-4d72-bc40-b2e8bb0d118b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bba544d2-560e-4d6c-9d45-866816c65704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a706eab-5e97-4687-95e6-92b3cf90b16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8cf096-4695-4b5a-919e-fffbbbe21929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b57057c-6a2f-4aae-a81e-078a627e2072",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8f4aaa-836b-479b-8741-61a98be58848",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1fdc229-e504-4181-a933-cc51f31404a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5aaa9f2-4712-4404-b245-baf8e717bd24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b75fdc-962b-40eb-998e-6586d61ca3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94204ed-0b63-4643-8241-0c1bb184fc2f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3824d1d8-341f-4332-9215-1b21eeadb2cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bf7ca0c-b68c-41e0-b49b-7795c2e5796d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dade8bf9-4320-4f0c-85f2-94f98c8e33b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf4acf5-ee76-411b-a969-0a37124a8c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd575c1-1832-49bd-8856-2be11ca257ba",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc791b83-07ff-4d55-b58d-f530b4bdef0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b41007c5-6878-4037-8cc4-e541c1b11870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a51f0c-53a0-46c0-815d-3a51a25f3657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb2f5c9-cbbf-4592-9965-8175416f142f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c076060-e2c2-4864-ac44-87d21ad33566",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd94a3f9-a787-48f2-b09a-37803efd1088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0462c3c3-f3eb-4c58-aaee-ba731e33f390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a825a66-59d8-41db-adac-d33af74c6fcf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876b3b08-a504-42f4-830d-e38014575198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef07c474-ddf3-410d-ba50-4303470c3422",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87c11d7-e5cb-4e4c-98ab-d3a60aaff094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08fe452d-d22f-413a-8540-4730b3e4b5d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b40543-c123-4b34-a30f-a3ce1a890bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3443ccab-8167-435b-bd1c-e50ce73643b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecd0b81-8159-403d-b2a3-94bd4e6bc202",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68d53bb-bb0c-4259-b6fc-aad3d6ec864c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ee1d988-8d78-4061-8f6e-378361fbc11d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4009e3-c379-4446-a97b-e1de1929965b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561d12ba-d1c8-4e4e-a075-e975f322aafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837e9e41-e3ea-4024-81b8-ed9c6359e810",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207001ad-1ec9-4dd2-873a-25d152d3d110",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "904a7f43-89bf-480a-88e9-4305348eedb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1156758-3af9-41fc-86f1-76eba1cd36c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299983e0-77d0-40f2-b108-e6bc9813ed59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8060615-0384-4023-83d2-b695770413e7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ad628c-326b-4a6c-8a8e-70481894ec32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f16696a-cb54-4a62-b16e-882b1481acb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0dda106-d1eb-4b17-a606-7be7230a4aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69a292f-f2fc-4655-886c-945f371eec2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21840dd-41fb-4095-abd5-c3695d069076",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1803515b-a6e7-4f8d-9910-1483a96f30df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acd63933-1e62-4cc7-8dff-3777b2b5410f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924668bf-a768-4aae-b911-7cd0aa9c5000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f86228a-1f17-4ffb-904f-a3fb34a89904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f07e99-e84b-499f-99c8-95bebee61474",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a44a991-3905-4606-a79c-441aaecc2b11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "737f613c-1c21-4d9b-8904-88580a1b1199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77465d8a-b2b3-4f71-8685-d284722f2902",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf1596eb-8528-4fdf-81b8-bb2ab993688e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3822ad-0b2b-4f37-92b4-883b1f225f5b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b41a279-645d-4aef-829b-254a42ffa6e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e90a05f5-fdba-4976-ab43-2c7a7e17bc3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91484e86-f335-4556-abc5-4bcf0d5779b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a82fd3-2b24-4358-a803-ae7243a83e94"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3a67f02-584e-4934-a6f4-caaa1e63c282",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "495181d0-4fdc-43c6-ada3-b4459b9ea751"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cf32854-c278-498b-a542-2ae9b3275f2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71acef92-2680-4ab9-977b-3ac17b9a0af6"
                    }
                  }
                ]
              },
              {
                "id": "0ff68584-fe7e-43da-a393-89944c6670d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55bf070f-7942-4ad4-8754-7637d9dee861",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b221761d-67ab-4333-8d60-424440b645fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7bcf8f05-93fb-45fd-a827-df09beddee0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "516a09f9-2455-46a8-8163-41d54b235d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb567d03-cc27-4bb9-9072-22b28954c129"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b13a0ef7-1f35-4c7c-b55c-86ea4b6b9d76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1cbe5b64-479c-4b39-978e-9dc384e0410a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5dc40b2d-09d5-4289-b577-48f7bdddf9b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bc21f29-dbff-4f02-8f00-284756cd080c"
                    }
                  }
                ]
              },
              {
                "id": "dd10235c-6ba6-42b0-904f-a6783fb7fa3a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0a531704-b11f-4633-8de7-1d801882f074",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b794219a-533e-4ec7-a7bf-e7095d02ba85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d9985040-e8a5-4ac5-aaec-df36defb0611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fc8c0b-3c15-4ccc-8fef-9af86acd2629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc208e12-352c-4d59-9183-749c6488bf5a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "867b2c75-06d5-43cb-9e3c-1a8c21ac3712",
            "name": "Positive Testing",
            "item": [
              {
                "id": "25c6141d-52c8-4b59-a9de-ba7716f2c2c8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee1ad680-f0ac-4118-8113-627edeb77183",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "770d6699-e4a7-4996-9fbd-232288c1d43f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75b407ee-0564-4064-a265-5d53f267b2a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7962d1fc-f905-4215-8883-de4b960b460d"
                    }
                  }
                ]
              },
              {
                "id": "ce54a39b-42f8-4421-aaad-78db09ac27d0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54f05db3-2985-4647-9a15-de1b1583b0f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8f4b05d9-094b-4c8e-9bac-524dbd22660d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d827a570-1533-48d5-a0a2-1f335037fd03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc1e0f2e-fa96-4c9d-a3e0-7a1bb9556570"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47b42994-3aad-4b2c-91dd-9cae1e55b6f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ea57c0c3-6e1f-4661-81b1-15a920a9ad70"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74b6afcf-127f-4ee3-ba70-e36ff2e8ee14",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7ac14d2-4f5d-4006-bd84-5892102b9802"
            }
          }
        ]
      },
      {
        "id": "c9c102ed-3e28-4b2a-8fd2-4259e2013506",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "79807e45-5152-4ce5-b364-7a135c08e14b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "43917b09-5ab8-40b5-9ba5-32d21b23991e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1cb814e7-06bd-4fbb-9444-71de41da2009",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5021408-328a-4b74-8fc8-bc2aa062d670",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "62d97303-1d6b-4aca-956e-0176c81171a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aee823c-2a96-4c43-a482-0cdd15193c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c8faace-1737-4388-89bf-d853f302d458"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34f96bed-3b90-44c3-8b74-f8e04cd57f32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "153d455a-9b78-4688-949a-35d38e184e80"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "744820a1-95f2-4d44-b634-cac6386b7bbe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87069435-e66a-49ba-975e-1944b19ea00d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74d45410-56ef-4b90-b23d-088f82fee345",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dec37e80-80fa-4682-875b-db09dea6c2bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40a6681e-2c1e-4dff-aa2b-0c463a8206c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "073ab748-af4a-458c-ac85-4a02a97326bb"
            }
          }
        ]
      },
      {
        "id": "a9595a95-f936-4946-bc66-da0dcad3e3a7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5feec83d-cc60-445b-af50-f822d504acd6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9fc44b8-3d06-425e-8bb6-eb96748cb69d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4de940d-6358-456c-b966-b7b42b4176b9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1a5b6c-1a14-4110-869b-0f2e1820f8bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d50aa58d-ed66-45f7-b61b-8d6b5c86c5a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccffcb46-177c-4b92-a181-2cab11afbbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5be341e-93e0-4cef-99ad-6f35a7784d04"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "443b8323-6724-469a-8703-e228a24da6d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bee355d-4bdc-4513-ad06-fb9ddf63221c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e6030df-31e7-4dd8-a948-5b66e38ab35c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "245b0273-133c-4a1d-9149-de63cb553ff5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c7b4431-be16-4bf4-946c-c83509d7d881",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f0e7bca8-500d-420a-9b43-e2301ee7064d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5601154b-98ed-4beb-b452-f9a18d150c69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "992c0590-78d4-4ad0-a33b-5425f14d82c8"
            }
          }
        ]
      },
      {
        "id": "4fdea83b-3869-4184-a77c-5c6eba7569b7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "43ab516b-fd95-4870-983f-e4920b3e4557",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bbe3ef3b-80d0-49c2-98a2-9b0154f41bd9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7e1866a-8ccb-4be6-8a0d-f1fc581fe690",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce1f980-b784-414e-bf4a-6762df62deec",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d67ad28b-3f03-4ace-96ee-37009b66ac95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d02297-fea0-491f-826e-963f4d9a4c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8417626e-b51b-4428-ab48-cc2649197fb9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03821cc8-67ce-4f86-9473-82be8a7eac70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b91303a7-7b52-4f68-8691-c33a5932fafd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44d9508e-1a41-498b-ad7e-394415da3b29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "865eef6a-3677-4c45-8e1b-c79fc0d8c764"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6736e0f-572a-4e13-bd35-a3000f55d787",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "35f64c74-5aa3-4ab8-8091-6cb4610a914b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0556f074-ee01-4313-9459-4664a5295d9b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8e3e0d7-6bd4-463a-bced-53815643a9d2"
            }
          }
        ]
      },
      {
        "id": "15d17622-12cf-4f2e-aec7-17213f8bfd5c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6638f8c-acfb-466d-9538-7e88f2b17243",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ca69c9f-5298-4328-a05d-5022bc973bfd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6f7b7c06-9534-4383-8ca7-72b7309db93c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b33044b2-bb0a-4189-a9d5-1396c1d90e30",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b37ee31-dc51-450f-9b36-cf1ab854081f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 103.99999999999999,
      "responseMin": 6,
      "responseMax": 9776,
      "responseSd": 648.7548018954895,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708907724713,
      "completed": 1708907763381
    },
    "executions": [
      {
        "id": "603cdc13-ee8e-4ef8-917d-b63d4bf9e951",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4cbff68b-06aa-4083-8d2a-ef825cd8ba8e",
          "httpRequestId": "303dddc5-67a9-4149-b22f-75b5e4bdd321"
        },
        "item": {
          "id": "603cdc13-ee8e-4ef8-917d-b63d4bf9e951",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a293f1e8-4e4e-4c3b-a086-b01efe908064",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "8165950d-d528-477b-b146-8e13dcbf8808",
        "cursor": {
          "ref": "c483f7b5-46d6-4cad-814f-4f4f194a4e57",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "522f60b0-d6dc-4525-8098-dd2602c55f4b"
        },
        "item": {
          "id": "8165950d-d528-477b-b146-8e13dcbf8808",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7ac0cebf-db7a-4298-8eca-41727f98b372",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "4166be54-8564-412f-9466-d58adb090026",
        "cursor": {
          "ref": "54d6c0b2-68de-44b5-a7de-b76405d78c65",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b3074e2f-51c3-4cce-b3e9-3f650a3b4bdd"
        },
        "item": {
          "id": "4166be54-8564-412f-9466-d58adb090026",
          "name": "did_json"
        },
        "response": {
          "id": "58e44175-6b59-4f73-be2d-124c7961b7e9",
          "status": "OK",
          "code": 200,
          "responseTime": 302,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6579671e-2e07-48b7-a5ab-0919f18abb32",
        "cursor": {
          "ref": "4dd06155-5989-4778-be4b-e5193f2b9f84",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "45e080d7-930c-4757-b3a1-27258cb2a91d"
        },
        "item": {
          "id": "6579671e-2e07-48b7-a5ab-0919f18abb32",
          "name": "did:invalid"
        },
        "response": {
          "id": "8b699134-6167-4d3d-a8b6-b28bafbcbf51",
          "status": "Not Found",
          "code": 404,
          "responseTime": 533,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6579671e-2e07-48b7-a5ab-0919f18abb32",
        "cursor": {
          "ref": "4dd06155-5989-4778-be4b-e5193f2b9f84",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "45e080d7-930c-4757-b3a1-27258cb2a91d"
        },
        "item": {
          "id": "6579671e-2e07-48b7-a5ab-0919f18abb32",
          "name": "did:invalid"
        },
        "response": {
          "id": "8b699134-6167-4d3d-a8b6-b28bafbcbf51",
          "status": "Not Found",
          "code": 404,
          "responseTime": 533,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a7c92b-55ef-4da2-a1cf-43bbfbd08fe9",
        "cursor": {
          "ref": "197cdbc0-8fd4-48c1-abec-fea6fcfd61d6",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bd8447a5-7f59-4b79-a894-34ea9d45176f"
        },
        "item": {
          "id": "a6a7c92b-55ef-4da2-a1cf-43bbfbd08fe9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "55d963a1-6e61-447b-ad4f-dbc9b23f4c51",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc98fe0-789e-4810-9f73-8ab1c7c2c5bd",
        "cursor": {
          "ref": "903dc39a-aafc-4d5a-9135-1a8e56c6701f",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3108b852-f804-4eaf-a47d-724ceb2c23d0"
        },
        "item": {
          "id": "6bc98fe0-789e-4810-9f73-8ab1c7c2c5bd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "38c0d30e-61b8-4bfd-b9c6-5709aaf54788",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79311e0-708e-4410-b628-e27b5ce67d93",
        "cursor": {
          "ref": "9ad7a64f-de09-42bd-aed3-f7a3014af2e2",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2938b502-c619-4b99-9e01-55ffd0bb039f"
        },
        "item": {
          "id": "d79311e0-708e-4410-b628-e27b5ce67d93",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5abf88d3-eff6-43ba-a78d-094284b76a46",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8845c5c-7ecc-4f99-bcfd-9cce8c17a735",
        "cursor": {
          "ref": "9afb410c-27a8-405a-9455-fb07320d2426",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "71fecd17-34e8-48b1-9e42-c564d06f2d38"
        },
        "item": {
          "id": "d8845c5c-7ecc-4f99-bcfd-9cce8c17a735",
          "name": "identifiers"
        },
        "response": {
          "id": "0529b0f5-112e-4782-8a67-481eadd45237",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cb138f-8676-4374-9af7-132de17f9101",
        "cursor": {
          "ref": "5650de5b-8121-4c9c-91c4-c53f5778c2be",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "19e1f0e4-7752-4687-bf17-3e69d31b81b5"
        },
        "item": {
          "id": "81cb138f-8676-4374-9af7-132de17f9101",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c6fa2554-2212-4cef-82da-9eaf893c0056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda2d05d-8630-43dd-a693-d848965f49de",
        "cursor": {
          "ref": "ccb90e67-512c-4500-8cbe-f2ee9ed85baa",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f7ee614c-0756-4b97-bb6a-d9b1fe588d16"
        },
        "item": {
          "id": "dda2d05d-8630-43dd-a693-d848965f49de",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "37dd3e40-b821-42b2-ac06-a58c3a4ba4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c420ab31-db8f-41b6-8e5e-d7e4e9aa740d",
        "cursor": {
          "ref": "a235591d-f9d1-4191-8d4b-00e5062a4268",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "da2a44ac-c108-4cad-9d97-f9ad4c39c7bf"
        },
        "item": {
          "id": "c420ab31-db8f-41b6-8e5e-d7e4e9aa740d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a570f390-46e1-419b-9cef-19cd14f4125e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0e7631-2330-439f-b596-0f16c2211fd3",
        "cursor": {
          "ref": "18c3f3bd-85b7-49cc-8203-89501647d24d",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c11124aa-5f49-4258-865e-8a29c7d3a7f6"
        },
        "item": {
          "id": "1c0e7631-2330-439f-b596-0f16c2211fd3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ce0072bd-fea5-4074-9a77-247f8eae6bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a6701e-dea7-4d0d-9533-1a5aef064ff7",
        "cursor": {
          "ref": "9a455c41-d8f4-4bde-b61d-f0cf01848e04",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3b13b754-bf34-4d75-acd8-fe5ab99b7aa7"
        },
        "item": {
          "id": "96a6701e-dea7-4d0d-9533-1a5aef064ff7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "93f07dda-f817-4a1a-a56d-56fec131f570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94583d0-887f-4829-a49a-a45c055f230d",
        "cursor": {
          "ref": "9295f191-b3f5-45f6-90d6-bb2e78b37e69",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "efb8452d-e7f4-4cf1-b930-e2f75b2dc312"
        },
        "item": {
          "id": "e94583d0-887f-4829-a49a-a45c055f230d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f7858afc-16a7-47b1-90a6-7fad5efa8ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4f7484-1dbf-49b5-b613-a425d6c9d657",
        "cursor": {
          "ref": "a2648a62-8f32-44d6-9799-d67c8e14d9eb",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "65aca180-c86f-4be4-ac08-09b8917f3bb7"
        },
        "item": {
          "id": "8f4f7484-1dbf-49b5-b613-a425d6c9d657",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "66bfe83c-a42a-484c-af48-06f4b02c5b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabbdf0b-20fb-4fea-8f61-a6436b358429",
        "cursor": {
          "ref": "b6e5fffc-af98-4273-a48b-42b26f6916f3",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a2db70c5-2a78-4892-b299-756392ab833f"
        },
        "item": {
          "id": "cabbdf0b-20fb-4fea-8f61-a6436b358429",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "914bc5ae-f333-4efa-9441-9df7f885ab43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5d103a-65cc-4113-81de-4010b566c47f",
        "cursor": {
          "ref": "9206a22d-cb5f-467e-821b-a3da15e2131d",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ff80acfb-0876-47d3-beba-13f9aa7a2b82"
        },
        "item": {
          "id": "1e5d103a-65cc-4113-81de-4010b566c47f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5be4d723-9b3f-4226-be73-54905558a3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a910aedf-6a03-4abe-b23e-fb9fd1c16531",
        "cursor": {
          "ref": "90262a70-7f2d-4faf-88eb-549d6dd9ebc5",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f9fff599-e985-48eb-ad69-58f14f35e38e"
        },
        "item": {
          "id": "a910aedf-6a03-4abe-b23e-fb9fd1c16531",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bb533353-770c-452a-baf9-e871143bc7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355cfcd5-ea25-4c68-9b30-65cf46354ddd",
        "cursor": {
          "ref": "3e2dc41b-68ae-4ddd-abbc-22201ace50a6",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e36860f9-71e3-40b6-a2c8-b0b5971a86b6"
        },
        "item": {
          "id": "355cfcd5-ea25-4c68-9b30-65cf46354ddd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9d331c14-305b-42d3-baff-f8a529039e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4da2154-635c-417c-861b-ab502a0f973c",
        "cursor": {
          "ref": "97bdc6c3-95a0-41a6-9026-6e0d454d2f03",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "16fcbe66-94c1-4621-a5cf-2eb88a8c0e8f"
        },
        "item": {
          "id": "c4da2154-635c-417c-861b-ab502a0f973c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d62cbaab-081f-4bb3-83a8-acdb56a907d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4bfe67-16ea-47fc-9460-0ab7dea6f5be",
        "cursor": {
          "ref": "1a9c2a07-cb04-4424-94c5-b8b9d5e0cc3e",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b6129cab-7135-46e5-8a97-23653804fbe1"
        },
        "item": {
          "id": "8b4bfe67-16ea-47fc-9460-0ab7dea6f5be",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a085cdce-e993-4a90-a81d-a8e3df65f743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decae516-e2b8-43db-9222-3a4353fdef36",
        "cursor": {
          "ref": "367778e3-1d05-4e6a-aa9f-56f78f5aeb81",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4650b3a8-b9b8-457a-9f45-29b251831a80"
        },
        "item": {
          "id": "decae516-e2b8-43db-9222-3a4353fdef36",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8f821588-3796-42b0-a8ee-50dc3305dfd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416032b1-8977-4b72-afe3-2ae86a57093a",
        "cursor": {
          "ref": "f60cdd1c-7369-41c7-8489-b51ddac8d980",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8c246071-9c1e-49a7-9594-d6d33e7d4430"
        },
        "item": {
          "id": "416032b1-8977-4b72-afe3-2ae86a57093a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0310a191-c2ea-408f-b884-2af692d0436f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11c0598-3ff2-4157-b6ca-90adb9d0ce07",
        "cursor": {
          "ref": "ec799b7a-8d2c-4385-8da1-cc8126c1eb0c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2eb5e195-43eb-4940-9ec8-9578fd28629a"
        },
        "item": {
          "id": "e11c0598-3ff2-4157-b6ca-90adb9d0ce07",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7c9b9b7c-2513-4cce-ba1f-c9c6f8eeca21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606538fc-64e1-41f9-b156-6c418ac11340",
        "cursor": {
          "ref": "b14964ec-a93d-438f-b3f6-7435e489a100",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "61c492e8-2cf1-41f5-b454-eccf1d578845"
        },
        "item": {
          "id": "606538fc-64e1-41f9-b156-6c418ac11340",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9fcda6d6-12d1-44dd-bd5b-9f418b35f137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042f741d-36c0-40c1-abcd-a9f34e914666",
        "cursor": {
          "ref": "e0d2498d-3c04-406c-91af-638ea2cb2f47",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d6713a6e-2939-430b-af19-ba11cb6d4ddf"
        },
        "item": {
          "id": "042f741d-36c0-40c1-abcd-a9f34e914666",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3f064105-985f-4d43-8913-4518a09e70f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abeb168f-b8ec-47e1-9dbb-3231fb88e795",
        "cursor": {
          "ref": "dd6bd62b-0947-4eff-a80b-d9f161e73ca9",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2161fb72-b0f4-4f4b-9ff7-4ddaac92c996"
        },
        "item": {
          "id": "abeb168f-b8ec-47e1-9dbb-3231fb88e795",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d41f4a40-abd2-4afe-b5f2-732122549f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049a6bf5-b106-43f5-b829-fa1b50e231f9",
        "cursor": {
          "ref": "d3b899e5-7c59-4d14-86cb-f4980cce17a5",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8f216ec6-cf70-456a-a586-51bd47510d09"
        },
        "item": {
          "id": "049a6bf5-b106-43f5-b829-fa1b50e231f9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f916ed7b-d0b0-4bf2-9d8c-3b00f49072b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec803fd2-c40e-4016-a9c0-417060520599",
        "cursor": {
          "ref": "a88c5419-a38a-4d55-9095-1b40765185a4",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "865f6f06-d7e8-4f8c-8f6e-af3b50938780"
        },
        "item": {
          "id": "ec803fd2-c40e-4016-a9c0-417060520599",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "07adf5e5-ac52-4ff9-a61e-1cd46c568fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acd9742-e9b3-41ff-ab69-d0c170af17fc",
        "cursor": {
          "ref": "ab666d43-f98b-4937-824d-22cb0772be6b",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a45a2d63-8fb0-4dd7-b57c-c87f9693237f"
        },
        "item": {
          "id": "1acd9742-e9b3-41ff-ab69-d0c170af17fc",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "858c3005-c2e9-47ff-8b57-75df965b57a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9bed4b-5d9a-427c-bcea-c4020c50fad8",
        "cursor": {
          "ref": "8024cab8-1d59-44e5-a1ec-5db17e4b2f20",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d317fb1e-2686-4e29-9f1b-7ecf652e10f3"
        },
        "item": {
          "id": "7e9bed4b-5d9a-427c-bcea-c4020c50fad8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "88cd356b-f3e2-4e7a-b1d7-d90fbd2380b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe30528-6627-469b-98bd-6221cd2c01e7",
        "cursor": {
          "ref": "5221b309-bd45-4417-94cf-6c77d0c42b29",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bce56beb-9de0-4bf6-85d3-b37e9249f76c"
        },
        "item": {
          "id": "ebe30528-6627-469b-98bd-6221cd2c01e7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "97b8394f-cbe2-4fad-a53a-2c480b17c54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f07d8e3-4b03-4bbe-93ca-cf9c26c39981",
        "cursor": {
          "ref": "b101dc60-3d0a-4ed9-9d61-8794bf01f409",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2d080f74-1123-4c2c-891d-c07a3494a8b1"
        },
        "item": {
          "id": "0f07d8e3-4b03-4bbe-93ca-cf9c26c39981",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7b26498f-ebc0-435c-aeee-797e5ef45a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04634b05-fc02-4518-ad45-2e3b5095a46f",
        "cursor": {
          "ref": "6f267382-a1f3-484a-858d-97b671fb2648",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6947e9c4-642e-45e1-9caf-56d6e8b1305b"
        },
        "item": {
          "id": "04634b05-fc02-4518-ad45-2e3b5095a46f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a1be9cab-030b-4cb9-87b6-57ebdc145309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846b31f2-2536-45f0-99df-86ae7da7c934",
        "cursor": {
          "ref": "01ce5b37-e032-49c4-9805-e144a9f8fa83",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "97bfe0aa-9678-4ea9-8004-549190565def"
        },
        "item": {
          "id": "846b31f2-2536-45f0-99df-86ae7da7c934",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "624b6061-42f3-4cd0-a9d3-d0ea00c025eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9837e19c-dc1d-4ec4-8d7e-4ff1df562857",
        "cursor": {
          "ref": "88059607-53f0-421f-b0fb-bed67a4c2f53",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "eccac49a-b366-44e5-ac7f-82803e2412f1"
        },
        "item": {
          "id": "9837e19c-dc1d-4ec4-8d7e-4ff1df562857",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "148458d9-282f-4eea-812f-7682c57d74b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520c9e6b-b9e4-48d8-a739-2781acc05704",
        "cursor": {
          "ref": "8cb4ad64-3989-4303-8a94-6ffacb04fd0a",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "aa34bf70-a6d3-46d8-be1c-b72ec3f51a59"
        },
        "item": {
          "id": "520c9e6b-b9e4-48d8-a739-2781acc05704",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5d97f58e-e8b7-4ac3-b9c1-285fd5b85838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac36574a-dfd0-44c8-825f-4a9639dad309",
        "cursor": {
          "ref": "b0e8fb5d-5be5-4237-a222-c49bc658ed34",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "48a9561e-4279-44ea-a19d-10e6bb3da080"
        },
        "item": {
          "id": "ac36574a-dfd0-44c8-825f-4a9639dad309",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "71ce7185-0276-4c82-88a5-de4e03c85eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629196f7-be8a-4029-a45c-819053f27cf9",
        "cursor": {
          "ref": "04930279-c050-409a-b609-16f413e456f8",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1cd3dceb-24d8-47bc-8675-c3daaa830cfd"
        },
        "item": {
          "id": "629196f7-be8a-4029-a45c-819053f27cf9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "76d4dc3a-efe1-4433-a328-518e1562bda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03192d1e-0cf6-43cd-853e-71edcd268fbd",
        "cursor": {
          "ref": "015a2a99-0431-47c1-ba81-5e3637831cc6",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "18d758b1-7672-489f-8c27-bcf5953651cf"
        },
        "item": {
          "id": "03192d1e-0cf6-43cd-853e-71edcd268fbd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2aa8ae94-ec39-4210-b09b-c6317e15bde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054bdf7f-8be5-405e-a6ca-0afcffb50d25",
        "cursor": {
          "ref": "f9a2ac07-d3a6-4e20-bbe5-657bb59fac55",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "70175d66-374c-448e-808a-f9a8524ebec3"
        },
        "item": {
          "id": "054bdf7f-8be5-405e-a6ca-0afcffb50d25",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cfaa9d37-72d1-488c-82a0-fb62fad4f34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d11d43-f463-48fb-b7c2-9b2353b48a51",
        "cursor": {
          "ref": "d71751de-4391-4320-85cb-186c9a2d78d4",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f61be6a5-ad6a-4788-bb13-5a7fa12bcddb"
        },
        "item": {
          "id": "31d11d43-f463-48fb-b7c2-9b2353b48a51",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a9657884-0b1f-49c6-bef9-73c5df88e999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f68414e-6b7d-404e-b3a3-7c24f99ef5fc",
        "cursor": {
          "ref": "78b6a50e-2194-47f8-b3fb-da7ef0c4ac0b",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ea8c7338-52e1-4864-8289-9f90496a0e3a"
        },
        "item": {
          "id": "8f68414e-6b7d-404e-b3a3-7c24f99ef5fc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "38ce192b-f7f4-4ed6-a156-92796ab6fd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e510077d-801f-435c-9b06-23896fcb0df3",
        "cursor": {
          "ref": "3dd00a71-041c-4fa9-aaa7-2f317018a2e4",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b7c99618-6318-4291-8e44-6fcf3b452c32"
        },
        "item": {
          "id": "e510077d-801f-435c-9b06-23896fcb0df3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "552adbcf-763e-4ab4-9f0b-e9c1c69469a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5599178-21d4-41aa-8790-d0faa13f9619",
        "cursor": {
          "ref": "3c583219-9c20-43e0-8507-a6f94db57cc6",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "794751bc-32c0-4df8-935e-0a479a963a07"
        },
        "item": {
          "id": "f5599178-21d4-41aa-8790-d0faa13f9619",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ad1ab65c-bbd0-4ceb-8bc2-f20ddcafbfb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6ebd28-bc96-4f46-9388-b972cb039b00",
        "cursor": {
          "ref": "b3fd23ec-acc1-4d2b-983d-d32eba5cc6d6",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "452c206d-2f8f-42ce-ba6e-a1c0aeb9244c"
        },
        "item": {
          "id": "6c6ebd28-bc96-4f46-9388-b972cb039b00",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0dd3c62f-64b3-4251-8836-f86b1620b6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d791821-b457-4c45-be6f-d437b68ce0e6",
        "cursor": {
          "ref": "413b9c76-2352-4a35-90d8-7cfb7d86fb94",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "64fec3dd-75d1-4481-809a-0eb4c6824c75"
        },
        "item": {
          "id": "3d791821-b457-4c45-be6f-d437b68ce0e6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2c1da4d5-edb4-4283-9c9c-c88a204ef6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2890aae-eda1-4b10-8bb9-45cb28572ed8",
        "cursor": {
          "ref": "f92f057d-374b-408d-99a1-f5cb1ebc5fd1",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "84cc8f6e-2a3b-4166-a023-2b83baa85c8d"
        },
        "item": {
          "id": "c2890aae-eda1-4b10-8bb9-45cb28572ed8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "10d9d9c1-4e32-42be-9e99-21dd654875ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ccdb8f-b82d-44c7-823d-206b3f8e37e3",
        "cursor": {
          "ref": "bafd0c53-89f8-4408-bc7b-ce6268b51d9d",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6dc1b9c7-7b8c-402e-bcc9-35ac8cb2bff5"
        },
        "item": {
          "id": "18ccdb8f-b82d-44c7-823d-206b3f8e37e3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8bc7ba31-851c-4570-8b7d-2b86cd79b9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14892deb-a19f-4ae2-a678-29a413ad06de",
        "cursor": {
          "ref": "773b8511-73eb-4358-a83c-b083f2c9ab47",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b923d2ca-7641-4902-9727-20fc74aa381c"
        },
        "item": {
          "id": "14892deb-a19f-4ae2-a678-29a413ad06de",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c916d132-2232-4390-9061-2670b30a5082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682944b0-2c64-4c2f-9ed9-1d81c76f991d",
        "cursor": {
          "ref": "f8a0a210-8f0f-46bb-9e3f-89b5b54e86c0",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8219cd56-e97b-4e06-86f7-d97f0e58edd8"
        },
        "item": {
          "id": "682944b0-2c64-4c2f-9ed9-1d81c76f991d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c726b676-2407-4041-a627-3a2ba04f8d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cbcc17-eee4-47db-827f-6dba6d496b8e",
        "cursor": {
          "ref": "7f9cca73-372c-485d-938f-2a97fbe5f7c8",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d4faf3ad-7769-4882-ba36-340530c18579"
        },
        "item": {
          "id": "38cbcc17-eee4-47db-827f-6dba6d496b8e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2acfb468-3db2-4c5d-91c3-8289b1eb74a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a4e328-3a8d-4844-807c-8d95c95b7984",
        "cursor": {
          "ref": "1a266be7-4872-4ac8-828b-ce62c4f64c69",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e5f2b826-4c94-4e97-a47a-d7c68ea4f8e2"
        },
        "item": {
          "id": "c9a4e328-3a8d-4844-807c-8d95c95b7984",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7b071dfb-5fbe-47e8-aa03-a99d13bcb6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a57a45-e198-48da-98cd-ea02b4e00191",
        "cursor": {
          "ref": "286ffa3d-e46b-42ee-9993-abf2ac09022a",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ca30c88e-15ac-4f28-ae2e-11e37ffdf446"
        },
        "item": {
          "id": "07a57a45-e198-48da-98cd-ea02b4e00191",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f1bd3c63-44b0-4942-9c0e-1550285c1059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95ba095-f0b4-41cc-b758-3eba7e4e89cb",
        "cursor": {
          "ref": "a8719e17-14f9-4f02-afa5-5f3fe841ba4d",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "243dcfb1-a358-4d53-a9ba-41fc03f7a111"
        },
        "item": {
          "id": "e95ba095-f0b4-41cc-b758-3eba7e4e89cb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1a812b71-1edd-4903-ba70-2c937480d373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c1484b-de61-444d-8c15-e6e0804ca273",
        "cursor": {
          "ref": "783f0b31-470a-450f-ae04-06ec7938a7cd",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7b348c1d-8bd9-445f-82b2-9befbbb3a04a"
        },
        "item": {
          "id": "29c1484b-de61-444d-8c15-e6e0804ca273",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "776b4ebb-69be-49f7-9e2a-29b6f6c9b3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51362469-4daa-435b-8166-fe2a92fd0031",
        "cursor": {
          "ref": "40650d7a-a600-4277-b028-e3433b160c84",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "abd66ad9-e1e4-4c8d-b423-a37a748f146d"
        },
        "item": {
          "id": "51362469-4daa-435b-8166-fe2a92fd0031",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "121e1b30-fee7-4484-9ed3-e1d7ed21f40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7e76e8-5274-4c85-beb1-440fee4b8677",
        "cursor": {
          "ref": "f651b4fb-acec-458b-a9ef-07473169c6f2",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5ea37024-92dc-4f26-b7c3-4a8610054683"
        },
        "item": {
          "id": "6c7e76e8-5274-4c85-beb1-440fee4b8677",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "80d42778-483b-4936-a05a-bf93a8a65182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7789e6-da2a-4c49-9578-589ba30d61f7",
        "cursor": {
          "ref": "37d79a61-ccdc-4d81-bdb0-5a694655a625",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "656b1a63-5bde-4f0d-9eb3-89c0e23b5e7c"
        },
        "item": {
          "id": "cc7789e6-da2a-4c49-9578-589ba30d61f7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "577101dc-28c9-4977-a8ae-745e9540476c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c6a3c6-4f6d-42f0-90f3-86b32f00aeef",
        "cursor": {
          "ref": "b95c7586-23fb-475e-a973-465b2fced657",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "342995a7-4262-4646-8d25-d80f47d91d70"
        },
        "item": {
          "id": "57c6a3c6-4f6d-42f0-90f3-86b32f00aeef",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "691687d0-115d-40d1-8456-ce0259a2230b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2b607f-6006-4a17-be45-7fd36c5fa480",
        "cursor": {
          "ref": "b67e0ac9-45f8-4cd2-ad39-2414dd8d41fd",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9fc7f9f0-b0b7-4726-b0cb-18c5bed6f0a4"
        },
        "item": {
          "id": "6a2b607f-6006-4a17-be45-7fd36c5fa480",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2237234a-7a8e-4ec6-90fd-364d81bb5b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52029124-ce84-416e-976a-3786d7726b80",
        "cursor": {
          "ref": "931aac68-ba07-40bd-a99e-2ad8a663703b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "314d0b06-63bf-48eb-b38d-09d5f891e528"
        },
        "item": {
          "id": "52029124-ce84-416e-976a-3786d7726b80",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "61064f60-9980-4862-a57f-8ba8d412e1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c76fa0b-ec7c-45ef-b7e2-19e937d33f0f",
        "cursor": {
          "ref": "22f69775-beff-4c15-93b9-f91dc3ea97b8",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a68c1ff5-89bf-4409-b8f6-bd5c5352a7c4"
        },
        "item": {
          "id": "0c76fa0b-ec7c-45ef-b7e2-19e937d33f0f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2bb0d938-0917-4f4d-861d-121119db0546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375e6c84-da13-43b9-90b7-6b5bf1ec5e56",
        "cursor": {
          "ref": "1125df3e-1b2e-4c59-a151-6d66ac01216f",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f491f30d-d9e1-4d14-9ccb-76cd6fec7116"
        },
        "item": {
          "id": "375e6c84-da13-43b9-90b7-6b5bf1ec5e56",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fbcd0e1a-a2e7-4d01-a019-289d2e8195e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89599b6-be8e-455c-b032-ef3ad812b9ad",
        "cursor": {
          "ref": "11542f4c-0ac5-4231-b15f-fb1e994e6f0a",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a6e46c32-8da6-464a-a5f9-1d236c832816"
        },
        "item": {
          "id": "f89599b6-be8e-455c-b032-ef3ad812b9ad",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "002fcf40-e1cd-42af-a352-71c406f8b11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65f4827-bfdc-4f15-b091-7a05ab589f17",
        "cursor": {
          "ref": "ef2420e8-fca7-4b93-abf9-82b1311c9f04",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2964acd1-e0f4-4bb6-8a95-e8bc698fdc4b"
        },
        "item": {
          "id": "f65f4827-bfdc-4f15-b091-7a05ab589f17",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a689e1fd-acfc-4523-aac0-24cad92178bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308baa4a-5d30-49c7-9e96-d709f47790c7",
        "cursor": {
          "ref": "5c1dd63b-6a3e-4175-8bb4-6b103ad48beb",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ce11285a-bc9e-401f-ae5a-6d8524244a83"
        },
        "item": {
          "id": "308baa4a-5d30-49c7-9e96-d709f47790c7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "84911dba-751c-4bd5-9a5a-9b5ca5c472df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5439177e-759e-410c-ab30-d700ad9f1118",
        "cursor": {
          "ref": "a77964a0-f51b-47f8-b4ed-71cf01189cf2",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f4d8adc4-a97d-4afd-8cc3-00a609eb68ff"
        },
        "item": {
          "id": "5439177e-759e-410c-ab30-d700ad9f1118",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "98bf7970-f108-4ced-a929-c572e13fdc99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cad140-5c1c-4cb9-afce-116870d46172",
        "cursor": {
          "ref": "ef44daa0-9f7a-4ed3-8d56-6e5813da4ebf",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3a5d7eee-e90e-4bfe-91bf-5f1ca0d29f03"
        },
        "item": {
          "id": "74cad140-5c1c-4cb9-afce-116870d46172",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fa1b47f9-4271-4d12-b02a-f4fc5ecaa586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10595f2-b46e-437b-a70d-d7a7182171ae",
        "cursor": {
          "ref": "f095677f-7815-4d9b-9ed3-2523bb297d46",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b365364d-0d4c-464b-b336-4145cb06c703"
        },
        "item": {
          "id": "b10595f2-b46e-437b-a70d-d7a7182171ae",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5cec6283-99f2-4aaa-b102-42c81b67630b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9c4b12-bdcb-457c-bf80-83293ec8458b",
        "cursor": {
          "ref": "d652a070-61cd-4b85-bdb0-916c08152c90",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6cfcb327-d730-404d-a5d5-c9814f5d86a4"
        },
        "item": {
          "id": "7f9c4b12-bdcb-457c-bf80-83293ec8458b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4796507e-a55c-45d3-aa10-4d4cd00502c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe97906-c189-4aff-839f-4ff4c0ea69ca",
        "cursor": {
          "ref": "2c77395f-16a1-428d-b7cb-4fead032dafd",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "221f97be-60cd-4697-a841-d3c6fc1a70db"
        },
        "item": {
          "id": "1fe97906-c189-4aff-839f-4ff4c0ea69ca",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f18470d9-88b9-42ce-93ae-c99c4017595c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a19eac-ab20-426a-94c3-bd88d1952b1f",
        "cursor": {
          "ref": "02a4a3df-b663-4c07-bdfe-a8eb982eb35d",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "99bbc2a5-b194-493e-8894-e86c1940ae1b"
        },
        "item": {
          "id": "04a19eac-ab20-426a-94c3-bd88d1952b1f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "48811120-2cc9-46a7-83b2-49ab0af413a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bd1768-8143-4eff-970e-ea48ad5f8220",
        "cursor": {
          "ref": "c09c161f-23fc-4f8d-948d-30a78f95e95e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d7fe8bf4-8594-4f57-9a21-338083812e70"
        },
        "item": {
          "id": "11bd1768-8143-4eff-970e-ea48ad5f8220",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "27341315-d620-4c56-be8a-0a67a4cb46d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73661846-eb55-406d-8d4b-ee46c51a14b9",
        "cursor": {
          "ref": "9b63a4a7-077d-4ce1-8cd6-e0f966f81f37",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7dc2dbfd-32cc-4d59-b730-bfa5b91a6b38"
        },
        "item": {
          "id": "73661846-eb55-406d-8d4b-ee46c51a14b9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3a47cbf9-b723-407a-a10c-3892c6db95dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd6bbaa-5f72-4bd1-b447-29883ce8f6e8",
        "cursor": {
          "ref": "751502b3-6766-40ce-aa98-61f6160e8947",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c7cd443b-f1f9-4e01-860f-f074607c6dbc"
        },
        "item": {
          "id": "0cd6bbaa-5f72-4bd1-b447-29883ce8f6e8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bfe98e62-440b-4cf2-8a80-af9106b8d96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299e7782-26e8-40d7-87d0-2fac539d2132",
        "cursor": {
          "ref": "f0c51d91-d47d-41fa-9dd8-b4e68e2c04ed",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b7024752-cf84-49a6-936d-8bb88086ccb5"
        },
        "item": {
          "id": "299e7782-26e8-40d7-87d0-2fac539d2132",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f8a188d2-e31c-445c-bebb-8c9f55c71eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aacd1ab-23e3-4be5-a092-9ab8211d5483",
        "cursor": {
          "ref": "82b06ec1-9651-4a75-8dd9-700ca2a71f20",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6783b950-6751-4999-b1c9-c21d063b13a5"
        },
        "item": {
          "id": "6aacd1ab-23e3-4be5-a092-9ab8211d5483",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7dbc50de-557c-4d02-8ec8-7bbaddad4997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56aa5625-bce7-412e-95f5-26c7482a1a51",
        "cursor": {
          "ref": "bb27d02d-8f8e-47b4-8dc1-36419950edaa",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "db56991d-07cc-4b91-be71-b0a956e115ed"
        },
        "item": {
          "id": "56aa5625-bce7-412e-95f5-26c7482a1a51",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7ba4a209-b68b-439e-ad89-5962f48f593e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19d930f-3c11-44b2-8479-422b2de37c67",
        "cursor": {
          "ref": "7bed4cb5-2727-49ab-8ae9-343e66b14bad",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "95aef928-3378-4534-ad0c-b5b06eeb250e"
        },
        "item": {
          "id": "c19d930f-3c11-44b2-8479-422b2de37c67",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "eb243398-9a3e-4b43-aabe-cc7c47664207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9b1aea-07e0-438b-90d5-cdd2c1edbabd",
        "cursor": {
          "ref": "38c64cfe-2e85-4e7a-8e47-3d9c61979190",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3604cce3-7e1f-41ea-b830-c28aff4f6543"
        },
        "item": {
          "id": "ed9b1aea-07e0-438b-90d5-cdd2c1edbabd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "68ec68a1-3891-4b47-83e9-1f5f36de2b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862f36c7-1e35-49d7-9ae3-9e3a6215ceec",
        "cursor": {
          "ref": "0a5776dd-86df-48cd-8adc-7d1ab459e13f",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8558aedc-f129-4784-a194-00098183b343"
        },
        "item": {
          "id": "862f36c7-1e35-49d7-9ae3-9e3a6215ceec",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f34e5747-f8c9-44dd-a862-ae7c467af3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d8b0d6-b85d-4b52-ac78-f026c36fdd5f",
        "cursor": {
          "ref": "0eb005ee-a0f7-4b9b-9b55-879ec15690b4",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d72a78c9-fbf4-4794-82f8-979bc3863699"
        },
        "item": {
          "id": "a3d8b0d6-b85d-4b52-ac78-f026c36fdd5f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b7c7e2e1-4675-48cf-bc82-ddee757afc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cc5585-8c70-479c-accc-4fc53c163664",
        "cursor": {
          "ref": "3aa4abc1-65f3-40d3-b515-1e4e9781f218",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "de91eeaa-b32e-4e37-b4fd-66329ced10c9"
        },
        "item": {
          "id": "28cc5585-8c70-479c-accc-4fc53c163664",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "481677a3-c6a9-4fe0-8818-172305bae168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad35e83e-e24f-45ff-8dec-d68f971d62a5",
        "cursor": {
          "ref": "7c559fdd-0d78-41d6-a06f-f06940b2b726",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2a74da2b-7f5f-447c-9a58-0efba745c754"
        },
        "item": {
          "id": "ad35e83e-e24f-45ff-8dec-d68f971d62a5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "10bb9645-3b5e-49de-800c-44f88ecbad2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c9591e-fd93-453d-b57c-3e717f6f34e3",
        "cursor": {
          "ref": "e4f10879-5688-4206-97a5-a7c78fae679d",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a34f3775-4b4a-4fce-a5ec-a975f4a4f2b6"
        },
        "item": {
          "id": "b7c9591e-fd93-453d-b57c-3e717f6f34e3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fb17f594-ac43-4fc7-ad4c-3c9e4c99e854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1466ad05-1cdb-4f20-bfb3-f5f0599ec247",
        "cursor": {
          "ref": "349d6ca3-7958-4fce-82e8-14004a4e0345",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "08d4bb28-3e38-469d-a948-91c3664e0ef2"
        },
        "item": {
          "id": "1466ad05-1cdb-4f20-bfb3-f5f0599ec247",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2f6108c8-c4f0-4ec2-8fae-90e40a052445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6e2f36-aa61-46e9-8428-712e6d1c0b42",
        "cursor": {
          "ref": "86fb853e-34c8-49a2-89ce-ebf72f67ca25",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "feb188cf-6c38-4df9-aad5-57d8a339ef44"
        },
        "item": {
          "id": "3b6e2f36-aa61-46e9-8428-712e6d1c0b42",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "775474a7-4e7a-46ff-b2d1-f3032d15bdeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7437a8-2c93-4edb-9eda-8264887d6e77",
        "cursor": {
          "ref": "a0b2e695-5a2c-46e1-a2d9-8903acfc43a5",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5a7726bd-a80c-48c8-bc7f-7d862673a5f8"
        },
        "item": {
          "id": "7b7437a8-2c93-4edb-9eda-8264887d6e77",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fbd81cae-a349-467c-93e1-958fcc32fe39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f169c04-960b-48eb-922e-5c5c39f7ecf6",
        "cursor": {
          "ref": "95ba2a26-770e-4043-b650-02ddc5c1c6c0",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "236c7f55-8431-4323-b3d1-60bd01a8b7ff"
        },
        "item": {
          "id": "8f169c04-960b-48eb-922e-5c5c39f7ecf6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "25406d8a-db82-49e4-b03b-b0f3e70f0bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5095dee7-6ef3-4a60-86bf-5ee5f1672326",
        "cursor": {
          "ref": "03eeaecd-49ea-4d4d-b854-355cadb56e0b",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8eedeae7-bdfb-4145-998f-7c53430009a4"
        },
        "item": {
          "id": "5095dee7-6ef3-4a60-86bf-5ee5f1672326",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "aa2e210f-5094-48aa-ae42-7eef508d6545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d003a27b-c0c3-41f7-9b21-d0060f6c1cb0",
        "cursor": {
          "ref": "a718d56d-5f53-42f9-a514-27953b3d751a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "60c1af6e-f526-4828-9dd0-df0a7f397344"
        },
        "item": {
          "id": "d003a27b-c0c3-41f7-9b21-d0060f6c1cb0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6e5f0e55-a12f-4fc8-8a7b-ce7faa0249d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df65f9b-f9d5-4f11-9b1c-9030c4f5c510",
        "cursor": {
          "ref": "6d0aaed9-8d69-4dda-8eae-f0dd1ebd8204",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "08fa8eac-d589-454f-9b3d-4c074b478d48"
        },
        "item": {
          "id": "0df65f9b-f9d5-4f11-9b1c-9030c4f5c510",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2117383a-50ff-43d5-98b5-5fb95e05294d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef2cbe2-047d-4304-9fe2-e0df93f4db3d",
        "cursor": {
          "ref": "768da211-a4ce-4701-b9fb-b5c7de79c2ca",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a190ec80-ac95-4332-bfd1-6fb1f0b5ac41"
        },
        "item": {
          "id": "2ef2cbe2-047d-4304-9fe2-e0df93f4db3d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "af9ebea4-bb80-490f-a65b-fa3679bebb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab25c3e-bb67-46d8-963f-db2ba79da83e",
        "cursor": {
          "ref": "4030dd9d-39b8-4410-b3ab-adb4954d67b4",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "32cdd805-4d3c-402e-b315-71346401a058"
        },
        "item": {
          "id": "6ab25c3e-bb67-46d8-963f-db2ba79da83e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fdfa1fc5-f0f7-40e0-a868-cf51cce405a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f011aa1c-e51b-4c90-bcd1-353a948d9866",
        "cursor": {
          "ref": "6caffe3b-c6d3-4db6-8cfc-c0dca2eae9ff",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ae21a88f-fcf8-41ce-aed9-6c1e30531d66"
        },
        "item": {
          "id": "f011aa1c-e51b-4c90-bcd1-353a948d9866",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fb34842c-355c-4a33-a4c7-4b1b2aae47d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b000a5c3-4ed1-481e-a65b-a5d7a3263136",
        "cursor": {
          "ref": "bc1f57fb-d263-476d-b5bc-319e7cf68737",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4c6f37a1-2b61-4dfd-a4ad-11b69c78210c"
        },
        "item": {
          "id": "b000a5c3-4ed1-481e-a65b-a5d7a3263136",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f5d626af-0c5d-4634-a188-ba26d37e2401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b41451-505c-4f4b-9f1b-1ed2dad61fec",
        "cursor": {
          "ref": "67b96520-0cfb-4d67-9f61-ea4ae40a0f3a",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "13523e19-a78a-4bc6-941c-cde952596d37"
        },
        "item": {
          "id": "47b41451-505c-4f4b-9f1b-1ed2dad61fec",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "aee15b6b-3c03-44ab-b920-03c1e554069e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d41cdf-d479-4ccd-a4ec-8f9c837b8793",
        "cursor": {
          "ref": "a5c0ff0b-84ae-4f41-8a7a-7ced9b139a3d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0f96cf2e-267f-48ce-873e-185e255899c8"
        },
        "item": {
          "id": "76d41cdf-d479-4ccd-a4ec-8f9c837b8793",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5cfb6864-2c17-46d1-a2a6-17bf7166945f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c73a026-38d6-4374-89a7-f509b29347d6",
        "cursor": {
          "ref": "b0e8f238-3bcc-458e-89b3-e0cba40f9795",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "273ed0a1-359c-4624-bb76-e73a38dfb0f5"
        },
        "item": {
          "id": "1c73a026-38d6-4374-89a7-f509b29347d6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a4c0eaba-f576-472a-873c-90cd3c759590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c0925e-3d69-4c4b-b40d-7b373c86deb8",
        "cursor": {
          "ref": "0fcb6139-aaf2-40e7-a40b-637a6eed9300",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "59e0ed11-80f9-4b4c-85d0-b25db4763925"
        },
        "item": {
          "id": "a4c0925e-3d69-4c4b-b40d-7b373c86deb8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "692a326c-525f-4593-a56d-2d7db4f257ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac54ae6f-8777-4308-8999-e409c8669c3a",
        "cursor": {
          "ref": "43edd74c-8f83-47b5-bcaa-e298425a4fcf",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7f32a8ac-f2e0-4b67-911c-0e8d6a1430f5"
        },
        "item": {
          "id": "ac54ae6f-8777-4308-8999-e409c8669c3a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "12fb7fc2-1cc9-4430-b6d0-3fd94765774e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "4307711a-74b4-4bbf-8f3c-675bd828b621",
        "cursor": {
          "ref": "64a75d52-3ee9-4c05-84ba-b375f56af8f3",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fd4cc201-6d83-4226-8514-b63ec113061d"
        },
        "item": {
          "id": "4307711a-74b4-4bbf-8f3c-675bd828b621",
          "name": "credentials_issue"
        },
        "response": {
          "id": "32a534dc-51d5-4027-8dc1-b27c37a82abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "715a9be3-bc85-4c7b-8838-9dc1cde38936",
        "cursor": {
          "ref": "087d6105-b020-43b0-b326-14cf3ed1eeb8",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e80fe6f0-694b-43ae-8cf3-2d8bab3ce5e7"
        },
        "item": {
          "id": "715a9be3-bc85-4c7b-8838-9dc1cde38936",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7dd4ac41-0f00-43ac-a106-78bb2f465fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "bb589192-2003-4204-a9fd-1d6f15cff025",
        "cursor": {
          "ref": "858cf7a2-b279-4086-8119-2c4715db294a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3ceb7f05-a303-41cd-adee-9069a59e95a6"
        },
        "item": {
          "id": "bb589192-2003-4204-a9fd-1d6f15cff025",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "360b10fa-eac5-47d0-830d-859e528742ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "1a1ba379-788c-4285-83ea-1e1008b3c77c",
        "cursor": {
          "ref": "06f25a86-f891-4a1c-a4de-d700996a1dc1",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a7f8997b-db95-49e1-a15d-268808cddff9"
        },
        "item": {
          "id": "1a1ba379-788c-4285-83ea-1e1008b3c77c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7ffca6aa-f2f0-4095-b700-659c367f922c",
          "status": "Created",
          "code": 201,
          "responseTime": 9776,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0593fa4-6ffe-4c24-819b-a1e97f1db97d",
        "cursor": {
          "ref": "8d23be85-63f2-469c-80e9-53294bbf1a0c",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1f6f1fa8-ff44-42a8-802e-02ac2a016e70"
        },
        "item": {
          "id": "d0593fa4-6ffe-4c24-819b-a1e97f1db97d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c9b799f0-184c-484b-abb6-8247e768e865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e7d9e27d-8504-4c84-8f9c-a144212e0818",
        "cursor": {
          "ref": "a8305b98-0f3a-4248-9181-ec309e08bb1b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0aa6357b-9844-4849-ac0e-3cbd1c875c9c"
        },
        "item": {
          "id": "e7d9e27d-8504-4c84-8f9c-a144212e0818",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "99e2058b-8262-4b2a-a10f-9edeb91c0f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "dd579b54-1b3a-4d37-9911-98c621f570c3",
        "cursor": {
          "ref": "de2a9a48-a783-4f88-8004-8ad995489030",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f2c51099-9e5e-4097-905e-d6f62d277da6"
        },
        "item": {
          "id": "dd579b54-1b3a-4d37-9911-98c621f570c3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3aa2f954-962f-4ed8-ab2f-2da75fd4509e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f24251-4867-44bf-aa24-efec5ed79d4b",
        "cursor": {
          "ref": "e54b507b-7812-4886-ad02-45e59ee8ddda",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b23509e2-2197-4da7-a28e-1b92ac3b897a"
        },
        "item": {
          "id": "40f24251-4867-44bf-aa24-efec5ed79d4b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c8261237-8169-4792-a42e-cf53c9348925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0aee5f-d466-4cf2-a4f1-229b4c1762f8",
        "cursor": {
          "ref": "a74a2cd3-e848-4f42-8971-25acdff050cb",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a2408975-c66d-4a50-b5c6-5222690a1dac"
        },
        "item": {
          "id": "8e0aee5f-d466-4cf2-a4f1-229b4c1762f8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b98bd834-9ca4-4832-b934-b76a991cd4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cc4a48-ec46-403c-905c-1401ea0b5ff2",
        "cursor": {
          "ref": "2d1616ce-c1ad-4c43-821d-b846b7565b41",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0207b391-deae-4890-9b5b-fc8d3288500a"
        },
        "item": {
          "id": "44cc4a48-ec46-403c-905c-1401ea0b5ff2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a01ac72a-5430-488d-b81b-3993fd370acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48de759d-9732-47cd-a22d-b98614553f2f",
        "cursor": {
          "ref": "8ff5ccad-80e5-4d72-af89-ddb48a1d1fba",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4d0fb4e1-9c80-4b86-b5ba-f2bfeaea3990"
        },
        "item": {
          "id": "48de759d-9732-47cd-a22d-b98614553f2f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "57f9e3b9-cec3-450f-974f-c26a44e248d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46c4a8b-04d7-4dff-b938-695cc09fa24c",
        "cursor": {
          "ref": "6c77eb4c-5153-4a1f-90b2-02d050cf503f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8c85cf3e-6fe6-433b-b172-2d371b17100f"
        },
        "item": {
          "id": "e46c4a8b-04d7-4dff-b938-695cc09fa24c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "045605b7-abf3-4181-9f99-8efe674171df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d68556e-7345-4471-b56b-f9dfe1d4cfb5",
        "cursor": {
          "ref": "46002567-2b60-44bc-8467-c645944d747a",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9f1d2ad1-f86e-4365-8b0f-18308d8cb9d7"
        },
        "item": {
          "id": "9d68556e-7345-4471-b56b-f9dfe1d4cfb5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c8cee3c6-61fb-4183-bd84-cec17a797c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5dd5783-8fd6-4dab-a963-7c08826315a1",
        "cursor": {
          "ref": "7bf04401-dde1-4133-9856-e2e95db1a6fc",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "206b61d4-5c41-4a61-9936-30339524d548"
        },
        "item": {
          "id": "d5dd5783-8fd6-4dab-a963-7c08826315a1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "aad5efc1-6588-4b02-98fe-76a61e49a613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a89229-2cd6-487f-b242-3b40d15c8be5",
        "cursor": {
          "ref": "2646d95e-63fe-4e4f-8aaf-f52a314c9373",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bcaf993a-4407-4cb3-a88a-cfe7b106bdc9"
        },
        "item": {
          "id": "b6a89229-2cd6-487f-b242-3b40d15c8be5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c254006e-bc61-43e1-95d9-3f0c3ce1f894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a233054f-46cd-4b10-8e96-26047a46b45b",
        "cursor": {
          "ref": "5cfe8daf-9ec2-4a91-b5cb-77c7349991b6",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "daec1eed-68ec-476a-a6eb-476ddba27da7"
        },
        "item": {
          "id": "a233054f-46cd-4b10-8e96-26047a46b45b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ad3f8f6e-e46c-4c13-8c0a-32bdb04f5f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c216275e-fbdb-4c3e-8bd4-54f832bba672",
        "cursor": {
          "ref": "6a51b894-11cd-4622-9ec4-44f60c867b34",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9e55c016-61e6-4b08-b880-dd3dc1609099"
        },
        "item": {
          "id": "c216275e-fbdb-4c3e-8bd4-54f832bba672",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e498a6a0-6f63-47ab-b784-65614103a292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce10e23-38bc-41c3-983a-859b6d7807e8",
        "cursor": {
          "ref": "f6b5c306-ed44-4f70-a0c2-484a55dd40ad",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "94ce6c99-3b3e-42d1-82d0-7e4509fc8c07"
        },
        "item": {
          "id": "6ce10e23-38bc-41c3-983a-859b6d7807e8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5316cb03-03b6-4aa2-88fa-cd29ad4345d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8332843d-549b-4f74-ac2b-b25a10ea4248",
        "cursor": {
          "ref": "a8c26db0-0af1-4f05-b1cb-ede7bdcfe253",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d34f35fb-b645-4759-b029-29559e65173d"
        },
        "item": {
          "id": "8332843d-549b-4f74-ac2b-b25a10ea4248",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "20bac434-7bf9-4060-8a9f-6cd6160850ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bc5985-93a4-48dd-9c83-78962dfa0e9c",
        "cursor": {
          "ref": "b81ab896-05ef-4eb7-b527-ec6f87500818",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c25f8fb0-5cae-4cdb-91b5-34a56438009b"
        },
        "item": {
          "id": "80bc5985-93a4-48dd-9c83-78962dfa0e9c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2dd2e39f-3522-46f1-8dd8-d501ae5cee1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f685c2-441b-4d03-b2ee-d3e805398e1b",
        "cursor": {
          "ref": "ae827f81-eed0-45f5-a37f-d4ed10639946",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6f236af3-041e-47aa-936f-49a4a0dc8902"
        },
        "item": {
          "id": "03f685c2-441b-4d03-b2ee-d3e805398e1b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cc8ca794-a86d-475e-9903-318266914962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83157b48-6698-4841-b972-6866b9568d58",
        "cursor": {
          "ref": "a58b9861-7c95-4c7f-9b7a-24eb14ae20d4",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "482c6dea-5706-4c4d-8c4c-74e0fa3b1e55"
        },
        "item": {
          "id": "83157b48-6698-4841-b972-6866b9568d58",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "da8a4132-a4bc-49fc-86c7-fd6988abc277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0553479c-8cad-4bf7-aaf2-6ef456477417",
        "cursor": {
          "ref": "44344c8f-a211-4b1c-b490-633858d43b5d",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f95fa233-3bb4-47a9-83a1-852739861e28"
        },
        "item": {
          "id": "0553479c-8cad-4bf7-aaf2-6ef456477417",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "35a41798-1e15-48ba-a390-ae48bd5fd7b2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ee02ec7d-18be-4202-86f0-90abe1cb6ef9",
        "cursor": {
          "ref": "9ab18c92-001b-47ea-8811-3725822ac230",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "020ea0a2-584c-40d7-8139-fc0725b34c02"
        },
        "item": {
          "id": "ee02ec7d-18be-4202-86f0-90abe1cb6ef9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "76bec4aa-5716-4bbb-98a3-74d94d262efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75763318-07aa-4130-affc-6b3ec824020a",
        "cursor": {
          "ref": "b8083937-6a7e-4ec5-a7e9-249fa8d3764b",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "75a2ff28-08cd-44a9-96ad-93d6aef07e20"
        },
        "item": {
          "id": "75763318-07aa-4130-affc-6b3ec824020a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2d174867-75d6-4a3d-b5fa-acc700e95344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f89dc31-88ca-4877-ae41-82542d1692cb",
        "cursor": {
          "ref": "3f9aa8e3-6b21-4c65-bdaf-6111739375e1",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e7284c16-3bf7-4f63-922d-ccd69604a0a3"
        },
        "item": {
          "id": "2f89dc31-88ca-4877-ae41-82542d1692cb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "849037dd-41fd-44ad-a993-943eca8d338a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8475a6-5cd8-4cd3-b8ae-5f2441da6e93",
        "cursor": {
          "ref": "2e818fb0-ea34-4e59-9cf0-0a79bf1a8ce5",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d9574dfe-bd51-4cdb-9e1f-715fb0d8a95d"
        },
        "item": {
          "id": "6f8475a6-5cd8-4cd3-b8ae-5f2441da6e93",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "221c90c7-7076-4d66-9860-d50e1cada154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0c8e84-d6a0-4630-89d6-3565bbc7a651",
        "cursor": {
          "ref": "5a60075d-aebf-47b8-9b0e-86d7ef136506",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "915bf34a-b0ca-423b-93e4-2cb9a3dec01b"
        },
        "item": {
          "id": "2a0c8e84-d6a0-4630-89d6-3565bbc7a651",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9368b6ce-fc9b-48ed-a63c-06a52b56ae1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe3b66c-f741-422f-915f-94253854fa25",
        "cursor": {
          "ref": "f1f84f9f-5fa1-4b55-ab22-d45fd302132c",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4198f245-c022-4916-b7ab-0d40435838e6"
        },
        "item": {
          "id": "0fe3b66c-f741-422f-915f-94253854fa25",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a8b564ca-8956-4fdd-b698-71374adb1f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db07688-18c2-4cbc-808c-e7afb3cd2ca9",
        "cursor": {
          "ref": "23d8462d-e548-4406-81c3-6f5864aa191f",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4a524599-5664-4b3b-a1b4-c3c721444f37"
        },
        "item": {
          "id": "4db07688-18c2-4cbc-808c-e7afb3cd2ca9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ee35dc44-cb46-41d1-aaf8-6b775077d761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a67dada-acf8-451a-a786-4ae30736725e",
        "cursor": {
          "ref": "a98ec14d-8b3a-4146-870a-175d2071b2ba",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2bea972f-185a-47e5-b6b0-bc2c15dae13b"
        },
        "item": {
          "id": "2a67dada-acf8-451a-a786-4ae30736725e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fd65365a-010f-404b-ac3d-6f25743cc11d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "b4512b43-7de6-4768-96b5-398600c0607a",
        "cursor": {
          "ref": "8ecc76e8-48cf-47e7-aa33-41e11e27e58e",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "60a8ae79-0fa8-483f-ace3-d8ccca8245c7"
        },
        "item": {
          "id": "b4512b43-7de6-4768-96b5-398600c0607a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fdc05569-89cb-47d8-a3e5-237776bf43bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f680916b-8e2c-431d-a134-f6e3a9e2bf22",
        "cursor": {
          "ref": "3e47a6ca-51cb-4978-9653-188e5f4aae4e",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "476974be-fcc2-4cf4-8036-43e365efab05"
        },
        "item": {
          "id": "f680916b-8e2c-431d-a134-f6e3a9e2bf22",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5c3ce185-b545-4282-ac91-53881621168d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aac1b0d-88c5-4867-aea1-aa33ddbe017e",
        "cursor": {
          "ref": "e5f474c6-044c-4fa2-8e48-b8dc3c80758f",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "120f25e7-226f-4d88-8292-4ae68926a0b4"
        },
        "item": {
          "id": "2aac1b0d-88c5-4867-aea1-aa33ddbe017e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ded9895c-c14a-4923-b2f1-278c477636f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8738d9-6def-4f66-9d35-7c4832e2f7f2",
        "cursor": {
          "ref": "0c0559e7-b473-4fc3-bcef-2443c723bde2",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c7a39fdc-68f3-46cd-9127-e58c769ba5c1"
        },
        "item": {
          "id": "5d8738d9-6def-4f66-9d35-7c4832e2f7f2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c26a35c2-d10f-4068-8dbd-513870c36677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac9dea3-92c4-437c-8a9e-3afbab834302",
        "cursor": {
          "ref": "355046e2-618b-4bee-957b-899f278e92f8",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "27d56c98-6f3b-44b8-a224-ea49d952a84f"
        },
        "item": {
          "id": "4ac9dea3-92c4-437c-8a9e-3afbab834302",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2572e5c7-8b43-43e0-9998-ac892e803c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f15c97-3bda-4d57-ba58-d426576b360f",
        "cursor": {
          "ref": "af6b4ed4-e90c-49e3-91b9-c22cda990857",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "de1cf940-e97e-4398-a6e2-4c4e43cc4de9"
        },
        "item": {
          "id": "86f15c97-3bda-4d57-ba58-d426576b360f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "85a40a54-540d-4d57-8282-8f56a5057b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743f6af5-e828-4aed-a9f9-31ad292ac673",
        "cursor": {
          "ref": "428d1ae2-3d77-41f0-b8dd-49f0871f6fff",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3e43c058-4dd8-4870-98a6-4b032b30a2c9"
        },
        "item": {
          "id": "743f6af5-e828-4aed-a9f9-31ad292ac673",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "dfab33fb-400a-493a-9fde-1062a6c1b82d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 84,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "f27222f8-a404-4ce2-92da-d41d5fcfd006",
        "cursor": {
          "ref": "1ffd8fc0-68eb-4fcd-8442-9b594db768ec",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1c90ead0-a941-4439-b7ef-f3e2a55d677f"
        },
        "item": {
          "id": "f27222f8-a404-4ce2-92da-d41d5fcfd006",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "867b8df1-cf07-4afc-b651-9fc8694eab75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add723a2-25f4-4583-ab03-54c07e37fd3c",
        "cursor": {
          "ref": "ac8bc73b-dae0-4828-80f6-6943e145b6e8",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "16917b17-2e6f-4459-8e01-4d991621ff64"
        },
        "item": {
          "id": "add723a2-25f4-4583-ab03-54c07e37fd3c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "eb860581-bfbd-4715-8e9d-c51aaed2ba21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10355db6-26b8-43c5-9ca9-24ae3a76d43a",
        "cursor": {
          "ref": "434a1b20-ec04-4f18-a1c5-b36cdf6c20e3",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6a3018bb-4b61-4fab-9e27-702635d6d8b5"
        },
        "item": {
          "id": "10355db6-26b8-43c5-9ca9-24ae3a76d43a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "58c538f5-dce4-4c76-8953-02bb6fd7265a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e17977c-1e85-4694-af6c-367bfc045ed4",
        "cursor": {
          "ref": "2ddfeef0-44e9-427c-9117-b37991805733",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8b1a3cd3-3cc1-49d1-bac2-ca61d6621a6f"
        },
        "item": {
          "id": "7e17977c-1e85-4694-af6c-367bfc045ed4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "64e96bb3-3632-4ef0-a874-2c5a75025235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714b96f7-e859-42c3-af27-fd8aed81e6f7",
        "cursor": {
          "ref": "4116b4e5-452c-4887-9230-9301696c0d15",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9c323fa6-2109-4859-b4cc-94c556335b4d"
        },
        "item": {
          "id": "714b96f7-e859-42c3-af27-fd8aed81e6f7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3dc66aee-85ec-4b0e-a2a7-3e0d1bb55eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599f59f1-9087-4d77-ac17-9c1348d96320",
        "cursor": {
          "ref": "f331f3ec-65de-4f75-8ed8-e295a37777b7",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "faac0193-f997-43cc-8294-1851d7c708d0"
        },
        "item": {
          "id": "599f59f1-9087-4d77-ac17-9c1348d96320",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b4d77ab8-59ad-4324-91ef-0793fe5effd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d35ef68-3fd6-4101-ab33-8e6a2af0a60b",
        "cursor": {
          "ref": "4359cf70-3b1b-418a-8804-63548f1d6db1",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "754c123f-48da-4d8a-bc62-84a051f0c133"
        },
        "item": {
          "id": "1d35ef68-3fd6-4101-ab33-8e6a2af0a60b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7fe87f4f-aed4-4691-92d1-97e3d196803c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4a7e1d-f368-45ef-9564-df69a1ded3f1",
        "cursor": {
          "ref": "99a2056d-5895-4d29-a0c4-d8cfbd756c98",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2b486820-5a83-41ce-9e06-0f7d2953a8c8"
        },
        "item": {
          "id": "1e4a7e1d-f368-45ef-9564-df69a1ded3f1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dbe57452-4001-4964-80f6-677fd258d752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095d7e67-d726-425e-80b6-0175d0a3243e",
        "cursor": {
          "ref": "a02e4e88-66e2-4a2d-acb2-00fdd690f25a",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3f79d731-76fb-485b-8dde-826fe38a443b"
        },
        "item": {
          "id": "095d7e67-d726-425e-80b6-0175d0a3243e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ae6477b3-bbde-40f0-ad7a-629aaf7e6f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98172b7f-7f82-4084-a4e1-7c955e4d0f3b",
        "cursor": {
          "ref": "3bae166d-14c7-40e2-83c3-0f325aff67a1",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4b1906ae-154b-4e6b-bb08-ebb156e72f2c"
        },
        "item": {
          "id": "98172b7f-7f82-4084-a4e1-7c955e4d0f3b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b15e4bd4-4840-4e08-9852-dce10f4280e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4650f8-b7bc-4f2f-8a30-2dda2c0a295d",
        "cursor": {
          "ref": "a2d1a67c-85ea-40d8-b0bb-6368d133818e",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "aab841c8-416f-4e75-8bed-070a3b1fd25d"
        },
        "item": {
          "id": "eb4650f8-b7bc-4f2f-8a30-2dda2c0a295d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "79084ae9-c408-4ef9-a20b-6090388e5be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea7dfe6-3e14-4f47-b0db-6f4e75798707",
        "cursor": {
          "ref": "dc37f5b7-667d-4985-9409-841d9d73cb79",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "77529631-2f4d-4b08-b5ef-3264bcc357d2"
        },
        "item": {
          "id": "3ea7dfe6-3e14-4f47-b0db-6f4e75798707",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fee11bd7-8a51-4165-a588-95e30471b591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fdf22a-69c3-4aeb-aac1-5f96a1f68564",
        "cursor": {
          "ref": "ab7d4977-f727-477c-8683-a71b8b417133",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ef586c9b-3ca1-417d-86de-1cf28adf5b6f"
        },
        "item": {
          "id": "57fdf22a-69c3-4aeb-aac1-5f96a1f68564",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0f503de6-e0ec-43dd-8d7b-b2dc92882ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d53b64-a1e4-455b-81c7-128fc2dec62f",
        "cursor": {
          "ref": "f6249ca9-7eb2-4771-91c6-b2472951cb34",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2ca377ad-cd29-4caa-9900-a771ed350068"
        },
        "item": {
          "id": "98d53b64-a1e4-455b-81c7-128fc2dec62f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "10242828-b182-4576-84e1-016b27e91507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f33a5a-1ada-408a-b898-f79da178b47a",
        "cursor": {
          "ref": "0adf65a3-a854-4531-96f1-420f597135c0",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "78558f1b-41db-471e-9e14-8b1aa7d23de2"
        },
        "item": {
          "id": "f9f33a5a-1ada-408a-b898-f79da178b47a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9da77613-4dcf-464f-8c0b-8cf828b68073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676fd43c-375a-4793-a62d-7f198c1e2c62",
        "cursor": {
          "ref": "18df410c-e7c7-46e8-b15f-5cac86590d46",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e773a6d5-c9ca-40ed-abb2-216f59d7778e"
        },
        "item": {
          "id": "676fd43c-375a-4793-a62d-7f198c1e2c62",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b348c41d-76cd-4869-b4ba-59dbaf4fea2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945fa84e-3f1f-4a89-8631-0597074aca47",
        "cursor": {
          "ref": "621caeaf-613b-44aa-963d-cd227a88d885",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6ba88ef0-042f-44e5-9f38-082935d1c3d5"
        },
        "item": {
          "id": "945fa84e-3f1f-4a89-8631-0597074aca47",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b01bb776-c3cd-434e-9dd9-7f6b065cff15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d849e8-e7ee-4153-99eb-98a4fc9d3b81",
        "cursor": {
          "ref": "4f6e1e5e-7c3f-4043-936b-0ee3db14772a",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0cda26a0-337e-4f32-85cc-c6a1d295b718"
        },
        "item": {
          "id": "f2d849e8-e7ee-4153-99eb-98a4fc9d3b81",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7a542694-7569-4095-a176-9595ab9bc58f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "78672080-b089-4dba-a8b6-9c250be538db",
        "cursor": {
          "ref": "62cf1fa0-e762-4616-b199-f28ccddeeabf",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "04aee1ea-5e88-4477-bcce-00d2b6ce01eb"
        },
        "item": {
          "id": "78672080-b089-4dba-a8b6-9c250be538db",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8954585c-0f98-467b-81ee-bd58bec0a647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ecca3b-8bb7-4753-ba11-e16ae2553054",
        "cursor": {
          "ref": "b4e532de-b436-43c2-9fba-788a1db4a81a",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "fa7e1101-2f4b-4f45-8b1c-16e2725549a8"
        },
        "item": {
          "id": "b7ecca3b-8bb7-4753-ba11-e16ae2553054",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "17016012-599c-43da-9ef9-2d3046a16c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8069c0e9-43da-4320-8c16-9a8e94a61cd6",
        "cursor": {
          "ref": "bbeef0c9-1403-47fc-9ce3-57fd8e240e58",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "78a35f1f-76f1-4cf0-af53-e43921c9d80c"
        },
        "item": {
          "id": "8069c0e9-43da-4320-8c16-9a8e94a61cd6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a1867ab7-d147-4d1e-bb10-dc5b6f9d7f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9add403-1544-4424-9b42-30caa20f7533",
        "cursor": {
          "ref": "3d8c2e91-32a8-4f8f-b93b-defb9f5d085e",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9f1cd742-36bf-490d-91d8-1b8e26ff6715"
        },
        "item": {
          "id": "b9add403-1544-4424-9b42-30caa20f7533",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ea6d2ec8-4582-4152-98c5-c959e54acfc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefecc97-ce6b-4b1b-8076-b4bf98484e4c",
        "cursor": {
          "ref": "1ca3c42f-189f-4f99-9355-50fd4a548284",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6e35736e-3219-41dc-ba70-52fefaabeeeb"
        },
        "item": {
          "id": "cefecc97-ce6b-4b1b-8076-b4bf98484e4c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9be6a7c0-7b14-45d6-aef3-9028b43a96a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8df774-33d8-4cee-ad9b-48cf9408dd65",
        "cursor": {
          "ref": "77b3bddb-c954-4332-b20e-68f82c940f45",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c25712b7-0b6d-4c18-b7a7-e6ad4d2bf4e3"
        },
        "item": {
          "id": "7d8df774-33d8-4cee-ad9b-48cf9408dd65",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "02e0dec0-c2c3-4230-ade9-1f8caacb7c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a4abde-9467-4381-8ffd-41f9c2a8e25d",
        "cursor": {
          "ref": "24378d94-cef3-4438-8f54-cad9cec891ef",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9438e2c6-2231-4d90-8c6f-ff1fa04b5cb4"
        },
        "item": {
          "id": "90a4abde-9467-4381-8ffd-41f9c2a8e25d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "39960b92-8ee0-4247-a679-f4691447fac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4cbec0-7dd8-46af-b092-dceb7b8c5819",
        "cursor": {
          "ref": "fc3c6d89-c775-411d-a41d-5a30603ed9b4",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3b55f7ee-dd78-44b0-994f-f8d9fce7d1db"
        },
        "item": {
          "id": "6e4cbec0-7dd8-46af-b092-dceb7b8c5819",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5e96032e-5fda-4da8-a030-2acdfda6d480",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "8874ddca-a8c8-4df2-8dfa-30c3e04f438a",
        "cursor": {
          "ref": "0a00c260-90b4-43d5-bf03-1c29566589d7",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "055ee166-30bb-48dc-ab95-81676a92ab25"
        },
        "item": {
          "id": "8874ddca-a8c8-4df2-8dfa-30c3e04f438a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "250d1a2e-6b85-4664-8db8-fdb3f928629a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e2ad5d-8a89-4d7b-9026-dfdffe368134",
        "cursor": {
          "ref": "78d33858-1aad-4942-8ac5-bf0013b53e47",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a0eabcbd-cee0-45ef-bb5b-cfa0f893be25"
        },
        "item": {
          "id": "e2e2ad5d-8a89-4d7b-9026-dfdffe368134",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e425f97d-a0f1-4576-b4d6-f54e541a66ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c00876-090d-4166-a196-333cc8eb161b",
        "cursor": {
          "ref": "33f1d855-ba58-4562-b91d-71cdabdba570",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9beecf85-6bec-4bc1-a501-b52934e9576a"
        },
        "item": {
          "id": "13c00876-090d-4166-a196-333cc8eb161b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e4b6e3d0-9863-4e58-9abf-568f77763115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96355a81-30a4-4511-a7a5-3cbe76b6d877",
        "cursor": {
          "ref": "cc36440a-d192-4984-91ab-bc31e2eb5cdb",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f7907f1d-5e3c-4d52-9125-70e66796803d"
        },
        "item": {
          "id": "96355a81-30a4-4511-a7a5-3cbe76b6d877",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f2507fcd-f083-4046-8590-3fd261d93db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2e17c5-466a-4b63-8dfc-003a2854a3b4",
        "cursor": {
          "ref": "40e7bdf2-e316-46cb-810c-102a8387e5e1",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4cf3add5-f709-4710-8426-23457723e243"
        },
        "item": {
          "id": "ad2e17c5-466a-4b63-8dfc-003a2854a3b4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "055f5103-eb0f-44d1-982e-8e57c4367ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6add3b-ae87-4c56-bbe3-b6d2de67ed56",
        "cursor": {
          "ref": "86fdf984-21c0-402a-abe9-abf6e8cfda83",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a4a8b60a-dfea-4773-917e-b05b8f00d728"
        },
        "item": {
          "id": "0d6add3b-ae87-4c56-bbe3-b6d2de67ed56",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "83c2e3d7-5295-4fd1-93d9-a1774bf56643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bc0881-c15d-4b8a-9db8-2cd81c25cef2",
        "cursor": {
          "ref": "a9d1cb8f-dc84-4993-969e-2bed9ca93906",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "01baa787-2785-44a8-9bd0-b1a066c881dd"
        },
        "item": {
          "id": "90bc0881-c15d-4b8a-9db8-2cd81c25cef2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0c429fc2-daf1-4006-9258-bab1b718ef3c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "6328714a-3218-4fca-8077-59d3b076420a",
        "cursor": {
          "ref": "f80d441d-262b-4cae-bd71-1b5f3cfa8e9f",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "30a8ae6a-29e0-4e65-b5a2-8fdcafcc0c41"
        },
        "item": {
          "id": "6328714a-3218-4fca-8077-59d3b076420a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "023bc77c-5ed8-47de-ab22-94a185255e25",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "76b4fbea-7fee-4c44-b194-6d54e32ecb51",
        "cursor": {
          "ref": "1b22966c-164c-4a4c-91ee-f150c5cb2a57",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "71ac0b13-056b-4605-a016-16c209da9802"
        },
        "item": {
          "id": "76b4fbea-7fee-4c44-b194-6d54e32ecb51",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "36f70e41-d4f3-4e49-ac13-cbdcd520814c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "a8f154d4-f00b-4dfb-bbfa-13c4bd45895b",
        "cursor": {
          "ref": "17d233c0-9c85-4249-88ee-61d4b82a8994",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a50bf66a-82be-4832-ae61-6acc2326e1f8"
        },
        "item": {
          "id": "a8f154d4-f00b-4dfb-bbfa-13c4bd45895b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9e324bb0-4a20-4c20-bbab-40e32583e0c8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "022597c1-e28a-4401-953c-adde7ef6177f",
        "cursor": {
          "ref": "9260fa49-c685-4f19-941c-b8578c5c83d4",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "22c2535f-c2d9-46db-b49a-579b151a4202"
        },
        "item": {
          "id": "022597c1-e28a-4401-953c-adde7ef6177f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "13e6fbde-44d4-4e8a-9bcd-a23761571b23",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "eb6cdbf5-8e44-4e1a-9c1e-f09288a329dd",
        "cursor": {
          "ref": "080cb299-2bbb-45b8-b8a5-27f603331b10",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5909a272-8c26-41d1-b1df-f8a66f2ee96b"
        },
        "item": {
          "id": "eb6cdbf5-8e44-4e1a-9c1e-f09288a329dd",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f3bd9672-4fea-4574-93c1-1750cafa6f7b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "f617ff1b-b7ff-4b6f-8da1-3d2906ee8935",
        "cursor": {
          "ref": "df03216e-6cf7-4a9d-9dd0-607b1c156ef7",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "09b3319e-f787-4b4a-80e1-f31b56279d4e"
        },
        "item": {
          "id": "f617ff1b-b7ff-4b6f-8da1-3d2906ee8935",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1d0ccfbd-8bf5-45b6-8e0c-34b1943a5bba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b64828-75fc-4542-a113-8e1a08c3f27c",
        "cursor": {
          "ref": "e92f54b7-412a-4544-b46d-aa36e3b2fbe9",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f07d31fd-502c-461c-aee1-a728ca54cb60"
        },
        "item": {
          "id": "16b64828-75fc-4542-a113-8e1a08c3f27c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "599f4623-0dd0-4a78-847d-7fc1f98beaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ecb9ff-41ec-4e4b-9a41-34b0b521c97c",
        "cursor": {
          "ref": "44d8416f-b6d9-4a96-a1b7-48eb3c2cf258",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c06c0a59-9eec-4d70-8e04-1d3ec6a41874"
        },
        "item": {
          "id": "c3ecb9ff-41ec-4e4b-9a41-34b0b521c97c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d08de9d5-593d-43e3-8a91-76eaeea4d9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f34048-e209-483f-9987-d56bf465d213",
        "cursor": {
          "ref": "0a032451-9832-41c8-9e7d-95b9be5c1c81",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3407e055-72a5-4b3e-a379-e0fd1f28e929"
        },
        "item": {
          "id": "e0f34048-e209-483f-9987-d56bf465d213",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "19741a57-ef57-4303-aba1-e0255df96d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e83772-a373-4afd-aa42-690cf8a6ec72",
        "cursor": {
          "ref": "06aaab15-983c-447b-bc85-5c7958b7572d",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "91ca014d-05c5-40bd-bcd7-18b759f91f7f"
        },
        "item": {
          "id": "89e83772-a373-4afd-aa42-690cf8a6ec72",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "21da9d8b-2ad8-4f87-b4ff-1df1135bee79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07dcbd88-f830-4fde-b212-c55a567c1098",
        "cursor": {
          "ref": "0d703bc9-9358-474b-a229-725eb5692131",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7b956b7b-867c-495b-ae66-e30f693ce832"
        },
        "item": {
          "id": "07dcbd88-f830-4fde-b212-c55a567c1098",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "473213ef-818a-49b5-bbde-5d3f0cd158ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbffc67-1df5-4dac-8137-4bce7a85de2e",
        "cursor": {
          "ref": "f8bf91eb-f9e0-4cfe-8864-925faeff5ce9",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "365924de-0e30-4f5f-aa7d-6013abe41ae9"
        },
        "item": {
          "id": "cfbffc67-1df5-4dac-8137-4bce7a85de2e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "24277b4f-6c4b-4fa7-919d-6d3514e79053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a45dc45-db2d-4146-afa1-905683cbf39a",
        "cursor": {
          "ref": "fcde1210-d19d-475c-880c-f70c4477fcd7",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e3b9c6e2-d0c7-4576-97d2-9b5c3c007ced"
        },
        "item": {
          "id": "7a45dc45-db2d-4146-afa1-905683cbf39a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "85be1f3b-41f1-4c2f-b004-f8f1d9f7b0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc241155-cf3c-4f96-8752-dd2eff8ccab5",
        "cursor": {
          "ref": "d534910f-3d85-4689-8ed2-d9a5c22d4881",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d402b6ad-477a-4098-bfb0-88d6b2183c52"
        },
        "item": {
          "id": "bc241155-cf3c-4f96-8752-dd2eff8ccab5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c2420338-4c21-4c98-91a3-2af1d007762a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038a7f14-4790-4381-8411-72dd1c7392e7",
        "cursor": {
          "ref": "b811ec1c-8ffb-48d8-bcf6-058a4376143f",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3dc9badc-c095-4c14-b9ef-96c32ef62d30"
        },
        "item": {
          "id": "038a7f14-4790-4381-8411-72dd1c7392e7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "79a62031-fb44-4c3c-9fdc-f264c742e9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68537cf-5cfc-410e-950e-8fce5a6164b6",
        "cursor": {
          "ref": "32babc12-8c6d-48a6-ae6b-846421957a97",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3c73db95-7c94-4546-b713-20dfb4f92689"
        },
        "item": {
          "id": "e68537cf-5cfc-410e-950e-8fce5a6164b6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d5fc134d-8554-4c40-a502-7abd92f386a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e93095-436f-4077-be49-fbb61c086ec3",
        "cursor": {
          "ref": "adefbe1a-7f8b-425e-9882-c3389659876a",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7c9831c3-10f7-4654-8102-9b147f4d6de7"
        },
        "item": {
          "id": "26e93095-436f-4077-be49-fbb61c086ec3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c4d71908-19fb-41e4-a5f2-a4e96f044ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4747c1c5-cf90-45df-b4d6-93f61e1c37f6",
        "cursor": {
          "ref": "fa5f2a16-f40b-432b-903f-589447718e4e",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "22bf31d1-d1cb-4975-bdcc-2283ac2120dc"
        },
        "item": {
          "id": "4747c1c5-cf90-45df-b4d6-93f61e1c37f6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bf500f57-656f-478d-8bc0-031a71906fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031bec90-bf7d-4f75-a0e4-58192ef66c36",
        "cursor": {
          "ref": "661e476c-a5ee-4cdc-b41c-138c84e3c191",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "184b5821-1ae4-441d-b620-6f6632de93fd"
        },
        "item": {
          "id": "031bec90-bf7d-4f75-a0e4-58192ef66c36",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "005ad43b-0fc9-4b26-9c43-aa7bda33e330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81c32ec-a7aa-4af8-886f-c44255923c34",
        "cursor": {
          "ref": "56e39d61-0ebe-4886-9d8e-0b6341dee766",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "dd6fb231-bff6-4593-8d0e-4a24c8c42d37"
        },
        "item": {
          "id": "a81c32ec-a7aa-4af8-886f-c44255923c34",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3fb87b33-979c-4985-892c-d9b2d2e6832b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d729a0-85bd-4118-9f35-53b628a20c7d",
        "cursor": {
          "ref": "d9ed6b5a-2968-434e-8d88-5eb9b2d03d58",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1d392ccc-9fdc-45f2-b60b-9cede75ecd93"
        },
        "item": {
          "id": "d8d729a0-85bd-4118-9f35-53b628a20c7d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "07c2603c-4b81-4da3-90b8-350463e01f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500c5acb-0cc8-4084-9c59-3c6f03b9c7cb",
        "cursor": {
          "ref": "152b1b8c-2441-4360-90f1-824fdbe4fd84",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d3005556-1572-47fe-93f3-889aaf2b801e"
        },
        "item": {
          "id": "500c5acb-0cc8-4084-9c59-3c6f03b9c7cb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "23fc889c-fa14-462e-91cc-f09f4a5d9f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2367713-d714-47c3-8ecd-567dedd762d9",
        "cursor": {
          "ref": "93891772-9d8a-45d8-87ca-2d272573c0c3",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4e5e012c-ca31-466b-8328-cb7f770ebba3"
        },
        "item": {
          "id": "f2367713-d714-47c3-8ecd-567dedd762d9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f1036a30-9259-4424-beef-3406569a2044",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "a281cc21-f6ba-4298-b08e-7cc769c1e615",
        "cursor": {
          "ref": "df321416-a1d3-4af1-915d-a7f5f8727582",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f5e927e3-3290-449f-bb61-12c822849623"
        },
        "item": {
          "id": "a281cc21-f6ba-4298-b08e-7cc769c1e615",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b478d45b-1604-4761-9bc8-6d9305348013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74012492-e1f4-4e20-910e-fb9e06a257e3",
        "cursor": {
          "ref": "341f45ae-868c-4833-81df-d003d7ff360a",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3db991ff-fb67-434a-8617-ee6ba0459045"
        },
        "item": {
          "id": "74012492-e1f4-4e20-910e-fb9e06a257e3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1990a704-5086-4dc9-90d8-0fc4a4a77b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf91944e-0142-4c52-adef-83dc3fc9f736",
        "cursor": {
          "ref": "cef71b51-51c9-46b0-8371-5c855292d660",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "158750cd-3c64-425c-bd60-38ba1136e89f"
        },
        "item": {
          "id": "bf91944e-0142-4c52-adef-83dc3fc9f736",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "da867055-605d-410d-8d43-63df046210c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0089fb-f185-404e-81b5-484cd77a2c26",
        "cursor": {
          "ref": "da5c79ec-8e2c-4311-b453-376bd63c4929",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "609722bc-8ea8-43b1-8775-fc8f5cc00ef9"
        },
        "item": {
          "id": "9b0089fb-f185-404e-81b5-484cd77a2c26",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "53c178bc-cf82-480c-bc96-3f6cf14981b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599b95eb-f245-4b3b-8c75-55d7251bbba0",
        "cursor": {
          "ref": "7eeeb152-c7ab-4872-b1e9-24937db5ea9f",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "161d6991-5aab-416d-8719-59e5b1a7c58c"
        },
        "item": {
          "id": "599b95eb-f245-4b3b-8c75-55d7251bbba0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "67123fee-dc89-4d75-92db-54f375aeec30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33bae803-1b58-4a3c-afd0-b7990b1fbbad",
        "cursor": {
          "ref": "9b5c041c-ff4a-4571-88c8-5910a3c491ee",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c7f6cd5f-bf73-4b3c-bd89-1e8112bd4b13"
        },
        "item": {
          "id": "33bae803-1b58-4a3c-afd0-b7990b1fbbad",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4c3232e4-b2fe-45ed-b0c1-0302e6f6bebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3470cd80-19f2-4fa7-89ad-bb581212d9b7",
        "cursor": {
          "ref": "8e9251f2-b56e-4767-aff8-c6be9cee199c",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "94adbe66-e98b-44f6-83fc-4df04d53b313"
        },
        "item": {
          "id": "3470cd80-19f2-4fa7-89ad-bb581212d9b7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d7808d32-64f1-4c64-b8d9-f66a4dab0853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255f5f92-e152-4641-a385-851072958daf",
        "cursor": {
          "ref": "c3a3d3e5-ae6c-4d6f-89a8-30417dde1f0d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6e978d3c-05ac-40f9-83e7-d2b09b66f27d"
        },
        "item": {
          "id": "255f5f92-e152-4641-a385-851072958daf",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0e94a541-8acd-4e97-ab88-536c5436f6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c9d74d-aa6b-4a09-8286-895f8c41ae49",
        "cursor": {
          "ref": "7edc2095-f9b4-4a6c-a83c-9dd40a0685d5",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "15368052-735b-472e-8b80-3d835e96b87a"
        },
        "item": {
          "id": "48c9d74d-aa6b-4a09-8286-895f8c41ae49",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "23af9702-5c84-484b-a14b-575f93131a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6561ec1-8af2-491c-8bf9-5ebb5276538d",
        "cursor": {
          "ref": "9055de24-60c2-4e46-8e08-9b9485397db3",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a5c0f922-d492-4efb-b105-0762750c2ff1"
        },
        "item": {
          "id": "b6561ec1-8af2-491c-8bf9-5ebb5276538d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4d78660f-263f-4b26-9403-4df3af58a653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af9c6a3-5ab8-42d5-bbd3-d6b5192266f2",
        "cursor": {
          "ref": "5103c4d8-75da-429e-bcbe-a1294a582fab",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7684f04c-bb71-49b3-9b81-20a5f57fc715"
        },
        "item": {
          "id": "4af9c6a3-5ab8-42d5-bbd3-d6b5192266f2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6ff0e283-9a53-44b6-9519-204fb6ec673d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6cb23a-8bd7-4768-b8fe-6695d8bbae07",
        "cursor": {
          "ref": "1518f8d1-f3c6-4e5c-be62-76a8ff995430",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e2861f9f-5258-4519-acb1-0a7d12cf0567"
        },
        "item": {
          "id": "2c6cb23a-8bd7-4768-b8fe-6695d8bbae07",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "69482ba8-4290-40f9-95be-b0088f792f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eec0410-c5dd-4c25-8fcb-79108939214e",
        "cursor": {
          "ref": "fdbfa440-64c1-4095-8caa-4f6df90009de",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c2a89446-0452-4949-a274-a1fdf9849ea9"
        },
        "item": {
          "id": "4eec0410-c5dd-4c25-8fcb-79108939214e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2a9212e6-2d4d-4058-9112-ec22eef6d024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86f5a3a-3696-4a3c-bcb1-caf21f133a80",
        "cursor": {
          "ref": "e1a008a5-031d-4f4c-ab54-c15474a8c88f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "05b8916b-252d-4a77-9032-34140ea4fb74"
        },
        "item": {
          "id": "b86f5a3a-3696-4a3c-bcb1-caf21f133a80",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bd65da0c-3276-46df-8253-fe4fd076e753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e56865-321a-4df1-8669-50fdc542d764",
        "cursor": {
          "ref": "5aea88ee-66ff-4452-86c2-4230eaa6a224",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "78a13773-9dcb-48e6-bb6a-081637dca9f1"
        },
        "item": {
          "id": "50e56865-321a-4df1-8669-50fdc542d764",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "82d7f8fd-466e-488a-a322-44bc1468b8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ffcd18-a553-4aeb-bf20-aedc7eb39c18",
        "cursor": {
          "ref": "c312fd79-a0cd-49e7-a26b-9991062532d9",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "99e9632e-180b-4a83-b56e-a4f31ce1ef37"
        },
        "item": {
          "id": "19ffcd18-a553-4aeb-bf20-aedc7eb39c18",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "80fdfe58-271b-4ef1-98a2-c313b19d630e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4542200f-12ce-47ed-ac9b-a35ba8f0e322",
        "cursor": {
          "ref": "8103112e-d6b2-43bb-a887-4442212cf180",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fc3c60ff-9151-47f3-b5d8-dd8bb73d839a"
        },
        "item": {
          "id": "4542200f-12ce-47ed-ac9b-a35ba8f0e322",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "27bb3436-ebaa-4a7b-8b58-5f21fa66d77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72a528d-f81e-48f2-9196-e3f6123cad0c",
        "cursor": {
          "ref": "2ef551a0-8cac-4b9e-a283-8a85fbd74489",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f5e085dd-3fac-4eef-bc91-227b264c9ae0"
        },
        "item": {
          "id": "d72a528d-f81e-48f2-9196-e3f6123cad0c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "75fe94c5-98c0-461b-bf93-62437328e75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112273fc-04a0-408e-9841-c6ce32303c6c",
        "cursor": {
          "ref": "43021038-893d-4345-b279-8cd8c438189e",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "49cc6248-38bd-4880-bc70-3b16778939a4"
        },
        "item": {
          "id": "112273fc-04a0-408e-9841-c6ce32303c6c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dc3f7ed4-5838-49e5-a54f-1b2b6b6e44a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921fe2f2-efaf-43a1-940f-d5913e7768f3",
        "cursor": {
          "ref": "a0a6d63a-d3fc-4edb-a761-ca48cdd59d9c",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9fd4c82d-b054-458d-bd6e-bafe52c469fd"
        },
        "item": {
          "id": "921fe2f2-efaf-43a1-940f-d5913e7768f3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8249dee3-8989-4c93-b596-81e94daf5e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a19f86-110e-4d4a-8ae6-729cfcc7b1de",
        "cursor": {
          "ref": "2ee3a61d-4c3d-4331-a447-b7824aaf533f",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "413d88d1-a361-4f3f-8117-2c51b0bcb006"
        },
        "item": {
          "id": "57a19f86-110e-4d4a-8ae6-729cfcc7b1de",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1a58302d-b811-4d64-9b01-637336a3399c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffe0a5f-8cf1-49f9-bce5-bb82d84adb77",
        "cursor": {
          "ref": "4b82e1d6-5ae6-4d98-b19e-1523ac8ae9f4",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a91416f6-f010-45ba-879a-9ce784d81d75"
        },
        "item": {
          "id": "0ffe0a5f-8cf1-49f9-bce5-bb82d84adb77",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1289e9f2-9f97-4669-9268-66186b37f94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30dbfacb-1947-4bd0-abd3-b538eeef945b",
        "cursor": {
          "ref": "fcbdfa02-87a2-48e8-bc71-16d1bbcd9a74",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "84c32561-be14-4e92-a94d-d55a898c66f0"
        },
        "item": {
          "id": "30dbfacb-1947-4bd0-abd3-b538eeef945b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "93103bac-88e2-4677-8e86-a0f350efccd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51c91d4-e8e9-4429-9696-c51e2257d31a",
        "cursor": {
          "ref": "ddfada0b-d39b-4335-b006-5993b098fc2a",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bbd2352e-0fab-49cb-8b3b-b43deca28b5b"
        },
        "item": {
          "id": "f51c91d4-e8e9-4429-9696-c51e2257d31a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ffd550eb-935e-47ce-9425-90957d3f580a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839c4004-48ed-4b33-8ff3-087b99c1b482",
        "cursor": {
          "ref": "39898285-a83c-48f3-8071-28e2f459f7d4",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "60ad17e4-bdc9-48cf-941b-c6314615afc5"
        },
        "item": {
          "id": "839c4004-48ed-4b33-8ff3-087b99c1b482",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9916b423-e1c5-4ea0-923c-692766354ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93e7b3f-b3de-45fc-a5d3-ef385312221e",
        "cursor": {
          "ref": "d50b286d-18d6-4306-83bd-82501acf374f",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "29fd1dbb-e620-4571-996a-a44654239daf"
        },
        "item": {
          "id": "b93e7b3f-b3de-45fc-a5d3-ef385312221e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c61b3fa1-b2ec-465a-925a-b5aa6942f07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abf4d47-b115-4f84-b848-14f72e2a905f",
        "cursor": {
          "ref": "f38146fc-f31d-47b9-8691-eb322578b945",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "976c40b9-0ffd-4f8a-9b5b-c8d2b75ce863"
        },
        "item": {
          "id": "8abf4d47-b115-4f84-b848-14f72e2a905f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "aea5a557-fbe2-4c0e-b744-bd4776657ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6517d511-1fa1-4052-9512-ca1e18c5eb78",
        "cursor": {
          "ref": "ff760334-6d4e-481d-88a4-252695cc50ac",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6a1c86c2-f3c9-405e-89ab-a6a1f4978dc8"
        },
        "item": {
          "id": "6517d511-1fa1-4052-9512-ca1e18c5eb78",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a7415163-96f7-4f46-863f-8ac44f5bf4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0530d2cf-b745-4d77-95e0-f6b4cfd14ec0",
        "cursor": {
          "ref": "478e620f-801e-4800-90b7-8faa05b532d2",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e3c59582-e562-4a29-90ab-1aea735a81d7"
        },
        "item": {
          "id": "0530d2cf-b745-4d77-95e0-f6b4cfd14ec0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a464d5f7-616f-49e6-bf63-ebfdbe940803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03c80e7-b2fa-4715-82e9-f035abbe8fdd",
        "cursor": {
          "ref": "7c87b1ee-fe43-409e-adcc-d6da76e67ebb",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e4ab52b7-802c-4abb-aeae-6f523b55f5a8"
        },
        "item": {
          "id": "a03c80e7-b2fa-4715-82e9-f035abbe8fdd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ae5f1f8b-5398-4888-b897-991c3deb6a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4d6c13-2efb-4106-b20e-fa663a2e6d72",
        "cursor": {
          "ref": "cf40fcae-4573-40d1-804a-fbd9423b9c89",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "075033e8-0cbe-4c37-bc6a-b358c5b2eddb"
        },
        "item": {
          "id": "5c4d6c13-2efb-4106-b20e-fa663a2e6d72",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2ffbfbe2-5761-4ef1-b4da-1122b99e95ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9702926-ad4d-4aba-8a5c-81953fc2b520",
        "cursor": {
          "ref": "8fb736be-b682-4650-ac29-09de12b90d00",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d91349d4-b5ff-4036-aeb8-51d21e5ea3b5"
        },
        "item": {
          "id": "a9702926-ad4d-4aba-8a5c-81953fc2b520",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3782888c-ad49-469e-9372-1cfea39ec93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab178aa-409f-414b-9a64-881700c7f9c7",
        "cursor": {
          "ref": "755f6341-4453-4c49-a231-92d4331908e5",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "395b31b0-c6ce-43ad-be67-b299cbdd4d26"
        },
        "item": {
          "id": "7ab178aa-409f-414b-9a64-881700c7f9c7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "eb6ceb5d-2357-4a56-a604-c6894118141f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2e7b87-b336-4eaf-9e6b-45205ca43312",
        "cursor": {
          "ref": "a06bfdd2-62fe-47f0-95de-8e8baa4de470",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "688dfcce-e4c3-49a9-94ce-c0e73931946a"
        },
        "item": {
          "id": "2e2e7b87-b336-4eaf-9e6b-45205ca43312",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "793c1f98-815b-4ae0-b56e-24dfd5940a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87c950a-d83e-4483-a243-94c757bcc3d9",
        "cursor": {
          "ref": "2bae9a19-3360-4bf5-9abc-16f51e4bf817",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "433ac2a2-85b0-4d18-8757-e5b4034ab701"
        },
        "item": {
          "id": "d87c950a-d83e-4483-a243-94c757bcc3d9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3076c9db-e5e0-400f-a8fc-9848f5bee629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65dc946-0b84-430b-a7e2-0d5b278b26ef",
        "cursor": {
          "ref": "9a414b02-5142-456d-8f17-fb688b60590a",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8f1a1c88-a136-43c8-b983-6be33e3921c0"
        },
        "item": {
          "id": "a65dc946-0b84-430b-a7e2-0d5b278b26ef",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "17eef73d-83ab-4c09-8b22-e97ecf0f8491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7224ce29-928f-4664-b683-9ee11bfc2fbb",
        "cursor": {
          "ref": "9bcb1229-a1b0-4d14-aee2-9f7b02490cf9",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ca4402d8-8d72-40c6-8e58-4f8ad10941fb"
        },
        "item": {
          "id": "7224ce29-928f-4664-b683-9ee11bfc2fbb",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "23029239-8736-43c6-84c2-ccdf74fc912b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcd944d-852b-46e7-adaf-78b84ab47313",
        "cursor": {
          "ref": "93daa719-dc9f-4e29-83b0-6c3ad8094ebc",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "968ff0f0-34a4-4287-8b1a-708be743327c"
        },
        "item": {
          "id": "9bcd944d-852b-46e7-adaf-78b84ab47313",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "933dd98a-eaf5-4e4f-a3e3-5c08c0616225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ccc72a-b671-404b-99c0-fbed88eef6d6",
        "cursor": {
          "ref": "75946368-4100-4664-9347-bb709ca4efdd",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ff2cb21f-85bb-4591-bb6c-1bff90291e03"
        },
        "item": {
          "id": "66ccc72a-b671-404b-99c0-fbed88eef6d6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fe388300-3e1a-46ad-938b-c7845f439508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed45bc8c-69f9-48d7-a5fc-d612cca4804b",
        "cursor": {
          "ref": "6a9bf774-2699-4290-9883-967adb9b8ebc",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fce5dddb-752b-4cb0-bc7d-5c7ef2c62cc0"
        },
        "item": {
          "id": "ed45bc8c-69f9-48d7-a5fc-d612cca4804b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e367f6a9-9f95-40df-ba30-dccd43fc410c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4fd72a-a820-4f9e-9adf-be823389f163",
        "cursor": {
          "ref": "12ed466d-5e68-4e98-b93a-c5761c81ce12",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ba3e7a42-177c-4382-9eaf-8f088b2828fe"
        },
        "item": {
          "id": "ea4fd72a-a820-4f9e-9adf-be823389f163",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3ca16774-1689-4019-b663-5cac327b98dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cfe8e8-e1b4-44d0-acf0-9c7cd1fa52e1",
        "cursor": {
          "ref": "a422cab1-1ed1-4a46-ae28-9b8e436e2d5e",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9d81a8b1-76a5-4400-ab03-28c8bdd73951"
        },
        "item": {
          "id": "46cfe8e8-e1b4-44d0-acf0-9c7cd1fa52e1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2739e1f3-a5cc-419b-82a1-f17f841b0d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3641a2ee-89b1-4e07-a534-abdec29cde5c",
        "cursor": {
          "ref": "6962140f-4849-4755-aef8-e63f9879a726",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "90ccec67-13c1-4b90-8558-68c48b2d6623"
        },
        "item": {
          "id": "3641a2ee-89b1-4e07-a534-abdec29cde5c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "13eb5094-6111-443b-b014-4e23579b0bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69ddee9-621c-4a4b-9e28-b68fc053c6f9",
        "cursor": {
          "ref": "3c3a4ebb-3b81-4890-80cc-4a72c27bda47",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d5ca265f-5f0d-4b7a-8194-fcb9263788bc"
        },
        "item": {
          "id": "c69ddee9-621c-4a4b-9e28-b68fc053c6f9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c6b55f3c-c9b1-4630-b422-8a65ab99e60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4574ad14-0374-4876-b4f2-81e67da5f94e",
        "cursor": {
          "ref": "42ce5886-d89d-4544-9ccb-04672d6715d6",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3f744a37-1416-44cd-851a-87fcd3cf5b6d"
        },
        "item": {
          "id": "4574ad14-0374-4876-b4f2-81e67da5f94e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b43f0418-e6ca-4abb-966c-2442b7b4f2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef74ec2-56b1-4004-8c39-a27d485b870c",
        "cursor": {
          "ref": "0c3b75e1-6662-44ed-9284-f792c0fa3d56",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "268c68ca-7de3-46ed-9fb6-7405ee9c1922"
        },
        "item": {
          "id": "4ef74ec2-56b1-4004-8c39-a27d485b870c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a99caab0-4e73-4da7-9641-b0ea999accf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a98f4e4-d7a2-40f7-bd66-2dc19835fc7c",
        "cursor": {
          "ref": "645800c8-ba93-4009-8f2c-624ddbb1bc79",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d54d6d97-1c95-40f4-8e11-5cf834e5121e"
        },
        "item": {
          "id": "8a98f4e4-d7a2-40f7-bd66-2dc19835fc7c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c6a97c76-cf48-445f-bf6e-a938cacbe90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe555c56-d04e-47a7-9923-f14212f30f24",
        "cursor": {
          "ref": "2e17398f-3fd4-42d8-813d-eb65350c65be",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "70851d00-4703-4570-a269-3de2545b058f"
        },
        "item": {
          "id": "fe555c56-d04e-47a7-9923-f14212f30f24",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "56d95d0f-ed83-4bf7-b296-9f836fd70c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6a1a2a-8ec9-45a4-940a-ee306dcd2f27",
        "cursor": {
          "ref": "cee1b22e-7769-4fe7-aaf7-81a7fdfd9b5e",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a18ce5dc-8be4-44a4-bd52-c8afb2410ef2"
        },
        "item": {
          "id": "de6a1a2a-8ec9-45a4-940a-ee306dcd2f27",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "65bf6de9-d7c8-4f80-9ae4-d4985dc0114f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e33e27-bcf7-4d50-987f-dcec9f461f19",
        "cursor": {
          "ref": "24414224-257a-46c2-bd55-ca1b67906be3",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7f47f098-dc9a-4164-97e5-7d4a0286a443"
        },
        "item": {
          "id": "c7e33e27-bcf7-4d50-987f-dcec9f461f19",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "42de36ae-4abe-489a-ad0a-b851a23d5cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4804231-35df-48a5-971f-e1959735d445",
        "cursor": {
          "ref": "cd7464e4-23b4-49ec-81c5-6528fedf1438",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f3f85c8b-e73d-4d25-98cf-fdad85140693"
        },
        "item": {
          "id": "a4804231-35df-48a5-971f-e1959735d445",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ee796a6a-03a0-4c97-ba60-03633fa4bcdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1259fff-8d82-4e5e-80c4-effbdbd63a64",
        "cursor": {
          "ref": "9c5836ec-5b0d-446e-a602-7f4ae962852a",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6b84fdf3-caa3-4ce0-b876-3595b0f7b15f"
        },
        "item": {
          "id": "d1259fff-8d82-4e5e-80c4-effbdbd63a64",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "29ad7a8f-ef23-4d10-a872-7c9fddce06df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d30da0-469c-4c82-9a6a-71a043dd7f50",
        "cursor": {
          "ref": "e51d4ad1-eb7f-4c9b-bef1-43391caa8bc6",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7fa9f6d4-1f45-47f3-9498-f8344181b857"
        },
        "item": {
          "id": "07d30da0-469c-4c82-9a6a-71a043dd7f50",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9f164c29-2e48-4695-9fbc-10ff32727dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b4bc1b-6f66-47b2-a89b-5a74c7861f0c",
        "cursor": {
          "ref": "df443f67-f139-4ba1-80ac-3a74f65cc2d7",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4bcf3a1c-f7a4-49df-88e7-d5526e50a273"
        },
        "item": {
          "id": "b2b4bc1b-6f66-47b2-a89b-5a74c7861f0c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d1344034-0334-4cdb-bbb8-fa2e3376bf59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86312d6c-2b50-4b10-bfb2-2930dd052c26",
        "cursor": {
          "ref": "100773de-d593-4091-b9dc-5484bb849004",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1a8f95bb-9b4d-4ee1-a905-6a062f9ea6c0"
        },
        "item": {
          "id": "86312d6c-2b50-4b10-bfb2-2930dd052c26",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2026e871-38c4-4672-a9a8-ae085619c5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b3644f-048b-4d9c-a736-39f326caabbe",
        "cursor": {
          "ref": "c70aad32-b47e-452d-b5f8-b09332c2818a",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b67a1bdd-a6f3-4f40-bab1-b8d11508390b"
        },
        "item": {
          "id": "97b3644f-048b-4d9c-a736-39f326caabbe",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cec79777-abb6-43ab-ab9b-8ad83dab6f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa9b58b-efea-4ecd-861a-f2b91cdefd32",
        "cursor": {
          "ref": "3aac1ab9-4ddf-4366-9887-52322f900bbc",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9ad7f5f5-e2ae-4a9b-a4a1-766c6576e0b9"
        },
        "item": {
          "id": "0fa9b58b-efea-4ecd-861a-f2b91cdefd32",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "969c220c-da2f-4af3-a558-fe8cc92da6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75c2dd4-0717-44ca-af99-6cfa5dffd45e",
        "cursor": {
          "ref": "103a9403-fafc-47f9-ae4b-daee076eaf8b",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "881b90d3-b371-4fd2-8910-d4b4cd0d8394"
        },
        "item": {
          "id": "e75c2dd4-0717-44ca-af99-6cfa5dffd45e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2792389e-8dec-437c-a958-eed769a44adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1695f96-dfd4-4617-81ff-748771325222",
        "cursor": {
          "ref": "b4450368-2de8-4016-ae34-58677d6234e2",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "26cfeb24-fef8-4adb-8c78-e08270e9b25c"
        },
        "item": {
          "id": "c1695f96-dfd4-4617-81ff-748771325222",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f58579a3-9997-4a64-92f6-5a92cc49dfa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efd5a49-952e-47c1-a1aa-62df6598fc9d",
        "cursor": {
          "ref": "8c0789b4-458d-4de0-bbcc-157a2cbd4cdf",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7fe781af-6dc4-4bc5-9687-26a98521813d"
        },
        "item": {
          "id": "9efd5a49-952e-47c1-a1aa-62df6598fc9d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6df9ae5a-6d19-4715-b169-55e322e21f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e863cd-bca8-4b68-9c39-f3621814c8e2",
        "cursor": {
          "ref": "ebadff61-4bf0-438a-b2f4-fd40a46130f4",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ecc55f85-5e3e-42d1-bd33-26dfc3fb2b46"
        },
        "item": {
          "id": "67e863cd-bca8-4b68-9c39-f3621814c8e2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7509c84f-48d3-4382-9d68-6b8c4cd0a750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39def9fb-4bec-4978-ae05-62be5977fd0b",
        "cursor": {
          "ref": "42b7e4e2-57d3-47c1-ad85-79903c7578ec",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7ffa5bb8-2949-434f-b8b9-c0efc657fe8b"
        },
        "item": {
          "id": "39def9fb-4bec-4978-ae05-62be5977fd0b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2ef9faab-1252-436a-8abd-f2d585fb8f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83697c73-de5d-47b7-9c47-b7fbd7ef2c6c",
        "cursor": {
          "ref": "2a838079-4487-4c95-b6b3-48aeca75b4dd",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "03615a99-157e-4ae8-afd5-2b076e974a2c"
        },
        "item": {
          "id": "83697c73-de5d-47b7-9c47-b7fbd7ef2c6c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d9d848a5-bf41-435a-a447-18f01ac1d56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea81f118-d534-470a-a554-f1bcd50334f8",
        "cursor": {
          "ref": "709ab090-8f09-4244-a799-dec01d2cd749",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "78a6df4a-820c-432f-a2ab-461dbc0632e8"
        },
        "item": {
          "id": "ea81f118-d534-470a-a554-f1bcd50334f8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1c640344-d6c0-4989-ac73-56d2c00ff3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db44c53-2651-44fd-a5cb-17648fbc0074",
        "cursor": {
          "ref": "b15e9595-b5fb-4e9d-96be-200552a9074a",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "76b16566-bb1a-4640-bffa-74d0dea8db66"
        },
        "item": {
          "id": "6db44c53-2651-44fd-a5cb-17648fbc0074",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "05ad859f-904a-45cd-8107-d59eef5bc73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8576d5-9848-4359-a888-d5fe519cc578",
        "cursor": {
          "ref": "88a66ee7-9be9-4d4d-bb3d-6f88d66cedad",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2b07fd48-1ab1-4b33-8d2c-7ac61b0f021b"
        },
        "item": {
          "id": "df8576d5-9848-4359-a888-d5fe519cc578",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3e299905-26b6-4970-9427-b7df37451a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159578c9-4372-42c8-9291-b3417d00fe9e",
        "cursor": {
          "ref": "90337352-3ea5-4a41-bbde-fb699787aa1d",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "92a78b78-ec04-4e03-a54c-18b2ae6f041e"
        },
        "item": {
          "id": "159578c9-4372-42c8-9291-b3417d00fe9e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b4180330-b142-4c00-bbf7-7bd1d2090416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad092126-0c9e-4ed9-8ee2-8701ad282a0e",
        "cursor": {
          "ref": "0c5caf7f-2c21-432b-b23c-986d05ba427a",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "685e222d-b427-4cb5-aac1-9010f212f18b"
        },
        "item": {
          "id": "ad092126-0c9e-4ed9-8ee2-8701ad282a0e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3ce428c4-4061-4a2f-a54e-1a00fadc2ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f78d3ec-9146-4ca2-a3dd-68fbb4b5abd8",
        "cursor": {
          "ref": "c03b7385-06ec-42e4-8e34-50220eebf5f6",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "79187635-ff91-4a5a-9ca5-a4bd5ead511f"
        },
        "item": {
          "id": "1f78d3ec-9146-4ca2-a3dd-68fbb4b5abd8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "55c28d51-d4c2-47d4-aa61-2f7b8eefb23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b57057c-6a2f-4aae-a81e-078a627e2072",
        "cursor": {
          "ref": "8c0c7b56-aabc-4eae-a337-c6b01737ce42",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d4d3fae9-f78d-4406-a410-976f753ca852"
        },
        "item": {
          "id": "5b57057c-6a2f-4aae-a81e-078a627e2072",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "584f58d6-4b3b-40a4-a026-67c797fae1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94204ed-0b63-4643-8241-0c1bb184fc2f",
        "cursor": {
          "ref": "37826be7-f4d8-4e5a-9327-0b29e683f920",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "bd82f925-663c-4acf-ba1a-61164898c133"
        },
        "item": {
          "id": "f94204ed-0b63-4643-8241-0c1bb184fc2f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6701be7c-8ded-4ac1-8e55-dcdc1b8627ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd575c1-1832-49bd-8856-2be11ca257ba",
        "cursor": {
          "ref": "62ff3e98-7d1d-4277-88c4-71ed6ee2e92f",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ec1b21aa-95c3-46c0-b51c-a8623b9da3c2"
        },
        "item": {
          "id": "cfd575c1-1832-49bd-8856-2be11ca257ba",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "32bde169-7210-448d-99d6-08ca8b9e0492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c076060-e2c2-4864-ac44-87d21ad33566",
        "cursor": {
          "ref": "795aa07e-8da6-49a9-9504-da318526d31f",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "75d58340-4502-4cf5-bbbb-c9b7d62f0daa"
        },
        "item": {
          "id": "8c076060-e2c2-4864-ac44-87d21ad33566",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c17bfe37-a64c-4686-829a-058d5e67d551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef07c474-ddf3-410d-ba50-4303470c3422",
        "cursor": {
          "ref": "476f8f41-5621-49a0-81a0-99a79dbc478a",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "597a02cb-bce2-4c60-8c64-2144c2b0d70e"
        },
        "item": {
          "id": "ef07c474-ddf3-410d-ba50-4303470c3422",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ebe9b137-a945-4d91-b36e-5b50a165ec46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecd0b81-8159-403d-b2a3-94bd4e6bc202",
        "cursor": {
          "ref": "dc056ac6-8c84-4550-89a0-415d5e6f25fb",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "959903a7-b3cd-463d-9f32-f9a7900d33df"
        },
        "item": {
          "id": "fecd0b81-8159-403d-b2a3-94bd4e6bc202",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7392a71b-c53b-4351-9c35-622c8045aa13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837e9e41-e3ea-4024-81b8-ed9c6359e810",
        "cursor": {
          "ref": "c14e6680-8b02-48db-ac5d-fdf461436672",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "00d67163-0993-41b4-ac64-624b46b32ebc"
        },
        "item": {
          "id": "837e9e41-e3ea-4024-81b8-ed9c6359e810",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b3668ddd-cb5d-4506-b992-1f762accecbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8060615-0384-4023-83d2-b695770413e7",
        "cursor": {
          "ref": "1726d448-4c68-4584-bfee-5224f8439b24",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "93733aa1-38ef-46ab-a531-8b131dc407fd"
        },
        "item": {
          "id": "b8060615-0384-4023-83d2-b695770413e7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "da3a021a-8113-43f0-bf50-6c1c13c80409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21840dd-41fb-4095-abd5-c3695d069076",
        "cursor": {
          "ref": "0974e80b-4ba8-43ce-8af2-68deb220dabd",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1ce81ba2-b2db-4be1-9892-dd681777a03b"
        },
        "item": {
          "id": "f21840dd-41fb-4095-abd5-c3695d069076",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "dcb3b76b-ef1f-40ba-a4b4-8813c6952eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f07e99-e84b-499f-99c8-95bebee61474",
        "cursor": {
          "ref": "214902bb-0878-4de6-aec7-fd89433353d1",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1f6a29e7-2b72-4db1-b3a9-9a0d23e7db4e"
        },
        "item": {
          "id": "86f07e99-e84b-499f-99c8-95bebee61474",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4b0cbf64-a96e-4a2a-ad2a-8ad4fb181706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3822ad-0b2b-4f37-92b4-883b1f225f5b",
        "cursor": {
          "ref": "4c94c577-04b7-4e6b-854f-0721ef9d16b9",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "93056d86-9a38-4732-8bc2-4f2f26e7c66f"
        },
        "item": {
          "id": "7e3822ad-0b2b-4f37-92b4-883b1f225f5b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "403780e2-498b-4dbe-b4f3-fe316cdedf06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bf070f-7942-4ad4-8754-7637d9dee861",
        "cursor": {
          "ref": "845ac4bf-76d5-4444-813e-7757fe626ca5",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9961040f-f78d-4214-894f-9208f45aef38"
        },
        "item": {
          "id": "55bf070f-7942-4ad4-8754-7637d9dee861",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c2588864-0263-4087-a261-378ebbee3737",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a531704-b11f-4633-8de7-1d801882f074",
        "cursor": {
          "ref": "8d4edf16-9ef9-4134-88b2-600229239c59",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c09c1e78-4c7c-48e3-9b73-37c377db634f"
        },
        "item": {
          "id": "0a531704-b11f-4633-8de7-1d801882f074",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a98c29fb-6f56-4802-8b5f-33953e41e58a",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c6141d-52c8-4b59-a9de-ba7716f2c2c8",
        "cursor": {
          "ref": "0cd25938-ff6f-4d6c-9e5d-1ca49d7c1569",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8ce978ff-114e-4561-9c34-a2b28ae1b640"
        },
        "item": {
          "id": "25c6141d-52c8-4b59-a9de-ba7716f2c2c8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "487f8c28-b247-446a-871f-ce5de246ff97",
          "status": "OK",
          "code": 200,
          "responseTime": 2538,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce54a39b-42f8-4421-aaad-78db09ac27d0",
        "cursor": {
          "ref": "a0b43375-7d9e-4bec-847b-ba9a7b58fd93",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f0b8b19d-6706-4b21-901a-591a02c45d12"
        },
        "item": {
          "id": "ce54a39b-42f8-4421-aaad-78db09ac27d0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ca082999-fe50-4071-a163-a23c0abde6f6",
          "status": "OK",
          "code": 200,
          "responseTime": 4237,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb814e7-06bd-4fbb-9444-71de41da2009",
        "cursor": {
          "ref": "d316746c-fb48-45c4-b735-2d0ddf6a76fa",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "29368ca8-7b70-44f2-80b7-8ac73c237cd7"
        },
        "item": {
          "id": "1cb814e7-06bd-4fbb-9444-71de41da2009",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "abf841f4-5c34-4dd7-9ba7-49407bff2682",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb814e7-06bd-4fbb-9444-71de41da2009",
        "cursor": {
          "ref": "d316746c-fb48-45c4-b735-2d0ddf6a76fa",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "29368ca8-7b70-44f2-80b7-8ac73c237cd7"
        },
        "item": {
          "id": "1cb814e7-06bd-4fbb-9444-71de41da2009",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "abf841f4-5c34-4dd7-9ba7-49407bff2682",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4de940d-6358-456c-b966-b7b42b4176b9",
        "cursor": {
          "ref": "fe22a9d8-7419-42a7-826a-fa890558c6ef",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1cecaa81-3616-4229-bdae-3da79e3dd207"
        },
        "item": {
          "id": "a4de940d-6358-456c-b966-b7b42b4176b9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3841c900-2cf7-4609-8e47-69bf85e337cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e1866a-8ccb-4be6-8a0d-f1fc581fe690",
        "cursor": {
          "ref": "fa4a2468-dcee-40ac-9ddc-10d6edbb716c",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "9fc40b4b-fb69-4e28-ab45-a4e0d1603c04"
        },
        "item": {
          "id": "d7e1866a-8ccb-4be6-8a0d-f1fc581fe690",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "55d72d60-5d96-4f36-b1ad-00d889439894",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}